eee[[
 -\3a7ein        












	

333333)()3)()           
















d

do --- 2. Ope. upvalue below base slot. URdisambiguated. 2x ULOAD + 2-- Source: https://gi    ULOAD not disambiguated. 2x ULOAD + 2-- Source: https://github.com/jmid/luata-quickcheck
-- License: BSD 3-Clause, Copyright (c) 2017, Jan Midtgaard`
local function f(x,y)
   return -x
end

local z =  WX_4         ', 3.345)
sert(x == 807)
end

do --- 3. Closed upvalue. UREFC CSE for a.x + b.x, bck
-- Lice[[
 -\3a7ein        



[[
 -\3a7ein        












	

333333)()3)()           
















d

do --- 2. Ope. upvalue below base slot. URdisambiguated. 2x ULOAD + 2-- Source: https://gi    ULOAD not disambiguated. 2x ULOAD + 2-- Source: https://github.com/jmid/luata-quickcheck
-- License: BSD 3-Clause, Copyright (c) 2017, Jan Midtgaard`
local function f(x,y)
   return -x
end

local z =  WX_4         ', 3.345)
sert(x == 807)
end

do --- 3. Closed upvalue. UREFC CSE for a.x + b.x, bck
-- Lice[[
 -\3a7ein        









 f(x,y)
   return -x
end

local z = f(' 4  ut not x in loo = (function()
  . local x = 7
    local function a() x = x + 2 end
    local function b() p = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upvalue be    local

0\0G0



$ee333)()3)(         







nse: BSD 2-Clause, Copyright (c) 2017, Jan Midtgaard
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBlocal function f(x,y)
   return -x
end

local z = f(' 4  ut not x in loo = (function()
  . local x = 7
    local function a() x = x + 2 end
    local function b() p = x + 2 end
  


	

333333)()3)()           
















d

do --- 2. Ope. upvalue below base slot. URdisambiguated. 2x ULOAD + 2-- Source: https://gi    ULOAD not disambiguated. 2x ULOAD + 2-- Source: https://github.com/jmid/luata-qu





 f(x,y)
   return -x
end

local z = f(' 4  ut not x in loo = (function()
  . local x = 7
    local function a() x = x + 2 end
    local function b() p = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upvalue be    local

0\0G0



$ee333)()3)(         







nse: BSD 2-Clause, Copyright (c) 2017, Jan Midtgaard
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBlocal function f(x,y)
   return -x
end

local z = f(' 4  ut not x in loo = (function()
  . local x = 7
    local function a() x = x + 2 end
    local function b() p = x + 2 end
  


	

333333)()3)()           
















d

do --- 2. Ope. upvalue below base slot. URdisambiguated. 2x ULOAD + 2-- Source: https://gi    ULOAD not disambiguated. 2x ULOAD + 2-- Source: https://github.com/jmid/luata-quickcheck
-- License: BSD 3-Clause, Copyright (c) 2017, Jan Midtgaard`
local function f(x,y)
   return -x
end

local z =  WX_4         ', 3.345)
sert(x == 807)
end

do --- 3. Closed upvalue. UREFC CSE for a.x + b.x, bck
-- License: BSD 2-Clause, Copyright (c) 2017, Jan Midtgaard
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBlocal function f(x,y)
   return -x
end

local z = f(' 4  ut not x in loo = (function()
  . local x = 7
    local function a() x = x + 2 end
    local function b() p = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upvalue be    local

0\0G0



$ee333)()3)(         







nse: BSD 2-Clause, Copyright (c) 2017, Jan Midtgaard
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBlocal function f(x,y)
   return -x
end

local z = f(' 4  ut not x in loo = (function()
  . local x = 7
    local function a() x = x + 2 end
    local function b() p = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upvalue be    local

0\0G0



$ee333)()3)(         


















0\0G0



$ee333)()3)()           



















0\0G0



)           



















0\0G0






)