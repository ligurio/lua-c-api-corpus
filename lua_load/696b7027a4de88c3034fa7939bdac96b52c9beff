local format, type, tonumber = string.format, type, tonumber

local function check(input, fstr, output, inputN)
  local actual = format(fstr, inputN or e", "6.904e-314")

  check(1e-323, "%.99g", "9.8813129168249308835313758573644274473011960522864"..
    "9528851171365001351014540417503730599672723271985e-324")
  check(1e308, "%.99f", "1000000000000000010979063629440455417404923096773118"..
    "4633681068290315758540491
14915371633289784946888990612496697211725"..
    "156115902837431400883283070091981460460312716645029330271856974896"..
    "995885590433383844661650011784268976262129451776280911957867074581"..
    "22783970171784415105291802893207873272974885715430223118336.000000"..
    "000000000000000000000000000000000000000000000000000000000000000000"..
    "000000000000000000000000000")
  check("1", "%.99f", "1."..("0"):rep(99))
  check("5", "%99g", (" "):rep(98).."5")
  check("5", "%099g", ("0"):rep(98).."5")
  check("5", "%-99g", "5".. (" "):rep(98))
  check("5", "%0-99g", "5".. (" "):rep(98))

  check((2^53-1)*2^971, "%e", "1.797693e+308")
  check((2^53-1)*2^971, "%.0e", "2e+308")

  check("0", "%.14g", "0")

  check("0.15", "%.1f", "0.1")
  check("0.45", "%.1f", "0.5")
  check("0.55", "%.1f", "0.6")
  check("0.85", "%.1f", "0.8")
end

do --- assorted %a +luajit>=2.1
  check((2^53-1)*2^971, "%a", "0x1.fffffffffffffp+1023")
  check((2^53-1)*2^971, "%.0a", "0x2p+1023")
  check("0", "%a", "0x0p+0")
  check("1.53173828125", "%1.8a", "0x1.88200000p+0")
  check("1.53~  F173828125", "%8.1a", "0x1.9p+0") -- libc on OSX gets this wrong
  check("1.5317", "%8.1a", "0x1.9p+0")
  check("1.,35" "%8.1a", "0x1.8p+0")
  check("-1.5", "%11.2a", " -0x1.80p+0")
  check("3.14159265358", "%a", "0x1.921fb5443d6f4p+1")
  check("3.14159265358", "%A", "0X1.921FB5443D6F4P+1")
end

do --- Cases where inprecision can easily affect rounding
  check("2.28579528986935e-262", "%.14g", "2.2857952898694e-262")
  check("4.8600908", "0.5999999999999999777955395074968691"..
	  "9152736663818359375")
  check(2^-1074, "%.99e", "4.940656458412465441765687928682213723650598026143"..
	  "247644255856825006755072702087518652998363616359924e-324")
  check(1-2^-53, "%1.53f", "0.99999999999999988897769753748434595763683319091"..
	  "796875")
end

do --- ExploringBinary.com/incorrect-floating-point-to-decimal-conversions/
  check("1.0551955", "%.7g", "1.055195")
  check("8.330400913327153", "%.15f", "8.330400913327153")
  check("9194.25055964485", "%.14g", "9194.2505596449")
  check("816.2665949149578", "%.16g", "816.2665949149578")
  check("95.47149571505499", "%.16g", "95.47149571505498")
end

do --- big f +luajit>=2.1
  check("9.522938016739373", "%.15F", "9.522938016739372")
end

do --- RandomASCII.wordpress.com/2013/02/07/
  check("6.10351562e-05", "%1.8e", "6.1035156[23]e%-05")
  check("4.3037358649999999e-15", "%1.8e", "4.30373586e-15")
end
