chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            prefixexp {
              exp {
                binary {
                  leftexp {
                    unary {
                      unop {
                        length: 0
                      }
                      exp {
                      }
                    }
                  }
                  binop {
                    concat: 0
                  }
                  rightexp {
                    str: "0.\2113E2"
                  }
                }
              }
            }
          }
          binop {
            sub: 2
          }
          rightexp {
            number: -2
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
            }
            stat {
              call {
              }
            }
            stat {
              func {
                name {
                  firstname {
                    name: "0.3E2"
                    num: 0
                  }
                }
                body {
                  parlist {
                  }
                  block {
                    chunk {
                      stat {
                        repeatcycle {
                          block {
                            chunk {
                              stat {
                              }
                            }
                          }
                          condition {
                          }
                        }
                      }
                      stat {
                      }
                      stat {
                        call {
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
            stat {
              semicolon: true
            }
            stat {
              block {
                block {
                  chunk {
                    laststat {
                      explist {
                        explist {
                          expressions {
                            false: 2147483648
                          }
                          explast {
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              semicolon: true
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
              semicolon: true
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                  }
                }
              }
            }
            stat {
              call {
              }
            }
          }
        }
      }
    }
  }
}
