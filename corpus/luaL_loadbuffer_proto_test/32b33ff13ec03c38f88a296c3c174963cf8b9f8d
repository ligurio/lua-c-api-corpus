chunk {
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        tableconstructor {
          fieldlist {
            firstField {
            }
            lastSep {
              semicolon: 6452595
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            block {
              block {
                chunk {
                  stat {
                    semicolon: true
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        tableconstructor {
                          fieldlist {
                            firstField {
                            }
                            lastSep {
                              semicolon: 6452595
                            }
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            block {
                              block {
                                chunk {
                                  stat {
                                    semicolon: true
                                  }
                                  stat {
                                    repeatcycle {
                                      block {
                                        chunk {
                                        }
                                      }
                                      condition {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                            }
                                            lastSep {
                                              comma: 0
                                            }
                                          }
                                        }
                                      }
                                    }
                                    semicolon: true
                                  }
                                  stat {
                                    repeatcycle {
                                      block {
                                        chunk {
                                          stat {
                                            block {
                                              block {
                                                chunk {
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      condition {
                                        binary {
                                          leftexp {
                                            function {
                                              body {
                                                block {
                                                  chunk {
                                                    laststat {
                                                      explist {
                                                        explist {
                                                          expressions {
                                                            unary {
                                                              unop {
                                                                not: 1
                                                              }
                                                              exp {
                                                                binary {
                                                                  leftexp {
                                                                    function {
                                                                      body {
                                                                        block {
                                                                          chunk {
                                                                            laststat {
                                                                              explist {
                                                                                explist {
                                                                                  expressions {
                                                                                    unary {
                                                                                      unop {
                                                                                        not: 1
                                                                                      }
                                                                                      exp {
                                                                                        binary {
                                                                                          leftexp {
                                                                                          }
                                                                                          binop {
                                                                                          }
                                                                                          rightexp {
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                  explast {
                                                                                    prefixexp {
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                  binop {
                                                                    greaterEqual: 4
                                                                  }
                                                                  rightexp {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          explast {
                                                            prefixexp {
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          binop {
                                            greaterEqual: 4
                                          }
                                          rightexp {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          laststat {
                            explist {
                              explist {
                                expressions {
                                  unary {
                                    unop {
                                      not: 1
                                    }
                                    exp {
                                      binary {
                                        leftexp {
                                        }
                                        binop {
                                        }
                                        rightexp {
                                        }
                                      }
                                    }
                                  }
                                }
                                explast {
                                  prefixexp {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      condition {
                        function {
                          body {
                            block {
                              chunk {
                                stat {
                                  semicolon: true
                                }
                                stat {
                                  repeatcycle {
                                    block {
                                      chunk {
                                      }
                                    }
                                    condition {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                          }
                                          lastSep {
                                            comma: 0
                                          }
                                        }
                                      }
                                    }
                                  }
                                  semicolon: true
                                }
                                stat {
                                  repeatcycle {
                                    block {
                                      chunk {
                                        stat {
                                          block {
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    condition {
                                      binary {
                                        leftexp {
                                          function {
                                            body {
                                              block {
                                                chunk {
                                                  laststat {
                                                    explist {
                                                      explist {
                                                        expressions {
                                                          unary {
                                                            unop {
                                                              not: 1
                                                            }
                                                            exp {
                                                              binary {
                                                                leftexp {
                                                                  function {
                                                                    body {
                                                                      block {
                                                                        chunk {
                                                                          laststat {
                                                                            explist {
                                                                              explist {
                                                                                expressions {
                                                                                  unary {
                                                                                    unop {
                                                                                      not: 1
                                                                                    }
                                                                                    exp {
                                                                                      binary {
                                                                                        leftexp {
                                                                                        }
                                                                                        binop {
                                                                                        }
                                                                                        rightexp {
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                                explast {
                                                                                  prefixexp {
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                                binop {
                                                                  greaterEqual: 4
                                                                }
                                                                rightexp {
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                        explast {
                                                          prefixexp {
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        binop {
                                          greaterEqual: 4
                                        }
                                        rightexp {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          laststat {
            explist {
              explist {
                expressions {
                  unary {
                    unop {
                      not: 1
                    }
                    exp {
                      binary {
                        leftexp {
                        }
                        binop {
                        }
                        rightexp {
                        }
                      }
                    }
                  }
                }
                explast {
                  prefixexp {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        function {
          body {
            block {
              chunk {
                stat {
                  semicolon: true
                }
                stat {
                  repeatcycle {
                    block {
                      chunk {
                      }
                    }
                    condition {
                      tableconstructor {
                        fieldlist {
                          firstField {
                          }
                          lastSep {
                            comma: 0
                          }
                        }
                      }
                    }
                  }
                  semicolon: true
                }
                stat {
                  repeatcycle {
                    block {
                      chunk {
                        stat {
                          block {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                    condition {
                      binary {
                        leftexp {
                          function {
                            body {
                              block {
                                chunk {
                                  laststat {
                                    explist {
                                      explist {
                                        expressions {
                                          unary {
                                            unop {
                                              not: 1
                                            }
                                            exp {
                                              binary {
                                                leftexp {
                                                  function {
                                                    body {
                                                      block {
                                                        chunk {
                                                          laststat {
                                                            explist {
                                                              explist {
                                                                expressions {
                                                                  unary {
                                                                    unop {
                                                                      not: 1
                                                                    }
                                                                    exp {
                                                                      binary {
                                                                        leftexp {
                                                                        }
                                                                        binop {
                                                                        }
                                                                        rightexp {
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                                explast {
                                                                  prefixexp {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                binop {
                                                  greaterEqual: 4
                                                }
                                                rightexp {
                                                }
                                              }
                                            }
                                          }
                                        }
                                        explast {
                                          prefixexp {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        binop {
                          greaterEqual: 4
                        }
                        rightexp {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
