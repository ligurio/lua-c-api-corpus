chunk {
  stat {
    whilecycle {
      condition {
        unary {
          unop {
            length: 2
          }
          exp {
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 2
                }
                startexp {
                  unary {
                    unop {
                      length: 2
                    }
                    exp {
                    }
                  }
                }
                stopexp {
                  number: 131072.00000000143
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 2
                }
                startexp {
                  unary {
                    unop {
                      length: 2
                    }
                    exp {
                    }
                  }
                }
                stopexp {
                  number: 131072.00000000143
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 2
                          }
                          startexp {
                            unary {
                              unop {
                                length: 2
                              }
                              exp {
                              }
                            }
                          }
                          stopexp {
                            number: 131072.00000000143
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 2
                          }
                          startexp {
                            unary {
                              unop {
                                length: 2
                              }
                              exp {
                              }
                            }
                          }
                          stopexp {
                            prefixexp {
                              var {
                                indexexpr {
                                  prefixexp {
                                    functioncall {
                                      namedArgs {
                                        prefixexp {
                                          exp {
                                            str: "\\377\\005"
                                          }
                                        }
                                        name {
                                          name: ""
                                          num: 0
                                        }
                                        args {
                                        }
                                      }
                                    }
                                  }
                                  exp {
                                  }
                                }
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            laststat {
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
        function {
          body {
            block {
              chunk {
                laststat {
                  semicolon: true
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
          num: 0
        }
      }
      expressions {
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
              }
              lastSep {
                comma: 4294967295
              }
            }
          }
        }
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        function {
          body {
            block {
              chunk {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  unary {
                    unop {
                      length: 15676
                    }
                    exp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              tableconstructor {
                              }
                            }
                            binop {
                              greaterEqual: 2542564096
                            }
                            rightexp {
                              number: -2
                            }
                          }
                        }
                        binop {
                          and: 0
                        }
                        rightexp {
                          number: 2.07226151461452e-317
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclelist {
                          names {
                            firstname {
                              name: "\204\204\204"
                              num: 0
                            }
                          }
                          expressions {
                            explast {
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              semicolon: true
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  ellipsis: "\037"
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    whilecycle {
      condition {
        prefixexp {
        }
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 2
                }
                startexp {
                  unary {
                    unop {
                      length: 2
                    }
                    exp {
                    }
                  }
                }
                stopexp {
                  str: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
