chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 262144
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localfunc {
              name {
                name: ""
                num: 27745
              }
              funcbody {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 4
              }
              startexp {
                number: 0
              }
              stopexp {
                unary {
                  unop {
                  }
                  exp {
                  }
                }
              }
              stepexp {
                number: 3.125
              }
              doblock {
                block {
                  chunk {
                    stat {
                      list {
                        varlist {
                          var {
                          }
                          vars {
                            name {
                              name: ""
                              num: 27745
                            }
                          }
                        }
                        explist {
                          expressions {
                            prefixexp {
                              var {
                                name {
                                  name: ""
                                  num: 4
                                }
                              }
                            }
                          }
                          explast {
                            prefixexp {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        nil: 0
      }
    }
    semicolon: true
  }
}
