chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            semicolon: true
          }
          stat {
            semicolon: true
          }
          stat {
            semicolon: true
          }
          stat {
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  laststat {
                    semicolon: true
                  }
                }
              }
              condition {
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                }
                vars {
                }
                vars {
                }
                vars {
                }
              }
              explist {
                explast {
                  function {
                    body {
                      block {
                        chunk {
                          laststat {
                            explist {
                              explist {
                                expressions {
                                }
                                expressions {
                                }
                                expressions {
                                }
                                explast {
                                  unary {
                                    unop {
                                      negate: 59
                                    }
                                    exp {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                          }
                                          fields {
                                            field {
                                              exprassign {
                                                key {
                                                }
                                                value {
                                                  prefixexp {
                                                    functioncall {
                                                      prefArgs {
                                                        prefixexp {
                                                        }
                                                        args {
                                                          explist {
                                                            explist {
                                                              expressions {
                                                              }
                                                              expressions {
                                                              }
                                                              explast {
                                                                prefixexp {
                                                                  functioncall {
                                                                    prefArgs {
                                                                      prefixexp {
                                                                      }
                                                                      args {
                                                                        explist {
                                                                          explist {
                                                                            expressions {
                                                                            }
                                                                            expressions {
                                                                              str: "\377\377\375\270"
                                                                            }
                                                                            expressions {
                                                                            }
                                                                            expressions {
                                                                            }
                                                                            explast {
                                                                              prefixexp {
                                                                                functioncall {
                                                                                  prefArgs {
                                                                                    prefixexp {
                                                                                    }
                                                                                    args {
                                                                                      explist {
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            sep {
                                              comma: 1819042147
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            semicolon: true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            list {
              varlist {
                var {
                  indexname {
                    prefixexp {
                    }
                    Name: ""
                  }
                }
                vars {
                }
                vars {
                  indexname {
                    prefixexp {
                      functioncall {
                      }
                    }
                    Name: "/"
                  }
                }
              }
              explist {
                expressions {
                  function {
                    body {
                      parlist {
                        ellipsis: "package.config"
                      }
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                expressions {
                  false: 4294966969
                }
                expressions {
                  false: 10240
                }
                expressions {
                  unary {
                    unop {
                      negate: 59
                    }
                    exp {
                      number: 29.03125
                    }
                  }
                }
                expressions {
                }
                explast {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                          explist {
                            explist {
                              expressions {
                              }
                              expressions {
                              }
                              expressions {
                              }
                              explast {
                                prefixexp {
                                  functioncall {
                                    prefArgs {
                                      prefixexp {
                                      }
                                      args {
                                        str: "/"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        ellipsis: ""
      }
    }
    semicolon: false
  }
}
