chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    localfunc {
                      name {
                        name: ""
                        num: 0
                      }
                      funcbody {
                        block {
                          chunk {
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                    stat {
                                      repeatcycle {
                                        block {
                                          chunk {
                                            stat {
                                              call {
                                                prefArgs {
                                                  prefixexp {
                                                  }
                                                  args {
                                                    str: "\312"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        condition {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                              }
                                              fields {
                                                field {
                                                }
                                                sep {
                                                  comma: 33
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                condition {
                                  nil: 0
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                  stat {
                                    func {
                                      name {
                                        firstname {
                                          name: ""
                                          num: 0
                                        }
                                      }
                                      body {
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              condition {
                                prefixexp {
                                }
                              }
                            }
                            semicolon: true
                          }
                        }
                      }
                      condition {
                      }
                    }
                  }
                }
              }
              condition {
              }
            }
          }
        }
      }
      condition {
        nil: 256
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    forcyclename {
                      name {
                        name: ""
                        num: 25348
                      }
                      startexp {
                      }
                      stopexp {
                        str: ""
                      }
                      stepexp {
                        number: -0
                      }
                      doblock {
                        block {
                          chunk {
                            stat {
                              list {
                                varlist {
                                  var {
                                  }
                                }
                                explist {
                                  expressions {
                                    number: 196608
                                  }
                                  expressions {
                                    number: -0
                                  }
                                  expressions {
                                    number: 0
                                  }
                                  expressions {
                                    number: -2.75
                                  }
                                  expressions {
                                    number: 4.75
                                  }
                                  expressions {
                                    number: -3.05175781254146e-05
                                  }
                                  expressions {
                                    number: 2.0004558488724342
                                  }
                                  expressions {
                                    number: -0.011718750000106137
                                  }
                                  expressions {
                                    number: -2.5
                                  }
                                  expressions {
                                    number: -2
                                  }
                                  expressions {
                                  }
                                  expressions {
                                  }
                                  expressions {
                                  }
                                  expressions {
                                    number: -2.46006546056159e+260
                                  }
                                  expressions {
                                    number: 2.0001220703125
                                  }
                                  expressions {
                                    number: 32.125
                                  }
                                  explast {
                                    prefixexp {
                                      functioncall {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              condition {
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    localfunc {
                      name {
                        name: ""
                        num: 0
                      }
                      funcbody {
                        block {
                          chunk {
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                    stat {
                                      repeatcycle {
                                        block {
                                          chunk {
                                            stat {
                                              call {
                                                prefArgs {
                                                  prefixexp {
                                                  }
                                                  args {
                                                    str: "\312"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        condition {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                              }
                                              fields {
                                                field {
                                                }
                                                sep {
                                                  comma: 33
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                condition {
                                  nil: 0
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            ifstat {
                              condition {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                        or: 5
                                      }
                                      rightexp {
                                        unary {
                                          unop {
                                          }
                                          exp {
                                            nil: 9472
                                          }
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                    greater: 0
                                  }
                                  rightexp {
                                    binary {
                                      leftexp {
                                        unary {
                                          unop {
                                          }
                                          exp {
                                          }
                                        }
                                      }
                                      binop {
                                        greater: 1534030963
                                      }
                                      rightexp {
                                        true: 5
                                      }
                                    }
                                  }
                                }
                              }
                              first {
                                chunk {
                                  stat {
                                    list {
                                      varlist {
                                        var {
                                        }
                                        vars {
                                        }
                                      }
                                      explist {
                                        expressions {
                                          tableconstructor {
                                          }
                                        }
                                        expressions {
                                        }
                                        expressions {
                                          tableconstructor {
                                          }
                                        }
                                        expressions {
                                          tableconstructor {
                                          }
                                        }
                                        expressions {
                                          tableconstructor {
                                          }
                                        }
                                        expressions {
                                          tableconstructor {
                                          }
                                        }
                                        expressions {
                                          tableconstructor {
                                          }
                                        }
                                        expressions {
                                          tableconstructor {
                                          }
                                        }
                                        expressions {
                                          tableconstructor {
                                          }
                                        }
                                        expressions {
                                          tableconstructor {
                                          }
                                        }
                                        expressions {
                                          tableconstructor {
                                          }
                                        }
                                        expressions {
                                          tableconstructor {
                                          }
                                        }
                                        expressions {
                                        }
                                        expressions {
                                          tableconstructor {
                                          }
                                        }
                                        expressions {
                                          prefixexp {
                                          }
                                        }
                                        expressions {
                                          tableconstructor {
                                          }
                                        }
                                        expressions {
                                          tableconstructor {
                                          }
                                        }
                                        explast {
                                          prefixexp {
                                            functioncall {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          stat {
                            forcyclename {
                              name {
                                name: ""
                                num: 7
                              }
                              startexp {
                              }
                              stopexp {
                              }
                              stepexp {
                                number: -0
                              }
                              doblock {
                                block {
                                  chunk {
                                    stat {
                                      list {
                                        varlist {
                                          var {
                                          }
                                          vars {
                                          }
                                        }
                                        explist {
                                          expressions {
                                            tableconstructor {
                                            }
                                          }
                                          expressions {
                                            tableconstructor {
                                            }
                                          }
                                          expressions {
                                            tableconstructor {
                                            }
                                          }
                                          expressions {
                                            tableconstructor {
                                            }
                                          }
                                          expressions {
                                            tableconstructor {
                                            }
                                          }
                                          expressions {
                                            tableconstructor {
                                            }
                                          }
                                          expressions {
                                            tableconstructor {
                                            }
                                          }
                                          expressions {
                                            tableconstructor {
                                            }
                                          }
                                          expressions {
                                            tableconstructor {
                                            }
                                          }
                                          expressions {
                                          }
                                          expressions {
                                            tableconstructor {
                                            }
                                          }
                                          expressions {
                                            tableconstructor {
                                            }
                                          }
                                          expressions {
                                          }
                                          expressions {
                                            tableconstructor {
                                            }
                                          }
                                          expressions {
                                            prefixexp {
                                            }
                                          }
                                          expressions {
                                            tableconstructor {
                                            }
                                          }
                                          expressions {
                                            tableconstructor {
                                            }
                                          }
                                          explast {
                                            prefixexp {
                                              exp {
                                                tableconstructor {
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          stat {
                            ifstat {
                              condition {
                                binary {
                                  leftexp {
                                    number: 4.07976485689734e-317
                                  }
                                  binop {
                                    greater: 0
                                  }
                                  rightexp {
                                    number: 1.79266204420746e-310
                                  }
                                }
                              }
                              first {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                }
              }
              condition {
              }
            }
          }
        }
      }
      condition {
        nil: 256
      }
    }
  }
}
