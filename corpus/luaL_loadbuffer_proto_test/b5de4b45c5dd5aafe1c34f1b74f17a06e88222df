chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  expressions {
                    function {
                      body {
                        parlist {
                        }
                        block {
                          chunk {
                            stat {
                              localfunc {
                                name {
                                  name: "\377\377\377\377\377\377\377\005"
                                  num: 0
                                }
                                funcbody {
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                            stat {
                              forcyclename {
                                name {
                                  name: ""
                                  num: 0
                                }
                                startexp {
                                  prefixexp {
                                  }
                                }
                                stopexp {
                                  number: -0
                                }
                                stepexp {
                                  number: -2.6310196177774444e+49
                                }
                                doblock {
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                            stat {
                            }
                            stat {
                              list {
                                varlist {
                                  var {
                                  }
                                  vars {
                                  }
                                }
                                explist {
                                  expressions {
                                    binary {
                                      leftexp {
                                        prefixexp {
                                        }
                                      }
                                      binop {
                                        lessEqual: 0
                                      }
                                      rightexp {
                                        prefixexp {
                                        }
                                      }
                                    }
                                  }
                                  explast {
                                    binary {
                                      leftexp {
                                        prefixexp {
                                        }
                                      }
                                      binop {
                                        lessEqual: 0
                                      }
                                      rightexp {
                                        prefixexp {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              semicolon: true
                            }
                          }
                        }
                      }
                    }
                  }
                  explast {
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        parlist {
        }
        block {
          chunk {
            stat {
            }
            stat {
            }
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  expressions {
                    binary {
                      leftexp {
                        prefixexp {
                        }
                      }
                      binop {
                        lessEqual: 0
                      }
                      rightexp {
                        prefixexp {
                          var {
                          }
                        }
                      }
                    }
                  }
                  explast {
                    prefixexp {
                    }
                  }
                }
              }
              semicolon: false
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
            }
          }
        }
      }
      explist {
        expressions {
          binary {
            leftexp {
              prefixexp {
              }
            }
            binop {
              equal: 25965
            }
            rightexp {
              prefixexp {
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
}
