chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
          }
          binop {
          }
          rightexp {
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          functioncall {
                            prefArgs {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                      functioncall {
                                      }
                                    }
                                    args {
                                      str: "\'\'\'\'\'\'\'\'\'\'\'"
                                    }
                                  }
                                }
                              }
                              args {
                                str: "\013\'\'\'\'\'\'\'\'\'\'"
                              }
                            }
                          }
                        }
                        args {
                          str: "\014\000\000\000"
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                      }
                    }
                  }
                }
              }
            }
            stat {
              localnames {
                namelist {
                  firstname {
                    name: "tonumber"
                    num: 0
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
}
