chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        parlist {
          ellipsis: "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
        }
        block {
          chunk {
            laststat {
              explist {
                explist {
                  explast {
                    true: 0
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
          function {
            body {
              block {
                chunk {
                  laststat {
                    explist {
                      explist {
                        explast {
                          prefixexp {
                            functioncall {
                              namedArgs {
                                prefixexp {
                                }
                                name {
                                  name: ""
                                  num: 0
                                }
                                args {
                                  explist {
                                    explist {
                                      expressions {
                                        true: 0
                                      }
                                      explast {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
