chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        prefixexp {
          var {
            indexexpr {
              prefixexp {
              }
              exp {
                number: 1
              }
            }
          }
        }
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  laststat {
    explist {
      explist {
        expressions {
          function {
            body {
              parlist {
                namelist {
                  namelist {
                    firstname {
                      name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                      num: 0
                    }
                  }
                }
              }
              block {
                chunk {
                  stat {
                    call {
                    }
                  }
                }
              }
            }
          }
        }
        explast {
          function {
            body {
              parlist {
                namelist {
                  namelist {
                    firstname {
                      name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                      num: 0
                    }
                  }
                }
              }
              block {
                chunk {
                  laststat {
                    explist {
                      explist {
                        explast {
                          prefixexp {
                            functioncall {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
