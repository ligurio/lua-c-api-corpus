chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
          }
          binop {
            div: 0
          }
          rightexp {
            binary {
              leftexp {
                prefixexp {
                  exp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            number: 6.1997660324534793e+223
                          }
                          binop {
                            concat: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                                number: 1.0728402099575969e+253
                              }
                              binop {
                                exp: 0
                              }
                              rightexp {
                                number: -2.0000000000000031
                              }
                            }
                          }
                        }
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        number: 0
                      }
                    }
                  }
                }
              }
              binop {
                exp: 0
              }
              rightexp {
                number: 0
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: "\377\377\377\377\377\377\377\377"
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                      }
                      stat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
              semicolon: false
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  nil: 536870916
                }
              }
            }
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                }
                stopexp {
                  ellipsis: "\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332\332"
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  laststat {
    semicolon: false
  }
}
