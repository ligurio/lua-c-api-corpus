chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
          stat {
            whilecycle {
              condition {
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                  stat {
                    whilecycle {
                      condition {
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  stat {
                    ifstat {
                      condition {
                      }
                      first {
                        chunk {
                        }
                      }
                      last {
                        chunk {
                          laststat {
                            semicolon: true
                          }
                        }
                      }
                    }
                  }
                  stat {
                    semicolon: false
                  }
                  stat {
                  }
                  stat {
                    localfunc {
                      name {
                        name: ")"
                        num: 0
                      }
                      funcbody {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  stat {
                    ifstat {
                      condition {
                      }
                      first {
                        chunk {
                        }
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                      }
                    }
                  }
                }
              }
              last {
                chunk {
                  laststat {
                    semicolon: true
                  }
                }
              }
            }
          }
          stat {
            semicolon: false
          }
          stat {
          }
          stat {
            localfunc {
              name {
                name: ")"
                num: 0
              }
              funcbody {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                }
              }
            }
          }
          stat {
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
        }
      }
      last {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
    }
  }
  stat {
    semicolon: false
  }
  stat {
  }
  stat {
    localfunc {
      name {
        name: ")"
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
}
