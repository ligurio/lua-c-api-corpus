chunk {
  stat {
    list {
      varlist {
        var {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: "("
          }
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: "LiteRunt"
          }
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: "LiteRunt"
          }
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: "LiteRunt"
          }
        }
        vars {
        }
      }
      explist {
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
              }
              lastSep {
                semicolon: 0
              }
            }
          }
        }
        explast {
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        binary {
          leftexp {
            tableconstructor {
              fieldlist {
                firstField {
                  exprassign {
                    key {
                      tableconstructor {
                        fieldlist {
                          firstField {
                          }
                          lastSep {
                            comma: 0
                          }
                        }
                      }
                    }
                    value {
                      nil: 4
                    }
                  }
                }
              }
            }
          }
          binop {
            concat: 4
          }
          rightexp {
            nil: 4
          }
        }
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      laststat {
                        explist {
                          explist {
                            expressions {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                  }
                                  lastSep {
                                    semicolon: 0
                                  }
                                }
                              }
                            }
                            explast {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
