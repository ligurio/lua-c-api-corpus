chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
                exp {
                  function {
                    body {
                      parlist {
                        namelist {
                          namelist {
                            firstname {
                              name: ""
                              num: 0
                            }
                          }
                        }
                      }
                      block {
                        chunk {
                          laststat {
                            explist {
                              explist {
                                expressions {
                                  prefixexp {
                                    functioncall {
                                      prefArgs {
                                        prefixexp {
                                          exp {
                                            function {
                                              body {
                                                block {
                                                  chunk {
                                                    stat {
                                                      ifstat {
                                                        condition {
                                                          binary {
                                                            leftexp {
                                                              nil: 0
                                                            }
                                                            binop {
                                                              and: 0
                                                            }
                                                            rightexp {
                                                              binary {
                                                                leftexp {
                                                                }
                                                                binop {
                                                                  concat: 34304
                                                                }
                                                                rightexp {
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                        first {
                                                          chunk {
                                                          }
                                                        }
                                                      }
                                                    }
                                                    stat {
                                                      ifstat {
                                                        condition {
                                                          binary {
                                                            leftexp {
                                                              nil: 0
                                                            }
                                                            binop {
                                                              and: 0
                                                            }
                                                            rightexp {
                                                              binary {
                                                                leftexp {
                                                                }
                                                                binop {
                                                                  or: 0
                                                                }
                                                                rightexp {
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                        first {
                                                          chunk {
                                                          }
                                                        }
                                                      }
                                                    }
                                                    stat {
                                                      ifstat {
                                                        condition {
                                                          binary {
                                                            leftexp {
                                                              nil: 0
                                                            }
                                                            binop {
                                                              and: 0
                                                            }
                                                            rightexp {
                                                              binary {
                                                                leftexp {
                                                                }
                                                                binop {
                                                                  or: 0
                                                                }
                                                                rightexp {
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                        first {
                                                          chunk {
                                                          }
                                                        }
                                                      }
                                                      semicolon: true
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        args {
                                        }
                                      }
                                    }
                                  }
                                }
                                expressions {
                                }
                                expressions {
                                }
                                explast {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              args {
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
