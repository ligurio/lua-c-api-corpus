chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: ""
                  num: 0
                }
                funcbody {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                      }
                      stat {
                      }
                      stat {
                      }
                      stat {
                        whilecycle {
                          condition {
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  semicolon: true
                                }
                                stat {
                                }
                                stat {
                                  semicolon: true
                                }
                                stat {
                                  repeatcycle {
                                    block {
                                      chunk {
                                      }
                                    }
                                    condition {
                                    }
                                  }
                                }
                                stat {
                                }
                                stat {
                                }
                                laststat {
                                  break: 0
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                      }
                      stat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                    }
                    stat {
                    }
                    stat {
                      block {
                        block {
                          chunk {
                            stat {
                              semicolon: false
                            }
                          }
                        }
                      }
                    }
                    stat {
                      whilecycle {
                        condition {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                exprassign {
                                  key {
                                    binary {
                                      leftexp {
                                        prefixexp {
                                          exp {
                                            binary {
                                              leftexp {
                                                number: 0
                                              }
                                              binop {
                                                concat: 0
                                              }
                                              rightexp {
                                                binary {
                                                  leftexp {
                                                    number: 358.08969533209165
                                                  }
                                                  binop {
                                                    exp: 0
                                                  }
                                                  rightexp {
                                                    number: -118.78498777467757
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      binop {
                                        mod: 0
                                      }
                                      rightexp {
                                        prefixexp {
                                          exp {
                                            number: 358.08969533209165
                                          }
                                        }
                                      }
                                    }
                                  }
                                  value {
                                    prefixexp {
                                      exp {
                                        number: 358.08969533209165
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                semicolon: true
                              }
                              stat {
                              }
                              stat {
                                semicolon: true
                              }
                              stat {
                                repeatcycle {
                                  block {
                                    chunk {
                                      laststat {
                                        break: 2097152
                                        semicolon: true
                                      }
                                    }
                                  }
                                  condition {
                                    ellipsis: ""
                                  }
                                }
                              }
                              stat {
                              }
                              stat {
                              }
                            }
                          }
                        }
                      }
                    }
                    stat {
                    }
                    stat {
                      semicolon: true
                    }
                  }
                }
                condition {
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  laststat {
    semicolon: true
  }
}
