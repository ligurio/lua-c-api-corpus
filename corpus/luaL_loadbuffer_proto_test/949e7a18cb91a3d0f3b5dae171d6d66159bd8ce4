chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 1
      }
      funcbody {
        block {
          chunk {
            laststat {
              explist {
                explist {
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
        number: 0
      }
      stepexp {
        number: -0
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: "UUUUUUUUUUUUUUUUUUUUU"
                  num: 4
                }
                startexp {
                  str: "UUUUUUUUUUUUUUUUUUUUU"
                }
                stopexp {
                }
                stepexp {
                  str: "UUUUUUUUUUUUUUUUUUUUU"
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: "UUUUUUUUUUUUUUUUUUUUU"
                            num: 4
                          }
                          startexp {
                            str: "UUUUUUUUUUUUUUUUUUUUU"
                          }
                          stopexp {
                            str: "UUUUUUUUUUUUUUUUUUUUU"
                          }
                          stepexp {
                            str: "UUUUUUUUUUUUUUUUUUUUU"
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                      stat {
                        forcyclename {
                          name {
                            name: "UUUUUUUUUUUUUUUUUUUUU"
                            num: 0
                          }
                          startexp {
                            str: "UUUUUUUUUUUUUUUUUUUUU"
                          }
                          stopexp {
                            str: "UUUUUUUUUUUUUUUUUUUUU"
                          }
                          stepexp {
                            str: "UUUUUUUUUUUUUUUUUUUUU"
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 0
                          }
                          startexp {
                            str: "UUUUUUUUUUUUUUUUUUUUU"
                          }
                          stopexp {
                            str: "UUUUUUUUUUUUUUUUUUUUU"
                          }
                          stepexp {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                }
                                lastSep {
                                  semicolon: 0
                                }
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  forcyclelist {
                                    names {
                                      firstname {
                                        name: "z"
                                        num: 0
                                      }
                                      names {
                                        name: "\256"
                                        num: 0
                                      }
                                    }
                                    expressions {
                                      explast {
                                      }
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                          laststat {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        semicolon: false
                      }
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 0
                          }
                          startexp {
                            str: "UUUUUUUUUUUUUUUUUUUUU"
                          }
                          stopexp {
                            str: "UUUUUUUUUUUUUUUUUUUUU"
                          }
                          stepexp {
                            str: "UUUUUUUUUUUUUUUUUUUUU"
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              forcyclename {
                name {
                  name: "UUUUUUUUUUUUUUUUUUUUU"
                  num: 0
                }
                startexp {
                  str: "UUUUUUUUUUUUUUUUUUUUU"
                }
                stopexp {
                  str: "UUUUUUUUUUUUUUUUUUUUU"
                }
                stepexp {
                  tableconstructor {
                    fieldlist {
                      firstField {
                      }
                      lastSep {
                        comma: 6648320
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: false
            }
            stat {
              forcyclename {
                name {
                  name: "UUUUUUUUUUUUUUUUUUUUU"
                  num: 0
                }
                startexp {
                  str: "UUUUUUUUUUUUUUUUUUUUU"
                }
                stopexp {
                  str: "UUUUUUUUUUUUUUUUUUUUU"
                }
                stepexp {
                  str: "UUUUUUUUUUUUUUUUUUUUU"
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclelist {
                          names {
                            firstname {
                              name: ""
                              num: 0
                            }
                          }
                          expressions {
                            explast {
                              nil: 64
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              forcyclename {
                name {
                  name: "UUUUUUUUUUUUUUUUUUUUU"
                  num: 0
                }
                startexp {
                  str: "UUUUUUUUUUUUUUUUUUUUU"
                }
                stopexp {
                  nil: 2097152
                }
                stepexp {
                  str: "UUUUUUUUUUUUUUUUUUUUU"
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: true
            }
            laststat {
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: -0
      }
      stopexp {
        number: 0
      }
      stepexp {
        number: -0
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: "z"
                  num: 0
                }
                startexp {
                  str: "UUUUUUUUUUUUUUUUUUUUU"
                }
                stopexp {
                  str: "UUUUUUUUUUUUUUUUUUUUU"
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 0
                          }
                          startexp {
                          }
                          stopexp {
                            number: 0
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            laststat {
              explist {
                explist {
                  expressions {
                    binary {
                      leftexp {
                      }
                      binop {
                        or: 0
                      }
                      rightexp {
                      }
                    }
                  }
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
