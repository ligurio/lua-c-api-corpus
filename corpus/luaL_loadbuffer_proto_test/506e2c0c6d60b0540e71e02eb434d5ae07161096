chunk {
  stat {
    ifstat {
      condition {
        nil: 0
      }
      first {
        chunk {
        }
      }
      last {
        chunk {
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        nil: 0
      }
      first {
        chunk {
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
            list {
              varlist {
                var {
                }
                vars {
                  name {
                    name: ""
                    num: 4
                  }
                }
                vars {
                  indexexpr {
                    prefixexp {
                      exp {
                        tableconstructor {
                        }
                      }
                    }
                    exp {
                      tableconstructor {
                      }
                    }
                  }
                }
                vars {
                  indexexpr {
                    prefixexp {
                      exp {
                        tableconstructor {
                        }
                      }
                    }
                    exp {
                      unary {
                        unop {
                          length: 4
                        }
                        exp {
                          tableconstructor {
                          }
                        }
                      }
                    }
                  }
                }
                vars {
                  indexexpr {
                    prefixexp {
                      exp {
                        tableconstructor {
                          fieldlist {
                            firstField {
                              expression {
                              }
                            }
                          }
                        }
                      }
                    }
                    exp {
                      unary {
                        unop {
                          length: 4
                        }
                        exp {
                          tableconstructor {
                          }
                        }
                      }
                    }
                  }
                }
                vars {
                }
                vars {
                  indexexpr {
                    prefixexp {
                      exp {
                        tableconstructor {
                          fieldlist {
                            firstField {
                              expression {
                                prefixexp {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    exp {
                      unary {
                        unop {
                          length: 4
                        }
                        exp {
                          tableconstructor {
                          }
                        }
                      }
                    }
                  }
                }
                vars {
                  indexexpr {
                    prefixexp {
                      exp {
                        tableconstructor {
                        }
                      }
                    }
                    exp {
                    }
                  }
                }
                vars {
                  indexexpr {
                    prefixexp {
                      exp {
                        tableconstructor {
                          fieldlist {
                            firstField {
                              expression {
                              }
                            }
                          }
                        }
                      }
                    }
                    exp {
                      unary {
                        unop {
                          length: 0
                        }
                        exp {
                          tableconstructor {
                          }
                        }
                      }
                    }
                  }
                }
              }
              explist {
                expressions {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        expression {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                                expression {
                                                  tableconstructor {
                                                    fieldlist {
                                                      firstField {
                                                        expression {
                                                          tableconstructor {
                                                            fieldlist {
                                                              firstField {
                                                                expression {
                                                                  tableconstructor {
                                                                    fieldlist {
                                                                      firstField {
                                                                        expression {
                                                                          tableconstructor {
                                                                            fieldlist {
                                                                              firstField {
                                                                                expression {
                                                                                  tableconstructor {
                                                                                    fieldlist {
                                                                                      firstField {
                                                                                        expression {
                                                                                          tableconstructor {
                                                                                            fieldlist {
                                                                                              firstField {
                                                                                                expression {
                                                                                                  tableconstructor {
                                                                                                    fieldlist {
                                                                                                      firstField {
                                                                                                        exprassign {
                                                                                                          key {
                                                                                                            unary {
                                                                                                              unop {
                                                                                                                not: 2
                                                                                                              }
                                                                                                              exp {
                                                                                                                prefixexp {
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                          value {
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                explast {
                  str: ""
                }
              }
            }
          }
        }
      }
      last {
        chunk {
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        nil: 0
      }
      first {
        chunk {
        }
      }
      last {
        chunk {
        }
      }
    }
  }
}
