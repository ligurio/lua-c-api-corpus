chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        parlist {
        }
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 4
                }
                startexp {
                }
                stopexp {
                }
                stepexp {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          unary {
                            unop {
                            }
                            exp {
                              prefixexp {
                                exp {
                                  binary {
                                    leftexp {
                                      tableconstructor {
                                      }
                                    }
                                    binop {
                                      or: 0
                                    }
                                    rightexp {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                            }
                          }
                          explist {
                            expressions {
                              true: 51456
                            }
                            expressions {
                              number: 0
                            }
                            expressions {
                              false: 4
                            }
                            expressions {
                              unary {
                                unop {
                                }
                                exp {
                                  prefixexp {
                                    exp {
                                      binary {
                                        leftexp {
                                          tableconstructor {
                                          }
                                        }
                                        binop {
                                          or: 0
                                        }
                                        rightexp {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            expressions {
                            }
                            expressions {
                              tableconstructor {
                              }
                            }
                            expressions {
                              false: 0
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                              tableconstructor {
                              }
                            }
                            expressions {
                            }
                            expressions {
                              tableconstructor {
                              }
                            }
                            expressions {
                              tableconstructor {
                              }
                            }
                            expressions {
                            }
                            explast {
                              unary {
                                unop {
                                }
                                exp {
                                  prefixexp {
                                    exp {
                                      binary {
                                        leftexp {
                                          tableconstructor {
                                          }
                                        }
                                        binop {
                                          or: 0
                                        }
                                        rightexp {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
