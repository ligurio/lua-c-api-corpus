chunk {
  stat {
    semicolon: false
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
            stat {
              ifstat {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          binary {
                            leftexp {
                            }
                            binop {
                              or: 0
                            }
                            rightexp {
                              prefixexp {
                                functioncall {
                                  namedArgs {
                                    prefixexp {
                                    }
                                    name {
                                      name: ""
                                      num: 0
                                    }
                                    args {
                                      str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        field {
                          expression {
                            binary {
                              leftexp {
                              }
                              binop {
                                or: 0
                              }
                              rightexp {
                                ellipsis: ""
                              }
                            }
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          expression {
                            binary {
                              leftexp {
                              }
                              binop {
                                or: 0
                              }
                              rightexp {
                                ellipsis: ""
                              }
                            }
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
                first {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 0
        }
        args {
          str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
        }
      }
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          str: ""
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
}
