chunk {
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
                tableconstructor {
                  fieldlist {
                    firstField {
                      expression {
                        false: 0
                      }
                    }
                    fields {
                      field {
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        expression {
                          binary {
                            leftexp {
                              number: -4.9591064453125e-05
                            }
                            binop {
                              mult: 4
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  number: -4.9591064453125e-05
                                }
                                binop {
                                  mult: 4
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      number: -4.9591064453125e-05
                                    }
                                    binop {
                                      mult: 4
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          number: -4.9591064453125e-05
                                        }
                                        binop {
                                          mult: 4
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                              number: -4.9591064453125e-05
                                            }
                                            binop {
                                              mult: 4
                                            }
                                            rightexp {
                                              binary {
                                                leftexp {
                                                  number: -3.0517578125e-05
                                                }
                                                binop {
                                                  mult: 4
                                                }
                                                rightexp {
                                                  binary {
                                                    leftexp {
                                                      number: -3.0517578125e-05
                                                    }
                                                    binop {
                                                      mult: 4
                                                    }
                                                    rightexp {
                                                      binary {
                                                        leftexp {
                                                          number: -3.0517578125e-05
                                                        }
                                                        binop {
                                                          concat: 4
                                                        }
                                                        rightexp {
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      sep {
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          laststat {
            break: 65536
            semicolon: true
          }
        }
      }
      condition {
      }
    }
  }
}
