chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            laststat {
              explist {
                explist {
                  expressions {
                  }
                  explast {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
              }
              args {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                expressions {
                  expressions {
                  }
                  explast {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
