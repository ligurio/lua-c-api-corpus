chunk {
  stat {
    forcyclename {
      name {
        name: "L"
        num: 0
      }
      startexp {
        number: -0.00012969970703125
      }
      stopexp {
        unary {
          unop {
          }
          exp {
            function {
              body {
                parlist {
                  ellipsis: "utf8.charpattern"
                }
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      stepexp {
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: "L"
                  num: 0
                }
                startexp {
                  function {
                    body {
                      parlist {
                        ellipsis: "utf8.charpattern"
                      }
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                stopexp {
                  unary {
                    unop {
                      not: 0
                    }
                    exp {
                      function {
                        body {
                          block {
                            chunk {
                              laststat {
                                semicolon: true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                stepexp {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: "L"
                            num: 0
                          }
                          startexp {
                            str: "dump"
                          }
                          stopexp {
                            str: "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"
                          }
                          stepexp {
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  forcyclename {
                                    name {
                                      name: "L,"
                                      num: 0
                                    }
                                    startexp {
                                      number: -4.9591064453125e-05
                                    }
                                    stopexp {
                                      str: "string.rep"
                                    }
                                    stepexp {
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                          stat {
                                            func {
                                              name {
                                                firstname {
                                                  name: "\000\000\000+\000\000\000\000\000\000\000"
                                                  num: 0
                                                }
                                                names {
                                                  name: "\001\000\000\000\000\000\000\000"
                                                  num: 0
                                                }
                                                lastname {
                                                  name: "\001\000\000\000\000\000\000\000"
                                                  num: 0
                                                }
                                              }
                                              body {
                                                block {
                                                  chunk {
                                                    laststat {
                                                      semicolon: true
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  semicolon: true
                                }
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
