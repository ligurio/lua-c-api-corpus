chunk {
  stat {
    whilecycle {
      condition {
        unary {
          unop {
            negate: 0
          }
          exp {
            prefixexp {
              exp {
                binary {
                  leftexp {
                    number: -8.37141646680589e+298
                  }
                  binop {
                    concat: 4
                  }
                  rightexp {
                    str: "UUUUUUUUUUUUUUUUU"
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  unary {
                    unop {
                      negate: 0
                    }
                    exp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                              number: -8.37141646680589e+298
                            }
                            binop {
                              concat: 4
                            }
                            rightexp {
                              str: "UUUUUUUUUUUUUUUUU"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        whilecycle {
                          condition {
                            unary {
                              unop {
                                negate: 0
                              }
                              exp {
                                prefixexp {
                                  exp {
                                    binary {
                                      leftexp {
                                        number: -8.37141646680589e+298
                                      }
                                      binop {
                                        concat: 4
                                      }
                                      rightexp {
                                        str: "UUUUUUUUUUUUUUUUU"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  whilecycle {
                                    condition {
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                          stat {
                                            whilecycle {
                                              condition {
                                                unary {
                                                  unop {
                                                    negate: 0
                                                  }
                                                  exp {
                                                    prefixexp {
                                                      exp {
                                                        binary {
                                                          leftexp {
                                                            number: -8.37141646680589e+298
                                                          }
                                                          binop {
                                                            concat: 262144
                                                          }
                                                          rightexp {
                                                            str: "UUUUUUUUUUUUUUUUU"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              doblock {
                                                block {
                                                  chunk {
                                                  }
                                                }
                                              }
                                            }
                                            semicolon: true
                                          }
                                          stat {
                                            whilecycle {
                                              condition {
                                                unary {
                                                  unop {
                                                    negate: 0
                                                  }
                                                  exp {
                                                    prefixexp {
                                                      exp {
                                                        binary {
                                                          leftexp {
                                                            number: -8.37141646680589e+298
                                                          }
                                                          binop {
                                                            concat: 4
                                                          }
                                                          rightexp {
                                                            str: "UUUUUUUUUUUUUUUUU"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              doblock {
                                                block {
                                                  chunk {
                                                    stat {
                                                      whilecycle {
                                                        condition {
                                                          unary {
                                                            unop {
                                                              negate: 0
                                                            }
                                                            exp {
                                                              prefixexp {
                                                                exp {
                                                                  binary {
                                                                    leftexp {
                                                                      number: -8.37141646680589e+298
                                                                    }
                                                                    binop {
                                                                      concat: 4
                                                                    }
                                                                    rightexp {
                                                                      str: "UUUUUUUUUUUUUUUUU"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                        doblock {
                                                          block {
                                                            chunk {
                                                              stat {
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      semicolon: true
                                                    }
                                                    stat {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            semicolon: true
                                          }
                                        }
                                      }
                                    }
                                  }
                                  semicolon: true
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
