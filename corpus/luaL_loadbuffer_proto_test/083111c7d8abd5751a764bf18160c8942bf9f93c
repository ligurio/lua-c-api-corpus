chunk {
  stat {
    call {
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 4
      }
      startexp {
      }
      stopexp {
        number: 2.38570835609644e-312
      }
      stepexp {
        function {
          body {
            parlist {
              ellipsis: "math.ceil"
            }
            block {
              chunk {
                stat {
                  repeatcycle {
                    block {
                      chunk {
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                          call {
                          }
                          semicolon: true
                        }
                        stat {
                          call {
                            namedArgs {
                              prefixexp {
                              }
                              name {
                                name: ""
                                num: 0
                              }
                              args {
                                str: "debug.upvalueid"
                              }
                            }
                          }
                        }
                        stat {
                          call {
                          }
                        }
                        stat {
                        }
                        stat {
                          call {
                            namedArgs {
                              prefixexp {
                              }
                              name {
                                name: ""
                                num: 0
                              }
                              args {
                                str: "debug.upvalueid"
                              }
                            }
                          }
                        }
                        stat {
                          call {
                            namedArgs {
                              prefixexp {
                              }
                              name {
                                name: ""
                                num: 0
                              }
                              args {
                                str: "debug.upvalueid"
                              }
                            }
                          }
                        }
                        stat {
                        }
                        stat {
                          call {
                            namedArgs {
                              prefixexp {
                              }
                              name {
                                name: ""
                                num: 0
                              }
                              args {
                                explist {
                                  explist {
                                    expressions {
                                      binary {
                                        leftexp {
                                          binary {
                                            leftexp {
                                              number: 6.63123684676648e-316
                                            }
                                            binop {
                                            }
                                            rightexp {
                                            }
                                          }
                                        }
                                        binop {
                                        }
                                        rightexp {
                                        }
                                      }
                                    }
                                    explast {
                                    }
                                  }
                                }
                              }
                            }
                          }
                          semicolon: true
                        }
                        stat {
                          forcyclename {
                            name {
                              name: ""
                              num: 7
                            }
                            startexp {
                            }
                            stopexp {
                              number: 45
                            }
                            doblock {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    condition {
                      nil: 536870912
                    }
                  }
                }
                stat {
                }
                stat {
                  call {
                  }
                }
                stat {
                  call {
                  }
                }
                stat {
                  call {
                  }
                }
                stat {
                  call {
                  }
                  semicolon: true
                }
                stat {
                  call {
                  }
                }
                stat {
                  call {
                  }
                }
                stat {
                  call {
                  }
                }
                stat {
                  call {
                    namedArgs {
                      prefixexp {
                      }
                      name {
                        name: ""
                        num: 268435456
                      }
                      args {
                        str: "debug.upvalueid"
                      }
                    }
                  }
                }
                stat {
                  func {
                    name {
                      firstname {
                        name: ""
                        num: 0
                      }
                      lastname {
                        name: "N"
                        num: 0
                      }
                    }
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                stat {
                }
                stat {
                  call {
                  }
                }
                stat {
                  call {
                  }
                }
                stat {
                  call {
                  }
                }
                stat {
                }
                stat {
                  call {
                  }
                }
                stat {
                }
                stat {
                  call {
                  }
                }
                stat {
                  call {
                  }
                }
                stat {
                  localnames {
                    namelist {
                      firstname {
                        name: ""
                        num: 0
                      }
                    }
                  }
                }
                stat {
                  call {
                  }
                }
                stat {
                  ifstat {
                    condition {
                    }
                    first {
                      chunk {
                      }
                    }
                  }
                }
                stat {
                  call {
                  }
                }
                stat {
                  call {
                  }
                }
                stat {
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 4
      }
      startexp {
      }
      stopexp {
        number: 2.38570835609644e-312
      }
      stepexp {
        function {
          body {
            parlist {
              ellipsis: "math.ceil"
            }
            block {
              chunk {
                laststat {
                  semicolon: true
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
            }
          }
        }
      }
    }
  }
}
