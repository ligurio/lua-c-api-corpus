chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            func {
              name {
                firstname {
                  name: ""
                  num: 0
                }
                lastname {
                  name: ""
                  num: 0
                }
              }
              body {
                block {
                  chunk {
                    laststat {
                      explist {
                        explist {
                          explast {
                            prefixexp {
                              exp {
                                unary {
                                  unop {
                                  }
                                  exp {
                                    unary {
                                      unop {
                                        negate: 32512
                                      }
                                      exp {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 2
      }
      startexp {
        binary {
          leftexp {
            unary {
              unop {
                length: 2
              }
              exp {
                tableconstructor {
                }
              }
            }
          }
          binop {
            mod: 0
          }
          rightexp {
            number: 4
          }
        }
      }
      stopexp {
        number: 0
      }
      doblock {
        block {
          chunk {
            stat {
            }
          }
        }
      }
    }
  }
}
