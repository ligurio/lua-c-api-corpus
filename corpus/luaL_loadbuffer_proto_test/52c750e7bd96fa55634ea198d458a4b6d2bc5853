chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 1
      }
      startexp {
        binary {
          leftexp {
          }
          binop {
          }
          rightexp {
          }
        }
      }
      stopexp {
        number: -2.1240234375
      }
      stepexp {
        true: 1
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  expressions {
                    binary {
                      leftexp {
                        number: 1.2890625
                      }
                      binop {
                        exp: 655360
                      }
                      rightexp {
                      }
                    }
                  }
                  explast {
                    binary {
                      leftexp {
                        ellipsis: ""
                      }
                      binop {
                        and: 46336
                      }
                      rightexp {
                        binary {
                          leftexp {
                            ellipsis: ""
                          }
                          binop {
                            and: 46336
                          }
                          rightexp {
                            binary {
                              leftexp {
                              }
                              binop {
                                concat: 4294966964
                              }
                              rightexp {
                                number: -4.9591064453125e-05
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
