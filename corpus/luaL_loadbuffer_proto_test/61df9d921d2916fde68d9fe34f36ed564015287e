chunk {
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            forcyclename {
              name {
                name: ""
                num: 0
              }
              startexp {
              }
              stopexp {
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                }
                vars {
                }
                vars {
                }
                vars {
                  name {
                    name: ""
                    num: 2
                  }
                }
              }
              explist {
                expressions {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                          }
                          value {
                            binary {
                              leftexp {
                                unary {
                                  unop {
                                    negate: 0
                                  }
                                  exp {
                                  }
                                }
                              }
                              binop {
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                      }
                      lastSep {
                        semicolon: 536870912
                      }
                    }
                  }
                }
                expressions {
                  number: nan
                }
                explast {
                  number: -2.75
                }
              }
            }
          }
          stat {
            localnames {
              namelist {
                firstname {
                  name: ""
                  num: 0
                }
              }
            }
          }
        }
      }
      condition {
        true: 64
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            forcyclename {
              name {
                name: ""
                num: 0
              }
              startexp {
              }
              stopexp {
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                }
                vars {
                  name {
                    name: ""
                    num: 3
                  }
                }
                vars {
                }
                vars {
                }
              }
              explist {
                expressions {
                  number: nan
                }
                explast {
                  prefixexp {
                  }
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    localfunc {
                      name {
                        name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                        num: 0
                      }
                      funcbody {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  stat {
                    semicolon: true
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                      }
                    }
                  }
                }
              }
              condition {
                ellipsis: "+"
              }
            }
          }
        }
      }
      condition {
        ellipsis: ""
      }
    }
  }
}
