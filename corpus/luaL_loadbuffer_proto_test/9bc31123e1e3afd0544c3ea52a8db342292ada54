chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: 0
      }
      stopexp {
        str: "\226\000\000\000\000\000\000\000"
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
            stat {
              list {
                varlist {
                  var {
                    indexname {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                exprassign {
                                  key {
                                  }
                                  value {
                                    nil: 2097152
                                  }
                                }
                              }
                              fields {
                                field {
                                  expression {
                                  }
                                }
                                sep {
                                }
                              }
                              fields {
                                field {
                                }
                                sep {
                                  comma: 0
                                }
                              }
                              fields {
                                field {
                                  expression {
                                    number: -0.00023651123046875
                                  }
                                }
                                sep {
                                }
                              }
                            }
                          }
                        }
                      }
                      Name: ""
                    }
                  }
                  vars {
                    indexname {
                      prefixexp {
                        exp {
                          number: -0
                        }
                      }
                      Name: ""
                    }
                  }
                  vars {
                  }
                }
                explist {
                  explast {
                  }
                }
              }
              semicolon: false
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 2
      }
      startexp {
        number: 0
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                    indexname {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                }
                              }
                              fields {
                                field {
                                  expression {
                                    number: 0
                                  }
                                }
                                sep {
                                }
                              }
                              fields {
                                field {
                                  expression {
                                  }
                                }
                                sep {
                                }
                              }
                            }
                          }
                        }
                      }
                      Name: ""
                    }
                  }
                  vars {
                    indexname {
                      prefixexp {
                        functioncall {
                        }
                      }
                      Name: ""
                    }
                  }
                  vars {
                    indexname {
                      prefixexp {
                        functioncall {
                          prefArgs {
                            prefixexp {
                              var {
                                name {
                                  name: "setmetatable"
                                  num: 0
                                }
                              }
                            }
                            args {
                            }
                          }
                        }
                      }
                      Name: ""
                    }
                  }
                }
                explist {
                  expressions {
                    unary {
                      unop {
                        not: 1819042147
                      }
                      exp {
                      }
                    }
                  }
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
          indexname {
            prefixexp {
              functioncall {
              }
            }
            Name: ""
          }
        }
        vars {
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: ""
          }
        }
      }
      explist {
        explast {
          tableconstructor {
            fieldlist {
              firstField {
                expression {
                }
              }
              fields {
                field {
                  exprassign {
                    key {
                      number: -60.000038862228415
                    }
                    value {
                      number: -0
                    }
                  }
                }
                sep {
                }
              }
              fields {
                field {
                  expression {
                  }
                }
                sep {
                }
              }
              fields {
                field {
                  exprassign {
                    key {
                      binary {
                        leftexp {
                          number: -11.596000671386719
                        }
                        binop {
                          exp: 1
                        }
                        rightexp {
                          prefixexp {
                            var {
                              indexname {
                                prefixexp {
                                }
                                Name: "\\001\\000\\000\\013"
                              }
                            }
                          }
                        }
                      }
                    }
                    value {
                    }
                  }
                }
                sep {
                }
              }
              fields {
                field {
                  exprassign {
                    key {
                      binary {
                        leftexp {
                          number: 0
                        }
                        binop {
                          or: 0
                        }
                        rightexp {
                          prefixexp {
                            exp {
                              binary {
                                leftexp {
                                }
                                binop {
                                  or: 1
                                }
                                rightexp {
                                  number: 0
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    value {
                    }
                  }
                }
                sep {
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
