chunk {
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          binary {
                            leftexp {
                              prefixexp {
                              }
                            }
                            binop {
                              sub: 2
                            }
                            rightexp {
                              str: ":"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        semicolon: true
                      }
                      stat {
                        list {
                          varlist {
                            var {
                            }
                            vars {
                              name {
                                name: ""
                                num: 4294967293
                              }
                            }
                            vars {
                            }
                            vars {
                              indexexpr {
                                prefixexp {
                                  functioncall {
                                  }
                                }
                                exp {
                                  prefixexp {
                                  }
                                }
                              }
                            }
                          }
                          explist {
                            expressions {
                              prefixexp {
                                exp {
                                  str: "\'"
                                }
                              }
                            }
                            expressions {
                              prefixexp {
                                functioncall {
                                }
                              }
                            }
                            explast {
                            }
                          }
                        }
                      }
                      stat {
                      }
                      stat {
                      }
                    }
                  }
                }
              }
            }
            stat {
              semicolon: false
            }
            stat {
            }
          }
        }
      }
    }
  }
}
