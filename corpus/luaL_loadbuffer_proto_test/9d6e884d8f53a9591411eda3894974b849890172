chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: 0
      }
      stopexp {
        str: "444444444444444444444444444444444444444444444444444444444444444"
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        unary {
          unop {
            not: 32768
          }
          exp {
          }
        }
      }
      stopexp {
        number: -2.9740338169555661e+284
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
                str: "444444444444444444444444444444444444444444444444444444444444444"
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        binary {
          leftexp {
          }
          binop {
          }
          rightexp {
            tableconstructor {
              fieldlist {
                firstField {
                  expression {
                    str: ""
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: -2.9740338169555661e+284
      }
      stopexp {
        number: 4
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
