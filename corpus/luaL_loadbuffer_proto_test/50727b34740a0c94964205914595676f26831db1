chunk {
  stat {
    ifstat {
      condition {
        unary {
          unop {
          }
          exp {
            true: 0
          }
        }
      }
      first {
        chunk {
          stat {
            list {
              varlist {
                var {
                  name {
                    name: ""
                    num: 8224
                  }
                }
                vars {
                }
              }
              explist {
                explast {
                }
              }
            }
          }
          stat {
            forcyclelist {
              names {
                firstname {
                  name: ""
                  num: 4
                }
              }
              expressions {
                expressions {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          var {
                            name {
                              name: ""
                              num: 33554432
                            }
                          }
                        }
                        args {
                        }
                      }
                    }
                  }
                }
                expressions {
                  binary {
                    leftexp {
                    }
                    binop {
                      add: 0
                    }
                    rightexp {
                      nil: 1
                    }
                  }
                }
                explast {
                  ellipsis: ""
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
            semicolon: false
          }
        }
      }
      clauses {
        condition {
          binary {
            leftexp {
              number: -0
            }
            binop {
              greaterEqual: 0
            }
            rightexp {
            }
          }
        }
        block {
          chunk {
          }
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
            stat {
              localnames {
                namelist {
                  firstname {
                    name: ""
                    num: 4096
                  }
                }
                explist {
                  expressions {
                    binary {
                      leftexp {
                      }
                      binop {
                        add: 0
                      }
                      rightexp {
                        nil: 1
                      }
                    }
                  }
                  explast {
                    str: "pairs"
                  }
                }
              }
              semicolon: true
            }
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 4
                  }
                }
                expressions {
                  expressions {
                    prefixexp {
                      functioncall {
                      }
                    }
                  }
                  expressions {
                    binary {
                      leftexp {
                      }
                      binop {
                        add: 0
                      }
                      rightexp {
                        nil: 1
                      }
                    }
                  }
                  explast {
                    ellipsis: ""
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
      last {
        chunk {
          laststat {
            break: 0
            semicolon: false
          }
        }
      }
    }
  }
  laststat {
    break: 0
    semicolon: false
  }
}
