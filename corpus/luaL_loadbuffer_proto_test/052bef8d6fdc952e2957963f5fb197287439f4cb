chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
        number: -2
      }
      stepexp {
        number: -2.0039100646972656
      }
      doblock {
        block {
          chunk {
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                    stat {
                      semicolon: true
                    }
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                    var {
                      indexexpr {
                        prefixexp {
                          exp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    unary {
                                      unop {
                                        negate: 2
                                      }
                                      exp {
                                      }
                                    }
                                  }
                                  binop {
                                    sub: 2
                                  }
                                  rightexp {
                                    binary {
                                      leftexp {
                                        unary {
                                          unop {
                                            negate: 2
                                          }
                                          exp {
                                          }
                                        }
                                      }
                                      binop {
                                        sub: 2
                                      }
                                      rightexp {
                                        unary {
                                          unop {
                                            length: 0
                                          }
                                          exp {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                add: 65580
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    unary {
                                      unop {
                                        negate: 2
                                      }
                                      exp {
                                      }
                                    }
                                  }
                                  binop {
                                    sub: 2
                                  }
                                  rightexp {
                                    number: -2.0000009089708328
                                  }
                                }
                              }
                            }
                          }
                        }
                        exp {
                          prefixexp {
                          }
                        }
                      }
                    }
                  }
                  args {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
