chunk {
  stat {
    list {
      varlist {
        var {
          name {
            name: "jlogjjjjjjjjjjDjjjj"
            num: 0
          }
        }
      }
      explist {
        explast {
          prefixexp {
            exp {
              binary {
                leftexp {
                }
                binop {
                  or: 0
                }
                rightexp {
                  binary {
                    leftexp {
                    }
                    binop {
                    }
                    rightexp {
                      function {
                        body {
                          parlist {
                          }
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      stepexp {
        binary {
          leftexp {
          }
          binop {
            or: 0
          }
          rightexp {
            prefixexp {
              exp {
                binary {
                  leftexp {
                  }
                  binop {
                  }
                  rightexp {
                    prefixexp {
                      exp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                              }
                              binop {
                                or: 0
                              }
                              rightexp {
                                prefixexp {
                                  exp {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                        or: 0
                                      }
                                      rightexp {
                                        prefixexp {
                                          exp {
                                            binary {
                                              leftexp {
                                              }
                                              binop {
                                              }
                                              rightexp {
                                                number: 0
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          binop {
                          }
                          rightexp {
                            number: 0
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                    name {
                      name: ""
                      num: 0
                    }
                  }
                }
                explist {
                  explast {
                    prefixexp {
                      exp {
                        binary {
                          leftexp {
                          }
                          binop {
                            or: 0
                          }
                          rightexp {
                            prefixexp {
                              exp {
                                binary {
                                  leftexp {
                                  }
                                  binop {
                                    notEqual: 0
                                  }
                                  rightexp {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                          }
                                          binop {
                                            greaterEqual: 32
                                          }
                                          rightexp {
                                            prefixexp {
                                              exp {
                                                binary {
                                                  leftexp {
                                                  }
                                                  binop {
                                                    or: 0
                                                  }
                                                  rightexp {
                                                    prefixexp {
                                                      exp {
                                                        binary {
                                                          leftexp {
                                                          }
                                                          binop {
                                                          }
                                                          rightexp {
                                                            prefixexp {
                                                              exp {
                                                                ellipsis: "z"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      list {
                        varlist {
                          var {
                            name {
                              name: ""
                              num: 67108864
                            }
                          }
                        }
                        explist {
                          explast {
                            prefixexp {
                            }
                          }
                        }
                      }
                    }
                    stat {
                      forcyclename {
                        name {
                          name: ""
                          num: 0
                        }
                        startexp {
                        }
                        stopexp {
                        }
                        stepexp {
                          binary {
                            leftexp {
                            }
                            binop {
                            }
                            rightexp {
                              ellipsis: ""
                            }
                          }
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                list {
                                  varlist {
                                    var {
                                      name {
                                        name: ""
                                        num: 0
                                      }
                                    }
                                  }
                                  explist {
                                    expressions {
                                      binary {
                                        leftexp {
                                          str: ""
                                        }
                                        binop {
                                          notEqual: 983040
                                        }
                                        rightexp {
                                          number: 2.07226151461452e-317
                                        }
                                      }
                                    }
                                    explast {
                                      prefixexp {
                                        exp {
                                          binary {
                                            leftexp {
                                            }
                                            binop {
                                              or: 0
                                            }
                                            rightexp {
                                              prefixexp {
                                                exp {
                                                  binary {
                                                    leftexp {
                                                    }
                                                    binop {
                                                      notEqual: 0
                                                    }
                                                    rightexp {
                                                      binary {
                                                        leftexp {
                                                        }
                                                        binop {
                                                        }
                                                        rightexp {
                                                          binary {
                                                            leftexp {
                                                            }
                                                            binop {
                                                            }
                                                            rightexp {
                                                              prefixexp {
                                                                exp {
                                                                  binary {
                                                                    leftexp {
                                                                    }
                                                                    binop {
                                                                      or: 0
                                                                    }
                                                                    rightexp {
                                                                      prefixexp {
                                                                        exp {
                                                                          binary {
                                                                            leftexp {
                                                                            }
                                                                            binop {
                                                                            }
                                                                            rightexp {
                                                                              prefixexp {
                                                                                exp {
                                                                                  ellipsis: "z"
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              stat {
                                repeatcycle {
                                  block {
                                    chunk {
                                    }
                                  }
                                  condition {
                                  }
                                }
                              }
                              laststat {
                                semicolon: true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                condition {
                }
              }
            }
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
}
