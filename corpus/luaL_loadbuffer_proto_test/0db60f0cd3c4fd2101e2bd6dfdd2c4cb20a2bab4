chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        expressions {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                  exp {
                    function {
                      body {
                        block {
                          chunk {
                            stat {
                            }
                            stat {
                            }
                            stat {
                              semicolon: true
                            }
                            stat {
                              localfunc {
                                name {
                                  name: ""
                                  num: 0
                                }
                                funcbody {
                                  block {
                                    chunk {
                                      stat {
                                        whilecycle {
                                          condition {
                                            tableconstructor {
                                              fieldlist {
                                                firstField {
                                                  expression {
                                                    binary {
                                                      leftexp {
                                                      }
                                                      binop {
                                                        concat: 0
                                                      }
                                                      rightexp {
                                                        unary {
                                                          unop {
                                                            length: 0
                                                          }
                                                          exp {
                                                            tableconstructor {
                                                              fieldlist {
                                                                firstField {
                                                                  expression {
                                                                    prefixexp {
                                                                      functioncall {
                                                                        prefArgs {
                                                                          prefixexp {
                                                                          }
                                                                          args {
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                fields {
                                                  field {
                                                  }
                                                  sep {
                                                    semicolon: 0
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          doblock {
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            laststat {
                              explist {
                                explist {
                                  expressions {
                                    prefixexp {
                                      exp {
                                        function {
                                          body {
                                            block {
                                              chunk {
                                                stat {
                                                  whilecycle {
                                                    condition {
                                                      tableconstructor {
                                                        fieldlist {
                                                          firstField {
                                                            expression {
                                                              tableconstructor {
                                                                fieldlist {
                                                                  firstField {
                                                                    expression {
                                                                      binary {
                                                                        leftexp {
                                                                        }
                                                                        binop {
                                                                          concat: 0
                                                                        }
                                                                        rightexp {
                                                                          binary {
                                                                            leftexp {
                                                                              unary {
                                                                                unop {
                                                                                  length: 0
                                                                                }
                                                                                exp {
                                                                                  tableconstructor {
                                                                                    fieldlist {
                                                                                      firstField {
                                                                                        expression {
                                                                                          binary {
                                                                                            leftexp {
                                                                                              number: 0
                                                                                            }
                                                                                            binop {
                                                                                              concat: 0
                                                                                            }
                                                                                            rightexp {
                                                                                              binary {
                                                                                                leftexp {
                                                                                                  unary {
                                                                                                    unop {
                                                                                                      length: 0
                                                                                                    }
                                                                                                    exp {
                                                                                                      tableconstructor {
                                                                                                        fieldlist {
                                                                                                          firstField {
                                                                                                            expression {
                                                                                                              prefixexp {
                                                                                                                functioncall {
                                                                                                                  prefArgs {
                                                                                                                    prefixexp {
                                                                                                                    }
                                                                                                                    args {
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                                binop {
                                                                                                }
                                                                                                rightexp {
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                      fields {
                                                                                        field {
                                                                                          exprassign {
                                                                                            key {
                                                                                              prefixexp {
                                                                                              }
                                                                                            }
                                                                                            value {
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                        sep {
                                                                                          comma: 0
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                            binop {
                                                                              lessEqual: 0
                                                                            }
                                                                            rightexp {
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                  fields {
                                                                    field {
                                                                    }
                                                                    sep {
                                                                      semicolon: 512
                                                                    }
                                                                  }
                                                                  lastSep {
                                                                    comma: 0
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    doblock {
                                                      block {
                                                        chunk {
                                                          stat {
                                                            repeatcycle {
                                                              block {
                                                                chunk {
                                                                }
                                                              }
                                                              condition {
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  explast {
                                    prefixexp {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                args {
                }
              }
            }
          }
        }
        explast {
        }
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
}
