chunk {
  stat {
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 4
      }
      startexp {
        number: 2
      }
      stopexp {
        number: 0
      }
      stepexp {
        number: -0
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                  vars {
                    name {
                      name: ""
                      num: 0
                    }
                  }
                  vars {
                  }
                }
                explist {
                  expressions {
                    binary {
                      leftexp {
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                            prefixexp {
                              exp {
                                binary {
                                  leftexp {
                                    number: nan
                                  }
                                  binop {
                                    concat: 3840
                                  }
                                  rightexp {
                                  }
                                }
                              }
                            }
                          }
                          binop {
                          }
                          rightexp {
                            number: 0
                          }
                        }
                      }
                    }
                  }
                  expressions {
                    tableconstructor {
                    }
                  }
                  explast {
                    prefixexp {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
