chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        function {
          body {
            block {
              chunk {
                laststat {
                  break: 3657433088
                }
              }
            }
          }
        }
      }
      stopexp {
        number: 3
      }
      stepexp {
      }
      doblock {
        block {
          chunk {
            stat {
              call {
                prefArgs {
                  prefixexp {
                    var {
                      name {
                        name: "load"
                        num: 0
                      }
                    }
                  }
                  args {
                    explist {
                      explist {
                        expressions {
                          number: 0
                        }
                        explast {
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                }
                stopexp {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                      }
                    }
                  }
                }
              }
              semicolon: false
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
                clauses {
                  condition {
                    str: "load"
                  }
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
