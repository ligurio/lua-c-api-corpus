chunk {
  stat {
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
              whilecycle {
                condition {
                  binary {
                    leftexp {
                    }
                    binop {
                      mult: 3801088
                    }
                    rightexp {
                      binary {
                        leftexp {
                        }
                        binop {
                          mult: 4
                        }
                        rightexp {
                          str: " "
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        whilecycle {
                          condition {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  expression {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                        mult: 4
                                      }
                                      rightexp {
                                        str: " "
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                      stat {
                        call {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
