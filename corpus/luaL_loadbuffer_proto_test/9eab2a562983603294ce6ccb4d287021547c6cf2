chunk {
  stat {
    block {
      block {
        chunk {
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        number: 5
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
  }
  stat {
    localfunc {
      name {
        name: "debug.setcstacklimit"
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        number: 5
      }
      first {
        chunk {
          laststat {
            break: 4294966673
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    ifstat {
      condition {
        number: 5
      }
      first {
        chunk {
          laststat {
            break: 4294966673
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        number: 5
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
      last {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        number: 5.0000000000000036
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        number: 5
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        number: 7
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        number: 5
      }
      first {
        chunk {
        }
      }
      last {
        chunk {
        }
      }
    }
  }
}
