chunk {
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
      last {
        chunk {
        }
      }
    }
  }
  stat {
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
          stat {
            block {
              block {
                chunk {
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                }
              }
              last {
                chunk {
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
                prefixexp {
                  functioncall {
                    namedArgs {
                      prefixexp {
                        functioncall {
                          prefArgs {
                            prefixexp {
                            }
                            args {
                            }
                          }
                        }
                      }
                      name {
                        name: ""
                        num: 0
                      }
                      args {
                      }
                    }
                  }
                }
              }
              first {
                chunk {
                }
              }
              last {
                chunk {
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                }
              }
              last {
                chunk {
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                }
              }
              clauses {
                condition {
                  nil: 7667712
                }
                block {
                  chunk {
                  }
                }
              }
              last {
                chunk {
                }
              }
            }
          }
        }
      }
      last {
        chunk {
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
      last {
        chunk {
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    list {
                      varlist {
                        var {
                        }
                        vars {
                          indexexpr {
                            prefixexp {
                            }
                            exp {
                            }
                          }
                        }
                      }
                      explist {
                        expressions {
                          binary {
                            leftexp {
                              prefixexp {
                                exp {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                      }
                                    }
                                    binop {
                                      concat: 4
                                    }
                                    rightexp {
                                      prefixexp {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                              concat: 4
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  prefixexp {
                                    exp {
                                      binary {
                                        leftexp {
                                        }
                                        binop {
                                          concat: 0
                                        }
                                        rightexp {
                                          prefixexp {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  concat: 4
                                }
                                rightexp {
                                  prefixexp {
                                  }
                                }
                              }
                            }
                          }
                        }
                        expressions {
                        }
                        explast {
                        }
                      }
                    }
                  }
                  stat {
                    list {
                      varlist {
                        var {
                        }
                      }
                      explist {
                        expressions {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  prefixexp {
                                  }
                                }
                                binop {
                                  concat: 4
                                }
                                rightexp {
                                  prefixexp {
                                  }
                                }
                              }
                            }
                            binop {
                              concat: 0
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      binary {
                                        leftexp {
                                          prefixexp {
                                          }
                                        }
                                        binop {
                                          concat: 4
                                        }
                                        rightexp {
                                          prefixexp {
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                      concat: 0
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          prefixexp {
                                          }
                                        }
                                        binop {
                                          concat: 4
                                        }
                                        rightexp {
                                          prefixexp {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  concat: 0
                                }
                                rightexp {
                                  prefixexp {
                                  }
                                }
                              }
                            }
                          }
                        }
                        explast {
                        }
                      }
                    }
                  }
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: "~"
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
}
