chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                expressions {
                }
                expressions {
                }
                expressions {
                }
                expressions {
                }
                expressions {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          tableconstructor {
                          }
                        }
                      }
                    }
                  }
                }
                expressions {
                }
                expressions {
                }
                expressions {
                }
                explast {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                exprassign {
                                  key {
                                    prefixexp {
                                    }
                                  }
                                  value {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              tableconstructor {
                              }
                            }
                            value {
                            }
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        ellipsis: ""
      }
    }
  }
}
