chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                  binary {
                    leftexp {
                    }
                    binop {
                    }
                    rightexp {
                    }
                  }
                }
                value {
                  tableconstructor {
                  }
                }
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          exprassign {
                            key {
                              ellipsis: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                            }
                            value {
                            }
                          }
                        }
                        fields {
                          field {
                          }
                          sep {
                            semicolon: 0
                          }
                        }
                        lastSep {
                          comma: 0
                        }
                      }
                    }
                  }
                  value {
                    tableconstructor {
                    }
                  }
                }
              }
              sep {
                semicolon: 0
              }
            }
            lastSep {
              comma: 538976256
            }
          }
        }
      }
      stopexp {
        str: "\\023\\000"
      }
      stepexp {
        prefixexp {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
