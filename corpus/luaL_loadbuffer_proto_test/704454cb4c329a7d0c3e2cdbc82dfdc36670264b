chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: 3
      }
      stopexp {
        number: 3
      }
      stepexp {
        number: -0
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                expressions {
                  explast {
                    function {
                      body {
                        block {
                          chunk {
                            stat {
                              whilecycle {
                                condition {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        exprassign {
                                          key {
                                            prefixexp {
                                            }
                                          }
                                          value {
                                          }
                                        }
                                      }
                                      fields {
                                        field {
                                          exprassign {
                                            key {
                                            }
                                            value {
                                              prefixexp {
                                              }
                                            }
                                          }
                                        }
                                        sep {
                                        }
                                      }
                                    }
                                  }
                                }
                                doblock {
                                  block {
                                    chunk {
                                      stat {
                                        whilecycle {
                                          condition {
                                          }
                                          doblock {
                                            block {
                                              chunk {
                                                stat {
                                                  whilecycle {
                                                    condition {
                                                      tableconstructor {
                                                        fieldlist {
                                                          firstField {
                                                            exprassign {
                                                              key {
                                                              }
                                                              value {
                                                                prefixexp {
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    doblock {
                                                      block {
                                                        chunk {
                                                          stat {
                                                            list {
                                                              varlist {
                                                                var {
                                                                }
                                                              }
                                                              explist {
                                                                expressions {
                                                                  unary {
                                                                    unop {
                                                                      length: 4
                                                                    }
                                                                    exp {
                                                                    }
                                                                  }
                                                                }
                                                                expressions {
                                                                }
                                                                expressions {
                                                                }
                                                                explast {
                                                                }
                                                              }
                                                            }
                                                          }
                                                          stat {
                                                            func {
                                                              name {
                                                                firstname {
                                                                  name: ""
                                                                  num: 0
                                                                }
                                                              }
                                                              body {
                                                                parlist {
                                                                  ellipsis: ""
                                                                }
                                                                block {
                                                                  chunk {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            laststat {
                              break: 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
          }
        }
      }
    }
  }
}
