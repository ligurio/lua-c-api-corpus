chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        function {
          body {
            block {
              chunk {
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                expressions {
                }
                expressions {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                expressions {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                          }
                          value {
                            false: 65536
                          }
                        }
                      }
                    }
                  }
                }
                expressions {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                expressions {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                expressions {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                expressions {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                explast {
                  binary {
                    leftexp {
                    }
                    binop {
                      mod: 0
                    }
                    rightexp {
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
          }
          binop {
            mod: 0
          }
          rightexp {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
                vars {
                }
                vars {
                  name {
                    name: "T"
                    num: 23
                  }
                }
                vars {
                }
                vars {
                  name {
                    name: ""
                    num: 64
                  }
                }
                vars {
                  name {
                    name: "\335\376\377\377"
                    num: 1
                  }
                }
                vars {
                  indexname {
                    prefixexp {
                    }
                    Name: ""
                  }
                }
                vars {
                  name {
                    name: "T"
                    num: 4096
                  }
                }
                vars {
                }
                vars {
                  name {
                    name: ""
                    num: 263
                  }
                }
                vars {
                }
                vars {
                }
                vars {
                  indexexpr {
                    prefixexp {
                    }
                    exp {
                    }
                  }
                }
                vars {
                }
                vars {
                  indexexpr {
                    prefixexp {
                    }
                    exp {
                    }
                  }
                }
              }
              explist {
                expressions {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                        }
                      }
                    }
                  }
                }
                expressions {
                }
                explast {
                }
              }
            }
          }
        }
      }
      condition {
        binary {
          leftexp {
          }
          binop {
            greater: 4096
          }
          rightexp {
            str: "\004\000"
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
      condition {
        str: "__len"
      }
    }
  }
}
