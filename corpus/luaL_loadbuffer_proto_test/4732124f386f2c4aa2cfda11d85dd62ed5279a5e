chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 2
      }
      startexp {
        number: 44
      }
      stopexp {
        number: 0
      }
      stepexp {
        number: -0
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
            stat {
            }
            stat {
            }
            stat {
            }
            stat {
            }
            stat {
              list {
                varlist {
                  var {
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                          }
                        }
                      }
                      exp {
                        unary {
                          unop {
                            length: 7635712
                          }
                          exp {
                            tableconstructor {
                            }
                          }
                        }
                      }
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                          }
                        }
                      }
                      exp {
                        tableconstructor {
                        }
                      }
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                }
                              }
                            }
                          }
                        }
                      }
                      exp {
                        unary {
                          unop {
                            length: 4
                          }
                          exp {
                            tableconstructor {
                            }
                          }
                        }
                      }
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                exprassign {
                                  key {
                                    unary {
                                      unop {
                                        length: 0
                                      }
                                      exp {
                                        tableconstructor {
                                        }
                                      }
                                    }
                                  }
                                  value {
                                    prefixexp {
                                      var {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      exp {
                        number: 0
                      }
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                }
                              }
                              fields {
                                field {
                                }
                                sep {
                                  comma: 0
                                }
                              }
                            }
                          }
                        }
                      }
                      exp {
                        unary {
                          unop {
                            length: 4
                          }
                          exp {
                            tableconstructor {
                            }
                          }
                        }
                      }
                    }
                  }
                  vars {
                    name {
                      name: ""
                      num: 0
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                  tableconstructor {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      exp {
                      }
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                }
                              }
                            }
                          }
                        }
                      }
                      exp {
                        unary {
                          unop {
                            length: 4
                          }
                          exp {
                            tableconstructor {
                            }
                          }
                        }
                      }
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        expression {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                                expression {
                                                  tableconstructor {
                                                    fieldlist {
                                                      firstField {
                                                        expression {
                                                          tableconstructor {
                                                            fieldlist {
                                                              firstField {
                                                                expression {
                                                                  tableconstructor {
                                                                    fieldlist {
                                                                      firstField {
                                                                        expression {
                                                                          tableconstructor {
                                                                            fieldlist {
                                                                              firstField {
                                                                                expression {
                                                                                  tableconstructor {
                                                                                    fieldlist {
                                                                                      firstField {
                                                                                        expression {
                                                                                          tableconstructor {
                                                                                            fieldlist {
                                                                                              firstField {
                                                                                                expression {
                                                                                                  tableconstructor {
                                                                                                    fieldlist {
                                                                                                      firstField {
                                                                                                        expression {
                                                                                                          tableconstructor {
                                                                                                            fieldlist {
                                                                                                              firstField {
                                                                                                                expression {
                                                                                                                  tableconstructor {
                                                                                                                    fieldlist {
                                                                                                                      firstField {
                                                                                                                        expression {
                                                                                                                          tableconstructor {
                                                                                                                            fieldlist {
                                                                                                                              firstField {
                                                                                                                                exprassign {
                                                                                                                                  key {
                                                                                                                                    tableconstructor {
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                  value {
                                                                                                                                    prefixexp {
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      lastSep {
                                        semicolon: 4278124544
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      exp {
                      }
                    }
                  }
                }
                explist {
                  expressions {
                    tableconstructor {
                    }
                  }
                  explast {
                    str: ""
                  }
                }
              }
            }
            stat {
            }
            stat {
              semicolon: true
            }
            stat {
            }
            stat {
              list {
                varlist {
                  var {
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                          }
                        }
                      }
                      exp {
                        unary {
                          unop {
                            length: 7635712
                          }
                          exp {
                            tableconstructor {
                            }
                          }
                        }
                      }
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                          }
                        }
                      }
                      exp {
                        tableconstructor {
                        }
                      }
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                              }
                            }
                          }
                        }
                      }
                      exp {
                        unary {
                          unop {
                            length: 0
                          }
                          exp {
                            tableconstructor {
                            }
                          }
                        }
                      }
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                exprassign {
                                  key {
                                    unary {
                                      unop {
                                        length: 0
                                      }
                                      exp {
                                        tableconstructor {
                                        }
                                      }
                                    }
                                  }
                                  value {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      exp {
                        number: 0
                      }
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                  prefixexp {
                                  }
                                }
                              }
                              fields {
                                field {
                                }
                                sep {
                                  comma: 0
                                }
                              }
                            }
                          }
                        }
                      }
                      exp {
                        unary {
                          unop {
                            length: 4
                          }
                          exp {
                            tableconstructor {
                            }
                          }
                        }
                      }
                    }
                  }
                  vars {
                    name {
                      name: ""
                      num: 0
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                  tableconstructor {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      exp {
                      }
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                }
                              }
                            }
                          }
                        }
                      }
                      exp {
                        unary {
                          unop {
                            length: 4
                          }
                          exp {
                            tableconstructor {
                            }
                          }
                        }
                      }
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        expression {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                                expression {
                                                  tableconstructor {
                                                    fieldlist {
                                                      firstField {
                                                        expression {
                                                          tableconstructor {
                                                            fieldlist {
                                                              firstField {
                                                                expression {
                                                                  tableconstructor {
                                                                    fieldlist {
                                                                      firstField {
                                                                        expression {
                                                                          tableconstructor {
                                                                            fieldlist {
                                                                              firstField {
                                                                                expression {
                                                                                  tableconstructor {
                                                                                    fieldlist {
                                                                                      firstField {
                                                                                        expression {
                                                                                          tableconstructor {
                                                                                            fieldlist {
                                                                                              firstField {
                                                                                                expression {
                                                                                                  tableconstructor {
                                                                                                    fieldlist {
                                                                                                      firstField {
                                                                                                        expression {
                                                                                                          tableconstructor {
                                                                                                            fieldlist {
                                                                                                              firstField {
                                                                                                                expression {
                                                                                                                  tableconstructor {
                                                                                                                    fieldlist {
                                                                                                                      firstField {
                                                                                                                        exprassign {
                                                                                                                          key {
                                                                                                                            tableconstructor {
                                                                                                                            }
                                                                                                                          }
                                                                                                                          value {
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      exp {
                      }
                    }
                  }
                }
                explist {
                  expressions {
                    tableconstructor {
                    }
                  }
                  explast {
                    str: ""
                  }
                }
              }
            }
            stat {
            }
            stat {
            }
            stat {
              list {
                varlist {
                  var {
                  }
                  vars {
                    name {
                      name: ""
                      num: 0
                    }
                  }
                  vars {
                    name {
                      name: ""
                      num: 0
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                              }
                            }
                          }
                        }
                      }
                      exp {
                        unary {
                          unop {
                          }
                          exp {
                            ellipsis: "    body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  explast {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                            stat {\n                            }\n                            laststat {\n                              explist {\n                                explist {\n                                  expressions {\n                                    false: 100663296\n                                  }\n                                  explast {\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            stat {\n              list {\n                varlist {\n                  var {\n                  }\n                  vars {\n                    indexexpr {\n                      prefixexp {\n                      }\n                      exp {\n                        function {\n                          body {\n                            block {\n                              chunk {\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n                explist {\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  explast {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            stat {\n              list {\n                varlist {\n                  var {\n                  }\n                }\n                explist {\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  expressions {\n                    function {\n                      body {\n                        parlist {\n                        }\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  explast {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            stat {\n              list {\n                varlist {\n                  var {\n                  }\n                }\n                explist {\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  expressions {\n                  }\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                  }\n                  expressions {\n                  }\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  expressions {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  explast {\n                    function {\n                      body {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  stat {\n    list {\n      varlist {\n        var {\n        }\n      }\n      explist {\n        expressions {\n          function {\n            body {\n              block {\n                chunk {\n                }\n              }\n            }\n          }\n        }\n        expressions {\n          function {\n            body {\n              parlist {\n              }\n              block {\n                chunk {\n                }\n              }\n            }\n          }\n        }\n        expressions {\n          function {\n            body {\n              block {\n                chunk {\n                }\n              }\n            }\n          }\n        }\n        expressions {\n          function {\n            body {\n              block {\n                chunk {\n                }\n              }\n            }\n          }\n        }\n        expressions {\n          function {\n            body {\n              block {\n                chunk {\n                }\n              }\n            }\n          }\n        }\n        expressions {\n          function {\n            body {\n              block {\n                chunk {\n                }\n              }\n            }\n          }\n        }\n        explast {\n          function {\n            body {\n              block {\n                chunk {\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  stat {\n    list {\n      varlist {\n        var {\n        }\n        vars {\n          indexexpr {\n            prefixexp {\n            }\n            exp {\n              function {\n                body {\n                  block {\n                    chunk {\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      explist {\n        expressions {\n          function {\n            body {\n              block {\n                chunk {\n   e3333"
                          }
                        }
                      }
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                          }
                        }
                      }
                      exp {
                        number: 0
                      }
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                  str: " "
                                }
                              }
                            }
                          }
                        }
                      }
                      exp {
                        str: "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
                      }
                    }
                  }
                  vars {
                    name {
                      name: ""
                      num: 6841088
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                              }
                            }
                          }
                        }
                      }
                      exp {
                      }
                    }
                  }
                  vars {
                    name {
                      name: "\376"
                      num: 4
                    }
                  }
                  vars {
                    name {
                      name: ""
                      num: 0
                    }
                  }
                }
                explist {
                  expressions {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          expression {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  expression {
                                    prefixexp {
                                      exp {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  explast {
                    number: 1.4916681462400413e-154
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
}
