chunk {
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          tableconstructor {
            fieldlist {
              firstField {
                expression {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          binary {
                            leftexp {
                              function {
                                body {
                                  block {
                                    chunk {
                                      laststat {
                                        semicolon: true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                              concat: 0
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  unary {
                                    unop {
                                      not: 4
                                    }
                                    exp {
                                      ellipsis: "\000\000\000\000\000\000\000\000\000\000\000\000"
                                    }
                                  }
                                }
                                binop {
                                  less: 4
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    block {
      block {
        chunk {
          stat {
            semicolon: true
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: "\343\376\377\377"
        num: 0
      }
      startexp {
      }
      stopexp {
        prefixexp {
        }
      }
      stepexp {
        number: 4.4501477170144028e-308
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        str: ""
      }
      stopexp {
        nil: 4
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
          }
        }
      }
    }
  }
}
