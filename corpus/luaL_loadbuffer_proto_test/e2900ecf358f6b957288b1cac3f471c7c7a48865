chunk {
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                false: 0
              }
              binop {
                concat: 0
              }
              rightexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        tableconstructor {
                        }
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                number: 416
                              }
                              binop {
                                div: 0
                              }
                              rightexp {
                              }
                            }
                          }
                          binop {
                            div: 0
                          }
                          rightexp {
                            prefixexp {
                              exp {
                                binary {
                                  leftexp {
                                    number: 0
                                  }
                                  binop {
                                    concat: 0
                                  }
                                  rightexp {
                                    binary {
                                      leftexp {
                                        number: 137.29350250842253
                                      }
                                      binop {
                                        exp: 0
                                      }
                                      rightexp {
                                        number: 118.78498777467757
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  binop {
                    div: 0
                  }
                  rightexp {
                    function {
                      body {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          binop {
            mod: 16775424
          }
          rightexp {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    call {
      namedArgs {
        prefixexp {
          var {
            indexexpr {
              prefixexp {
                var {
                  indexname {
                    prefixexp {
                    }
                    Name: "\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241\241"
                  }
                }
              }
              exp {
              }
            }
          }
        }
        name {
          name: ""
          num: 0
        }
        args {
        }
      }
    }
    semicolon: true
  }
}
