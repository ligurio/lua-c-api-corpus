chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: "["
          num: 1
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: 2
      }
      stopexp {
        number: -1
      }
      stepexp {
      }
      doblock {
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: "narrow"
                  num: 0
                }
                funcbody {
                  block {
                    chunk {
                      laststat {
                        break: 0
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: "narrow"
                  num: 0
                }
                funcbody {
                  block {
                    chunk {
                      stat {
                        localfunc {
                          name {
                            name: "narrow"
                            num: 0
                          }
                          funcbody {
                            parlist {
                              namelist {
                                namelist {
                                  firstname {
                                    name: ""
                                    num: 0
                                  }
                                  names {
                                    name: ""
                                    num: 8388608
                                  }
                                }
                              }
                            }
                            block {
                              chunk {
                                laststat {
                                  break: 2097152
                                  semicolon: true
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: "narrow"
                  num: 0
                }
                funcbody {
                  block {
                    chunk {
                      stat {
                        localfunc {
                          name {
                            name: "narrow"
                            num: 0
                          }
                          funcbody {
                            parlist {
                              namelist {
                                namelist {
                                  firstname {
                                    name: ""
                                    num: 0
                                  }
                                  names {
                                    name: ""
                                    num: 8388608
                                  }
                                }
                              }
                            }
                            block {
                              chunk {
                                laststat {
                                  break: 2097152
                                  semicolon: true
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
}
