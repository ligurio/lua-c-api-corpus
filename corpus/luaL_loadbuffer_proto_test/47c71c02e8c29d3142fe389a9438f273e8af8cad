chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            semicolon: true
          }
          laststat {
            explist {
              explist {
                expressions {
                  number: 2.21652246160935e-312
                }
                explast {
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: ""
                  num: 0
                }
                names {
                  name: "os.clock"
                  num: 0
                }
              }
            }
          }
          stat {
            forcyclelist {
              names {
                firstname {
                  name: ""
                  num: 0
                }
              }
              expressions {
                explast {
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      semicolon: true
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      stepexp {
        ellipsis: "\267\267\267\267\267\267\267\267\267\267\267\267\267\267\267\267"
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                number: 0
              }
              binop {
                less: 0
              }
              rightexp {
              }
            }
          }
          binop {
            lessEqual: 4
          }
          rightexp {
            binary {
              leftexp {
                false: 0
              }
              binop {
                less: 0
              }
              rightexp {
              }
            }
          }
        }
      }
      first {
        chunk {
          stat {
            call {
            }
          }
          stat {
            semicolon: true
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
          stat {
            block {
              block {
                chunk {
                  stat {
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          laststat {
                            explist {
                              explist {
                                expressions {
                                }
                                explast {
                                }
                              }
                            }
                          }
                        }
                      }
                      condition {
                      }
                    }
                  }
                  stat {
                    call {
                      prefArgs {
                        prefixexp {
                          var {
                            name {
                              name: "math"
                              num: 0
                            }
                          }
                        }
                        args {
                        }
                      }
                    }
                    semicolon: true
                  }
                }
              }
            }
          }
        }
      }
      condition {
        ellipsis: ""
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
}
