chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
      explist {
        expressions {
          binary {
            leftexp {
              prefixexp {
              }
            }
            binop {
              notEqual: 14155776
            }
            rightexp {
              nil: 0
            }
          }
        }
        expressions {
          false: 4
        }
        expressions {
        }
        explast {
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: false
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 1
        }
      }
      expressions {
        explast {
          function {
            body {
              block {
                chunk {
                  laststat {
                    explist {
                      explist {
                        explast {
                          prefixexp {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
          function {
            body {
              block {
                chunk {
                  stat {
                    call {
                      prefArgs {
                        prefixexp {
                          exp {
                            false: 174
                          }
                        }
                        args {
                        }
                      }
                    }
                  }
                  laststat {
                    explist {
                      explist {
                        explast {
                          prefixexp {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                expressions {
                  explast {
                    function {
                      body {
                        block {
                          chunk {
                            laststat {
                              explist {
                                explist {
                                  explast {
                                    prefixexp {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclelist {
                          names {
                            firstname {
                              name: ""
                              num: 2621440
                            }
                          }
                          expressions {
                            explast {
                              function {
                                body {
                                  block {
                                    chunk {
                                      stat {
                                        whilecycle {
                                          condition {
                                            tableconstructor {
                                              fieldlist {
                                                firstField {
                                                  expression {
                                                    prefixexp {
                                                    }
                                                  }
                                                }
                                                fields {
                                                  field {
                                                    exprassign {
                                                      key {
                                                        tableconstructor {
                                                          fieldlist {
                                                            firstField {
                                                              expression {
                                                                prefixexp {
                                                                }
                                                              }
                                                            }
                                                            fields {
                                                              field {
                                                              }
                                                              sep {
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      value {
                                                      }
                                                    }
                                                  }
                                                  sep {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          doblock {
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                        semicolon: true
                                      }
                                      laststat {
                                        explist {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                      laststat {
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            laststat {
            }
          }
        }
      }
    }
  }
}
