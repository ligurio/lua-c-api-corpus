chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 1
      }
      startexp {
      }
      stopexp {
      }
      stepexp {
        number: -0
      }
      doblock {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      list {
                        varlist {
                          var {
                          }
                          vars {
                          }
                        }
                        explist {
                          expressions {
                            binary {
                              leftexp {
                                prefixexp {
                                }
                              }
                              binop {
                                concat: 0
                              }
                              rightexp {
                              }
                            }
                          }
                          expressions {
                          }
                          explast {
                            prefixexp {
                              exp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        prefixexp {
                                          var {
                                          }
                                        }
                                      }
                                      binop {
                                        concat: 0
                                      }
                                      rightexp {
                                        function {
                                          body {
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                    concat: 0
                                  }
                                  rightexp {
                                    prefixexp {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    stat {
                      list {
                        varlist {
                          var {
                          }
                        }
                        explist {
                          expressions {
                            binary {
                              leftexp {
                                prefixexp {
                                  exp {
                                    binary {
                                      leftexp {
                                        prefixexp {
                                        }
                                      }
                                      binop {
                                        concat: 0
                                      }
                                      rightexp {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                concat: 0
                              }
                              rightexp {
                              }
                            }
                          }
                          expressions {
                          }
                          explast {
                            str: "debug.setmetatable"
                          }
                        }
                      }
                      semicolon: true
                    }
                  }
                }
                condition {
                  nil: 0
                }
              }
            }
            stat {
              list {
                varlist {
                  var {
                  }
                  vars {
                    name {
                      name: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                      num: 0
                    }
                  }
                }
                explist {
                  expressions {
                    tableconstructor {
                    }
                  }
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
