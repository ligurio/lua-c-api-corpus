chunk {
  stat {
    localfunc {
      name {
        name: "and"
        num: 0
      }
      funcbody {
        block {
          chunk {
            laststat {
              explist {
                explist {
                  explast {
                    true: 4
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            laststat {
              explist {
                explist {
                  explast {
                    prefixexp {
                      functioncall {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
            laststat {
              explist {
                explist {
                  expressions {
                    prefixexp {
                      exp {
                        number: -4.9591064453125e-05
                      }
                    }
                  }
                  explast {
                    prefixexp {
                      functioncall {
                        namedArgs {
                          prefixexp {
                            exp {
                              number: -4.9591064453125e-05
                            }
                          }
                          name {
                            name: ""
                            num: 0
                          }
                          args {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
