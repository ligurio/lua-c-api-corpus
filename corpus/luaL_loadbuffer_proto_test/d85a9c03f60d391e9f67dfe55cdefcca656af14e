chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                expressions {
                  explast {
                    function {
                      body {
                        block {
                          chunk {
                            stat {
                              ifstat {
                                condition {
                                }
                                first {
                                  chunk {
                                    stat {
                                      func {
                                        name {
                                          firstname {
                                            name: ""
                                            num: 0
                                          }
                                          lastname {
                                            name: ""
                                            num: 973078528
                                          }
                                        }
                                        body {
                                          block {
                                            chunk {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            laststat {
                              explist {
                                explist {
                                  explast {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
              semicolon: true
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
          }
        }
      }
    }
  }
}
