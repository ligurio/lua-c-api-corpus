chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      laststat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                }
                                fields {
                                  field {
                                    exprassign {
                                      key {
                                        str: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                      }
                                      value {
                                        prefixexp {
                                          exp {
                                            binary {
                                              leftexp {
                                              }
                                              binop {
                                              }
                                              rightexp {
                                                binary {
                                                  leftexp {
                                                    number: 3.7826255594622424e-307
                                                  }
                                                  binop {
                                                    exp: 0
                                                  }
                                                  rightexp {
                                                    prefixexp {
                                                      exp {
                                                        binary {
                                                          leftexp {
                                                            number: -1.94906280228e+289
                                                          }
                                                          binop {
                                                            concat: 0
                                                          }
                                                          rightexp {
                                                            binary {
                                                              leftexp {
                                                                prefixexp {
                                                                  exp {
                                                                    binary {
                                                                      leftexp {
                                                                        number: 2.02369288536575e-320
                                                                      }
                                                                      binop {
                                                                        concat: 0
                                                                      }
                                                                      rightexp {
                                                                        binary {
                                                                          leftexp {
                                                                            number: 137.29350250842253
                                                                          }
                                                                          binop {
                                                                            exp: 0
                                                                          }
                                                                          rightexp {
                                                                            number: 0
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              binop {
                                                                mod: 0
                                                              }
                                                              rightexp {
                                                                prefixexp {
                                                                  exp {
                                                                    number: 358.08969533209165
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  sep {
                                    semicolon: 4
                                  }
                                }
                                lastSep {
                                  comma: 1660944384
                                }
                              }
                            }
                          }
                          value {
                            prefixexp {
                            }
                          }
                        }
                      }
                      fields {
                        field {
                        }
                        sep {
                          semicolon: 65526
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              ellipsis: " "
                            }
                            value {
                              true: 0
                            }
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        semicolon: true
                      }
                      stat {
                      }
                      stat {
                      }
                      stat {
                        semicolon: true
                      }
                      stat {
                      }
                      stat {
                      }
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: false
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                    }
                    stat {
                    }
                    stat {
                      block {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                    stat {
                      func {
                        name {
                          firstname {
                            name: ""
                            num: 0
                          }
                        }
                        body {
                          parlist {
                            ellipsis: ""
                          }
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                    stat {
                    }
                    stat {
                    }
                  }
                }
                condition {
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  laststat {
    explist {
      explist {
        explast {
        }
      }
    }
    semicolon: true
  }
}
