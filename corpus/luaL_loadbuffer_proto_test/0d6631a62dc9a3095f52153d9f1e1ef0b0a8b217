chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 4
      }
      startexp {
        number: 0
      }
      stopexp {
        number: 6.0132872145301667e-154
      }
      stepexp {
        number: -5.05923221341436e-321
      }
      doblock {
        block {
          chunk {
            stat {
              ifstat {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            unary {
                              unop {
                                length: 4
                              }
                              exp {
                                tableconstructor {
                                }
                              }
                            }
                          }
                          value {
                          }
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              unary {
                                unop {
                                }
                                exp {
                                  ellipsis: ")"
                                }
                              }
                            }
                            value {
                            }
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              unary {
                                unop {
                                  length: 4
                                }
                                exp {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        expression {
                                          prefixexp {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            value {
                            }
                          }
                        }
                        sep {
                          comma: 0
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              unary {
                                unop {
                                  length: 4
                                }
                                exp {
                                }
                              }
                            }
                            value {
                            }
                          }
                        }
                        sep {
                          comma: 4
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              unary {
                                unop {
                                  length: 4
                                }
                                exp {
                                }
                              }
                            }
                            value {
                            }
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
                first {
                  chunk {
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
}
