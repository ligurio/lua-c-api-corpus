chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        parlist {
          ellipsis: ""
        }
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
            stat {
              whilecycle {
                condition {
                  ellipsis: ""
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
                tableconstructor {
                  fieldlist {
                    firstField {
                      exprassign {
                        key {
                        }
                        value {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                }
                                args {
                                  explist {
                                    explist {
                                      explast {
                                        number: 2
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
}
