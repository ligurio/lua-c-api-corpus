chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: ""
                  num: 0
                }
                funcbody {
                  block {
                    chunk {
                      stat {
                      }
                      stat {
                        list {
                          varlist {
                            var {
                            }
                            vars {
                            }
                            vars {
                            }
                            vars {
                              name {
                                name: "\001\000\377\377"
                                num: 0
                              }
                            }
                            vars {
                              name {
                                name: ""
                                num: 4
                              }
                            }
                            vars {
                            }
                            vars {
                            }
                          }
                          explist {
                            explast {
                            }
                          }
                        }
                      }
                      stat {
                      }
                    }
                  }
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  nil: 0
                }
              }
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
