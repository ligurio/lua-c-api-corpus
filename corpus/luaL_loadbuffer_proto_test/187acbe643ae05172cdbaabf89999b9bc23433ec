chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  binary {
                    leftexp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                              number: 0
                            }
                            binop {
                              concat: 0
                            }
                            rightexp {
                              unary {
                                unop {
                                  length: 0
                                }
                                exp {
                                  tableconstructor {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    binop {
                      exp: 1048576
                    }
                    rightexp {
                      number: 1027.4507508059608
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      call {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                            str: "\001\000\000\000"
                          }
                        }
                      }
                    }
                  }
                }
                condition {
                }
              }
            }
          }
        }
      }
    }
  }
}
