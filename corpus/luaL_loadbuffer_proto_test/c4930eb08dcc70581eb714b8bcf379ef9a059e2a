chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        prefixexp {
          var {
            name {
              name: ""
              num: 0
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        unary {
          unop {
          }
          exp {
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  unary {
                    unop {
                    }
                    exp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                              number: 0
                            }
                            binop {
                              concat: 0
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  number: 0
                                }
                                binop {
                                  concat: 0
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      number: 358.08969533209165
                                    }
                                    binop {
                                      and: 0
                                    }
                                    rightexp {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
            stat {
              list {
                varlist {
                  var {
                    name {
                      name: ""
                      num: 0
                    }
                  }
                }
                explist {
                  expressions {
                    binary {
                      leftexp {
                        number: 0
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                            number: 358.08969533209165
                          }
                          binop {
                            and: 0
                          }
                          rightexp {
                          }
                        }
                      }
                    }
                  }
                  explast {
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
            }
            fields {
              field {
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          namedassign {
                            name {
                              name: ""
                              num: 0
                            }
                            value {
                            }
                          }
                        }
                        fields {
                          field {
                            expression {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                    }
                                  }
                                }
                              }
                            }
                          }
                          sep {
                            comma: 16777216
                          }
                        }
                      }
                    }
                  }
                  value {
                    ellipsis: "debug.getuservalue"
                  }
                }
              }
              sep {
                comma: 268435456
              }
            }
            fields {
              field {
                expression {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                        }
                      }
                    }
                  }
                }
              }
              sep {
                semicolon: 268435456
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                    expression {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                            namedassign {
                                              name {
                                                name: "\\001\\006"
                                                num: 0
                                              }
                                              value {
                                              }
                                            }
                                          }
                                          fields {
                                            field {
                                              exprassign {
                                                key {
                                                }
                                                value {
                                                  prefixexp {
                                                  }
                                                }
                                              }
                                            }
                                            sep {
                                              semicolon: 538970749
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  fields {
                                    field {
                                    }
                                    sep {
                                    }
                                  }
                                  fields {
                                    field {
                                      expression {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                              exprassign {
                                                key {
                                                  tableconstructor {
                                                    fieldlist {
                                                      firstField {
                                                        exprassign {
                                                          key {
                                                            tableconstructor {
                                                            }
                                                          }
                                                          value {
                                                            prefixexp {
                                                            }
                                                          }
                                                        }
                                                      }
                                                      fields {
                                                        field {
                                                          exprassign {
                                                            key {
                                                            }
                                                            value {
                                                              prefixexp {
                                                              }
                                                            }
                                                          }
                                                        }
                                                        sep {
                                                          semicolon: 538970749
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                value {
                                                }
                                              }
                                            }
                                            fields {
                                              field {
                                                exprassign {
                                                  key {
                                                    tableconstructor {
                                                    }
                                                  }
                                                  value {
                                                  }
                                                }
                                              }
                                              sep {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    sep {
                                    }
                                  }
                                  lastSep {
                                    semicolon: 1895825408
                                  }
                                }
                              }
                            }
                            value {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                    namedassign {
                                      name {
                                        name: ""
                                        num: 0
                                      }
                                      value {
                                      }
                                    }
                                  }
                                  fields {
                                    field {
                                      expression {
                                        prefixexp {
                                          functioncall {
                                            prefArgs {
                                              prefixexp {
                                              }
                                              args {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    sep {
                                      semicolon: 268435456
                                    }
                                  }
                                }
                              }
                            }
                            value {
                              ellipsis: "debug.getuservalue"
                            }
                          }
                        }
                        sep {
                          comma: 268435456
                        }
                      }
                      fields {
                        field {
                          expression {
                            prefixexp {
                              functioncall {
                                prefArgs {
                                  prefixexp {
                                  }
                                  args {
                                  }
                                }
                              }
                            }
                          }
                        }
                        sep {
                          semicolon: 268435456
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
