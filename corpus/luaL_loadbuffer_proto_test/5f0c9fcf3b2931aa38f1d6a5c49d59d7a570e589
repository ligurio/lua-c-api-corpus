chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        binary {
          leftexp {
            prefixexp {
            }
          }
          binop {
            exp: 6
          }
          rightexp {
            prefixexp {
            }
          }
        }
      }
      stopexp {
        unary {
          unop {
            not: 0
          }
          exp {
          }
        }
      }
      stepexp {
        prefixexp {
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              break: 2
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: 0
      }
      stopexp {
        unary {
          unop {
            length: 2
          }
          exp {
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                  binary {
                    leftexp {
                      prefixexp {
                      }
                    }
                    binop {
                    }
                    rightexp {
                      prefixexp {
                      }
                    }
                  }
                }
                stopexp {
                  unary {
                    unop {
                      not: 0
                    }
                    exp {
                    }
                  }
                }
                stepexp {
                  prefixexp {
                  }
                }
                doblock {
                  block {
                    chunk {
                      laststat {
                        break: 2
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
