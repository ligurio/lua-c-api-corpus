chunk {
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          exp {
            function {
              body {
                block {
                  chunk {
                    stat {
                      ifstat {
                        condition {
                        }
                        first {
                          chunk {
                          }
                        }
                      }
                    }
                    laststat {
                      explist {
                        explist {
                          expressions {
                            prefixexp {
                              functioncall {
                                prefArgs {
                                  prefixexp {
                                    exp {
                                      function {
                                        body {
                                          block {
                                            chunk {
                                              laststat {
                                                explist {
                                                  explist {
                                                    expressions {
                                                      prefixexp {
                                                        functioncall {
                                                          prefArgs {
                                                            prefixexp {
                                                              exp {
                                                                function {
                                                                  body {
                                                                    block {
                                                                      chunk {
                                                                        laststat {
                                                                          explist {
                                                                            explist {
                                                                              expressions {
                                                                              }
                                                                              expressions {
                                                                                binary {
                                                                                  leftexp {
                                                                                    str: "recunroll="
                                                                                  }
                                                                                  binop {
                                                                                    less: 0
                                                                                  }
                                                                                  rightexp {
                                                                                    str: "recunrolljjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj="
                                                                                  }
                                                                                }
                                                                              }
                                                                              explast {
                                                                                binary {
                                                                                  leftexp {
                                                                                  }
                                                                                  binop {
                                                                                    less: 4
                                                                                  }
                                                                                  rightexp {
                                                                                    str: "recunrolljjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj="
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                            args {
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    expressions {
                                                      prefixexp {
                                                        functioncall {
                                                          prefArgs {
                                                            prefixexp {
                                                              exp {
                                                              }
                                                            }
                                                            args {
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    explast {
                                                      str: "LUA_PATH"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  args {
                                  }
                                }
                              }
                            }
                          }
                          expressions {
                            prefixexp {
                              functioncall {
                                prefArgs {
                                  prefixexp {
                                    exp {
                                      function {
                                        body {
                                          parlist {
                                          }
                                          block {
                                            chunk {
                                              laststat {
                                                break: 4
                                                semicolon: true
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  args {
                                  }
                                }
                              }
                            }
                          }
                          explast {
                            nil: 0
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        args {
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    semicolon: false
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                  false: 0
                }
                value {
                }
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    str: "recunroll="
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                }
              }
              sep {
                comma: 2
              }
            }
            fields {
              field {
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    prefixexp {
                      functioncall {
                      }
                    }
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    unary {
                      unop {
                        length: 4
                      }
                      exp {
                      }
                    }
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    str: "\377\377\377\377"
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          exp {
                            function {
                              body {
                                block {
                                  chunk {
                                    laststat {
                                      explist {
                                        explist {
                                          expressions {
                                            prefixexp {
                                              functioncall {
                                                prefArgs {
                                                  prefixexp {
                                                    exp {
                                                      function {
                                                        body {
                                                          block {
                                                            chunk {
                                                              laststat {
                                                                explist {
                                                                  explist {
                                                                    expressions {
                                                                      binary {
                                                                        leftexp {
                                                                          str: "\260"
                                                                        }
                                                                        binop {
                                                                          or: 2105376
                                                                        }
                                                                        rightexp {
                                                                        }
                                                                      }
                                                                    }
                                                                    expressions {
                                                                      binary {
                                                                        leftexp {
                                                                          str: "recunroll="
                                                                        }
                                                                        binop {
                                                                          less: 0
                                                                        }
                                                                        rightexp {
                                                                          str: "recunrolljjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj="
                                                                        }
                                                                      }
                                                                    }
                                                                    explast {
                                                                      binary {
                                                                        leftexp {
                                                                          str: "recunroll="
                                                                        }
                                                                        binop {
                                                                          mod: 2
                                                                        }
                                                                        rightexp {
                                                                          unary {
                                                                            unop {
                                                                              negate: 16384
                                                                            }
                                                                            exp {
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  args {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          expressions {
                                            str: "\377\377\377\377"
                                          }
                                          expressions {
                                            prefixexp {
                                              functioncall {
                                                prefArgs {
                                                  prefixexp {
                                                  }
                                                  args {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          explast {
                                            str: "\377\377\377\377"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        args {
                        }
                      }
                    }
                  }
                }
                value {
                  str: "recunroll="
                }
              }
            }
            fields {
              field {
                expression {
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  number: 1.79266204420746e-310
                }
              }
              sep {
              }
            }
            fields {
              field {
                namedassign {
                  name {
                    name: "table.move"
                    num: 0
                  }
                  value {
                  }
                }
              }
              sep {
                comma: 2
              }
            }
            fields {
              field {
                namedassign {
                  name {
                    name: ""
                    num: 0
                  }
                  value {
                    str: "not enough memory"
                  }
                }
              }
              sep {
                comma: 2
              }
            }
            fields {
              field {
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    str: "\377\377\377\377"
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  laststat {
    explist {
      explist {
        explast {
          nil: 4
        }
      }
    }
  }
}
