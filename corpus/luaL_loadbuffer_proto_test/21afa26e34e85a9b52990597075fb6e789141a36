chunk {
  stat {
    whilecycle {
      condition {
        unary {
          unop {
            length: 15676
          }
          exp {
            binary {
              leftexp {
                prefixexp {
                  functioncall {
                    prefArgs {
                      prefixexp {
                      }
                      args {
                        str: "\312"
                      }
                    }
                  }
                }
              }
              binop {
                and: 0
              }
              rightexp {
                number: -0
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                expressions {
                  explast {
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                  prefixexp {
                    functioncall {
                      namedArgs {
                        prefixexp {
                        }
                        name {
                          name: "io.stderr"
                          num: 0
                        }
                        args {
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        repeatcycle {
                          block {
                            chunk {
                              stat {
                                localfunc {
                                  name {
                                    name: ""
                                    num: 0
                                  }
                                  funcbody {
                                    block {
                                      chunk {
                                        stat {
                                          call {
                                            prefArgs {
                                              prefixexp {
                                                var {
                                                  indexexpr {
                                                    prefixexp {
                                                    }
                                                    exp {
                                                      str: ""
                                                    }
                                                  }
                                                }
                                              }
                                              args {
                                                str: "\312"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              stat {
                                repeatcycle {
                                  block {
                                    chunk {
                                      stat {
                                        repeatcycle {
                                          block {
                                            chunk {
                                              stat {
                                                call {
                                                  prefArgs {
                                                    prefixexp {
                                                    }
                                                    args {
                                                      str: "\312"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          condition {
                                            nil: 0
                                          }
                                        }
                                        semicolon: true
                                      }
                                    }
                                  }
                                  condition {
                                    nil: 0
                                  }
                                }
                              }
                            }
                          }
                          condition {
                          }
                        }
                      }
                      stat {
                        repeatcycle {
                          block {
                            chunk {
                              stat {
                                localfunc {
                                  name {
                                    name: ""
                                    num: 0
                                  }
                                  funcbody {
                                    block {
                                      chunk {
                                        stat {
                                          repeatcycle {
                                            block {
                                              chunk {
                                                stat {
                                                  repeatcycle {
                                                    block {
                                                      chunk {
                                                        stat {
                                                          call {
                                                            prefArgs {
                                                              prefixexp {
                                                              }
                                                              args {
                                                                str: "\312"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    condition {
                                                      tableconstructor {
                                                        fieldlist {
                                                          firstField {
                                                          }
                                                          fields {
                                                            field {
                                                            }
                                                            sep {
                                                              comma: 33
                                                            }
                                                          }
                                                          lastSep {
                                                            semicolon: 0
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            condition {
                                              str: ""
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              stat {
                                repeatcycle {
                                  block {
                                    chunk {
                                    }
                                  }
                                  condition {
                                    nil: 0
                                  }
                                }
                              }
                            }
                          }
                          condition {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  unary {
                    unop {
                    }
                    exp {
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      laststat {
                        break: 0
                      }
                    }
                  }
                }
              }
            }
            stat {
            }
            stat {
              semicolon: true
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  number: 1.9453125
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
