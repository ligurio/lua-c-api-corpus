chunk {
  stat {
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localfunc {
              name {
                name: ""
                num: 0
              }
              funcbody {
                block {
                  chunk {
                    stat {
                      whilecycle {
                        condition {
                          tableconstructor {
                            fieldlist {
                              firstField {
                              }
                              fields {
                                field {
                                  exprassign {
                                    key {
                                    }
                                    value {
                                      prefixexp {
                                        functioncall {
                                          prefArgs {
                                            prefixexp {
                                            }
                                            args {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                sep {
                                }
                              }
                            }
                          }
                        }
                        doblock {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                    laststat {
                      explist {
                        explist {
                          expressions {
                            nil: 29696
                          }
                          explast {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    whilecycle {
                      condition {
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  stat {
                    call {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                        }
                      }
                    }
                  }
                  stat {
                    forcyclelist {
                      names {
                        firstname {
                          name: ""
                          num: 36
                        }
                      }
                      expressions {
                        explast {
                          true: 2048
                        }
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                  stat {
                    localnames {
                      namelist {
                        firstname {
                          name: ""
                          num: 1056899072
                        }
                      }
                    }
                    semicolon: true
                  }
                  stat {
                  }
                }
              }
              condition {
                nil: 2048
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
}
