chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localfunc {
              name {
                name: ""
                num: 0
              }
              funcbody {
                block {
                  chunk {
                    stat {
                    }
                  }
                }
              }
            }
          }
          stat {
            localfunc {
              name {
                name: "\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350"
                num: 0
              }
              funcbody {
                block {
                  chunk {
                    stat {
                    }
                  }
                }
              }
            }
          }
          stat {
            localfunc {
              name {
                name: ""
                num: 4
              }
              funcbody {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
                unary {
                  unop {
                    negate: 31
                  }
                  exp {
                  }
                }
              }
              first {
                chunk {
                }
              }
              clauses {
                condition {
                  nil: 0
                }
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            localfunc {
              name {
                name: ""
                num: 0
              }
              funcbody {
                parlist {
                  namelist {
                    namelist {
                      firstname {
                        name: "\377\377\377\377\377\377\377\377"
                        num: 0
                      }
                    }
                  }
                }
                block {
                  chunk {
                    stat {
                    }
                    stat {
                      list {
                        varlist {
                          var {
                            indexname {
                              prefixexp {
                              }
                              Name: "\000\000\000\000"
                            }
                          }
                        }
                        explist {
                          explast {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            localfunc {
              name {
                name: ""
                num: 0
              }
              funcbody {
                block {
                  chunk {
                    stat {
                    }
                  }
                }
              }
            }
          }
          stat {
            localfunc {
              name {
                name: ""
                num: 0
              }
              funcbody {
                block {
                  chunk {
                    stat {
                    }
                  }
                }
              }
            }
          }
          stat {
            localfunc {
              name {
                name: ""
                num: 0
              }
              funcbody {
                block {
                  chunk {
                    stat {
                    }
                  }
                }
              }
            }
            semicolon: false
          }
        }
      }
      condition {
        false: 0
      }
    }
  }
}
