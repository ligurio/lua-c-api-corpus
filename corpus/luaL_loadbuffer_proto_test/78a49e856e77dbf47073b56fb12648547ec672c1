chunk {
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
          stat {
            forcyclename {
              name {
                name: ""
                num: 25344
              }
              startexp {
                number: 0
              }
              stopexp {
                unary {
                  unop {
                    not: 2
                  }
                  exp {
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      forcyclename {
                        name {
                          name: ""
                          num: 0
                        }
                        startexp {
                          number: 0
                        }
                        stopexp {
                          unary {
                            unop {
                              length: 2
                            }
                            exp {
                            }
                          }
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                forcyclename {
                                  name {
                                    name: ""
                                    num: 0
                                  }
                                  startexp {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                        exp: 1048576
                                      }
                                      rightexp {
                                        prefixexp {
                                          exp {
                                            binary {
                                              leftexp {
                                                number: 1.79266204420746e-310
                                              }
                                              binop {
                                                or: 0
                                              }
                                              rightexp {
                                                prefixexp {
                                                  var {
                                                    name {
                                                      name: "\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245"
                                                      num: 0
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  stopexp {
                                  }
                                  doblock {
                                    block {
                                      chunk {
                                        stat {
                                          semicolon: false
                                        }
                                      }
                                    }
                                  }
                                }
                                semicolon: true
                              }
                            }
                          }
                        }
                      }
                      semicolon: true
                    }
                  }
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                  stat {
                    forcyclename {
                      name {
                        name: ""
                        num: 25344
                      }
                      startexp {
                      }
                      stopexp {
                        unary {
                          unop {
                            length: 0
                          }
                          exp {
                          }
                        }
                      }
                      doblock {
                        block {
                          chunk {
                            stat {
                              forcyclename {
                                name {
                                  name: ""
                                  num: 25344
                                }
                                startexp {
                                  number: 0
                                }
                                stopexp {
                                  unary {
                                    unop {
                                      length: 0
                                    }
                                    exp {
                                    }
                                  }
                                }
                                doblock {
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                  stat {
                  }
                  stat {
                    ifstat {
                      condition {
                        binary {
                          leftexp {
                            number: 1.79266204420746e-310
                          }
                          binop {
                            or: 0
                          }
                          rightexp {
                            prefixexp {
                              var {
                                name {
                                  name: "\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245"
                                  num: 0
                                }
                              }
                            }
                          }
                        }
                      }
                      first {
                        chunk {
                          stat {
                            semicolon: true
                          }
                        }
                      }
                      clauses {
                        condition {
                        }
                        block {
                          chunk {
                            stat {
                              semicolon: false
                            }
                          }
                        }
                      }
                    }
                  }
                  laststat {
                  }
                }
              }
              clauses {
                condition {
                }
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                  stat {
                    semicolon: true
                  }
                  stat {
                    list {
                      varlist {
                        var {
                        }
                        vars {
                          indexname {
                            prefixexp {
                            }
                            Name: ")"
                          }
                        }
                      }
                      explist {
                        explast {
                        }
                      }
                    }
                    semicolon: false
                  }
                }
              }
            }
          }
          laststat {
            break: 0
          }
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  laststat {
    break: 0
  }
}
