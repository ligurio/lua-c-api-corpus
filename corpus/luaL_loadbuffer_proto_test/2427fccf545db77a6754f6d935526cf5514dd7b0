chunk {
  stat {
    semicolon: true
  }
  stat {
    localfunc {
      name {
        name: "="
        num: 0
      }
      funcbody {
        parlist {
          ellipsis: ""
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
        }
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
            stat {
              localfunc {
                name {
                  name: "="
                  num: 0
                }
                funcbody {
                  parlist {
                    ellipsis: ""
                  }
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              semicolon: true
            }
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
            }
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  expressions {
                  }
                  expressions {
                    unary {
                      unop {
                        negate: 1
                      }
                      exp {
                        prefixexp {
                          exp {
                            binary {
                              leftexp {
                              }
                              binop {
                                or: 4
                              }
                              rightexp {
                                ellipsis: ""
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  expressions {
                    unary {
                      unop {
                        negate: 1
                      }
                      exp {
                        prefixexp {
                          exp {
                            binary {
                              leftexp {
                              }
                              binop {
                                or: 4
                              }
                              rightexp {
                                ellipsis: ""
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
        }
        expressions {
          unary {
            unop {
              negate: 1
            }
            exp {
              prefixexp {
                exp {
                  binary {
                    leftexp {
                    }
                    binop {
                      or: 4
                    }
                    rightexp {
                      ellipsis: ""
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          unary {
            unop {
              negate: 1
            }
            exp {
              prefixexp {
                exp {
                  binary {
                    leftexp {
                    }
                    binop {
                      or: 4
                    }
                    rightexp {
                      ellipsis: ""
                    }
                  }
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
}
