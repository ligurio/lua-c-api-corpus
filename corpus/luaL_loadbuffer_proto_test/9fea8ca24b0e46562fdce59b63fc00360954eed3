chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                  binary {
                    leftexp {
                    }
                    binop {
                      concat: 0
                    }
                    rightexp {
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        whilecycle {
                          condition {
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                      stat {
                        whilecycle {
                          condition {
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                      stat {
                        whilecycle {
                          condition {
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                      stat {
                        whilecycle {
                          condition {
                            number: -416
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                              indexexpr {
                                prefixexp {
                                  exp {
                                  }
                                }
                                exp {
                                  unary {
                                    unop {
                                    }
                                    exp {
                                      tableconstructor {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            vars {
                              name {
                                name: ""
                                num: 65536
                              }
                            }
                            vars {
                              indexexpr {
                                prefixexp {
                                  exp {
                                    ellipsis: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                                  }
                                }
                                exp {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                      concat: 0
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          false: 48
                                        }
                                        binop {
                                          concat: 1886679808
                                        }
                                        rightexp {
                                          true: 2049
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            vars {
                              indexexpr {
                                prefixexp {
                                  exp {
                                    tableconstructor {
                                      fieldlist {
                                        firstField {
                                          expression {
                                            tableconstructor {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                exp {
                                  unary {
                                    unop {
                                      length: 4
                                    }
                                    exp {
                                    }
                                  }
                                }
                              }
                            }
                            vars {
                              indexname {
                                prefixexp {
                                }
                                Name: "hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh"
                              }
                            }
                            vars {
                              indexexpr {
                                prefixexp {
                                  exp {
                                    tableconstructor {
                                      fieldlist {
                                        firstField {
                                          expression {
                                            tableconstructor {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                exp {
                                  unary {
                                    unop {
                                    }
                                    exp {
                                      tableconstructor {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            vars {
                              indexname {
                                prefixexp {
                                  exp {
                                    false: 0
                                  }
                                }
                                Name: ""
                              }
                            }
                          }
                          explist {
                            explast {
                              tableconstructor {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            laststat {
              explist {
                explist {
                  expressions {
                  }
                  explast {
                    nil: 4
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
  laststat {
    semicolon: true
  }
}
