chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            ellipsis: "$"
          }
          binop {
            div: 0
          }
          rightexp {
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
            }
            stat {
            }
            stat {
            }
            stat {
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                  str: "next"
                }
                first {
                  chunk {
                    stat {
                      call {
                      }
                    }
                    stat {
                      semicolon: true
                    }
                    stat {
                    }
                    stat {
                      ifstat {
                        condition {
                        }
                        first {
                          chunk {
                          }
                        }
                        last {
                          chunk {
                          }
                        }
                      }
                    }
                    stat {
                      localfunc {
                        name {
                          name: "\000\000\000\000"
                          num: 0
                        }
                        funcbody {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                    stat {
                      forcyclelist {
                        names {
                          firstname {
                            name: ""
                            num: 0
                          }
                        }
                        expressions {
                          explast {
                            prefixexp {
                              var {
                                name {
                                  name: "next"
                                  num: 4
                                }
                              }
                            }
                          }
                        }
                        doblock {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                    stat {
                    }
                    stat {
                      block {
                        block {
                          chunk {
                            stat {
                              semicolon: true
                            }
                          }
                        }
                      }
                      semicolon: false
                    }
                  }
                }
                last {
                  chunk {
                    laststat {
                    }
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                    stat {
                      ifstat {
                        condition {
                          nil: 1024
                        }
                        first {
                          chunk {
                          }
                        }
                        last {
                          chunk {
                            laststat {
                              semicolon: true
                            }
                          }
                        }
                      }
                    }
                    stat {
                      semicolon: true
                    }
                    stat {
                    }
                    stat {
                      ifstat {
                        condition {
                        }
                        first {
                          chunk {
                            stat {
                              semicolon: true
                            }
                          }
                        }
                        last {
                          chunk {
                          }
                        }
                      }
                    }
                    stat {
                      localfunc {
                        name {
                          name: "\000\000\000\000"
                          num: 0
                        }
                        funcbody {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                    stat {
                      forcyclelist {
                        names {
                          firstname {
                            name: ""
                            num: 0
                          }
                        }
                        expressions {
                          explast {
                            prefixexp {
                              var {
                                name {
                                  name: "next"
                                  num: 4
                                }
                              }
                            }
                          }
                        }
                        doblock {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                    stat {
                    }
                    stat {
                      block {
                        block {
                          chunk {
                            stat {
                              semicolon: true
                            }
                          }
                        }
                      }
                      semicolon: false
                    }
                  }
                }
                last {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    break: 0
  }
}
