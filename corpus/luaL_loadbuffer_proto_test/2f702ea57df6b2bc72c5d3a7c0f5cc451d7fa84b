chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: -3.39850888396782e-315
      }
      stopexp {
        number: 1.2882297539194267e-231
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                  number: -0
                }
                stopexp {
                  prefixexp {
                    exp {
                      binary {
                        leftexp {
                          number: -8.3711609936427134e+298
                        }
                        binop {
                          concat: 0
                        }
                        rightexp {
                          unary {
                            unop {
                              negate: 0
                            }
                            exp {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                      var {
                                        name {
                                          name: "\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344"
                                          num: 0
                                        }
                                      }
                                    }
                                    args {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                stepexp {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 0
                          }
                          startexp {
                            number: 2
                          }
                          stopexp {
                            number: 0
                          }
                          stepexp {
                            number: -0
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  forcyclename {
                                    name {
                                      name: "\267\376\377\377"
                                      num: 0
                                    }
                                    startexp {
                                      number: -0
                                    }
                                    stopexp {
                                      number: 0
                                    }
                                    stepexp {
                                      number: -0
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                          stat {
                                            forcyclename {
                                              name {
                                                name: ""
                                                num: 0
                                              }
                                              startexp {
                                                number: 0
                                              }
                                              stopexp {
                                                number: 2
                                              }
                                              doblock {
                                                block {
                                                  chunk {
                                                    stat {
                                                      ifstat {
                                                        condition {
                                                          true: 1073741824
                                                        }
                                                        first {
                                                          chunk {
                                                            stat {
                                                              semicolon: true
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
