chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
          }
          binop {
          }
          rightexp {
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
          }
          binop {
            or: 0
          }
          rightexp {
            tableconstructor {
              fieldlist {
                firstField {
                }
                fields {
                  field {
                    expression {
                      unary {
                        unop {
                        }
                        exp {
                          false: 0
                        }
                      }
                    }
                  }
                  sep {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
          }
          binop {
          }
          rightexp {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            semicolon: true
          }
        }
      }
      condition {
        binary {
          leftexp {
          }
          binop {
          }
          rightexp {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
          }
          binop {
          }
          rightexp {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
        }
      }
      condition {
        binary {
          leftexp {
            prefixexp {
            }
          }
          binop {
            less: 0
          }
          rightexp {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
          laststat {
            semicolon: true
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localfunc {
              name {
                name: ""
                num: 0
              }
              funcbody {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            semicolon: true
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
          }
          binop {
          }
          rightexp {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
          }
          binop {
            or: 0
          }
          rightexp {
            tableconstructor {
              fieldlist {
                firstField {
                }
                fields {
                  field {
                    expression {
                      unary {
                        unop {
                        }
                        exp {
                          false: 0
                        }
                      }
                    }
                  }
                  sep {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
          laststat {
            semicolon: true
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            ifstat {
              condition {
                str: "\211o\000\000\000\000\000\000"
              }
              first {
                chunk {
                }
              }
              clauses {
                condition {
                  nil: 0
                }
                block {
                  chunk {
                    laststat {
                      explist {
                        explist {
                          expressions {
                            binary {
                              leftexp {
                              }
                              binop {
                              }
                              rightexp {
                              }
                            }
                          }
                          explast {
                          }
                        }
                      }
                    }
                  }
                }
              }
              clauses {
                condition {
                  nil: 0
                }
                block {
                  chunk {
                  }
                }
              }
              clauses {
                condition {
                  tableconstructor {
                  }
                }
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  laststat {
    break: 0
  }
}
