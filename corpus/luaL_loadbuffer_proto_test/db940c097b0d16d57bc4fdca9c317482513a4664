chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
              prefArgs {
                prefixexp {
                  var {
                    name {
                      name: "require"
                      num: 0
                    }
                  }
                }
                args {
                  explist {
                    explist {
                      expressions {
                        binary {
                          leftexp {
                            number: 2.03515625
                          }
                          binop {
                            exp: 0
                          }
                          rightexp {
                            number: 2.03515625
                          }
                        }
                      }
                      explast {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        true: 7104878
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    localfunc {
                      name {
                        name: ""
                        num: 0
                      }
                      funcbody {
                        parlist {
                          ellipsis: "\377\377"
                        }
                        block {
                          chunk {
                            stat {
                              whilecycle {
                                condition {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        exprassign {
                                          key {
                                            binary {
                                              leftexp {
                                                ellipsis: ""
                                              }
                                              binop {
                                              }
                                              rightexp {
                                                ellipsis: ""
                                              }
                                            }
                                          }
                                          value {
                                          }
                                        }
                                      }
                                      fields {
                                        field {
                                          exprassign {
                                            key {
                                              tableconstructor {
                                                fieldlist {
                                                  firstField {
                                                    exprassign {
                                                      key {
                                                        binary {
                                                          leftexp {
                                                            ellipsis: ""
                                                          }
                                                          binop {
                                                          }
                                                          rightexp {
                                                            ellipsis: ""
                                                          }
                                                        }
                                                      }
                                                      value {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            value {
                                            }
                                          }
                                        }
                                        sep {
                                        }
                                      }
                                      fields {
                                        field {
                                        }
                                        sep {
                                        }
                                      }
                                    }
                                  }
                                }
                                doblock {
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              condition {
              }
            }
          }
          stat {
            whilecycle {
              condition {
                tableconstructor {
                  fieldlist {
                    firstField {
                    }
                    fields {
                      field {
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        exprassign {
                          key {
                            binary {
                              leftexp {
                                ellipsis: "["
                              }
                              binop {
                              }
                              rightexp {
                                ellipsis: ""
                              }
                            }
                          }
                          value {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  exprassign {
                                    key {
                                      binary {
                                        leftexp {
                                          ellipsis: ""
                                        }
                                        binop {
                                        }
                                        rightexp {
                                          ellipsis: ""
                                        }
                                      }
                                    }
                                    value {
                                    }
                                  }
                                }
                                fields {
                                  field {
                                    exprassign {
                                      key {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                              exprassign {
                                                key {
                                                  binary {
                                                    leftexp {
                                                      ellipsis: ""
                                                    }
                                                    binop {
                                                    }
                                                    rightexp {
                                                      ellipsis: ""
                                                    }
                                                  }
                                                }
                                                value {
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      value {
                                      }
                                    }
                                  }
                                  sep {
                                  }
                                }
                                fields {
                                  field {
                                  }
                                  sep {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                      }
                      sep {
                        semicolon: 0
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    laststat {
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        true: 0
      }
      stopexp {
      }
      stepexp {
        ellipsis: "H"
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    block {
      block {
        chunk {
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 4
      }
      funcbody {
        parlist {
          namelist {
            namelist {
              firstname {
                name: "package.path"
                num: 0
              }
            }
          }
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                }
                args {
                  str: "\\224\\013\\000\\000\\000\\000\\000\\000"
                }
              }
            }
          }
          laststat {
            break: 2097152
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
}
