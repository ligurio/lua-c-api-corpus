chunk {
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 67174400
        }
        args {
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
                exprassign {
                  key {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                            var {
                              indexname {
                                prefixexp {
                                  functioncall {
                                    prefArgs {
                                      prefixexp {
                                      }
                                      args {
                                      }
                                    }
                                  }
                                }
                                Name: ""
                              }
                            }
                          }
                          args {
                          }
                        }
                      }
                    }
                  }
                  value {
                  }
                }
              }
              fields {
                field {
                  exprassign {
                    key {
                      prefixexp {
                        exp {
                          false: 3801088
                        }
                      }
                    }
                    value {
                    }
                  }
                }
                sep {
                }
              }
              fields {
                field {
                  exprassign {
                    key {
                      prefixexp {
                        functioncall {
                          prefArgs {
                            prefixexp {
                              exp {
                                function {
                                  body {
                                    block {
                                      chunk {
                                        laststat {
                                          explist {
                                            explist {
                                              expressions {
                                                prefixexp {
                                                  functioncall {
                                                    prefArgs {
                                                      prefixexp {
                                                        exp {
                                                          function {
                                                            body {
                                                              block {
                                                                chunk {
                                                                  laststat {
                                                                    explist {
                                                                      explist {
                                                                        expressions {
                                                                          binary {
                                                                            leftexp {
                                                                              str: "recunroll="
                                                                            }
                                                                            binop {
                                                                              less: 0
                                                                            }
                                                                            rightexp {
                                                                              str: "recunrolljjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj="
                                                                            }
                                                                          }
                                                                        }
                                                                        expressions {
                                                                          binary {
                                                                            leftexp {
                                                                              str: "recunroll="
                                                                            }
                                                                            binop {
                                                                              less: 0
                                                                            }
                                                                            rightexp {
                                                                              str: "recunrolljjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj="
                                                                            }
                                                                          }
                                                                        }
                                                                        explast {
                                                                          binary {
                                                                            leftexp {
                                                                              binary {
                                                                                leftexp {
                                                                                  str: "recunroll="
                                                                                }
                                                                                binop {
                                                                                  less: 0
                                                                                }
                                                                                rightexp {
                                                                                }
                                                                              }
                                                                            }
                                                                            binop {
                                                                              less: 0
                                                                            }
                                                                            rightexp {
                                                                              str: "recunrolljjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj="
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      args {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              expressions {
                                              }
                                              expressions {
                                                prefixexp {
                                                  functioncall {
                                                    prefArgs {
                                                      prefixexp {
                                                      }
                                                      args {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              explast {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            args {
                            }
                          }
                        }
                      }
                    }
                    value {
                    }
                  }
                }
                sep {
                }
              }
              fields {
                field {
                  expression {
                    number: 1.79266204420746e-310
                  }
                }
                sep {
                }
              }
              fields {
                field {
                  exprassign {
                    key {
                    }
                    value {
                      false: 0
                    }
                  }
                }
                sep {
                }
              }
              fields {
                field {
                  exprassign {
                    key {
                      unary {
                        unop {
                          length: 4
                        }
                        exp {
                        }
                      }
                    }
                    value {
                    }
                  }
                }
                sep {
                  comma: 2
                }
              }
              fields {
                field {
                  exprassign {
                    key {
                      prefixexp {
                        exp {
                          false: 3801088
                        }
                      }
                    }
                    value {
                    }
                  }
                }
                sep {
                }
              }
              fields {
                field {
                  exprassign {
                    key {
                      str: "\377\377\377\377"
                    }
                    value {
                    }
                  }
                }
                sep {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          explist {
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          explist {
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          explist {
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          explist {
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          explist {
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          str: "recunroll="
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          str: "recunrolljjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj="
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
        }
      }
    }
    semicolon: true
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          explist {
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          explist {
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          explist {
          }
        }
      }
    }
  }
}
