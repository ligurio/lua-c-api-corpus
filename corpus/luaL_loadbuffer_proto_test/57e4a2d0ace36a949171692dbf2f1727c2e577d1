chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                expressions {
                  explast {
                    function {
                      body {
                        parlist {
                          namelist {
                            namelist {
                              firstname {
                                name: ""
                                num: 0
                              }
                              names {
                                name: "z"
                                num: 0
                              }
                            }
                          }
                        }
                        block {
                          chunk {
                            laststat {
                              explist {
                                explist {
                                  explast {
                                    binary {
                                      leftexp {
                                        binary {
                                          leftexp {
                                            number: 3.50256625256728e-310
                                          }
                                          binop {
                                            div: 0
                                          }
                                          rightexp {
                                            binary {
                                              leftexp {
                                                unary {
                                                  unop {
                                                    length: 4
                                                  }
                                                  exp {
                                                  }
                                                }
                                              }
                                              binop {
                                                equal: 0
                                              }
                                              rightexp {
                                                number: 416
                                              }
                                            }
                                          }
                                        }
                                      }
                                      binop {
                                        mult: 0
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                            binary {
                                              leftexp {
                                                unary {
                                                  unop {
                                                    length: 4
                                                  }
                                                  exp {
                                                  }
                                                }
                                              }
                                              binop {
                                                mod: 4
                                              }
                                              rightexp {
                                                number: 0
                                              }
                                            }
                                          }
                                          binop {
                                          }
                                          rightexp {
                                            tableconstructor {
                                              fieldlist {
                                                firstField {
                                                  expression {
                                                    prefixexp {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
