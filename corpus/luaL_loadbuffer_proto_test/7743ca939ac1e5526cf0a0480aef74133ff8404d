chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            forcyclename {
              name {
                name: ""
                num: 0
              }
              startexp {
              }
              stopexp {
              }
              stepexp {
              }
              doblock {
                block {
                  chunk {
                    stat {
                      list {
                        varlist {
                          var {
                          }
                        }
                        explist {
                          explast {
                            number: 0
                          }
                        }
                      }
                      semicolon: true
                    }
                    stat {
                      whilecycle {
                        condition {
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                localnames {
                                  namelist {
                                    firstname {
                                      name: ""
                                      num: 0
                                    }
                                  }
                                }
                              }
                              stat {
                                semicolon: true
                              }
                              stat {
                                list {
                                  varlist {
                                    var {
                                      indexname {
                                        prefixexp {
                                          exp {
                                            binary {
                                              leftexp {
                                                false: 4
                                              }
                                              binop {
                                                and: 0
                                              }
                                              rightexp {
                                                prefixexp {
                                                  var {
                                                    name {
                                                      name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                                      num: 0
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        Name: ""
                                      }
                                    }
                                  }
                                  explist {
                                    explast {
                                      unary {
                                        unop {
                                        }
                                        exp {
                                          true: 2097152
                                        }
                                      }
                                    }
                                  }
                                }
                                semicolon: true
                              }
                              stat {
                                semicolon: true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
      }
    }
  }
}
