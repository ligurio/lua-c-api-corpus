chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: "\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023"
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
              }
              doblock {
                block {
                  chunk {
                    stat {
                      ifstat {
                        condition {
                          ellipsis: "\256"
                        }
                        first {
                          chunk {
                          }
                        }
                      }
                    }
                    stat {
                      ifstat {
                        condition {
                          prefixexp {
                            exp {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                    expression {
                                      number: 416
                                    }
                                  }
                                  fields {
                                    field {
                                      exprassign {
                                        key {
                                          function {
                                            body {
                                              block {
                                                chunk {
                                                  laststat {
                                                    semicolon: true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        value {
                                        }
                                      }
                                    }
                                    sep {
                                      semicolon: 32770
                                    }
                                  }
                                  fields {
                                    field {
                                      expression {
                                        prefixexp {
                                          exp {
                                            unary {
                                              unop {
                                                negate: 0
                                              }
                                              exp {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    sep {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        first {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: false
          }
          laststat {
          }
        }
      }
      condition {
        binary {
          leftexp {
            number: 0
          }
          binop {
            concat: 0
          }
          rightexp {
            str: "0.3E2"
          }
        }
      }
    }
  }
}
