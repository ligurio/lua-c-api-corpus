chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                  prefixexp {
                    exp {
                      str: "555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555"
                    }
                  }
                }
                stopexp {
                  prefixexp {
                  }
                }
                stepexp {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 0
                          }
                          startexp {
                            ellipsis: "\376\377\377\375"
                          }
                          stopexp {
                            prefixexp {
                            }
                          }
                          stepexp {
                            function {
                              body {
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                      stat {
                        whilecycle {
                          condition {
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                      laststat {
                        explist {
                          explist {
                            expressions {
                              nil: 0
                            }
                            explast {
                            }
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      list {
                        varlist {
                          var {
                          }
                        }
                        explist {
                          explast {
                            false: 0
                          }
                        }
                      }
                      semicolon: true
                    }
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                          }
                        }
                        condition {
                        }
                      }
                    }
                    laststat {
                      explist {
                        explist {
                          expressions {
                            binary {
                              leftexp {
                              }
                              binop {
                                concat: 0
                              }
                              rightexp {
                                function {
                                  body {
                                    block {
                                      chunk {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          explast {
                          }
                        }
                      }
                      semicolon: true
                    }
                  }
                }
                condition {
                }
              }
            }
            laststat {
              explist {
                explist {
                  expressions {
                    binary {
                      leftexp {
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        function {
                          body {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  explast {
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
}
