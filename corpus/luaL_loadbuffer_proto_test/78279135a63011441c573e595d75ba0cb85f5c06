chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
                tableconstructor {
                  fieldlist {
                    firstField {
                    }
                    fields {
                      field {
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        exprassign {
                          key {
                          }
                          value {
                          }
                        }
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                      }
                      sep {
                        comma: 721152
                      }
                    }
                    fields {
                      field {
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        expression {
                          ellipsis: ""
                        }
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                      }
                      sep {
                        comma: 11776
                      }
                    }
                    fields {
                      field {
                        expression {
                          binary {
                            leftexp {
                              unary {
                                unop {
                                  negate: 11776
                                }
                                exp {
                                  number: 0
                                }
                              }
                            }
                            binop {
                              lessEqual: 0
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  unary {
                                    unop {
                                      length: 8192
                                    }
                                    exp {
                                      tableconstructor {
                                      }
                                    }
                                  }
                                }
                                binop {
                                  sub: 2
                                }
                                rightexp {
                                  unary {
                                    unop {
                                      length: 0
                                    }
                                    exp {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        expression {
                          ellipsis: ""
                        }
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                      }
                      sep {
                        comma: 721152
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      semicolon: true
                    }
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
      }
    }
  }
}
