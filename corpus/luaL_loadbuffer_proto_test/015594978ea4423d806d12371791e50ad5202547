chunk {
  stat {
    list {
      varlist {
        var {
          indexname {
            prefixexp {
              functioncall {
              }
            }
            Name: ""
          }
        }
        vars {
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: ""
          }
        }
        vars {
        }
        vars {
          indexname {
            prefixexp {
              functioncall {
              }
            }
            Name: ""
          }
        }
        vars {
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: ""
          }
        }
        vars {
        }
        vars {
        }
      }
      explist {
        expressions {
          number: 0
        }
        expressions {
          str: ""
        }
        explast {
          function {
            body {
              parlist {
              }
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            list {
                              varlist {
                                var {
                                }
                                vars {
                                }
                              }
                              explist {
                                expressions {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                      }
                                    }
                                    binop {
                                      concat: 0
                                    }
                                    rightexp {
                                    }
                                  }
                                }
                                expressions {
                                }
                                explast {
                                }
                              }
                            }
                          }
                          stat {
                            list {
                              varlist {
                                var {
                                }
                              }
                              explist {
                                expressions {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                        exp {
                                          binary {
                                            leftexp {
                                              prefixexp {
                                              }
                                            }
                                            binop {
                                              concat: 0
                                            }
                                            rightexp {
                                            }
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                      concat: 0
                                    }
                                    rightexp {
                                    }
                                  }
                                }
                                expressions {
                                }
                                explast {
                                  prefixexp {
                                    exp {
                                      binary {
                                        leftexp {
                                        }
                                        binop {
                                          concat: 0
                                        }
                                        rightexp {
                                          prefixexp {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                    localfunc {
                      name {
                        name: ""
                        num: 0
                      }
                      funcbody {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: "math.cosh"
          }
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: ""
          }
        }
        vars {
        }
        vars {
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: ""
          }
        }
        vars {
          indexname {
            prefixexp {
              functioncall {
              }
            }
            Name: ""
          }
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: "math.cosh"
          }
        }
        vars {
        }
      }
      explist {
        expressions {
        }
        explast {
          function {
            body {
              block {
                chunk {
                  stat {
                  }
                  stat {
                    list {
                      varlist {
                        var {
                          indexname {
                            prefixexp {
                            }
                            Name: "math.cosh"
                          }
                        }
                        vars {
                        }
                        vars {
                        }
                        vars {
                        }
                        vars {
                          indexname {
                            prefixexp {
                              exp {
                                nil: 4194304
                              }
                            }
                            Name: ""
                          }
                        }
                        vars {
                        }
                        vars {
                          name {
                            name: "="
                            num: 0
                          }
                        }
                      }
                      explist {
                        expressions {
                        }
                        expressions {
                          false: 0
                        }
                        explast {
                          true: 1
                        }
                      }
                    }
                  }
                  stat {
                    block {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
