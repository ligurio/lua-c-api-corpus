chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: -2
      }
      stopexp {
        number: 0
      }
      stepexp {
        number: 0
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: "\000\000\000\033"
                  num: 0
                }
                startexp {
                  number: -0
                }
                stopexp {
                  number: 0
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 0
                          }
                          startexp {
                            number: 0
                          }
                          stopexp {
                            number: 0
                          }
                          stepexp {
                            binary {
                              leftexp {
                                number: 0
                              }
                              binop {
                                concat: 0
                              }
                              rightexp {
                                number: 0
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  forcyclename {
                                    name {
                                      name: ""
                                      num: 0
                                    }
                                    startexp {
                                      number: 0
                                    }
                                    stopexp {
                                      number: -0
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                          stat {
                                            forcyclename {
                                              name {
                                                name: ""
                                                num: 0
                                              }
                                              startexp {
                                                number: 0
                                              }
                                              stopexp {
                                                number: 0
                                              }
                                              stepexp {
                                                binary {
                                                  leftexp {
                                                    number: 0
                                                  }
                                                  binop {
                                                    concat: 0
                                                  }
                                                  rightexp {
                                                    number: 0
                                                  }
                                                }
                                              }
                                              doblock {
                                                block {
                                                  chunk {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
