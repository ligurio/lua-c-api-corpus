chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            true: 538976288
                          }
                          value {
                          }
                        }
                      }
                      fields {
                        field {
                          expression {
                            nil: 55552
                          }
                        }
                        sep {
                          semicolon: 268435456
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              true: 538976288
                            }
                            value {
                            }
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                      }
                      stat {
                        repeatcycle {
                          block {
                            chunk {
                              stat {
                              }
                            }
                          }
                          condition {
                            unary {
                              unop {
                                negate: 0
                              }
                              exp {
                                prefixexp {
                                  exp {
                                    binary {
                                      leftexp {
                                        number: -8.3711609936427134e+298
                                      }
                                      binop {
                                        concat: 0
                                      }
                                      rightexp {
                                        unary {
                                          unop {
                                            negate: 0
                                          }
                                          exp {
                                            prefixexp {
                                              exp {
                                                binary {
                                                  leftexp {
                                                    number: -8.3711609936427134e+298
                                                  }
                                                  binop {
                                                    concat: 0
                                                  }
                                                  rightexp {
                                                    unary {
                                                      unop {
                                                        negate: 0
                                                      }
                                                      exp {
                                                        prefixexp {
                                                          exp {
                                                            binary {
                                                              leftexp {
                                                                number: -8.3711609936427134e+298
                                                              }
                                                              binop {
                                                                concat: 0
                                                              }
                                                              rightexp {
                                                                unary {
                                                                  unop {
                                                                  }
                                                                  exp {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        whilecycle {
                          condition {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  exprassign {
                                    key {
                                      true: 538976288
                                    }
                                    value {
                                    }
                                  }
                                }
                                fields {
                                  field {
                                    expression {
                                      binary {
                                        leftexp {
                                        }
                                        binop {
                                        }
                                        rightexp {
                                        }
                                      }
                                    }
                                  }
                                  sep {
                                    semicolon: 268435456
                                  }
                                }
                                fields {
                                  field {
                                    exprassign {
                                      key {
                                      }
                                      value {
                                        binary {
                                          leftexp {
                                          }
                                          binop {
                                            and: 538968064
                                          }
                                          rightexp {
                                          }
                                        }
                                      }
                                    }
                                  }
                                  sep {
                                  }
                                }
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                }
                                stat {
                                  repeatcycle {
                                    block {
                                      chunk {
                                        stat {
                                        }
                                      }
                                    }
                                    condition {
                                      unary {
                                        unop {
                                          negate: 0
                                        }
                                        exp {
                                          prefixexp {
                                            exp {
                                              binary {
                                                leftexp {
                                                  number: -5.1432413144940831e+303
                                                }
                                                binop {
                                                  concat: 0
                                                }
                                                rightexp {
                                                  unary {
                                                    unop {
                                                      length: 0
                                                    }
                                                    exp {
                                                      prefixexp {
                                                        exp {
                                                          binary {
                                                            leftexp {
                                                              number: -8.3711609936427134e+298
                                                            }
                                                            binop {
                                                              concat: 0
                                                            }
                                                            rightexp {
                                                              unary {
                                                                unop {
                                                                  negate: 0
                                                                }
                                                                exp {
                                                                  prefixexp {
                                                                    exp {
                                                                      binary {
                                                                        leftexp {
                                                                          number: -8.3711609936427134e+298
                                                                        }
                                                                        binop {
                                                                          concat: 0
                                                                        }
                                                                        rightexp {
                                                                          unary {
                                                                            unop {
                                                                              negate: 0
                                                                            }
                                                                            exp {
                                                                              prefixexp {
                                                                                exp {
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                      stat {
                        whilecycle {
                          condition {
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                      stat {
                        whilecycle {
                          condition {
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                }
                                stat {
                                  repeatcycle {
                                    block {
                                      chunk {
                                        stat {
                                          whilecycle {
                                            condition {
                                            }
                                            doblock {
                                              block {
                                                chunk {
                                                  stat {
                                                    semicolon: true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    condition {
                                      unary {
                                        unop {
                                          negate: 0
                                        }
                                        exp {
                                          prefixexp {
                                            exp {
                                              binary {
                                                leftexp {
                                                  number: -8.3711609936427134e+298
                                                }
                                                binop {
                                                  concat: 0
                                                }
                                                rightexp {
                                                  unary {
                                                    unop {
                                                      negate: 0
                                                    }
                                                    exp {
                                                      prefixexp {
                                                        exp {
                                                          binary {
                                                            leftexp {
                                                              number: -8.3711609936427134e+298
                                                            }
                                                            binop {
                                                              concat: 0
                                                            }
                                                            rightexp {
                                                              unary {
                                                                unop {
                                                                  negate: 0
                                                                }
                                                                exp {
                                                                  prefixexp {
                                                                    exp {
                                                                      binary {
                                                                        leftexp {
                                                                          number: -8.3711609936427134e+298
                                                                        }
                                                                        binop {
                                                                          concat: 0
                                                                        }
                                                                        rightexp {
                                                                          unary {
                                                                            unop {
                                                                              length: 538968064
                                                                            }
                                                                            exp {
                                                                              prefixexp {
                                                                                exp {
                                                                                  binary {
                                                                                    leftexp {
                                                                                      number: -8.3711609936427134e+298
                                                                                    }
                                                                                    binop {
                                                                                      concat: 538976288
                                                                                    }
                                                                                    rightexp {
                                                                                      prefixexp {
                                                                                        exp {
                                                                                          binary {
                                                                                            leftexp {
                                                                                              number: -8.3711609936427134e+298
                                                                                            }
                                                                                            binop {
                                                                                              concat: 0
                                                                                            }
                                                                                            rightexp {
                                                                                              unary {
                                                                                                unop {
                                                                                                  negate: 0
                                                                                                }
                                                                                                exp {
                                                                                                  prefixexp {
                                                                                                    exp {
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  semicolon: true
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                  prefixexp {
                    exp {
                      binary {
                        leftexp {
                          prefixexp {
                            exp {
                              prefixexp {
                                exp {
                                  false: 0
                                }
                              }
                            }
                          }
                        }
                        binop {
                          concat: 0
                        }
                        rightexp {
                          unary {
                            unop {
                              negate: 0
                            }
                            exp {
                              prefixexp {
                                exp {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: false
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        ellipsis: "\\000\\000\\000\\000\\000\\000\\000\\006"
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
}
