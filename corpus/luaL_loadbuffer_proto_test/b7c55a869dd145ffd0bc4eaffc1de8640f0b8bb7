chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              call {
              }
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        block {
                          block {
                            chunk {
                              stat {
                                whilecycle {
                                  condition {
                                    binary {
                                      leftexp {
                                        number: 358.08969533209165
                                      }
                                      binop {
                                      }
                                      rightexp {
                                        prefixexp {
                                          exp {
                                            binary {
                                              leftexp {
                                                number: 0
                                              }
                                              binop {
                                                concat: 0
                                              }
                                              rightexp {
                                                binary {
                                                  leftexp {
                                                    prefixexp {
                                                      exp {
                                                        binary {
                                                          leftexp {
                                                            number: 0
                                                          }
                                                          binop {
                                                            and: 0
                                                          }
                                                          rightexp {
                                                            binary {
                                                              leftexp {
                                                                number: 358.08969533209165
                                                              }
                                                              binop {
                                                                exp: 0
                                                              }
                                                              rightexp {
                                                                nil: 25344
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  binop {
                                                    mod: 0
                                                  }
                                                  rightexp {
                                                    prefixexp {
                                                      exp {
                                                        binary {
                                                          leftexp {
                                                            number: 0
                                                          }
                                                          binop {
                                                            sub: 538976288
                                                          }
                                                          rightexp {
                                                            prefixexp {
                                                              functioncall {
                                                                prefArgs {
                                                                  prefixexp {
                                                                  }
                                                                  args {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  doblock {
                                    block {
                                      chunk {
                                      }
                                    }
                                  }
                                }
                              }
                              stat {
                              }
                              stat {
                                semicolon: false
                              }
                            }
                          }
                        }
                      }
                      stat {
                        whilecycle {
                          condition {
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                      stat {
                        list {
                          varlist {
                            var {
                            }
                          }
                          explist {
                            explast {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: "debug.getuservalue"
          num: 0
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        false: 538999552
      }
      doblock {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  ellipsis: ""
                }
              }
              semicolon: true
            }
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  exprassign {
                                    key {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                            expression {
                                              prefixexp {
                                                functioncall {
                                                }
                                              }
                                            }
                                          }
                                          fields {
                                            field {
                                              expression {
                                                prefixexp {
                                                  functioncall {
                                                    prefArgs {
                                                      prefixexp {
                                                      }
                                                      args {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            sep {
                                            }
                                          }
                                          fields {
                                            field {
                                            }
                                            sep {
                                              semicolon: 2097152
                                            }
                                          }
                                          fields {
                                            field {
                                              exprassign {
                                                key {
                                                }
                                                value {
                                                  false: 23808
                                                }
                                              }
                                            }
                                            sep {
                                            }
                                          }
                                        }
                                      }
                                    }
                                    value {
                                    }
                                  }
                                }
                                fields {
                                  field {
                                    expression {
                                      ellipsis: "fma"
                                    }
                                  }
                                  sep {
                                  }
                                }
                              }
                            }
                          }
                          value {
                          }
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                    exprassign {
                                      key {
                                        binary {
                                          leftexp {
                                          }
                                          binop {
                                          }
                                          rightexp {
                                            ellipsis: "module"
                                          }
                                        }
                                      }
                                      value {
                                      }
                                    }
                                  }
                                  fields {
                                    field {
                                      expression {
                                        prefixexp {
                                          functioncall {
                                            prefArgs {
                                              prefixexp {
                                              }
                                              args {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    sep {
                                    }
                                  }
                                  fields {
                                    field {
                                      namedassign {
                                        name {
                                          name: ""
                                          num: 0
                                        }
                                        value {
                                        }
                                      }
                                    }
                                    sep {
                                    }
                                  }
                                }
                              }
                            }
                            value {
                            }
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                    exprassign {
                                      key {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                            }
                                            lastSep {
                                            }
                                          }
                                        }
                                      }
                                      value {
                                      }
                                    }
                                  }
                                  fields {
                                    field {
                                      expression {
                                        prefixexp {
                                          functioncall {
                                          }
                                        }
                                      }
                                    }
                                    sep {
                                      semicolon: 268435456
                                    }
                                  }
                                }
                              }
                            }
                            value {
                              ellipsis: "debug.getuservalue"
                            }
                          }
                        }
                        sep {
                          comma: 268435456
                        }
                      }
                      fields {
                        field {
                          expression {
                            prefixexp {
                              functioncall {
                                prefArgs {
                                  prefixexp {
                                  }
                                  args {
                                  }
                                }
                              }
                            }
                          }
                        }
                        sep {
                          semicolon: 268435456
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
