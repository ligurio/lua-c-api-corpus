chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  unary {
                    unop {
                      negate: 0
                    }
                    exp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                              prefixexp {
                                exp {
                                  binary {
                                    leftexp {
                                      number: -8.3711609936427134e+298
                                    }
                                    binop {
                                      concat: 0
                                    }
                                    rightexp {
                                      unary {
                                        unop {
                                          negate: 69214208
                                        }
                                        exp {
                                          number: -8.62254107230923e+298
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                              concat: 0
                            }
                            rightexp {
                              unary {
                                unop {
                                  negate: 0
                                }
                                exp {
                                  binary {
                                    leftexp {
                                      number: -8.62254107230923e+298
                                    }
                                    binop {
                                      concat: 0
                                    }
                                    rightexp {
                                      unary {
                                        unop {
                                          negate: 0
                                        }
                                        exp {
                                          prefixexp {
                                            exp {
                                              binary {
                                                leftexp {
                                                  number: -8.62254107230923e+298
                                                }
                                                binop {
                                                  concat: 0
                                                }
                                                rightexp {
                                                  unary {
                                                    unop {
                                                      negate: 0
                                                    }
                                                    exp {
                                                      number: -8.62254107230923e+298
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  unary {
                    unop {
                      negate: 0
                    }
                    exp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                              prefixexp {
                                exp {
                                  binary {
                                    leftexp {
                                      number: -8.3711609936427134e+298
                                    }
                                    binop {
                                      concat: 0
                                    }
                                    rightexp {
                                      unary {
                                        unop {
                                          negate: 0
                                        }
                                        exp {
                                          prefixexp {
                                            exp {
                                              number: -8.62254107230923e+298
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                              concat: 0
                            }
                            rightexp {
                              unary {
                                unop {
                                  negate: 0
                                }
                                exp {
                                  binary {
                                    leftexp {
                                      number: -8.62254107230923e+298
                                    }
                                    binop {
                                      concat: 0
                                    }
                                    rightexp {
                                      unary {
                                        unop {
                                          negate: 0
                                        }
                                        exp {
                                          prefixexp {
                                            exp {
                                              binary {
                                                leftexp {
                                                  number: -8.62254107230923e+298
                                                }
                                                binop {
                                                  concat: 0
                                                }
                                                rightexp {
                                                  unary {
                                                    unop {
                                                      negate: 0
                                                    }
                                                    exp {
                                                      number: -8.62254107230923e+298
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
