chunk {
  stat {
    list {
      varlist {
        var {
        }
        vars {
        }
        vars {
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: "n"
          }
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              binary {
                leftexp {
                }
                binop {
                }
                rightexp {
                }
              }
            }
          }
        }
        vars {
        }
        vars {
          indexexpr {
            prefixexp {
              functioncall {
                namedArgs {
                  prefixexp {
                    var {
                      indexname {
                        prefixexp {
                        }
                        Name: "n"
                      }
                    }
                  }
                  name {
                    name: ""
                    num: 0
                  }
                  args {
                  }
                }
              }
            }
            exp {
            }
          }
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
          name {
            name: "|"
            num: 8388608
          }
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
          name {
            name: "|"
            num: 0
          }
        }
        vars {
        }
        vars {
          name {
            name: ""
            num: 5
          }
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: "n"
          }
        }
        vars {
        }
        vars {
          name {
            name: "\001\000\000\000"
            num: 0
          }
        }
      }
      explist {
        expressions {
          function {
            body {
              parlist {
                ellipsis: "\001\000\000\000\000\000\000\000"
              }
              block {
                chunk {
                  stat {
                    semicolon: true
                  }
                  stat {
                    forcyclename {
                      name {
                        name: ""
                        num: 0
                      }
                      startexp {
                        true: 1752457581
                      }
                      stopexp {
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                }
                value {
                }
              }
            }
            fields {
              field {
                expression {
                  number: 0
                }
              }
              sep {
              }
            }
            lastSep {
              semicolon: 1660944384
            }
          }
        }
      }
      first {
        chunk {
        }
      }
    }
    semicolon: true
  }
}
