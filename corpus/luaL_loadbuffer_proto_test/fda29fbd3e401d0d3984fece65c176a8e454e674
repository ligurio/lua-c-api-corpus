chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: "log"
          }
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              nil: 0
            }
          }
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
          }
        }
        vars {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              nil: 134217728
            }
          }
        }
      }
      explist {
        explast {
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      stepexp {
        binary {
          leftexp {
          }
          binop {
            mod: 2147483648
          }
          rightexp {
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              explist {
                explist {
                  explast {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                }
                                lastSep {
                                  semicolon: 0
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              prefixexp {
                exp {
                  function {
                    body {
                      block {
                        chunk {
                          stat {
                            localfunc {
                              name {
                                name: "\030"
                                num: 0
                              }
                              funcbody {
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      explist {
        explast {
          tableconstructor {
            fieldlist {
              firstField {
                expression {
                  binary {
                    leftexp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  number: 0
                                }
                                binop {
                                  add: 0
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      binary {
                                        leftexp {
                                          number: 1.3336028865759709e+241
                                        }
                                        binop {
                                          sub: 5888
                                        }
                                        rightexp {
                                          number: -2.9740338169555661e+284
                                        }
                                      }
                                    }
                                    binop {
                                      mult: 0
                                    }
                                    rightexp {
                                      number: -2.9740338169555661e+284
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                              concat: 0
                            }
                            rightexp {
                              str: "0.3E2"
                            }
                          }
                        }
                      }
                    }
                    binop {
                      sub: 2
                    }
                    rightexp {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              nil: 0
            }
          }
        }
        vars {
        }
        vars {
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
          }
        }
        vars {
          name {
            name: "\000\000\377\331"
            num: 0
          }
        }
        vars {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              nil: 0
            }
          }
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
            }
          }
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              unary {
                unop {
                  length: 0
                }
                exp {
                  binary {
                    leftexp {
                    }
                    binop {
                    }
                    rightexp {
                    }
                  }
                }
              }
            }
          }
        }
        vars {
        }
        vars {
        }
        vars {
          indexname {
            prefixexp {
              exp {
                ellipsis: "("
              }
            }
            Name: "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
          }
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              binary {
                leftexp {
                  number: 118.78498777467757
                }
                binop {
                }
                rightexp {
                  binary {
                    leftexp {
                    }
                    binop {
                      exp: 0
                    }
                    rightexp {
                    }
                  }
                }
              }
            }
          }
        }
        vars {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              nil: 134217728
            }
          }
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
          }
        }
        vars {
        }
        vars {
          indexexpr {
            prefixexp {
              exp {
                ellipsis: " "
              }
            }
            exp {
              unary {
                unop {
                }
                exp {
                  function {
                    body {
                      block {
                        chunk {
                          stat {
                            semicolon: true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      explist {
        explast {
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: "U"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "U"
          num: 0
        }
        lastname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
}
