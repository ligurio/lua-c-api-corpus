chunk {
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          nil: 0
        }
        explast {
          tableconstructor {
            fieldlist {
              firstField {
                expression {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          binary {
                            leftexp {
                              number: -2.00390625
                            }
                            binop {
                              concat: 0
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  unary {
                                    unop {
                                      negate: 32768
                                    }
                                    exp {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                            expression {
                                              binary {
                                                leftexp {
                                                  nil: 32768
                                                }
                                                binop {
                                                }
                                                rightexp {
                                                  binary {
                                                    leftexp {
                                                    }
                                                    binop {
                                                      greaterEqual: 32768
                                                    }
                                                    rightexp {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          fields {
                                            field {
                                              expression {
                                                binary {
                                                  leftexp {
                                                    number: 1.6640625
                                                  }
                                                  binop {
                                                    concat: 0
                                                  }
                                                  rightexp {
                                                    binary {
                                                      leftexp {
                                                        unary {
                                                          unop {
                                                          }
                                                          exp {
                                                            tableconstructor {
                                                              fieldlist {
                                                                firstField {
                                                                  expression {
                                                                    tableconstructor {
                                                                      fieldlist {
                                                                        firstField {
                                                                          expression {
                                                                            binary {
                                                                              leftexp {
                                                                                number: 0
                                                                              }
                                                                              binop {
                                                                                concat: 0
                                                                              }
                                                                              rightexp {
                                                                                binary {
                                                                                  leftexp {
                                                                                    unary {
                                                                                      unop {
                                                                                        length: 0
                                                                                      }
                                                                                      exp {
                                                                                        tableconstructor {
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                  binop {
                                                                                    lessEqual: 0
                                                                                  }
                                                                                  rightexp {
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                        fields {
                                                                          field {
                                                                            expression {
                                                                              binary {
                                                                                leftexp {
                                                                                  number: 0
                                                                                }
                                                                                binop {
                                                                                  lessEqual: 32768
                                                                                }
                                                                                rightexp {
                                                                                  binary {
                                                                                    leftexp {
                                                                                      number: 0
                                                                                    }
                                                                                    binop {
                                                                                      lessEqual: 32768
                                                                                    }
                                                                                    rightexp {
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                          sep {
                                                                            semicolon: 0
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      binop {
                                                        greater: 0
                                                      }
                                                      rightexp {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            sep {
                                              comma: 1886679808
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  lessEqual: 0
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        field {
                          expression {
                            binary {
                              leftexp {
                                number: 0
                              }
                              binop {
                                concat: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    unary {
                                      unop {
                                      }
                                      exp {
                                        prefixexp {
                                          functioncall {
                                          }
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                    lessEqual: 7
                                  }
                                  rightexp {
                                    function {
                                      body {
                                        parlist {
                                          namelist {
                                            namelist {
                                              firstname {
                                                name: ""
                                                num: 0
                                              }
                                            }
                                            ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                          }
                                        }
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        sep {
                          semicolon: 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclename {
      name {
        name: "\343\376\377\377"
        num: 4
      }
      startexp {
      }
      stopexp {
      }
      stepexp {
        number: 1.6640625
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: "\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263"
                  num: 0
                }
                startexp {
                }
                stopexp {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: "\343\376\377\377"
        num: 0
      }
      startexp {
      }
      stopexp {
        function {
          body {
            parlist {
              namelist {
                namelist {
                  firstname {
                    name: ""
                    num: 0
                  }
                  names {
                    name: ""
                    num: 0
                  }
                }
              }
            }
            block {
              chunk {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            laststat {
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: -2.1049785614013672
      }
      stopexp {
        prefixexp {
        }
      }
      stepexp {
        binary {
          leftexp {
            unary {
              unop {
                negate: 32768
              }
              exp {
                tableconstructor {
                  fieldlist {
                    firstField {
                      expression {
                        binary {
                          leftexp {
                            nil: 32768
                          }
                          binop {
                          }
                          rightexp {
                            binary {
                              leftexp {
                              }
                              binop {
                                greaterEqual: 32768
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                      }
                    }
                    fields {
                      field {
                        expression {
                          binary {
                            leftexp {
                              number: 1.6640625
                            }
                            binop {
                              concat: 0
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  unary {
                                    unop {
                                    }
                                    exp {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                            expression {
                                              tableconstructor {
                                                fieldlist {
                                                  firstField {
                                                    expression {
                                                      binary {
                                                        leftexp {
                                                          number: 0
                                                        }
                                                        binop {
                                                          concat: 0
                                                        }
                                                        rightexp {
                                                          binary {
                                                            leftexp {
                                                              unary {
                                                                unop {
                                                                  length: 0
                                                                }
                                                                exp {
                                                                  tableconstructor {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                            binop {
                                                              lessEqual: 0
                                                            }
                                                            rightexp {
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  fields {
                                                    field {
                                                      expression {
                                                        binary {
                                                          leftexp {
                                                            number: 0
                                                          }
                                                          binop {
                                                            lessEqual: 32768
                                                          }
                                                          rightexp {
                                                            binary {
                                                              leftexp {
                                                                number: 0
                                                              }
                                                              binop {
                                                                lessEqual: 32768
                                                              }
                                                              rightexp {
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    sep {
                                                      semicolon: 0
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  greater: 0
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                      }
                      sep {
                        comma: 1886679808
                      }
                    }
                  }
                }
              }
            }
          }
          binop {
            lessEqual: 32
          }
          rightexp {
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
