chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              namedassign {
                name {
                  name: ""
                  num: 7995392
                }
                value {
                }
              }
            }
            fields {
              field {
                expression {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              number: -0
                            }
                            binop {
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      number: -0
                                    }
                                    binop {
                                    }
                                    rightexp {
                                      number: -0
                                    }
                                  }
                                }
                                binop {
                                }
                                rightexp {
                                  number: -0
                                }
                              }
                            }
                          }
                        }
                        binop {
                        }
                        rightexp {
                          number: -0
                        }
                      }
                    }
                    binop {
                    }
                    rightexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      number: -0
                                    }
                                    binop {
                                    }
                                    rightexp {
                                      number: -0
                                    }
                                  }
                                }
                                binop {
                                }
                                rightexp {
                                  number: -0
                                }
                              }
                            }
                            binop {
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      number: -0
                                    }
                                    binop {
                                    }
                                    rightexp {
                                      number: -0
                                    }
                                  }
                                }
                                binop {
                                }
                                rightexp {
                                  number: -0
                                }
                              }
                            }
                          }
                        }
                        binop {
                        }
                        rightexp {
                          false: 0
                        }
                      }
                    }
                  }
                }
              }
              sep {
                semicolon: 0
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              expression {
                ellipsis: "loopunroll"
              }
            }
            fields {
              field {
                expression {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              number: -0
                            }
                            binop {
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      number: -0
                                    }
                                    binop {
                                    }
                                    rightexp {
                                      number: -0
                                    }
                                  }
                                }
                                binop {
                                }
                                rightexp {
                                  number: -0
                                }
                              }
                            }
                          }
                        }
                        binop {
                        }
                        rightexp {
                          number: -0
                        }
                      }
                    }
                    binop {
                    }
                    rightexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      number: -0
                                    }
                                    binop {
                                    }
                                    rightexp {
                                      number: -0
                                    }
                                  }
                                }
                                binop {
                                }
                                rightexp {
                                  number: -0
                                }
                              }
                            }
                            binop {
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      number: -0
                                    }
                                    binop {
                                    }
                                    rightexp {
                                      false: 0
                                    }
                                  }
                                }
                                binop {
                                }
                                rightexp {
                                  number: -0
                                }
                              }
                            }
                          }
                        }
                        binop {
                        }
                        rightexp {
                          false: 0
                        }
                      }
                    }
                  }
                }
              }
              sep {
                semicolon: 0
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
