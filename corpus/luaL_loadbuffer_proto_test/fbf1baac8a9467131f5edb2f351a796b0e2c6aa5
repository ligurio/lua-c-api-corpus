chunk {
  stat {
    semicolon: true
  }
  stat {
    call {
    }
    semicolon: false
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              expression {
                tableconstructor {
                  fieldlist {
                    firstField {
                      expression {
                        binary {
                          leftexp {
                            number: 0
                          }
                          binop {
                            concat: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                                unary {
                                  unop {
                                    length: 0
                                  }
                                  exp {
                                    tableconstructor {
                                      fieldlist {
                                        firstField {
                                          expression {
                                            binary {
                                              leftexp {
                                                number: 0
                                              }
                                              binop {
                                                concat: 0
                                              }
                                              rightexp {
                                                binary {
                                                  leftexp {
                                                  }
                                                  binop {
                                                    lessEqual: 0
                                                  }
                                                  rightexp {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        fields {
                                          field {
                                            expression {
                                              binary {
                                                leftexp {
                                                  number: 0
                                                }
                                                binop {
                                                  lessEqual: 0
                                                }
                                                rightexp {
                                                  binary {
                                                    leftexp {
                                                      unary {
                                                        unop {
                                                          length: 0
                                                        }
                                                        exp {
                                                          tableconstructor {
                                                            fieldlist {
                                                              firstField {
                                                                expression {
                                                                  tableconstructor {
                                                                    fieldlist {
                                                                      firstField {
                                                                        expression {
                                                                          binary {
                                                                            leftexp {
                                                                              number: 0
                                                                            }
                                                                            binop {
                                                                              concat: 0
                                                                            }
                                                                            rightexp {
                                                                              binary {
                                                                                leftexp {
                                                                                  unary {
                                                                                    unop {
                                                                                      length: 0
                                                                                    }
                                                                                    exp {
                                                                                      tableconstructor {
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                                binop {
                                                                                  lessEqual: 0
                                                                                }
                                                                                rightexp {
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                      fields {
                                                                        field {
                                                                          expression {
                                                                            binary {
                                                                              leftexp {
                                                                                number: 0
                                                                              }
                                                                              binop {
                                                                                concat: 0
                                                                              }
                                                                              rightexp {
                                                                                binary {
                                                                                  leftexp {
                                                                                  }
                                                                                  binop {
                                                                                    lessEqual: 0
                                                                                  }
                                                                                  rightexp {
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                        sep {
                                                                          semicolon: 0
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    binop {
                                                      greater: 0
                                                    }
                                                    rightexp {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          sep {
                                            comma: 1886679808
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                lessEqual: 0
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                      }
                    }
                    fields {
                      field {
                        expression {
                          binary {
                            leftexp {
                              unary {
                                unop {
                                  length: 0
                                }
                                exp {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        expression {
                                          tableconstructor {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                              greater: 0
                            }
                            rightexp {
                            }
                          }
                        }
                      }
                      sep {
                        semicolon: 0
                      }
                    }
                  }
                }
              }
            }
            fields {
              field {
                expression {
                  true: 4
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              explist {
                explist {
                  explast {
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
}
