chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        unary {
          unop {
            length: 4
          }
          exp {
            tableconstructor {
            }
          }
        }
      }
      stopexp {
        number: 0
      }
      stepexp {
        unary {
          unop {
            length: 4
          }
          exp {
            tableconstructor {
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              ifstat {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              prefixexp {
                              }
                            }
                            value {
                            }
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          expression {
                            prefixexp {
                            }
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
                first {
                  chunk {
                  }
                }
                last {
                  chunk {
                    stat {
                      whilecycle {
                        condition {
                          function {
                            body {
                              parlist {
                                namelist {
                                  namelist {
                                    firstname {
                                      name: ""
                                      num: 0
                                    }
                                    names {
                                      name: "\265"
                                      num: 0
                                    }
                                  }
                                }
                              }
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        doblock {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          number: 0
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              prefixexp {
                              }
                            }
                            value {
                            }
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          expression {
                            false: 0
                          }
                        }
                        sep {
                          comma: 4
                        }
                      }
                    }
                  }
                }
                first {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
