chunk {
  stat {
    ifstat {
      condition {
        unary {
          unop {
            negate: 0
          }
          exp {
          }
        }
      }
      first {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: ""
                  num: 0
                }
                names {
                  name: ""
                  num: 0
                }
              }
              explist {
                expressions {
                  nil: 101
                }
                explast {
                }
              }
            }
          }
          stat {
            forcyclelist {
              names {
                firstname {
                  name: ""
                  num: 4
                }
              }
              expressions {
                expressions {
                  prefixexp {
                    exp {
                      str: "\000\000\000\000\000\000\000\000"
                    }
                  }
                }
                expressions {
                  unary {
                    unop {
                    }
                    exp {
                    }
                  }
                }
                explast {
                  ellipsis: ""
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
            semicolon: true
          }
          laststat {
            break: 2097152
            semicolon: true
          }
        }
      }
      clauses {
        condition {
          true: 16187392
        }
        block {
          chunk {
          }
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
            stat {
              localnames {
                namelist {
                  firstname {
                    name: ""
                    num: 272633856
                  }
                }
                explist {
                  expressions {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                            var {
                              name {
                                name: ""
                                num: 0
                              }
                            }
                          }
                          args {
                            str: "pairs"
                          }
                        }
                      }
                    }
                  }
                  expressions {
                  }
                  explast {
                    ellipsis: ""
                  }
                }
              }
              semicolon: true
            }
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 4
                  }
                }
                expressions {
                  expressions {
                    prefixexp {
                      functioncall {
                      }
                    }
                  }
                  expressions {
                    binary {
                      leftexp {
                      }
                      binop {
                      }
                      rightexp {
                        prefixexp {
                          var {
                            indexname {
                              prefixexp {
                                functioncall {
                                  namedArgs {
                                    prefixexp {
                                    }
                                    name {
                                      name: ""
                                      num: 0
                                    }
                                    args {
                                      str: "Y"
                                    }
                                  }
                                }
                              }
                              Name: ""
                            }
                          }
                        }
                      }
                    }
                  }
                  expressions {
                    binary {
                      leftexp {
                        number: -0
                      }
                      binop {
                        add: 0
                      }
                      rightexp {
                        nil: 1
                      }
                    }
                  }
                  explast {
                    ellipsis: ""
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
          }
        }
      }
      clauses {
        condition {
          binary {
            leftexp {
              number: -0
            }
            binop {
              greater: 0
            }
            rightexp {
            }
          }
        }
        block {
          chunk {
          }
        }
      }
      last {
        chunk {
          laststat {
            semicolon: false
          }
        }
      }
    }
  }
}
