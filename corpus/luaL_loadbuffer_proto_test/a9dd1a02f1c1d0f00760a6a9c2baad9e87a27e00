chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
        binary {
          leftexp {
            binary {
              leftexp {
                function {
                  body {
                    parlist {
                      namelist {
                        namelist {
                          firstname {
                            name: ""
                            num: 0
                          }
                          names {
                            name: "\'"
                            num: 0
                          }
                        }
                      }
                    }
                    block {
                      chunk {
                      }
                    }
                  }
                }
              }
              binop {
                div: 0
              }
              rightexp {
                number: -4.9591064453125e-05
              }
            }
          }
          binop {
            div: 0
          }
          rightexp {
            number: -4.9591064453125e-05
          }
        }
      }
      stepexp {
        prefixexp {
          exp {
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                  str: ""
                }
                stopexp {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                            }
                            vars {
                            }
                          }
                          explist {
                            explast {
                              false: 536870912
                            }
                          }
                        }
                        semicolon: true
                      }
                      stat {
                      }
                      laststat {
                        explist {
                          explist {
                            expressions {
                              prefixexp {
                                functioncall {
                                  namedArgs {
                                    prefixexp {
                                    }
                                    name {
                                      name: "\200"
                                      num: 64000
                                    }
                                    args {
                                      explist {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            explast {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
        tableconstructor {
          fieldlist {
            firstField {
              expression {
                prefixexp {
                  exp {
                    binary {
                      leftexp {
                        nil: 134217728
                      }
                      binop {
                        add: 536871135
                      }
                      rightexp {
                        prefixexp {
                          exp {
                            binary {
                              leftexp {
                                nil: 134217728
                              }
                              binop {
                                and: 4294901759
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        binary {
                                          leftexp {
                                            tableconstructor {
                                            }
                                          }
                                          binop {
                                            and: 4294901759
                                          }
                                          rightexp {
                                            ellipsis: "\\001\\000\\000\\000"
                                          }
                                        }
                                      }
                                      binop {
                                        and: 262144
                                      }
                                      rightexp {
                                        str: "io.stdin"
                                      }
                                    }
                                  }
                                  binop {
                                    and: 4294901759
                                  }
                                  rightexp {
                                    ellipsis: "LUA_INIT_5_3"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
      body {
        parlist {
          ellipsis: "maxside"
        }
        block {
          chunk {
          }
        }
      }
    }
    semicolon: false
  }
  stat {
  }
}
