chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
              }
              binop {
                concat: 0
              }
              rightexp {
                number: -2.5
              }
            }
          }
          binop {
            div: 0
          }
          rightexp {
            binary {
              leftexp {
                number: -4.9591064453125e-05
              }
              binop {
                div: 4
              }
              rightexp {
                binary {
                  leftexp {
                    number: -4.9591064453125e-05
                  }
                  binop {
                    div: 4
                  }
                  rightexp {
                    number: -4.9591064453125e-05
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        prefixexp {
          functioncall {
            namedArgs {
              prefixexp {
              }
              name {
                name: ""
                num: 0
              }
              args {
                explist {
                  explist {
                    expressions {
                      binary {
                        leftexp {
                          str: "\000\000\377\377"
                        }
                        binop {
                        }
                        rightexp {
                        }
                      }
                    }
                    explast {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
