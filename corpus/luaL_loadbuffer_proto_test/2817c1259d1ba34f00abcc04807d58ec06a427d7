chunk {
  stat {
    ifstat {
      condition {
        unary {
          unop {
            negate: 0
          }
          exp {
            ellipsis: "\\001?"
          }
        }
      }
      first {
        chunk {
          stat {
            ifstat {
              condition {
                unary {
                  unop {
                    negate: 0
                  }
                  exp {
                    ellipsis: "\\001?"
                  }
                }
              }
              first {
                chunk {
                  stat {
                  }
                  stat {
                    localnames {
                      namelist {
                        firstname {
                          name: "pairs"
                          num: 4096
                        }
                      }
                      explist {
                        expressions {
                          binary {
                            leftexp {
                              number: -6.953355807835e-310
                            }
                            binop {
                              greaterEqual: 0
                            }
                            rightexp {
                            }
                          }
                        }
                        expressions {
                          nil: 0
                        }
                        explast {
                          unary {
                            unop {
                              negate: 0
                            }
                            exp {
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    forcyclelist {
                      names {
                        firstname {
                          name: ""
                          num: 4
                        }
                      }
                      expressions {
                        expressions {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                  var {
                                    name {
                                      name: ""
                                      num: 0
                                    }
                                  }
                                }
                                args {
                                  str: "pairs"
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          binary {
                            leftexp {
                              number: -0
                            }
                            binop {
                              greaterEqual: 0
                            }
                            rightexp {
                            }
                          }
                        }
                        explast {
                          ellipsis: ""
                        }
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
              }
              clauses {
                condition {
                  binary {
                    leftexp {
                      number: -0
                    }
                    binop {
                      greaterEqual: 0
                    }
                    rightexp {
                    }
                  }
                }
                block {
                  chunk {
                  }
                }
              }
              clauses {
                condition {
                }
                block {
                  chunk {
                    stat {
                      localnames {
                        namelist {
                          firstname {
                            name: ""
                            num: 4096
                          }
                        }
                        explist {
                          expressions {
                            binary {
                              leftexp {
                              }
                              binop {
                                add: 0
                              }
                              rightexp {
                                nil: 1
                              }
                            }
                          }
                          explast {
                            str: "pairs"
                          }
                        }
                      }
                      semicolon: true
                    }
                    stat {
                      forcyclelist {
                        names {
                          firstname {
                            name: ""
                            num: 4
                          }
                        }
                        expressions {
                          expressions {
                            prefixexp {
                              functioncall {
                              }
                            }
                          }
                          expressions {
                            binary {
                              leftexp {
                              }
                              binop {
                                add: 0
                              }
                              rightexp {
                                nil: 1
                              }
                            }
                          }
                          explast {
                            ellipsis: ""
                          }
                        }
                        doblock {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              last {
                chunk {
                  laststat {
                    semicolon: false
                  }
                }
              }
            }
          }
          stat {
            localnames {
              namelist {
                firstname {
                  name: "pairs"
                  num: 4096
                }
              }
              explist {
                expressions {
                  binary {
                    leftexp {
                      number: -6.953355807835e-310
                    }
                    binop {
                      greaterEqual: 0
                    }
                    rightexp {
                    }
                  }
                }
                expressions {
                  nil: 0
                }
                explast {
                  unary {
                    unop {
                      negate: 0
                    }
                    exp {
                    }
                  }
                }
              }
            }
          }
          stat {
            forcyclelist {
              names {
                firstname {
                  name: ""
                  num: 4
                }
              }
              expressions {
                expressions {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          var {
                            name {
                              name: ""
                              num: 0
                            }
                          }
                        }
                        args {
                          str: "pairs"
                        }
                      }
                    }
                  }
                }
                expressions {
                  binary {
                    leftexp {
                      number: -0
                    }
                    binop {
                      greaterEqual: 0
                    }
                    rightexp {
                    }
                  }
                }
                explast {
                  ellipsis: ""
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      clauses {
        condition {
          binary {
            leftexp {
              number: -0
            }
            binop {
              greaterEqual: 0
            }
            rightexp {
            }
          }
        }
        block {
          chunk {
          }
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
            stat {
              localnames {
                namelist {
                  firstname {
                    name: ""
                    num: 4096
                  }
                }
                explist {
                  expressions {
                    binary {
                      leftexp {
                      }
                      binop {
                        add: 0
                      }
                      rightexp {
                        nil: 1
                      }
                    }
                  }
                  explast {
                    str: "pairs"
                  }
                }
              }
              semicolon: true
            }
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 4
                  }
                }
                expressions {
                  expressions {
                    prefixexp {
                      functioncall {
                      }
                    }
                  }
                  expressions {
                    binary {
                      leftexp {
                      }
                      binop {
                        add: 0
                      }
                      rightexp {
                        nil: 1
                      }
                    }
                  }
                  explast {
                    ellipsis: ""
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
      last {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
    }
  }
}
