chunk {
  stat {
    ifstat {
      condition {
        false: 0
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                }
                stopexp {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        localfunc {
                          name {
                            name: ""
                            num: 0
                          }
                          funcbody {
                            block {
                              chunk {
                                stat {
                                  semicolon: true
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
            false: 0
          }
          binop {
            or: 0
          }
          rightexp {
          }
        }
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
          binary {
            leftexp {
              false: 0
            }
            binop {
              or: 0
            }
            rightexp {
              false: 0
            }
          }
        }
        block {
          chunk {
          }
        }
      }
    }
  }
}
