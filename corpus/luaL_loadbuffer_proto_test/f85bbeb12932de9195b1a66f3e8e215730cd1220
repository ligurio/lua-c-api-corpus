chunk {
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          nil: 0
        }
        explast {
          tableconstructor {
            fieldlist {
              firstField {
                expression {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          binary {
                            leftexp {
                              unary {
                                unop {
                                  length: 0
                                }
                                exp {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        expression {
                                          binary {
                                            leftexp {
                                              number: 0
                                            }
                                            binop {
                                              concat: 0
                                            }
                                            rightexp {
                                              binary {
                                                leftexp {
                                                  true: 0
                                                }
                                                binop {
                                                  lessEqual: 0
                                                }
                                                rightexp {
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      fields {
                                        field {
                                          expression {
                                            false: 0
                                          }
                                        }
                                        sep {
                                        }
                                      }
                                      fields {
                                        field {
                                          expression {
                                            prefixexp {
                                            }
                                          }
                                        }
                                        sep {
                                          comma: 1886679808
                                        }
                                      }
                                      lastSep {
                                        comma: 0
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                              lessEqual: 0
                            }
                            rightexp {
                            }
                          }
                        }
                      }
                      fields {
                        field {
                          expression {
                            prefixexp {
                            }
                          }
                        }
                        sep {
                          comma: 1886679808
                        }
                      }
                      fields {
                        field {
                          expression {
                            binary {
                              leftexp {
                                number: 0
                              }
                              binop {
                                concat: 2
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    unary {
                                      unop {
                                        length: 0
                                      }
                                      exp {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                    lessEqual: 0
                                  }
                                  rightexp {
                                    function {
                                      body {
                                        parlist {
                                          namelist {
                                            namelist {
                                              firstname {
                                                name: ""
                                                num: 0
                                              }
                                            }
                                            ellipsis: "\305"
                                          }
                                        }
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        sep {
                          semicolon: 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        nil: 1886679808
      }
      stopexp {
      }
      stepexp {
        number: 1.6640625
      }
      doblock {
        block {
          chunk {
            stat {
              ifstat {
                condition {
                  prefixexp {
                  }
                }
                first {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: "\343\376\377\377"
        num: 0
      }
      startexp {
      }
      stopexp {
        prefixexp {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: "and"
        num: 0
      }
      startexp {
        number: -1.5
      }
      stopexp {
        prefixexp {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
