chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: 0
      }
      stopexp {
        number: 3.6893488147419103e+19
      }
      doblock {
        block {
          chunk {
            stat {
              ifstat {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        namedassign {
                          name {
                            name: ""
                            num: 0
                          }
                          value {
                            binary {
                              leftexp {
                              }
                              binop {
                              }
                              rightexp {
                                nil: 196352
                              }
                            }
                          }
                        }
                      }
                      fields {
                        field {
                          expression {
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          expression {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    prefixexp {
                                    }
                                  }
                                  binop {
                                    or: 60416
                                  }
                                  rightexp {
                                  }
                                }
                              }
                              binop {
                                concat: 3840
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                        sep {
                          comma: 0
                        }
                      }
                    }
                  }
                }
                first {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
