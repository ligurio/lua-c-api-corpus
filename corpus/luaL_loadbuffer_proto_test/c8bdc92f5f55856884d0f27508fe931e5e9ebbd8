chunk {
  stat {
    whilecycle {
      condition {
        prefixexp {
          exp {
            binary {
              leftexp {
                false: 0
              }
              binop {
                concat: 0
              }
              rightexp {
                unary {
                  unop {
                    negate: 0
                  }
                  exp {
                    prefixexp {
                      exp {
                        binary {
                          leftexp {
                            number: -8.37116099365794e+298
                          }
                          binop {
                            concat: 0
                          }
                          rightexp {
                            str: "l"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  unary {
                    unop {
                      negate: 0
                    }
                    exp {
                      unary {
                        unop {
                          negate: 0
                        }
                        exp {
                          prefixexp {
                            exp {
                              binary {
                                leftexp {
                                  number: -8.37116099365794e+298
                                }
                                binop {
                                  concat: 0
                                }
                                rightexp {
                                  str: "l"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
