chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 4
      }
      startexp {
        tableconstructor {
          fieldlist {
            firstField {
              expression {
                number: 7.2294757342930368e+221
              }
            }
            fields {
              field {
                expression {
                  binary {
                    leftexp {
                      number: -1.3749999962747097
                    }
                    binop {
                      div: 536870912
                    }
                    rightexp {
                      binary {
                        leftexp {
                          number: -4.9591064453125e-05
                        }
                        binop {
                        }
                        rightexp {
                          binary {
                            leftexp {
                              number: -1.3749999962747097
                            }
                            binop {
                              concat: 4
                            }
                            rightexp {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                }
              }
              sep {
              }
            }
            lastSep {
              comma: 0
            }
          }
        }
      }
      stopexp {
      }
      stepexp {
        number: 163.44938772799651
      }
      doblock {
        block {
          chunk {
            laststat {
              break: 4
            }
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        prefixexp {
        }
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        str: ""
      }
      first {
        chunk {
          stat {
            whilecycle {
              condition {
                binary {
                  leftexp {
                    str: "\322"
                  }
                  binop {
                    div: 0
                  }
                  rightexp {
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                }
              }
            }
          }
          laststat {
            explist {
            }
          }
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
}
