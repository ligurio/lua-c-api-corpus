chunk {
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
                expression {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                          number: 2.6376895936514939e+207
                        }
                        binop {
                          add: 0
                        }
                        rightexp {
                          binary {
                            leftexp {
                              false: 754974720
                            }
                            binop {
                              or: 0
                            }
                            rightexp {
                              tableconstructor {
                              }
                            }
                          }
                        }
                      }
                    }
                    binop {
                      and: 0
                    }
                    rightexp {
                      number: 8.86941898949284e-315
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    semicolon: false
  }
  stat {
    forcyclename {
      name {
        name: "\343\376\377\377"
        num: 0
      }
      startexp {
      }
      stopexp {
        true: 754974720
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: "\343\376\377\377"
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
            stat {
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: false
  }
}
