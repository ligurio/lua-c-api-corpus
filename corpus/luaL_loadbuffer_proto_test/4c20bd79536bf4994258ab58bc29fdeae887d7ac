chunk {
  stat {
  }
  stat {
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
          binary {
            leftexp {
              prefixexp {
                exp {
                  tableconstructor {
                  }
                }
              }
            }
            binop {
              and: 1
            }
            rightexp {
              binary {
                leftexp {
                  binary {
                    leftexp {
                    }
                    binop {
                      or: 13312
                    }
                    rightexp {
                      unary {
                        unop {
                        }
                        exp {
                        }
                      }
                    }
                  }
                }
                binop {
                  div: 16777216
                }
                rightexp {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                          number: -0.0044998728615371656
                        }
                        binop {
                          div: 0
                        }
                        rightexp {
                          str: ":"
                        }
                      }
                    }
                    binop {
                      or: 0
                    }
                    rightexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  number: -4.9591064453125e-05
                                }
                                binop {
                                  div: 0
                                }
                                rightexp {
                                  number: -0.0044998728615371656
                                }
                              }
                            }
                            binop {
                              div: 0
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      binary {
                                        leftexp {
                                          number: -0.0011249682153842914
                                        }
                                        binop {
                                          less: 4
                                        }
                                        rightexp {
                                          number: -4.9591064453125e-05
                                        }
                                      }
                                    }
                                    binop {
                                      or: 0
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                        }
                                        binop {
                                        }
                                        rightexp {
                                          number: 1.081057516867014e+98
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  div: 0
                                }
                                rightexp {
                                  number: -4.9591064453125e-05
                                }
                              }
                            }
                          }
                        }
                        binop {
                          or: 0
                        }
                        rightexp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  str
                                }
                                binop {
                                }
                                rightexp {
                                }
                              }
                            }
                            binop {
                              div: 0
                            }
                            rightexp {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 35
      }
      startexp {
        binary {
          leftexp {
          }
          binop {
            concat: 4
          }
          rightexp {
          }
        }
      }
      stopexp {
      }
      stepexp {
        binary {
          leftexp {
          }
          binop {
            concat: 4
          }
          rightexp {
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
