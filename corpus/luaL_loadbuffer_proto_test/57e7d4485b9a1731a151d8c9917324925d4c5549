chunk {
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              expression {
                tableconstructor {
                }
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                        lastSep {
                        }
                      }
                    }
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                        lastSep {
                        }
                      }
                    }
                  }
                  value {
                  }
                }
              }
              sep {
                semicolon: 1024
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    tableconstructor {
                    }
                  }
                  value {
                    false: 0
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    number: 0
                  }
                  value {
                  }
                }
              }
              sep {
                comma: 0
              }
            }
            lastSep {
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                exprassign {
                                  key {
                                    false: 2
                                  }
                                  value {
                                    tableconstructor {
                                      fieldlist {
                                        firstField {
                                        }
                                        lastSep {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              fields {
                                field {
                                  exprassign {
                                    key {
                                      str: "stop"
                                    }
                                    value {
                                    }
                                  }
                                }
                                sep {
                                }
                              }
                              fields {
                                field {
                                  exprassign {
                                    key {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                          }
                                          lastSep {
                                          }
                                        }
                                      }
                                    }
                                    value {
                                    }
                                  }
                                }
                                sep {
                                }
                              }
                              fields {
                                field {
                                }
                                sep {
                                }
                              }
                              lastSep {
                              }
                            }
                          }
                        }
                      }
                      fields {
                        field {
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          namedassign {
                            name {
                              name: ""
                              num: 2
                            }
                            value {
                            }
                          }
                        }
                        sep {
                          semicolon: 0
                        }
                      }
                      fields {
                        field {
                        }
                        sep {
                          comma: 0
                        }
                      }
                      fields {
                        field {
                          expression {
                            number: 0
                          }
                        }
                        sep {
                          comma: 25344
                        }
                      }
                      lastSep {
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        ifstat {
                          condition {
                          }
                          first {
                            chunk {
                            }
                          }
                          last {
                            chunk {
                              stat {
                                semicolon: true
                              }
                            }
                          }
                        }
                      }
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 0
                          }
                          startexp {
                            binary {
                              leftexp {
                                number: -104
                              }
                              binop {
                                mult: 2
                              }
                              rightexp {
                                number: 416
                              }
                            }
                          }
                          stopexp {
                            prefixexp {
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                      stat {
                      }
                      stat {
                        localnames {
                          namelist {
                            firstname {
                              name: ""
                              num: 0
                            }
                          }
                        }
                      }
                      stat {
                        repeatcycle {
                          block {
                            chunk {
                              stat {
                                forcyclename {
                                  name {
                                    name: ""
                                    num: 0
                                  }
                                  startexp {
                                    unary {
                                      unop {
                                        length: 2
                                      }
                                      exp {
                                      }
                                    }
                                  }
                                  stopexp {
                                    number: 0
                                  }
                                  stepexp {
                                    number: -2
                                  }
                                  doblock {
                                    block {
                                      chunk {
                                        stat {
                                          forcyclename {
                                            name {
                                              name: ""
                                              num: 0
                                            }
                                            startexp {
                                              binary {
                                                leftexp {
                                                  number: -104
                                                }
                                                binop {
                                                  mult: 2
                                                }
                                                rightexp {
                                                  number: 416
                                                }
                                              }
                                            }
                                            stopexp {
                                              prefixexp {
                                              }
                                            }
                                            doblock {
                                              block {
                                                chunk {
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          condition {
                            ellipsis: "\331"
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: false
            }
          }
        }
      }
    }
    semicolon: true
  }
}
