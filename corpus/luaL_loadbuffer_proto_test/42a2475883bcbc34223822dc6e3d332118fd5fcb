chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
          }
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
          }
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
          }
        }
      }
      last {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                explast {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          var {
                            indexname {
                              prefixexp {
                              }
                              Name: "char"
                            }
                          }
                        }
                        args {
                          explist {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            whilecycle {
              condition {
                prefixexp {
                  functioncall {
                    prefArgs {
                      prefixexp {
                        var {
                          indexname {
                            prefixexp {
                            }
                            Name: "char"
                          }
                        }
                      }
                      args {
                        explist {
                        }
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                    }
                    stat {
                      forcyclename {
                        name {
                          name: ""
                          num: 2
                        }
                        startexp {
                          number: -0
                        }
                        stopexp {
                          number: 0
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                semicolon: true
                              }
                              stat {
                                whilecycle {
                                  condition {
                                    prefixexp {
                                      functioncall {
                                        prefArgs {
                                          prefixexp {
                                            var {
                                              indexname {
                                                prefixexp {
                                                }
                                                Name: "char"
                                              }
                                            }
                                          }
                                          args {
                                            explist {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  doblock {
                                    block {
                                      chunk {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
