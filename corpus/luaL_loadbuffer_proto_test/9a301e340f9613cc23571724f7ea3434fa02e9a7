chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                  stat {
                                    repeatcycle {
                                      block {
                                        chunk {
                                          stat {
                                            repeatcycle {
                                              block {
                                                chunk {
                                                }
                                              }
                                              condition {
                                                prefixexp {
                                                  exp {
                                                    binary {
                                                      leftexp {
                                                      }
                                                      binop {
                                                        mult: 0
                                                      }
                                                      rightexp {
                                                        prefixexp {
                                                          exp {
                                                            binary {
                                                              leftexp {
                                                                binary {
                                                                  leftexp {
                                                                    number: 0
                                                                  }
                                                                  binop {
                                                                    concat: 0
                                                                  }
                                                                  rightexp {
                                                                    str: "X1"
                                                                  }
                                                                }
                                                              }
                                                              binop {
                                                                concat: 0
                                                              }
                                                              rightexp {
                                                                false: 4
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      condition {
                                        str: "~"
                                      }
                                    }
                                  }
                                }
                              }
                              condition {
                                prefixexp {
                                  exp {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                        mult: 0
                                      }
                                      rightexp {
                                        prefixexp {
                                          exp {
                                            binary {
                                              leftexp {
                                                prefixexp {
                                                  exp {
                                                    binary {
                                                      leftexp {
                                                        number: 0
                                                      }
                                                      binop {
                                                        concat: 0
                                                      }
                                                      rightexp {
                                                        str: "X1"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              binop {
                                                concat: 0
                                              }
                                              rightexp {
                                                false: 4
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            semicolon: false
                          }
                        }
                      }
                      condition {
                        prefixexp {
                          exp {
                            binary {
                              leftexp {
                              }
                              binop {
                                mult: 0
                              }
                              rightexp {
                                prefixexp {
                                  exp {
                                    binary {
                                      leftexp {
                                        prefixexp {
                                          exp {
                                            binary {
                                              leftexp {
                                                number: 0
                                              }
                                              binop {
                                                concat: 0
                                              }
                                              rightexp {
                                                str: "X1"
                                              }
                                            }
                                          }
                                        }
                                      }
                                      binop {
                                        concat: 0
                                      }
                                      rightexp {
                                        false: 4
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    semicolon: false
                  }
                }
              }
              condition {
              }
            }
          }
        }
      }
      condition {
        number: 0
      }
    }
  }
}
