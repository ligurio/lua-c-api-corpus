chunk {
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexname {
            prefixexp {
              var {
                indexexpr {
                  prefixexp {
                    exp {
                    }
                  }
                  exp {
                    binary {
                      leftexp {
                      }
                      binop {
                        concat: 4294967028
                      }
                      rightexp {
                        false: 65536
                      }
                    }
                  }
                }
              }
            }
            Name: ""
          }
        }
        vars {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
            }
          }
        }
        vars {
          indexname {
            prefixexp {
              functioncall {
                prefArgs {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          functioncall {
                            prefArgs {
                              prefixexp {
                              }
                              args {
                              }
                            }
                          }
                        }
                        args {
                        }
                      }
                    }
                  }
                  args {
                  }
                }
              }
            }
            Name: ""
          }
        }
      }
      explist {
        expressions {
          nil: 262144
        }
        expressions {
          unary {
            unop {
              negate: 0
            }
            exp {
              binary {
                leftexp {
                  prefixexp {
                    exp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                              unary {
                                unop {
                                  length: 0
                                }
                                exp {
                                  number: 23.25
                                }
                              }
                            }
                            binop {
                              or: 0
                            }
                            rightexp {
                              false: 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
                binop {
                }
                rightexp {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          prefixexp {
                            functioncall {
                            }
                          }
                        }
                      }
                      fields {
                        field {
                          expression {
                            binary {
                              leftexp {
                              }
                              binop {
                              }
                              rightexp {
                                number: 0
                              }
                            }
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          unary {
            unop {
              negate: 262144
            }
            exp {
              binary {
                leftexp {
                  prefixexp {
                    exp {
                      binary {
                        leftexp {
                          number: 1.79266204420746e-310
                        }
                        binop {
                          or: 0
                        }
                        rightexp {
                          false: 0
                        }
                      }
                    }
                  }
                }
                binop {
                  greater: 1073741824
                }
                rightexp {
                  binary {
                    leftexp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                              prefixexp {
                              }
                            }
                            binop {
                            }
                            rightexp {
                              number: 1.79266204420746e-310
                            }
                          }
                        }
                      }
                    }
                    binop {
                      concat: 4294967028
                    }
                    rightexp {
                      ellipsis: "="
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          false: 0
        }
        explast {
          function {
            body {
              parlist {
                ellipsis: "while"
              }
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
          name {
            name: "$"
            num: 0
          }
        }
        vars {
          indexname {
            prefixexp {
              var {
                indexexpr {
                  prefixexp {
                    functioncall {
                      namedArgs {
                        prefixexp {
                          exp {
                          }
                        }
                        name {
                          name: "$"
                          num: 0
                        }
                        args {
                        }
                      }
                    }
                  }
                  exp {
                    binary {
                      leftexp {
                      }
                      binop {
                      }
                      rightexp {
                        false: 65536
                      }
                    }
                  }
                }
              }
            }
            Name: ""
          }
        }
        vars {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
            }
          }
        }
        vars {
          indexname {
            prefixexp {
              functioncall {
                prefArgs {
                  prefixexp {
                    exp {
                    }
                  }
                  args {
                  }
                }
              }
            }
            Name: ""
          }
        }
      }
      explist {
        expressions {
          nil: 262144
        }
        expressions {
          unary {
            unop {
            }
            exp {
              str: "q"
            }
          }
        }
        expressions {
          unary {
            unop {
              negate: 262144
            }
            exp {
              binary {
                leftexp {
                  prefixexp {
                    exp {
                      binary {
                        leftexp {
                          number: 1.79266204420746e-310
                        }
                        binop {
                          or: 1073741824
                        }
                        rightexp {
                          false: 0
                        }
                      }
                    }
                  }
                }
                binop {
                  concat: 134217728
                }
                rightexp {
                  unary {
                    unop {
                      negate: 262144
                    }
                    exp {
                      binary {
                        leftexp {
                          prefixexp {
                            exp {
                              binary {
                                leftexp {
                                  number: 1.79266204420746e-310
                                }
                                binop {
                                  or: 1073741824
                                }
                                rightexp {
                                  false: 0
                                }
                              }
                            }
                          }
                        }
                        binop {
                          concat: 134217728
                        }
                        rightexp {
                          binary {
                            leftexp {
                              prefixexp {
                                var {
                                  indexexpr {
                                    prefixexp {
                                      functioncall {
                                        namedArgs {
                                          prefixexp {
                                            exp {
                                            }
                                          }
                                          name {
                                            name: "$"
                                            num: 0
                                          }
                                          args {
                                          }
                                        }
                                      }
                                    }
                                    exp {
                                      binary {
                                        leftexp {
                                        }
                                        binop {
                                          concat: 4294967028
                                        }
                                        rightexp {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                                namedassign {
                                                  name {
                                                    name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                                    num: 0
                                                  }
                                                  value {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                              equal: 0
                            }
                            rightexp {
                              prefixexp {
                                exp {
                                  function {
                                    body {
                                      parlist {
                                        ellipsis: "while"
                                      }
                                      block {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          false: 0
        }
        explast {
          function {
            body {
              parlist {
                ellipsis: "while"
              }
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              expression {
                prefixexp {
                  functioncall {
                  }
                }
              }
            }
            fields {
              field {
                expression {
                  binary {
                    leftexp {
                    }
                    binop {
                    }
                    rightexp {
                      number: 0
                    }
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
