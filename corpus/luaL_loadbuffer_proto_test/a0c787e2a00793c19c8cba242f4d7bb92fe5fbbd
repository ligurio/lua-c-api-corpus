chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            ifstat {
              condition {
                unary {
                  unop {
                  }
                  exp {
                    nil: 67108864
                  }
                }
              }
              first {
                chunk {
                  stat {
                    whilecycle {
                      condition {
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            localnames {
              namelist {
                firstname {
                  name: ""
                  num: 0
                }
              }
              explist {
                explast {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            ellipsis: "\253"
                          }
                          value {
                            number: -2.9740338169555661e+284
                          }
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              binary {
                                leftexp {
                                }
                                binop {
                                  lessEqual: 0
                                }
                                rightexp {
                                }
                              }
                            }
                            value {
                              number: -2.9740338169555661e+284
                            }
                          }
                        }
                        sep {
                          comma: 0
                        }
                      }
                      fields {
                        field {
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              binary {
                                leftexp {
                                  false: 16640
                                }
                                binop {
                                  sub: 5888
                                }
                                rightexp {
                                  number: 415.93749916926026
                                }
                              }
                            }
                            value {
                            }
                          }
                        }
                        sep {
                          semicolon: 0
                        }
                      }
                      fields {
                        field {
                        }
                        sep {
                        }
                      }
                      lastSep {
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
          laststat {
            break: 5888
          }
        }
      }
      condition {
        number: -2.9740338169555661e+284
      }
    }
    semicolon: true
  }
  stat {
    forcyclename {
      name {
        name: "\242"
        num: 0
      }
      startexp {
      }
      stopexp {
        str: ","
      }
      stepexp {
        number: -2.9740338169555661e+284
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
  }
}
