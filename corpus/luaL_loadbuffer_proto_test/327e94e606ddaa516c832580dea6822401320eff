chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
                tableconstructor {
                  fieldlist {
                    firstField {
                      expression {
                        number: nan
                      }
                    }
                    fields {
                      field {
                        expression {
                          number: nan
                        }
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        expression {
                          true: 4
                        }
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        exprassign {
                          key {
                            true: 4
                          }
                          value {
                            number: nan
                          }
                        }
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        expression {
                          number: nan
                        }
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        expression {
                          number: nan
                        }
                      }
                      sep {
                        comma: 16776192
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        nil: 2
      }
    }
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                }
                value {
                  str: "\233"
                }
              }
            }
            fields {
              field {
                expression {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          prefixexp {
                            functioncall {
                              namedArgs {
                                prefixexp {
                                }
                                name {
                                  name: ""
                                  num: 0
                                }
                                args {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        expression {
                                          prefixexp {
                                            exp {
                                              prefixexp {
                                                var {
                                                  name {
                                                    name: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                                                    num: 0
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      fields {
                                        field {
                                          expression {
                                            prefixexp {
                                            }
                                          }
                                        }
                                        sep {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        field {
                          expression {
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  true: 4
                }
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                  }
                  value {
                    true: 32
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  number: nan
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  number: nan
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
