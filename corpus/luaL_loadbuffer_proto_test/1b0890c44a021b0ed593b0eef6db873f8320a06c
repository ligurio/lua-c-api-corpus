chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        parlist {
          ellipsis: "while"
        }
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: ""
                  num: 0
                }
                funcbody {
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                              indexname {
                                prefixexp {
                                }
                                Name: ""
                              }
                            }
                            vars {
                              indexexpr {
                                prefixexp {
                                  exp {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                      }
                                      rightexp {
                                        nil: 536871135
                                      }
                                    }
                                  }
                                }
                                exp {
                                  number: 0
                                }
                              }
                            }
                            vars {
                              indexexpr {
                                prefixexp {
                                  functioncall {
                                  }
                                }
                                exp {
                                  binary {
                                    leftexp {
                                      false: 134217728
                                    }
                                    binop {
                                    }
                                    rightexp {
                                      unary {
                                        unop {
                                          negate: 0
                                        }
                                        exp {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            vars {
                              indexexpr {
                                prefixexp {
                                  functioncall {
                                  }
                                }
                                exp {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                      greater: 0
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          binary {
                                            leftexp {
                                            }
                                            binop {
                                            }
                                            rightexp {
                                              binary {
                                                leftexp {
                                                }
                                                binop {
                                                }
                                                rightexp {
                                                  nil: 536871135
                                                }
                                              }
                                            }
                                          }
                                        }
                                        binop {
                                        }
                                        rightexp {
                                          prefixexp {
                                            exp {
                                              true: 32
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          explist {
                            expressions {
                              nil: 0
                            }
                            expressions {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                    }
                                    rightexp {
                                      number: 0
                                    }
                                  }
                                }
                                binop {
                                }
                                rightexp {
                                }
                              }
                            }
                            expressions {
                              prefixexp {
                                var {
                                  indexexpr {
                                    prefixexp {
                                      functioncall {
                                        namedArgs {
                                          prefixexp {
                                          }
                                          name {
                                            name: ""
                                            num: 0
                                          }
                                          args {
                                            str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                                          }
                                        }
                                      }
                                    }
                                    exp {
                                    }
                                  }
                                }
                              }
                            }
                            expressions {
                              unary {
                                unop {
                                  negate: 0
                                }
                                exp {
                                  binary {
                                    leftexp {
                                      number: 7.0025861101854e-313
                                    }
                                    binop {
                                      or: 3276801
                                    }
                                    rightexp {
                                      false: 0
                                    }
                                  }
                                }
                              }
                            }
                            expressions {
                              prefixexp {
                                exp {
                                  binary {
                                    leftexp {
                                      number: 7.0025861101854e-313
                                    }
                                    binop {
                                      or: 3276801
                                    }
                                    rightexp {
                                      false: 0
                                    }
                                  }
                                }
                              }
                            }
                            explast {
                              function {
                                body {
                                  parlist {
                                    ellipsis: "whi\000\000\000\000\177\377chunk {\n  stat {\n    localnames {\n      namelist {\n        firstname {\n          name: \"\"\n          num: 0\n        }\n      }\n    }\n  }\n  stat {\n    call {\n      prefArgs {\n        prefixexp {\n          exp {\n            false: 0\n          }\n        }\n        args {\n          str: \"\"\n        }\n      }\n    }\n    semicolon: true\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    list {\n      varlist {\n        var {\n          name {\n            name: \"\"\n            num: 0\n          }\n        }\n      }\n      explist {\n        explast {\n        }\n      }\n    }\n  }\n  stat {\n    list\376 {\n      varlist {\n        var {\n        }\n        vars {\n          indexexpr {\n            prefixexp {\n            }\n            exp {\n              number: 0\n            }\n          }\n        }\n      }\n      explist {\n        explast {\n        }\n      }\n    }\n  }\n  stat {\n    func {\n      name {\n        firstname {\n         \377l name: \"\"\n          num: 0\n        }\n        names {\n          name: \"\"\n          num: 0\n        }\n        names {\n          name: \"\"\n          num: 0\n        }\n        names {\n          name: \"\"\n          num: 0\n        e}\n        names {\n          name: \"\"\n          num: 0\n        }\n      }\n      body {\n        block {\n          chunk {\n            stat {\n              whilecycle {\n                condition {\n                }\n                doblock {\n                  block {\n                    chunk {\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  laststat {\n  }\n}\n"
                                  }
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                      laststat {
                        explist {
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            laststat {
              explist {
                explist {
                  explast {
                    prefixexp {
                      functioncall {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                    indexname {
                      prefixexp {
                      }
                      Name: ""
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                            }
                            binop {
                            }
                            rightexp {
                              nil: 536871135
                            }
                          }
                        }
                      }
                      exp {
                        number: 0
                      }
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        functioncall {
                        }
                      }
                      exp {
                        binary {
                          leftexp {
                            false: 134217728
                          }
                          binop {
                          }
                          rightexp {
                            unary {
                              unop {
                                negate: 0
                              }
                              exp {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        functioncall {
                        }
                      }
                      exp {
                        binary {
                          leftexp {
                          }
                          binop {
                            greater: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                  }
                                  binop {
                                  }
                                  rightexp {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                      }
                                      rightexp {
                                        nil: 536871135
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                              }
                              rightexp {
                                prefixexp {
                                  exp {
                                    true: 32
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                explist {
                  expressions {
                    nil: 0
                  }
                  expressions {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                          }
                          binop {
                          }
                          rightexp {
                            number: 0
                          }
                        }
                      }
                      binop {
                      }
                      rightexp {
                      }
                    }
                  }
                  expressions {
                    prefixexp {
                      var {
                        indexexpr {
                          prefixexp {
                            functioncall {
                              namedArgs {
                                prefixexp {
                                }
                                name {
                                  name: ""
                                  num: 0
                                }
                                args {
                                  str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                                }
                              }
                            }
                          }
                          exp {
                          }
                        }
                      }
                    }
                  }
                  expressions {
                    unary {
                      unop {
                        negate: 0
                      }
                      exp {
                        binary {
                          leftexp {
                            number: 7.0025861101854e-313
                          }
                          binop {
                            or: 3276801
                          }
                          rightexp {
                            false: 0
                          }
                        }
                      }
                    }
                  }
                  expressions {
                    prefixexp {
                      exp {
                        binary {
                          leftexp {
                            number: 7.0025861101854e-313
                          }
                          binop {
                            or: 3276801
                          }
                          rightexp {
                            false: 0
                          }
                        }
                      }
                    }
                  }
                  explast {
                    function {
                      body {
                        parlist {
                          ellipsis: "whi\000\000\000\000\177\377chunk {\n  stat {\n    localnames {\n      namelist {\n        firstname {\n          name: \"\"\n          num: 0\n        }\n      }\n    }\n  }\n  stat {\n    call {\n      prefArgs {\n        prefixexp {\n          exp {\n            false: 0\n          }\n        }\n        args {\n          str: \"\"\n        }\n      }\n    }\n    semicolon: true\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    list {\n      varlist {\n        var {\n          name {\n            name: \"\"\n            num: 0\n          }\n        }\n      }\n      explist {\n        explast {\n        }\n      }\n    }\n  }\n  stat {\n    list\376 {\n      varlist {\n        var {\n        }\n        vars {\n          indexexpr {\n            prefixexp {\n            }\n            exp {\n              number: 0\n            }\n          }\n        }\n      }\n      explist {\n        explast {\n        }\n      }\n    }\n  }\n  stat {\n    func {\n      name {\n        firstname {\n         \377l name: \"\"\n          num: 0\n        }\n        names {\n          name: \"\"\n          num: 0\n        }\n        names {\n          name: \"\"\n          num: 0\n        }\n        names {\n          name: \"\"\n          num: 0\n        e}\n        names {\n          name: \"\"\n          num: 0\n        }\n      }\n      body {\n        block {\n          chunk {\n            stat {\n              whilecycle {\n                condition {\n                }\n                doblock {\n                  block {\n                    chunk {\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  laststat {\n  }\n}\n"
                        }
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            laststat {
              explist {
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    localfunc {
      name {
        name: "\203"
        num: 0
      }
      funcbody {
        block {
          chunk {
            laststat {
              explist {
                explist {
                  explast {
                    prefixexp {
                      functioncall {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
