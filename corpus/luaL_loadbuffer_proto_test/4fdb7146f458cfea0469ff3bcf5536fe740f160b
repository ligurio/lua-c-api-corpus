chunk {
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
          stat {
            forcyclename {
              name {
                name: "*"
                num: 0
              }
              startexp {
                number: 0
              }
              stopexp {
                unary {
                  unop {
                    length: 2
                  }
                  exp {
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      forcyclename {
                        name {
                          name: ""
                          num: 0
                        }
                        startexp {
                          unary {
                            unop {
                              length: 4
                            }
                            exp {
                              tableconstructor {
                              }
                            }
                          }
                        }
                        stopexp {
                          unary {
                            unop {
                              length: 2
                            }
                            exp {
                              prefixexp {
                                exp {
                                  binary {
                                    leftexp {
                                      ellipsis: ""
                                    }
                                    binop {
                                      or: 0
                                    }
                                    rightexp {
                                      prefixexp {
                                        var {
                                          name {
                                            name: "\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245"
                                            num: 0
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                forcyclename {
                                  name {
                                    name: ""
                                    num: 0
                                  }
                                  startexp {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                        exp: 1048576
                                      }
                                      rightexp {
                                        prefixexp {
                                        }
                                      }
                                    }
                                  }
                                  stopexp {
                                    unary {
                                      unop {
                                        length: 2
                                      }
                                      exp {
                                        prefixexp {
                                          exp {
                                            binary {
                                              leftexp {
                                              }
                                              binop {
                                                or: 0
                                              }
                                              rightexp {
                                                prefixexp {
                                                  var {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  doblock {
                                    block {
                                      chunk {
                                      }
                                    }
                                  }
                                }
                                semicolon: true
                              }
                            }
                          }
                        }
                      }
                      semicolon: true
                    }
                  }
                }
              }
            }
            semicolon: true
          }
          laststat {
            break: 536870912
          }
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    break: 0
  }
}
