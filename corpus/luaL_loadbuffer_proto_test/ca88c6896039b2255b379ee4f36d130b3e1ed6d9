chunk {
  stat {
    block {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                expressions {
                  unary {
                    unop {
                      negate: 1
                    }
                    exp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                            }
                            binop {
                              or: 0
                            }
                            rightexp {
                              ellipsis: ""
                            }
                          }
                        }
                      }
                    }
                  }
                }
                expressions {
                  unary {
                    unop {
                      negate: 1
                    }
                    exp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                            }
                            binop {
                              or: 0
                            }
                            rightexp {
                              ellipsis: ""
                            }
                          }
                        }
                      }
                    }
                  }
                }
                expressions {
                  unary {
                    unop {
                      negate: 1
                    }
                    exp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                            }
                            binop {
                              or: 0
                            }
                            rightexp {
                              ellipsis: ""
                            }
                          }
                        }
                      }
                    }
                  }
                }
                expressions {
                  unary {
                    unop {
                      negate: 1
                    }
                    exp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                            }
                            binop {
                              or: 0
                            }
                            rightexp {
                              ellipsis: "/"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                explast {
                }
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                expressions {
                  unary {
                    unop {
                      negate: 1
                    }
                    exp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                            }
                            binop {
                              or: 0
                            }
                            rightexp {
                              ellipsis: ""
                            }
                          }
                        }
                      }
                    }
                  }
                }
                expressions {
                  unary {
                    unop {
                      negate: 1
                    }
                    exp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                            }
                            binop {
                              or: 0
                            }
                            rightexp {
                              ellipsis: ""
                            }
                          }
                        }
                      }
                    }
                  }
                }
                expressions {
                  unary {
                    unop {
                      negate: 1
                    }
                    exp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                            }
                            binop {
                              or: 0
                            }
                            rightexp {
                              ellipsis: ""
                            }
                          }
                        }
                      }
                    }
                  }
                }
                expressions {
                  unary {
                    unop {
                      negate: 1
                    }
                    exp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                            }
                            binop {
                              or: 0
                            }
                            rightexp {
                              ellipsis: ""
                            }
                          }
                        }
                      }
                    }
                  }
                }
                explast {
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                  stat {
                    whilecycle {
                      condition {
                      }
                      doblock {
                        block {
                          chunk {
                            stat {
                              list {
                                varlist {
                                  var {
                                  }
                                }
                                explist {
                                  expressions {
                                    unary {
                                      unop {
                                        negate: 1
                                      }
                                      exp {
                                        prefixexp {
                                          exp {
                                            binary {
                                              leftexp {
                                              }
                                              binop {
                                                or: 0
                                              }
                                              rightexp {
                                                ellipsis: ""
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  expressions {
                                    unary {
                                      unop {
                                        negate: 1
                                      }
                                      exp {
                                        prefixexp {
                                          exp {
                                            binary {
                                              leftexp {
                                              }
                                              binop {
                                                or: 0
                                              }
                                              rightexp {
                                                ellipsis: ""
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  expressions {
                                    unary {
                                      unop {
                                        negate: 1
                                      }
                                      exp {
                                        prefixexp {
                                          exp {
                                            binary {
                                              leftexp {
                                              }
                                              binop {
                                                or: 0
                                              }
                                              rightexp {
                                                ellipsis: ""
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  expressions {
                                    unary {
                                      unop {
                                        negate: 1
                                      }
                                      exp {
                                        prefixexp {
                                          exp {
                                            binary {
                                              leftexp {
                                              }
                                              binop {
                                                or: 0
                                              }
                                              rightexp {
                                                ellipsis: "/"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  explast {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    list {
                      varlist {
                        var {
                        }
                      }
                      explist {
                        expressions {
                          unary {
                            unop {
                              negate: 1
                            }
                            exp {
                              prefixexp {
                                exp {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                      or: 0
                                    }
                                    rightexp {
                                      ellipsis: ""
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          unary {
                            unop {
                              negate: 1
                            }
                            exp {
                              prefixexp {
                                exp {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                      or: 0
                                    }
                                    rightexp {
                                      ellipsis: ""
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          unary {
                            unop {
                              negate: 1
                            }
                            exp {
                              prefixexp {
                                exp {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                      or: 0
                                    }
                                    rightexp {
                                      ellipsis: ""
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          unary {
                            unop {
                              negate: 1
                            }
                            exp {
                              prefixexp {
                                exp {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                      or: 0
                                    }
                                    rightexp {
                                      ellipsis: "/"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        explast {
                        }
                      }
                    }
                  }
                  stat {
                    ifstat {
                      condition {
                      }
                      first {
                        chunk {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
