chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                  indexname {
                    prefixexp {
                    }
                    Name: "not enough memory"
                  }
                }
                vars {
                  name {
                    name: ">>>>>>"
                    num: 3338665984
                  }
                }
              }
              explist {
                expressions {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            tableconstructor {
                            }
                          }
                          value {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        true: 5963776
                                      }
                                      binop {
                                        greaterEqual: 65280
                                      }
                                      rightexp {
                                      }
                                    }
                                  }
                                  binop {
                                    concat: 5963776
                                  }
                                  rightexp {
                                    unary {
                                      unop {
                                        length: 4
                                      }
                                      exp {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                              exprassign {
                                                key {
                                                  tableconstructor {
                                                    fieldlist {
                                                      firstField {
                                                        expression {
                                                          true: 3338665984
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                value {
                                                  unary {
                                                    unop {
                                                      negate: 0
                                                    }
                                                    exp {
                                                      prefixexp {
                                                        exp {
                                                          binary {
                                                            leftexp {
                                                              number: -104
                                                            }
                                                            binop {
                                                            }
                                                            rightexp {
                                                              str: "0.3E2"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            fields {
                                              field {
                                                expression {
                                                  true: 0
                                                }
                                              }
                                              sep {
                                                comma: 5963776
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                equal: 260
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                      }
                      fields {
                        field {
                          expression {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                }
                              }
                            }
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
                expressions {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  expression {
                                    tableconstructor {
                                      fieldlist {
                                        firstField {
                                          exprassign {
                                            key {
                                              tableconstructor {
                                              }
                                            }
                                            value {
                                            }
                                          }
                                        }
                                        fields {
                                          field {
                                            expression {
                                              tableconstructor {
                                                fieldlist {
                                                  firstField {
                                                    namedassign {
                                                      name {
                                                        name: ""
                                                        num: 0
                                                      }
                                                      value {
                                                        number: -104
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          sep {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                lastSep {
                                }
                              }
                            }
                          }
                          value {
                            binary {
                              leftexp {
                                true: 5963776
                              }
                              binop {
                                greaterEqual: 65280
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                      }
                      fields {
                        field {
                          expression {
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
                explast {
                  prefixexp {
                    exp {
                      str: ""
                    }
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                unary {
                  unop {
                    length: 260
                  }
                  exp {
                    tableconstructor {
                    }
                  }
                }
              }
              binop {
              }
              rightexp {
              }
            }
          }
          binop {
            greaterEqual: 0
          }
          rightexp {
          }
        }
      }
    }
  }
}
