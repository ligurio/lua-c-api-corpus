chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        expressions {
        }
        expressions {
        }
        expressions {
        }
        expressions {
        }
        expressions {
          binary {
            leftexp {
            }
            binop {
              concat: 0
            }
            rightexp {
            }
          }
        }
        expressions {
        }
        expressions {
        }
        expressions {
        }
        explast {
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              explist {
                explist {
                  expressions {
                  }
                  expressions {
                  }
                  explast {
                    unary {
                      unop {
                      }
                      exp {
                        tableconstructor {
                          fieldlist {
                            firstField {
                            }
                            fields {
                              field {
                                exprassign {
                                  key {
                                  }
                                  value {
                                    prefixexp {
                                      functioncall {
                                        prefArgs {
                                          prefixexp {
                                            exp {
                                              number: 673
                                            }
                                          }
                                          args {
                                            explist {
                                              explist {
                                                expressions {
                                                }
                                                expressions {
                                                }
                                                explast {
                                                  prefixexp {
                                                    functioncall {
                                                      prefArgs {
                                                        prefixexp {
                                                        }
                                                        args {
                                                          explist {
                                                            explist {
                                                              expressions {
                                                              }
                                                              expressions {
                                                              }
                                                              expressions {
                                                              }
                                                              explast {
                                                                prefixexp {
                                                                  functioncall {
                                                                    prefArgs {
                                                                      prefixexp {
                                                                      }
                                                                      args {
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              sep {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
