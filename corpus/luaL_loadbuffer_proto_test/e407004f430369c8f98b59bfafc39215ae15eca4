chunk {
  stat {
    block {
      block {
        chunk {
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            laststat {
              explist {
                explist {
                  explast {
                    function {
                      body {
                        parlist {
                          ellipsis: "\\377\\377\\376\\306"
                        }
                        block {
                          chunk {
                            stat {
                            }
                            stat {
                              list {
                                varlist {
                                  var {
                                    indexname {
                                      prefixexp {
                                      }
                                      Name: ""
                                    }
                                  }
                                }
                                explist {
                                  expressions {
                                    tableconstructor {
                                    }
                                  }
                                  explast {
                                  }
                                }
                              }
                            }
                            stat {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          binary {
            leftexp {
              tableconstructor {
              }
            }
            binop {
              and: 0
            }
            rightexp {
              binary {
                leftexp {
                  tableconstructor {
                    fieldlist {
                      firstField {
                      }
                    }
                  }
                }
                binop {
                  and: 0
                }
                rightexp {
                  binary {
                    leftexp {
                      tableconstructor {
                      }
                    }
                    binop {
                      and: 0
                    }
                    rightexp {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        false: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
          stat {
            list {
              varlist {
                var {
                  indexname {
                    prefixexp {
                    }
                    Name: ""
                  }
                }
              }
              explist {
                expressions {
                  tableconstructor {
                  }
                }
                explast {
                }
              }
            }
          }
          stat {
          }
        }
      }
      condition {
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      stepexp {
        number: 0
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
