chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: -2
      }
      stopexp {
        number: -0
      }
      stepexp {
        number: 0
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                  unary {
                    unop {
                      length: 1
                    }
                    exp {
                    }
                  }
                }
                stopexp {
                  tableconstructor {
                    fieldlist {
                      firstField {
                      }
                      fields {
                        field {
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          expression {
                            binary {
                              leftexp {
                                prefixexp {
                                  functioncall {
                                    prefArgs {
                                      prefixexp {
                                        var {
                                          indexname {
                                            prefixexp {
                                            }
                                            Name: "char"
                                          }
                                        }
                                      }
                                      args {
                                        explist {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                concat: 0
                              }
                              rightexp {
                                prefixexp {
                                  functioncall {
                                    prefArgs {
                                      prefixexp {
                                        var {
                                          indexname {
                                            prefixexp {
                                            }
                                            Name: "char"
                                          }
                                        }
                                      }
                                      args {
                                        explist {
                                          explist {
                                            expressions {
                                              number: 9
                                            }
                                            explast {
                                              binary {
                                                leftexp {
                                                  number: 9
                                                }
                                                binop {
                                                  add: 0
                                                }
                                                rightexp {
                                                  unary {
                                                    unop {
                                                      length: 258
                                                    }
                                                    exp {
                                                      tableconstructor {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
}
