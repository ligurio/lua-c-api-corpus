chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
              prefArgs {
                prefixexp {
                }
                args {
                }
              }
            }
          }
        }
      }
      condition {
        ellipsis: ""
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
          }
        }
      }
      clauses {
        condition {
          false: 0
        }
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      list {
                        varlist {
                          var {
                            indexname {
                              prefixexp {
                              }
                              Name: "c\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257al"
                            }
                          }
                          vars {
                          }
                          vars {
                            indexname {
                              prefixexp {
                              }
                              Name: "c\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257\257al"
                            }
                          }
                          vars {
                          }
                          vars {
                          }
                        }
                        explist {
                          expressions {
                            tableconstructor {
                            }
                          }
                          expressions {
                            tableconstructor {
                            }
                          }
                          expressions {
                            tableconstructor {
                            }
                          }
                          expressions {
                            tableconstructor {
                            }
                          }
                          expressions {
                            tableconstructor {
                            }
                          }
                          expressions {
                            tableconstructor {
                            }
                          }
                          expressions {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  expression {
                                  }
                                }
                                fields {
                                  field {
                                    exprassign {
                                      key {
                                        number: 3
                                      }
                                      value {
                                        ellipsis: ""
                                      }
                                    }
                                  }
                                  sep {
                                  }
                                }
                                fields {
                                  field {
                                    exprassign {
                                      key {
                                        number: 7.34294985470277e+223
                                      }
                                      value {
                                      }
                                    }
                                  }
                                  sep {
                                  }
                                }
                              }
                            }
                          }
                          expressions {
                            tableconstructor {
                            }
                          }
                          expressions {
                            tableconstructor {
                            }
                          }
                          expressions {
                            tableconstructor {
                            }
                          }
                          expressions {
                            tableconstructor {
                            }
                          }
                          expressions {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  exprassign {
                                    key {
                                      number: 7.34294985470277e+223
                                    }
                                    value {
                                    }
                                  }
                                }
                                fields {
                                  field {
                                    exprassign {
                                      key {
                                        ellipsis: ""
                                      }
                                      value {
                                        ellipsis: ""
                                      }
                                    }
                                  }
                                  sep {
                                  }
                                }
                              }
                            }
                          }
                          expressions {
                          }
                          explast {
                            nil: 0
                          }
                        }
                      }
                    }
                    stat {
                      call {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                          }
                        }
                      }
                    }
                  }
                }
                condition {
                  ellipsis: ""
                }
              }
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
                clauses {
                  condition {
                  }
                  block {
                    chunk {
                    }
                  }
                }
                clauses {
                  condition {
                    false: 0
                  }
                  block {
                    chunk {
                    }
                  }
                }
                last {
                  chunk {
                    laststat {
                      explist {
                        explist {
                          explast {
                            function {
                              body {
                                block {
                                  chunk {
                                    stat {
                                      ifstat {
                                        condition {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                                exprassign {
                                                  key {
                                                    binary {
                                                      leftexp {
                                                      }
                                                      binop {
                                                      }
                                                      rightexp {
                                                        binary {
                                                          leftexp {
                                                            tableconstructor {
                                                              fieldlist {
                                                                firstField {
                                                                }
                                                                lastSep {
                                                                  semicolon: 0
                                                                }
                                                              }
                                                            }
                                                          }
                                                          binop {
                                                          }
                                                          rightexp {
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  value {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        first {
                                          chunk {
                                            stat {
                                              whilecycle {
                                                condition {
                                                }
                                                doblock {
                                                  block {
                                                    chunk {
                                                    }
                                                  }
                                                }
                                              }
                                              semicolon: true
                                            }
                                            stat {
                                              localfunc {
                                                name {
                                                  name: ""
                                                  num: 0
                                                }
                                                funcbody {
                                                  parlist {
                                                    ellipsis: "os.difftime"
                                                  }
                                                  block {
                                                    chunk {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            stat {
                                            }
                                            stat {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
