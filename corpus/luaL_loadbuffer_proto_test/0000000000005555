chunk {
  stat {
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            stat {
              ifstat {
                condition {
                  binary {
                    leftexp {
                      ellipsis: "\000\000\000\000"
                    }
                    binop {
                    }
                    rightexp {
                      unary {
                        unop {
                          length: 536870912
                        }
                        exp {
                        }
                      }
                    }
                  }
                }
                first {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            stat {
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: "\000\000\000\000"
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              break: 0
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            stat {
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    block {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                expressions {
                  function {
                    body {
                      block {
                        chunk {
                          stat {
                          }
                          stat {
                            list {
                              varlist {
                                var {
                                  indexexpr {
                                    prefixexp {
                                    }
                                    exp {
                                    }
                                  }
                                }
                              }
                              explist {
                                expressions {
                                  prefixexp {
                                    functioncall {
                                    }
                                  }
                                }
                                explast {
                                  prefixexp {
                                    functioncall {
                                    }
                                  }
                                }
                              }
                            }
                          }
                          laststat {
                            break: 0
                            semicolon: true
                          }
                        }
                      }
                    }
                  }
                }
                explast {
                  unary {
                    unop {
                      negate: 1702061056
                    }
                    exp {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
