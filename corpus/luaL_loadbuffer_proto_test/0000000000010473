chunk {
  stat {
    list {
      varlist {
        var {
        }
        vars {
        }
        vars {
        }
        vars {
          name {
            name: "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
            num: 64
          }
        }
        vars {
          name {
            name: ""
            num: 4
          }
        }
        vars {
        }
        vars {
          indexname {
            prefixexp {
              var {
                indexname {
                  prefixexp {
                    var {
                      indexname {
                        prefixexp {
                          exp {
                            nil: 1
                          }
                        }
                        Name: ""
                      }
                    }
                  }
                  Name: "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
                }
              }
            }
            Name: ""
          }
        }
        vars {
        }
        vars {
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: "\000"
          }
        }
        vars {
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: "\000"
          }
        }
        vars {
        }
        vars {
          indexexpr {
            prefixexp {
              exp {
                binary {
                  leftexp {
                  }
                  binop {
                    notEqual: 0
                  }
                  rightexp {
                  }
                }
              }
            }
            exp {
              binary {
                leftexp {
                }
                binop {
                }
                rightexp {
                  unary {
                    unop {
                    }
                    exp {
                    }
                  }
                }
              }
            }
          }
        }
        vars {
        }
      }
      explist {
        explast {
        }
      }
    }
    semicolon: false
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 4
      }
      startexp {
        tableconstructor {
          fieldlist {
            firstField {
              expression {
                number: 7.2294757342930368e+221
              }
            }
            fields {
              field {
                expression {
                  binary {
                    leftexp {
                      number: -5.0283968448638916e-05
                    }
                    binop {
                      mult: 4
                    }
                    rightexp {
                      binary {
                        leftexp {
                          number: -4.9591064453125e-05
                        }
                        binop {
                          mult: 4
                        }
                        rightexp {
                          binary {
                            leftexp {
                              number: -5.0283968448638916e-05
                            }
                            binop {
                              mult: 4
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                    }
                                    rightexp {
                                      prefixexp {
                                        functioncall {
                                          prefArgs {
                                            prefixexp {
                                            }
                                            args {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  mult: 4
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      number: -4.9591064453125e-05
                                    }
                                    binop {
                                      mult: 4
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          number: -3.0517578125e-05
                                        }
                                        binop {
                                          mult: 4
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                              number: -4.9591064453125e-05
                                            }
                                            binop {
                                              mult: 4
                                            }
                                            rightexp {
                                              binary {
                                                leftexp {
                                                  prefixexp {
                                                    functioncall {
                                                      prefArgs {
                                                        prefixexp {
                                                        }
                                                        args {
                                                          str: "start"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                binop {
                                                  concat: 4
                                                }
                                                rightexp {
                                                  str: "getupvalue"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  tableconstructor {
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
      stopexp {
      }
      stepexp {
        number: -0
      }
      doblock {
        block {
          chunk {
            laststat {
              explist {
                explist {
                  expressions {
                    binary {
                      leftexp {
                        false: 0
                      }
                      binop {
                        exp: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                          }
                          binop {
                          }
                          rightexp {
                          }
                        }
                      }
                    }
                  }
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 25344
        }
      }
      explist {
        expressions {
          prefixexp {
            functioncall {
              namedArgs {
                prefixexp {
                  var {
                    indexexpr {
                      prefixexp {
                        var {
                          indexexpr {
                            prefixexp {
                            }
                            exp {
                              true: 32
                            }
                          }
                        }
                      }
                      exp {
                      }
                    }
                  }
                }
                name {
                  name: ""
                  num: 0
                }
                args {
                }
              }
            }
          }
        }
        expressions {
          str: "#"
        }
        expressions {
          binary {
            leftexp {
              false: 0
            }
            binop {
            }
            rightexp {
              nil: 654311424
            }
          }
        }
        expressions {
        }
        explast {
          binary {
            leftexp {
              binary {
                leftexp {
                }
                binop {
                }
                rightexp {
                  binary {
                    leftexp {
                    }
                    binop {
                    }
                    rightexp {
                    }
                  }
                }
              }
            }
            binop {
            }
            rightexp {
            }
          }
        }
      }
    }
  }
  laststat {
    semicolon: true
  }
}
