chunk {
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          exp {
            false: 0
          }
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
            namedArgs {
              prefixexp {
              }
              name {
                name: ""
                num: 0
              }
              args {
                tableconstructor {
                  fieldlist {
                    firstField {
                    }
                    fields {
                      field {
                        namedassign {
                          name {
                            name: ""
                            num: 0
                          }
                          value {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                }
                                lastSep {
                                }
                              }
                            }
                          }
                        }
                      }
                      sep {
                      }
                    }
                  }
                }
              }
            }
          }
        }
        args {
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
            namedArgs {
              prefixexp {
              }
              name {
                name: ""
                num: 0
              }
              args {
                tableconstructor {
                  fieldlist {
                    firstField {
                    }
                    fields {
                      field {
                        namedassign {
                          name {
                            name: ""
                            num: 0
                          }
                          value {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                }
                                lastSep {
                                  semicolon: 805306368
                                }
                              }
                            }
                          }
                        }
                      }
                      sep {
                      }
                    }
                  }
                }
              }
            }
          }
        }
        args {
        }
      }
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    func {
      name {
        firstname {
          name: "\000\000\000\000\000\000"
          num: 0
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: false
  }
  stat {
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: false
          }
          stat {
            call {
            }
          }
          stat {
            localnames {
              namelist {
                firstname {
                  name: ""
                  num: 0
                }
              }
              explist {
                explast {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                        }
                        binop {
                          concat: 0
                        }
                        rightexp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  unary {
                                    unop {
                                    }
                                    exp {
                                      prefixexp {
                                        exp {
                                          function {
                                            body {
                                              block {
                                                chunk {
                                                  stat {
                                                    semicolon: true
                                                  }
                                                  laststat {
                                                    semicolon: true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  div: 0
                                }
                                rightexp {
                                  number: -4.9591064453125e-05
                                }
                              }
                            }
                            binop {
                              div: 0
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      binary {
                                        leftexp {
                                          binary {
                                            leftexp {
                                              number: -4.9591064453125e-05
                                            }
                                            binop {
                                              div: 0
                                            }
                                            rightexp {
                                              number: -4.9591064453125e-05
                                            }
                                          }
                                        }
                                        binop {
                                          div: 0
                                        }
                                        rightexp {
                                          number: -4.9591064453125e-05
                                        }
                                      }
                                    }
                                    binop {
                                      div: 0
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          binary {
                                            leftexp {
                                              binary {
                                                leftexp {
                                                  binary {
                                                    leftexp {
                                                      number: -4.9591064453125e-05
                                                    }
                                                    binop {
                                                      div: 0
                                                    }
                                                    rightexp {
                                                      number: -4.9591064453125e-05
                                                    }
                                                  }
                                                }
                                                binop {
                                                  div: 0
                                                }
                                                rightexp {
                                                  number: -4.9591064453125e-05
                                                }
                                              }
                                            }
                                            binop {
                                              div: 0
                                            }
                                            rightexp {
                                              binary {
                                                leftexp {
                                                  binary {
                                                    leftexp {
                                                      number: -4.9591064453125e-05
                                                    }
                                                    binop {
                                                      div: 0
                                                    }
                                                    rightexp {
                                                      number: 9.0836664961139866e+223
                                                    }
                                                  }
                                                }
                                                binop {
                                                  div: 0
                                                }
                                                rightexp {
                                                  number: -4.9591064453125e-05
                                                }
                                              }
                                            }
                                          }
                                        }
                                        binop {
                                          div: 0
                                        }
                                        rightexp {
                                          number: -4.9591064453125e-05
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  div: 0
                                }
                                rightexp {
                                  number: -4.9591064453125e-05
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    binop {
                      div: 0
                    }
                    rightexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      number: -4.9591064453125e-05
                                    }
                                    binop {
                                      div: 0
                                    }
                                    rightexp {
                                      number: -4.9591064453125e-05
                                    }
                                  }
                                }
                                binop {
                                  div: 0
                                }
                                rightexp {
                                  number: -4.9591064453125e-05
                                }
                              }
                            }
                            binop {
                              or: 13312
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      number: -4.9591064453125e-05
                                    }
                                    binop {
                                      div: 0
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                                exprassign {
                                                  key {
                                                  }
                                                  value {
                                                    ellipsis: "false"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        binop {
                                        }
                                        rightexp {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                              }
                                              lastSep {
                                                semicolon: 13312
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  div: 0
                                }
                                rightexp {
                                  number: -4.9591064453125e-05
                                }
                              }
                            }
                          }
                        }
                        binop {
                          div: 0
                        }
                        rightexp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  number: -4.9591064453125e-05
                                }
                                binop {
                                  div: 0
                                }
                                rightexp {
                                  number: -4.9591064453125e-05
                                }
                              }
                            }
                            binop {
                              concat: 0
                            }
                            rightexp {
                              number: -4.9591064453125e-05
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            localnames {
              namelist {
                firstname {
                  name: ""
                  num: 0
                }
                names {
                  name: "\221\221\221\221\221\221\221\221\221\221\221\221\221\221\221\221\221\221\221\221\221\221"
                  num: 0
                }
              }
            }
          }
          stat {
            call {
            }
            semicolon: false
          }
          stat {
            localnames {
              namelist {
                firstname {
                  name: ""
                  num: 0
                }
              }
              explist {
                expressions {
                  ellipsis: "\376"
                }
                explast {
                }
              }
            }
          }
          stat {
            localnames {
              namelist {
                firstname {
                  name: ""
                  num: 0
                }
              }
            }
          }
          stat {
            localnames {
              namelist {
                firstname {
                  name: "\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343"
                  num: 0
                }
                names {
                  name: "\221\221\221\221\221\221\221\221\221\221\221\221\221\221\221\221\221\221\221\221\221\221"
                  num: 0
                }
              }
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            whilecycle {
              condition {
                str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
              }
              doblock {
                block {
                  chunk {
                    stat {
                      call {
                      }
                      semicolon: false
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
    semicolon: false
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 0
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
              }
              fields {
                field {
                }
                sep {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: false
  }
  stat {
    call {
    }
  }
}
