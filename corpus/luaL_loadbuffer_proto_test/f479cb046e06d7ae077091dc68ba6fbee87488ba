chunk {
  stat {
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              expression {
                tableconstructor {
                  fieldlist {
                    firstField {
                      exprassign {
                        key {
                          tableconstructor {
                          }
                        }
                        value {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  unary {
                                    unop {
                                      length: 260
                                    }
                                    exp {
                                      tableconstructor {
                                      }
                                    }
                                  }
                                }
                                binop {
                                  concat: 5963776
                                }
                                rightexp {
                                  unary {
                                    unop {
                                      length: 4
                                    }
                                    exp {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                            exprassign {
                                              key {
                                                tableconstructor {
                                                  fieldlist {
                                                    firstField {
                                                      expression {
                                                        tableconstructor {
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              value {
                                                unary {
                                                  unop {
                                                    negate: 0
                                                  }
                                                  exp {
                                                    prefixexp {
                                                      exp {
                                                        binary {
                                                          leftexp {
                                                            number: -104
                                                          }
                                                          binop {
                                                            concat: 0
                                                          }
                                                          rightexp {
                                                            str: "0.3E2"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          fields {
                                            field {
                                              expression {
                                                number: 0
                                              }
                                            }
                                            sep {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                              greaterEqual: 0
                            }
                            rightexp {
                            }
                          }
                        }
                      }
                    }
                    fields {
                      field {
                        expression {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                  tableconstructor {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      sep {
                      }
                    }
                  }
                }
              }
            }
            lastSep {
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
              func {
                name {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                body {
                  parlist {
                    ellipsis: "callunr"
                  }
                  block {
                    chunk {
                      stat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
