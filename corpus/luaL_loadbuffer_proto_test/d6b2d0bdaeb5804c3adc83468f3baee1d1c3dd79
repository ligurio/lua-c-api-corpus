chunk {
  stat {
    semicolon: false
  }
  stat {
  }
  stat {
    block {
      block {
        chunk {
          laststat {
            explist {
              explist {
                explast {
                  number: 1.2208151724416313e+285
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: "z"
          num: 0
        }
      }
      expressions {
        explast {
          unary {
            unop {
            }
            exp {
              ellipsis: "7__eq"
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
            stat {
              list {
                varlist {
                  var {
                    indexname {
                      prefixexp {
                      }
                      Name: "\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263"
                    }
                  }
                  vars {
                  }
                }
                explist {
                  expressions {
                    binary {
                      leftexp {
                        true: 0
                      }
                      binop {
                      }
                      rightexp {
                      }
                    }
                  }
                  explast {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          exprassign {
                            key {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      binary {
                                        leftexp {
                                        }
                                        binop {
                                          concat: 76
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                              true: 0
                                            }
                                            binop {
                                              concat: 0
                                            }
                                            rightexp {
                                              binary {
                                                leftexp {
                                                  str: "getupvalue"
                                                }
                                                binop {
                                                }
                                                rightexp {
                                                  nil: 0
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                      concat: 4
                                    }
                                    rightexp {
                                      ellipsis: "\\001\\003"
                                    }
                                  }
                                }
                                binop {
                                  concat: 76
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      binary {
                                        leftexp {
                                        }
                                        binop {
                                          concat: 0
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                              binary {
                                                leftexp {
                                                  number: 32.953125
                                                }
                                                binop {
                                                  concat: 256
                                                }
                                                rightexp {
                                                  binary {
                                                    leftexp {
                                                      true: 0
                                                    }
                                                    binop {
                                                    }
                                                    rightexp {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            binop {
                                              notEqual: 268449536
                                            }
                                            rightexp {
                                            }
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                      concat: 64
                                    }
                                    rightexp {
                                      ellipsis: ")\\000\\000\\000"
                                    }
                                  }
                                }
                              }
                            }
                            value {
                              binary {
                                leftexp {
                                }
                                binop {
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                        fields {
                          field {
                          }
                          sep {
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: false
            }
            laststat {
              break: 76
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  laststat {
    break: 4294967287
  }
}
