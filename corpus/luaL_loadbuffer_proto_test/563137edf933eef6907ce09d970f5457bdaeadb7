chunk {
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          nil: 0
        }
        explast {
          tableconstructor {
            fieldlist {
              firstField {
                expression {
                  binary {
                    leftexp {
                      number: -2.00390625
                    }
                    binop {
                      concat: 0
                    }
                    rightexp {
                      binary {
                        leftexp {
                          unary {
                            unop {
                              length: 0
                            }
                            exp {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                    expression {
                                      binary {
                                        leftexp {
                                          number: 0
                                        }
                                        binop {
                                          notEqual: 0
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                            }
                                            binop {
                                              lessEqual: 0
                                            }
                                            rightexp {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  fields {
                                    field {
                                      expression {
                                        binary {
                                          leftexp {
                                            number: 6.48809496819217e-310
                                          }
                                          binop {
                                            or: 6488064
                                          }
                                          rightexp {
                                            binary {
                                              leftexp {
                                              }
                                              binop {
                                                greater: 0
                                              }
                                              rightexp {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    sep {
                                      comma: 1886679808
                                    }
                                  }
                                  lastSep {
                                    semicolon: 0
                                  }
                                }
                              }
                            }
                          }
                        }
                        binop {
                          lessEqual: 0
                        }
                        rightexp {
                        }
                      }
                    }
                  }
                }
              }
              fields {
                field {
                  expression {
                    binary {
                      leftexp {
                        number: 0
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        unary {
                          unop {
                            not: 0
                          }
                          exp {
                          }
                        }
                      }
                    }
                  }
                }
                sep {
                }
              }
              lastSep {
                comma: 654311424
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: "\343\376\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\214\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
        num: 4
      }
      startexp {
      }
      stopexp {
      }
      stepexp {
        number: -2.00390625
      }
      doblock {
        block {
          chunk {
            stat {
              ifstat {
                condition {
                  prefixexp {
                  }
                }
                first {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: 2.00390625
      }
      stopexp {
        prefixexp {
          exp {
          }
        }
      }
      stepexp {
        number: 416.0029296875
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
}
