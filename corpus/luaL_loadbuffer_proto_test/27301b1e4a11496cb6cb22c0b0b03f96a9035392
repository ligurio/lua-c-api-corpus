chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
          }
          binop {
            greater: 7
          }
          rightexp {
            function {
              body {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
          }
          binop {
            greater: 7
          }
          rightexp {
            binary {
              leftexp {
                prefixexp {
                  exp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            number: -48.00000000000005
                          }
                          binop {
                            concat: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                                number: 1.0728402099575969e+253
                              }
                              binop {
                                exp: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    number: -48.00000000000005
                                  }
                                  binop {
                                    concat: 0
                                  }
                                  rightexp {
                                    binary {
                                      leftexp {
                                        true: 7
                                      }
                                      binop {
                                        exp: 0
                                      }
                                      rightexp {
                                        number: 116.95316997449845
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        number: 0
                      }
                    }
                  }
                }
              }
              binop {
                exp: 0
              }
              rightexp {
                number: 4.4501478662172318e-308
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: "fuse"
                  num: 0
                }
                funcbody {
                  block {
                    chunk {
                      stat {
                        ifstat {
                          condition {
                            true: 0
                          }
                          first {
                            chunk {
                              laststat {
                              }
                            }
                          }
                          clauses {
                            condition {
                            }
                            block {
                              chunk {
                                laststat {
                                }
                              }
                            }
                          }
                          last {
                            chunk {
                              laststat {
                              }
                            }
                          }
                        }
                      }
                      laststat {
                      }
                    }
                  }
                }
              }
            }
            stat {
              localfunc {
                name {
                  name: ""
                  num: 0
                }
                funcbody {
                  block {
                    chunk {
                      stat {
                        ifstat {
                          condition {
                            function {
                              body {
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                          first {
                            chunk {
                              laststat {
                              }
                            }
                          }
                          clauses {
                            condition {
                            }
                            block {
                              chunk {
                                laststat {
                                }
                              }
                            }
                          }
                          last {
                            chunk {
                              laststat {
                              }
                            }
                          }
                        }
                      }
                      laststat {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 2305
      }
      startexp {
        str: "0"
      }
      stopexp {
        false: 25344
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
}
