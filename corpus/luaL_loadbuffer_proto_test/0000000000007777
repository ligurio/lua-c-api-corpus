chunk {
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            indexexpr {
              prefixexp {
                var {
                  name {
                    name: ""
                    num: 0
                  }
                }
              }
              exp {
                tableconstructor {
                  fieldlist {
                    firstField {
                      expression {
                        number: nan
                      }
                    }
                    fields {
                      field {
                        expression {
                          number: nan
                        }
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        expression {
                        }
                      }
                      sep {
                        semicolon: 2097152
                      }
                    }
                    fields {
                      field {
                        exprassign {
                          key {
                            true: 4
                          }
                          value {
                            number: 4.1145930515952665e+304
                          }
                        }
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        expression {
                          number: nan
                        }
                      }
                      sep {
                        semicolon: 2097152
                      }
                    }
                    fields {
                      field {
                        expression {
                          number: 5.4874215987477033e+303
                        }
                      }
                      sep {
                      }
                    }
                    lastSep {
                    }
                  }
                }
              }
            }
          }
        }
        args {
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
      explist {
        explast {
          false: 167772160
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            block {
              block {
                chunk {
                  stat {
                    func {
                      name {
                        firstname {
                          name: ""
                          num: 0
                        }
                        names {
                          name: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                          num: 0
                        }
                      }
                      body {
                        block {
                          chunk {
                            laststat {
                              explist {
                                explist {
                                  expressions {
                                    function {
                                      body {
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                  }
                                  expressions {
                                    function {
                                      body {
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                  }
                                  expressions {
                                    function {
                                      body {
                                        parlist {
                                        }
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                  }
                                  expressions {
                                  }
                                  expressions {
                                    function {
                                      body {
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                  }
                                  expressions {
                                    function {
                                      body {
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                  }
                                  explast {
                                    function {
                                      body {
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
}
