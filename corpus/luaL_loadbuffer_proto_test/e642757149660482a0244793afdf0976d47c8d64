chunk {
  stat {
    semicolon: true
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: 0
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
    block {
      block {
        chunk {
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    block {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
                tableconstructor {
                  fieldlist {
                    firstField {
                      expression {
                        number: 7.2294757342930368e+221
                      }
                    }
                    fields {
                      field {
                        expression {
                          binary {
                            leftexp {
                              number: -4.9591064453125e-05
                            }
                            binop {
                              mult: 4
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  number: -4.9591064453125e-05
                                }
                                binop {
                                  mult: 4
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      number: -4.9591064453125e-05
                                    }
                                    binop {
                                      mult: 4
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          number: -4.9591064453125e-05
                                        }
                                        binop {
                                          mult: 4
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                              number: -4.9591064453125e-05
                                            }
                                            binop {
                                              mult: 4
                                            }
                                            rightexp {
                                              binary {
                                                leftexp {
                                                  number: -4.9591064453125e-05
                                                }
                                                binop {
                                                  mult: 4
                                                }
                                                rightexp {
                                                  binary {
                                                    leftexp {
                                                      number: -3.0517578125e-05
                                                    }
                                                    binop {
                                                      concat: 4
                                                    }
                                                    rightexp {
                                                      binary {
                                                        leftexp {
                                                          number: -3.0517578125e-05
                                                        }
                                                        binop {
                                                          mult: 4
                                                        }
                                                        rightexp {
                                                          binary {
                                                            leftexp {
                                                              number: -3.0517578125e-05
                                                            }
                                                            binop {
                                                            }
                                                            rightexp {
                                                              ellipsis: "getupvalue"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        expression {
                          tableconstructor {
                          }
                        }
                      }
                      sep {
                      }
                    }
                    lastSep {
                      comma: 0
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    laststat {
                      explist {
                        explist {
                          explast {
                            true: 0
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            whilecycle {
              condition {
                tableconstructor {
                  fieldlist {
                    firstField {
                      expression {
                        number: 7.2294757342930368e+221
                      }
                    }
                    fields {
                      field {
                        expression {
                          binary {
                            leftexp {
                              number: -4.9591064453125e-05
                            }
                            binop {
                              mult: 4
                            }
                            rightexp {
                              binary {
                                leftexp {
                                }
                                binop {
                                  mult: 4
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      number: -4.9591064453125e-05
                                    }
                                    binop {
                                      mult: 4
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          number: -4.9591064453125e-05
                                        }
                                        binop {
                                          concat: 4
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                              number: -4.9591064453125e-05
                                            }
                                            binop {
                                              mult: 4
                                            }
                                            rightexp {
                                              binary {
                                                leftexp {
                                                  number: -3.0517578125e-05
                                                }
                                                binop {
                                                  mult: 4
                                                }
                                                rightexp {
                                                  binary {
                                                    leftexp {
                                                      number: -3.0517578125e-05
                                                    }
                                                    binop {
                                                      concat: 4
                                                    }
                                                    rightexp {
                                                      str: "getupv\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000alue"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        expression {
                          tableconstructor {
                          }
                        }
                      }
                      sep {
                      }
                    }
                    lastSep {
                      comma: 0
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      semicolon: true
                    }
                    stat {
                    }
                    laststat {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexexpr {
            prefixexp {
              functioncall {
                prefArgs {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                        }
                      }
                    }
                  }
                  args {
                  }
                }
              }
            }
            exp {
            }
          }
        }
        vars {
          indexexpr {
            prefixexp {
              functioncall {
                prefArgs {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          functioncall {
                            prefArgs {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                      functioncall {
                                        prefArgs {
                                          prefixexp {
                                          }
                                          args {
                                          }
                                        }
                                      }
                                    }
                                    args {
                                    }
                                  }
                                }
                              }
                              args {
                              }
                            }
                          }
                        }
                        args {
                        }
                      }
                    }
                  }
                  args {
                  }
                }
              }
            }
            exp {
            }
          }
        }
        vars {
          indexexpr {
            prefixexp {
              functioncall {
                prefArgs {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          var {
                            indexexpr {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                      functioncall {
                                        prefArgs {
                                          prefixexp {
                                            var {
                                              indexexpr {
                                                prefixexp {
                                                }
                                                exp {
                                                }
                                              }
                                            }
                                          }
                                          args {
                                          }
                                        }
                                      }
                                    }
                                    args {
                                    }
                                  }
                                }
                              }
                              exp {
                              }
                            }
                          }
                        }
                        args {
                        }
                      }
                    }
                  }
                  args {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                        lastSep {
                          semicolon: 100744448
                        }
                      }
                    }
                  }
                }
              }
            }
            exp {
            }
          }
        }
        vars {
          indexexpr {
            prefixexp {
              functioncall {
                prefArgs {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          functioncall {
                            prefArgs {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                      functioncall {
                                        prefArgs {
                                          prefixexp {
                                            functioncall {
                                              prefArgs {
                                                prefixexp {
                                                  functioncall {
                                                    prefArgs {
                                                      prefixexp {
                                                        functioncall {
                                                          prefArgs {
                                                            prefixexp {
                                                              functioncall {
                                                                prefArgs {
                                                                  prefixexp {
                                                                    functioncall {
                                                                      prefArgs {
                                                                        prefixexp {
                                                                        }
                                                                        args {
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                  args {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                            args {
                                                            }
                                                          }
                                                        }
                                                      }
                                                      args {
                                                      }
                                                    }
                                                  }
                                                }
                                                args {
                                                }
                                              }
                                            }
                                          }
                                          args {
                                          }
                                        }
                                      }
                                    }
                                    args {
                                    }
                                  }
                                }
                              }
                              args {
                              }
                            }
                          }
                        }
                        args {
                        }
                      }
                    }
                  }
                  args {
                  }
                }
              }
            }
            exp {
            }
          }
        }
        vars {
          indexexpr {
            prefixexp {
              functioncall {
                prefArgs {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          functioncall {
                            prefArgs {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                      functioncall {
                                        prefArgs {
                                          prefixexp {
                                            functioncall {
                                            }
                                          }
                                          args {
                                          }
                                        }
                                      }
                                    }
                                    args {
                                    }
                                  }
                                }
                              }
                              args {
                              }
                            }
                          }
                        }
                        args {
                        }
                      }
                    }
                  }
                  args {
                  }
                }
              }
            }
            exp {
            }
          }
        }
      }
      explist {
        explast {
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  laststat {
    break: 5120
  }
}
