chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            block {
              block {
                chunk {
                  stat {
                    localfunc {
                      name {
                        name: ""
                        num: 0
                      }
                      funcbody {
                        block {
                          chunk {
                            stat {
                            }
                          }
                        }
                      }
                    }
                  }
                  laststat {
                    break: 0
                  }
                }
              }
            }
          }
          stat {
            semicolon: false
          }
          stat {
            localfunc {
              name {
                name: "g"
                num: 0
              }
              funcbody {
                parlist {
                  ellipsis: ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
                }
                block {
                  chunk {
                    stat {
                      semicolon: false
                    }
                  }
                }
              }
            }
          }
          stat {
            block {
              block {
                chunk {
                  stat {
                    localfunc {
                      name {
                        name: ""
                        num: 0
                      }
                      funcbody {
                        block {
                          chunk {
                            stat {
                            }
                          }
                        }
                      }
                    }
                  }
                  laststat {
                    break: 0
                  }
                }
              }
            }
          }
          laststat {
            break: 0
          }
        }
      }
      condition {
      }
    }
  }
}
