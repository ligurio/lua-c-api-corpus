chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        true: 18176
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
              }
              doblock {
                block {
                  chunk {
                    stat {
                      list {
                        varlist {
                          var {
                          }
                          vars {
                            name {
                              name: ""
                              num: 117440512
                            }
                          }
                          vars {
                          }
                        }
                        explist {
                          explast {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    forcyclename {
                      name {
                        name: ""
                        num: 44
                      }
                      startexp {
                        binary {
                          leftexp {
                          }
                          binop {
                            or: 0
                          }
                          rightexp {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                }
                                fields {
                                  field {
                                    expression {
                                      str: "H"
                                    }
                                  }
                                  sep {
                                    comma: 65536
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      stopexp {
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
              }
              condition {
              }
            }
          }
        }
      }
      condition {
        str: "\000\000\377\220"
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
}
