chunk {
  stat {
    whilecycle {
      condition {
        nil: 536870912
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
      expressions {
        expressions {
          binary {
            leftexp {
            }
            binop {
            }
            rightexp {
              number: 0
            }
          }
        }
        expressions {
          binary {
            leftexp {
              binary {
                leftexp {
                  number: -0
                }
                binop {
                  or: 4194304
                }
                rightexp {
                }
              }
            }
            binop {
              equal: 1073741824
            }
            rightexp {
              number: 0
            }
          }
        }
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
      expressions {
        expressions {
          binary {
            leftexp {
            }
            binop {
              equal: 1073741824
            }
            rightexp {
            }
          }
        }
        expressions {
          binary {
            leftexp {
              number: 0
            }
            binop {
              equal: 4194304
            }
            rightexp {
              number: 0
            }
          }
        }
        explast {
          unary {
            unop {
            }
            exp {
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              break: 8192
            }
          }
        }
      }
    }
    semicolon: true
  }
}
