chunk {
  stat {
    localfunc {
      name {
        name: "abort"
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        ellipsis: "1"
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
  }
  stat {
    func {
      name {
        firstname {
          name: "2"
          num: 0
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
                vars {
                }
                vars {
                  name {
                    name: "\265"
                    num: 8
                  }
                }
                vars {
                }
                vars {
                }
              }
              explist {
                expressions {
                }
                explast {
                  unary {
                    unop {
                      negate: 0
                    }
                    exp {
                      binary {
                        leftexp {
                          unary {
                            unop {
                              not: 67108864
                            }
                            exp {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                      var {
                                        name {
                                          name: "2"
                                          num: 0
                                        }
                                      }
                                    }
                                    args {
                                      explist {
                                        explist {
                                          explast {
                                            unary {
                                              unop {
                                                negate: 0
                                              }
                                              exp {
                                                binary {
                                                  leftexp {
                                                    unary {
                                                      unop {
                                                        length: 1
                                                      }
                                                      exp {
                                                        tableconstructor {
                                                        }
                                                      }
                                                    }
                                                  }
                                                  binop {
                                                    sub: 2
                                                  }
                                                  rightexp {
                                                    unary {
                                                      unop {
                                                        negate: 0
                                                      }
                                                      exp {
                                                        binary {
                                                          leftexp {
                                                            number: 4
                                                          }
                                                          binop {
                                                          }
                                                          rightexp {
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        binop {
                        }
                        rightexp {
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            semicolon: true
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    block {
      block {
        chunk {
        }
      }
    }
  }
  stat {
  }
  stat {
    semicolon: true
  }
  laststat {
    semicolon: true
  }
}
