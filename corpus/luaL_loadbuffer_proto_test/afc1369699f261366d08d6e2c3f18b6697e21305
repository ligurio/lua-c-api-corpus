chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
            }
            stat {
            }
            stat {
            }
            stat {
            }
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                  nil: 0
                }
                stopexp {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              list {
                varlist {
                  var {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                exprassign {
                                  key {
                                    unary {
                                      unop {
                                        length: 0
                                      }
                                      exp {
                                        tableconstructor {
                                        }
                                      }
                                    }
                                  }
                                  value {
                                    prefixexp {
                                      functioncall {
                                        prefArgs {
                                          prefixexp {
                                            var {
                                              indexname {
                                                prefixexp {
                                                }
                                                Name: "char"
                                              }
                                            }
                                          }
                                          args {
                                            explist {
                                              explist {
                                                expressions {
                                                  number: 0
                                                }
                                                explast {
                                                  unary {
                                                    unop {
                                                      length: 2
                                                    }
                                                    exp {
                                                      tableconstructor {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      exp {
                      }
                    }
                  }
                }
                explist {
                  explast {
                    str: ""
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
