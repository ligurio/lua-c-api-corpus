chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            forcyclename {
              name {
                name: ""
                num: 0
              }
              startexp {
                binary {
                  leftexp {
                    unary {
                      unop {
                        length: 2
                      }
                      exp {
                        tableconstructor {
                          fieldlist {
                            firstField {
                              expression {
                              }
                            }
                            fields {
                              field {
                              }
                              sep {
                              }
                            }
                            fields {
                              field {
                                expression {
                                }
                              }
                              sep {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  binop {
                    mod: 0
                  }
                  rightexp {
                    unary {
                      unop {
                        length: 0
                      }
                      exp {
                      }
                    }
                  }
                }
              }
              stopexp {
                number: 0
              }
              stepexp {
                unary {
                  unop {
                    length: 4
                  }
                  exp {
                    tableconstructor {
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      semicolon: true
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
}
