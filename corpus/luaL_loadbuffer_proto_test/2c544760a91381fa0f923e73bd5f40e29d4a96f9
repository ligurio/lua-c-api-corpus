chunk {
  stat {
    call {
    }
    semicolon: false
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
            }
          }
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: "\3539\001\000\000\000\000\000"
          }
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
          indexname {
            prefixexp {
              var {
                indexname {
                  prefixexp {
                  }
                  Name: "\325"
                }
              }
            }
            Name: ""
          }
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
          indexexpr {
            prefixexp {
              exp {
              }
            }
            exp {
            }
          }
        }
        vars {
          indexexpr {
            prefixexp {
              functioncall {
                namedArgs {
                  prefixexp {
                    var {
                      indexname {
                        prefixexp {
                          exp {
                            true: 8224
                          }
                        }
                        Name: ""
                      }
                    }
                  }
                  name {
                    name: ""
                    num: 0
                  }
                  args {
                  }
                }
              }
            }
            exp {
            }
          }
        }
        vars {
        }
        vars {
          indexexpr {
            prefixexp {
              functioncall {
              }
            }
            exp {
              unary {
                unop {
                  length: 0
                }
                exp {
                }
              }
            }
          }
        }
      }
      explist {
        expressions {
          number: 2.91498731046335e-322
        }
        explast {
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
            unary {
              unop {
                not: 0
              }
              exp {
              }
            }
          }
          binop {
          }
          rightexp {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
          false: 0
        }
        block {
          chunk {
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                  }
                }
              }
            }
            stat {
              block {
                block {
                  chunk {
                  }
                }
              }
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                  }
                }
              }
            }
            stat {
              call {
              }
              semicolon: true
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              ifstat {
                condition {
                  unary {
                    unop {
                      negate: 29551
                    }
                    exp {
                    }
                  }
                }
                first {
                  chunk {
                  }
                }
                clauses {
                  condition {
                    number: 7.46014145261229e-316
                  }
                  block {
                    chunk {
                      laststat {
                        break: 0
                      }
                    }
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
                clauses {
                  condition {
                    false: 0
                  }
                  block {
                    chunk {
                      stat {
                        call {
                        }
                      }
                      stat {
                        localnames {
                          namelist {
                            firstname {
                              name: ""
                              num: 0
                            }
                          }
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                          prefArgs {
                            prefixexp {
                              functioncall {
                                namedArgs {
                                  prefixexp {
                                  }
                                  name {
                                    name: "$"
                                    num: 0
                                  }
                                  args {
                                  }
                                }
                              }
                            }
                            args {
                            }
                          }
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                          prefArgs {
                            prefixexp {
                            }
                            args {
                            }
                          }
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        ifstat {
                          condition {
                            unary {
                              unop {
                                negate: 29551
                              }
                              exp {
                              }
                            }
                          }
                          first {
                            chunk {
                            }
                          }
                          clauses {
                            condition {
                              number: 7.46014145261229e-316
                            }
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                      stat {
                        ifstat {
                          condition {
                          }
                          first {
                            chunk {
                            }
                          }
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                          namedArgs {
                            prefixexp {
                            }
                            name {
                              name: "jlogjjjjjjjjjjDjjjj"
                              num: 0
                            }
                            args {
                            }
                          }
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        block {
                          block {
                            chunk {
                              laststat {
                                explist {
                                  explist {
                                    explast {
                                      ellipsis: "{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        semicolon: true
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                        semicolon: false
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                          prefArgs {
                            prefixexp {
                              functioncall {
                                prefArgs {
                                  prefixexp {
                                    var {
                                      name {
                                        name: "__band"
                                        num: 0
                                      }
                                    }
                                  }
                                  args {
                                  }
                                }
                              }
                            }
                            args {
                            }
                          }
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
                namedArgs {
                  prefixexp {
                  }
                  name {
                    name: "jlogjjjjjjjjjjDjjjj"
                    num: 0
                  }
                  args {
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
                clauses {
                  condition {
                    number: 7.46014145261229e-316
                  }
                  block {
                    chunk {
                      stat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
                namedArgs {
                  prefixexp {
                  }
                  name {
                    name: ""
                    num: 524288
                  }
                  args {
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              semicolon: true
            }
            stat {
              call {
              }
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                    str: "\000\000\000\000\000\000\000\023"
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
          ellipsis: "\\377\\377\\377\\374"
        }
        block {
          chunk {
            stat {
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    func {
      name {
        firstname {
          name: "U"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "U"
          num: 0
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
}
