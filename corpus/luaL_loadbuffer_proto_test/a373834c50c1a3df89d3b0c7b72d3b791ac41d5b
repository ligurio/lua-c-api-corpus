chunk {
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        whilecycle {
                          condition {
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  whilecycle {
                                    condition {
                                      str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                }
                                stat {
                                  localfunc {
                                    name {
                                      name: ""
                                      num: 0
                                    }
                                    funcbody {
                                      block {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                }
                                stat {
                                  localfunc {
                                    name {
                                      name: ""
                                      num: 0
                                    }
                                    funcbody {
                                      block {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                  semicolon: false
                                }
                                stat {
                                }
                                stat {
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        func {
                          name {
                            firstname {
                              name: ""
                              num: 0
                            }
                            lastname {
                              name: ""
                              num: 0
                            }
                          }
                          body {
                            block {
                              chunk {
                                stat {
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        whilecycle {
                          condition {
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  semicolon: true
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        repeatcycle {
                          block {
                            chunk {
                              laststat {
                              }
                            }
                          }
                          condition {
                          }
                        }
                      }
                      stat {
                        list {
                          varlist {
                            var {
                            }
                            vars {
                            }
                            vars {
                            }
                          }
                          explist {
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            explast {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        repeatcycle {
                          block {
                            chunk {
                              stat {
                                localfunc {
                                  name {
                                    name: ""
                                    num: 0
                                  }
                                  funcbody {
                                    block {
                                      chunk {
                                        stat {
                                          call {
                                            prefArgs {
                                              prefixexp {
                                              }
                                              args {
                                                str: "\312"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              stat {
                                repeatcycle {
                                  block {
                                    chunk {
                                      stat {
                                        forcyclename {
                                          name {
                                            name: ""
                                            num: 0
                                          }
                                          startexp {
                                          }
                                          stopexp {
                                          }
                                          stepexp {
                                          }
                                          doblock {
                                            block {
                                              chunk {
                                                stat {
                                                  forcyclename {
                                                    name {
                                                      name: ""
                                                      num: 0
                                                    }
                                                    startexp {
                                                      binary {
                                                        leftexp {
                                                          number: 0
                                                        }
                                                        binop {
                                                        }
                                                        rightexp {
                                                          binary {
                                                            leftexp {
                                                              number: 358.08969517111836
                                                            }
                                                            binop {
                                                              exp: 0
                                                            }
                                                            rightexp {
                                                              prefixexp {
                                                                exp {
                                                                  binary {
                                                                    leftexp {
                                                                      prefixexp {
                                                                        exp {
                                                                          binary {
                                                                            leftexp {
                                                                              number: 0
                                                                            }
                                                                            binop {
                                                                              concat: 0
                                                                            }
                                                                            rightexp {
                                                                              binary {
                                                                                leftexp {
                                                                                  number: 358.08969533209165
                                                                                }
                                                                                binop {
                                                                                  or: 4261412864
                                                                                }
                                                                                rightexp {
                                                                                  number: 118.78498777467757
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                    binop {
                                                                      add: 268435456
                                                                    }
                                                                    rightexp {
                                                                      binary {
                                                                        leftexp {
                                                                          prefixexp {
                                                                          }
                                                                        }
                                                                        binop {
                                                                        }
                                                                        rightexp {
                                                                          prefixexp {
                                                                            exp {
                                                                              binary {
                                                                                leftexp {
                                                                                }
                                                                                binop {
                                                                                  notEqual: 0
                                                                                }
                                                                                rightexp {
                                                                                  binary {
                                                                                    leftexp {
                                                                                      number: 16.380605958255728
                                                                                    }
                                                                                    binop {
                                                                                    }
                                                                                    rightexp {
                                                                                      prefixexp {
                                                                                        exp {
                                                                                          binary {
                                                                                            leftexp {
                                                                                              nil: 0
                                                                                            }
                                                                                            binop {
                                                                                              mod: 0
                                                                                            }
                                                                                            rightexp {
                                                                                              binary {
                                                                                                leftexp {
                                                                                                  prefixexp {
                                                                                                  }
                                                                                                }
                                                                                                binop {
                                                                                                  mod: 268435456
                                                                                                }
                                                                                                rightexp {
                                                                                                  prefixexp {
                                                                                                    exp {
                                                                                                      number: 358.08969533209165
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    stopexp {
                                                    }
                                                    stepexp {
                                                    }
                                                    doblock {
                                                      block {
                                                        chunk {
                                                          stat {
                                                            forcyclename {
                                                              name {
                                                                name: ""
                                                                num: 0
                                                              }
                                                              startexp {
                                                                prefixexp {
                                                                  exp {
                                                                    binary {
                                                                      leftexp {
                                                                        nil: 0
                                                                      }
                                                                      binop {
                                                                        mod: 0
                                                                      }
                                                                      rightexp {
                                                                        binary {
                                                                          leftexp {
                                                                            number: 16.380605958255728
                                                                          }
                                                                          binop {
                                                                            mod: 268435456
                                                                          }
                                                                          rightexp {
                                                                            prefixexp {
                                                                              exp {
                                                                                prefixexp {
                                                                                  functioncall {
                                                                                    prefArgs {
                                                                                      prefixexp {
                                                                                        exp {
                                                                                          function {
                                                                                            body {
                                                                                              parlist {
                                                                                                ellipsis: "\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306"
                                                                                              }
                                                                                              block {
                                                                                                chunk {
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                      args {
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              stopexp {
                                                              }
                                                              stepexp {
                                                              }
                                                              doblock {
                                                                block {
                                                                  chunk {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          stat {
                                                            localfunc {
                                                              name {
                                                                name: ""
                                                                num: 0
                                                              }
                                                              funcbody {
                                                                block {
                                                                  chunk {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          stat {
                                                          }
                                                          stat {
                                                            forcyclename {
                                                              name {
                                                                name: ""
                                                                num: 0
                                                              }
                                                              startexp {
                                                              }
                                                              stopexp {
                                                              }
                                                              stepexp {
                                                              }
                                                              doblock {
                                                                block {
                                                                  chunk {
                                                                    laststat {
                                                                      semicolon: true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          stat {
                                                            repeatcycle {
                                                              block {
                                                                chunk {
                                                                }
                                                              }
                                                              condition {
                                                                ellipsis: ""
                                                              }
                                                            }
                                                            semicolon: true
                                                          }
                                                          stat {
                                                            forcyclename {
                                                              name {
                                                                name: ""
                                                                num: 0
                                                              }
                                                              startexp {
                                                              }
                                                              stopexp {
                                                              }
                                                              stepexp {
                                                                false: 0
                                                              }
                                                              doblock {
                                                                block {
                                                                  chunk {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          stat {
                                                            forcyclename {
                                                              name {
                                                                name: ""
                                                                num: 0
                                                              }
                                                              startexp {
                                                              }
                                                              stopexp {
                                                              }
                                                              stepexp {
                                                              }
                                                              doblock {
                                                                block {
                                                                  chunk {
                                                                    stat {
                                                                      forcyclelist {
                                                                        names {
                                                                          firstname {
                                                                            name: ""
                                                                            num: 0
                                                                          }
                                                                        }
                                                                        expressions {
                                                                          explast {
                                                                            ellipsis: "\226"
                                                                          }
                                                                        }
                                                                        doblock {
                                                                          block {
                                                                            chunk {
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                      semicolon: true
                                                                    }
                                                                    stat {
                                                                      semicolon: true
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          stat {
                                                            forcyclename {
                                                              name {
                                                                name: ""
                                                                num: 0
                                                              }
                                                              startexp {
                                                              }
                                                              stopexp {
                                                                tableconstructor {
                                                                  fieldlist {
                                                                    firstField {
                                                                    }
                                                                    fields {
                                                                      field {
                                                                        exprassign {
                                                                          key {
                                                                          }
                                                                          value {
                                                                            prefixexp {
                                                                              exp {
                                                                                binary {
                                                                                  leftexp {
                                                                                    number: 0
                                                                                  }
                                                                                  binop {
                                                                                  }
                                                                                  rightexp {
                                                                                    binary {
                                                                                      leftexp {
                                                                                        number: 358.08969517111836
                                                                                      }
                                                                                      binop {
                                                                                        exp: 0
                                                                                      }
                                                                                      rightexp {
                                                                                        prefixexp {
                                                                                          exp {
                                                                                            binary {
                                                                                              leftexp {
                                                                                                prefixexp {
                                                                                                  exp {
                                                                                                    binary {
                                                                                                      leftexp {
                                                                                                        number: 0
                                                                                                      }
                                                                                                      binop {
                                                                                                        concat: 0
                                                                                                      }
                                                                                                      rightexp {
                                                                                                        binary {
                                                                                                          leftexp {
                                                                                                            number: 358.08969533209165
                                                                                                          }
                                                                                                          binop {
                                                                                                            or: 4261412864
                                                                                                          }
                                                                                                          rightexp {
                                                                                                            number: 118.78498777467757
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                              binop {
                                                                                                add: 268435456
                                                                                              }
                                                                                              rightexp {
                                                                                                binary {
                                                                                                  leftexp {
                                                                                                    prefixexp {
                                                                                                    }
                                                                                                  }
                                                                                                  binop {
                                                                                                    sub: 4261412864
                                                                                                  }
                                                                                                  rightexp {
                                                                                                    prefixexp {
                                                                                                      exp {
                                                                                                        binary {
                                                                                                          leftexp {
                                                                                                          }
                                                                                                          binop {
                                                                                                            notEqual: 0
                                                                                                          }
                                                                                                          rightexp {
                                                                                                            binary {
                                                                                                              leftexp {
                                                                                                                number: 16.380605958255728
                                                                                                              }
                                                                                                              binop {
                                                                                                              }
                                                                                                              rightexp {
                                                                                                                prefixexp {
                                                                                                                  exp {
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                      sep {
                                                                      }
                                                                    }
                                                                    fields {
                                                                      field {
                                                                      }
                                                                      sep {
                                                                        semicolon: 6488064
                                                                      }
                                                                    }
                                                                    fields {
                                                                      field {
                                                                      }
                                                                      sep {
                                                                        comma: 0
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              doblock {
                                                                block {
                                                                  chunk {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  condition {
                                    nil: 0
                                  }
                                }
                              }
                              laststat {
                                semicolon: true
                              }
                            }
                          }
                          condition {
                          }
                        }
                      }
                      stat {
                      }
                    }
                  }
                }
              }
            }
            stat {
            }
            laststat {
              explist {
                explist {
                  expressions {
                    str: "\000\000"
                  }
                  expressions {
                    binary {
                      leftexp {
                      }
                      binop {
                      }
                      rightexp {
                        binary {
                          leftexp {
                            prefixexp {
                              functioncall {
                                prefArgs {
                                  prefixexp {
                                    exp {
                                      function {
                                        body {
                                          parlist {
                                            ellipsis: "\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306"
                                          }
                                          block {
                                            chunk {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  args {
                                  }
                                }
                              }
                            }
                          }
                          binop {
                          }
                          rightexp {
                          }
                        }
                      }
                    }
                  }
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              prefixexp {
                functioncall {
                  prefArgs {
                    prefixexp {
                    }
                    args {
                      str: "/"
                    }
                  }
                }
              }
            }
          }
        }
      }
      explist {
        explast {
        }
      }
    }
  }
  laststat {
    explist {
      explist {
        expressions {
          unary {
            unop {
              length: 4294966889
            }
            exp {
            }
          }
        }
        expressions {
          binary {
            leftexp {
            }
            binop {
            }
            rightexp {
              binary {
                leftexp {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          exp {
                            function {
                              body {
                                parlist {
                                  ellipsis: "\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306\306"
                                }
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                        }
                        args {
                        }
                      }
                    }
                  }
                }
                binop {
                }
                rightexp {
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
}
