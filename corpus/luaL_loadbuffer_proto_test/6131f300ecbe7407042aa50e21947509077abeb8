chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 2124544
      }
      startexp {
      }
      stopexp {
        false: 2105344
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
      expressions {
        expressions {
          unary {
            unop {
            }
            exp {
              prefixexp {
                exp {
                  binary {
                    leftexp {
                      prefixexp {
                        functioncall {
                        }
                      }
                    }
                    binop {
                      greaterEqual: 0
                    }
                    rightexp {
                      number: 3
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          unary {
            unop {
              length: 5
            }
            exp {
              unary {
                unop {
                }
                exp {
                  number: 3.7857669957758575e-270
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 7012384
      }
      startexp {
      }
      stopexp {
        number: 3
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
