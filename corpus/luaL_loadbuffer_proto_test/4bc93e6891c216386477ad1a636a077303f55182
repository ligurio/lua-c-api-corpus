chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            prefixexp {
              functioncall {
                prefArgs {
                  prefixexp {
                    var {
                      name {
                        name: "collectgarbage"
                        num: 0
                      }
                    }
                  }
                  args {
                    str: "WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW"
                  }
                }
              }
            }
          }
          binop {
          }
          rightexp {
            number: -0
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        number: -104
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  binary {
                    leftexp {
                      prefixexp {
                        functioncall {
                          prefArgs {
                            prefixexp {
                              var {
                                name {
                                  name: "collectgarbage"
                                  num: 0
                                }
                              }
                            }
                            args {
                              str: "stop"
                            }
                          }
                        }
                      }
                    }
                    binop {
                    }
                    rightexp {
                      number: -0
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
