chunk {
  stat {
    ifstat {
      condition {
        prefixexp {
          exp {
          }
        }
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    semicolon: false
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 1
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    block {
      block {
        chunk {
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                  name {
                    name: "\377\377\377\001"
                    num: 25344
                  }
                }
                vars {
                }
                vars {
                }
                vars {
                }
                vars {
                }
              }
              explist {
                explast {
                  unary {
                    unop {
                      negate: 0
                    }
                    exp {
                      binary {
                        leftexp {
                          unary {
                            unop {
                              length: 0
                            }
                            exp {
                            }
                          }
                        }
                        binop {
                        }
                        rightexp {
                          unary {
                            unop {
                              negate: 0
                            }
                            exp {
                              binary {
                                leftexp {
                                  unary {
                                    unop {
                                      length: 2
                                    }
                                    exp {
                                      prefixexp {
                                      }
                                    }
                                  }
                                }
                                binop {
                                }
                                rightexp {
                                  prefixexp {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
          }
        }
      }
      condition {
        nil: 3825139712
      }
    }
  }
  stat {
    ifstat {
      condition {
        ellipsis: ""
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 64256
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          explist {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
  }
}
