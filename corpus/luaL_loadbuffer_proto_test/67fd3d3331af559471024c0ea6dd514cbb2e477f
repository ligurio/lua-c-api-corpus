chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            number: -0
                          }
                          binop {
                            equal: 0
                          }
                          rightexp {
                            number: 3.0000003501772881
                          }
                        }
                      }
                      binop {
                        sub: 4
                      }
                      rightexp {
                        function {
                          body {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  binop {
                    div: 134217728
                  }
                  rightexp {
                    number: 3
                  }
                }
              }
              binop {
                sub: 0
              }
              rightexp {
                tableconstructor {
                  fieldlist {
                    firstField {
                    }
                    lastSep {
                      semicolon: 0
                    }
                  }
                }
              }
            }
          }
          binop {
            sub: 0
          }
          rightexp {
            ellipsis: "\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277"
          }
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              explist {
                explist {
                  explast {
                    nil: 0
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
}
