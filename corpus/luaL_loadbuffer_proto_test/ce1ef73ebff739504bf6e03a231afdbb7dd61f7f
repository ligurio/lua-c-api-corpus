chunk {
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            block {
              block {
                chunk {
                  stat {
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            block {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                          stat {
                            list {
                              varlist {
                                var {
                                }
                                vars {
                                }
                                vars {
                                  name {
                                    name: "Z"
                                    num: 2
                                  }
                                }
                              }
                              explist {
                                expressions {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                      concat: 144
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          prefixexp {
                                            exp {
                                              binary {
                                                leftexp {
                                                }
                                                binop {
                                                  concat: 9
                                                }
                                                rightexp {
                                                  prefixexp {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        binop {
                                          concat: 16777220
                                        }
                                        rightexp {
                                          prefixexp {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                explast {
                                  prefixexp {
                                  }
                                }
                              }
                            }
                          }
                          stat {
                            list {
                              varlist {
                                var {
                                }
                                vars {
                                }
                                vars {
                                  name {
                                    name: "Z"
                                    num: 2
                                  }
                                }
                              }
                              explist {
                                expressions {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                      concat: 0
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          prefixexp {
                                          }
                                        }
                                        binop {
                                          concat: 4
                                        }
                                        rightexp {
                                          prefixexp {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                expressions {
                                  prefixexp {
                                  }
                                }
                                expressions {
                                  ellipsis: "\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345"
                                }
                                explast {
                                }
                              }
                            }
                          }
                        }
                      }
                      condition {
                        nil: 4
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                }
                vars {
                }
                vars {
                  name {
                    name: "\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345"
                    num: 2
                  }
                }
              }
              explist {
                expressions {
                  binary {
                    leftexp {
                    }
                    binop {
                      concat: 144
                    }
                    rightexp {
                      binary {
                        leftexp {
                          prefixexp {
                            exp {
                              binary {
                                leftexp {
                                  prefixexp {
                                  }
                                }
                                binop {
                                  concat: 9
                                }
                                rightexp {
                                  prefixexp {
                                  }
                                }
                              }
                            }
                          }
                        }
                        binop {
                          concat: 4
                        }
                        rightexp {
                          prefixexp {
                          }
                        }
                      }
                    }
                  }
                }
                explast {
                  prefixexp {
                  }
                }
              }
            }
          }
          stat {
            localnames {
              namelist {
                firstname {
                  name: ""
                  num: 0
                }
              }
            }
          }
        }
      }
      condition {
        nil: 4
      }
    }
  }
}
