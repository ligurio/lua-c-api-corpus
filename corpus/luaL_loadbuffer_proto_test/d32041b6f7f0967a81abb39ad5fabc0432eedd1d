chunk {
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
              }
              binop {
                less: 0
              }
              rightexp {
              }
            }
          }
          binop {
            lessEqual: 4
          }
          rightexp {
            binary {
              leftexp {
              }
              binop {
                lessEqual: 4
              }
              rightexp {
              }
            }
          }
        }
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
              }
              binop {
                less: 0
              }
              rightexp {
              }
            }
          }
          binop {
            lessEqual: 4
          }
          rightexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                  }
                  binop {
                    lessEqual: 4
                  }
                  rightexp {
                  }
                }
              }
              binop {
                less: 0
              }
              rightexp {
              }
            }
          }
        }
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
              }
              binop {
                less: 0
              }
              rightexp {
              }
            }
          }
          binop {
            lessEqual: 4
          }
          rightexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                  }
                  binop {
                    less: 0
                  }
                  rightexp {
                  }
                }
              }
              binop {
                less: 0
              }
              rightexp {
              }
            }
          }
        }
      }
      first {
        chunk {
        }
      }
    }
  }
}
