chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        expression {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                                expression {
                                                  tableconstructor {
                                                    fieldlist {
                                                      firstField {
                                                        expression {
                                                          tableconstructor {
                                                            fieldlist {
                                                              firstField {
                                                                expression {
                                                                  tableconstructor {
                                                                    fieldlist {
                                                                      firstField {
                                                                        expression {
                                                                          tableconstructor {
                                                                            fieldlist {
                                                                              firstField {
                                                                                expression {
                                                                                  unary {
                                                                                    unop {
                                                                                      not: 1024
                                                                                    }
                                                                                    exp {
                                                                                      tableconstructor {
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              lastSep {
                                              }
                                            }
                                          }
                                        }
                                      }
                                      lastSep {
                                        semicolon: 0
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        whilecycle {
                          condition {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  expression {
                                    tableconstructor {
                                      fieldlist {
                                        firstField {
                                          expression {
                                            tableconstructor {
                                              fieldlist {
                                                firstField {
                                                  expression {
                                                    tableconstructor {
                                                      fieldlist {
                                                        firstField {
                                                          expression {
                                                            tableconstructor {
                                                              fieldlist {
                                                                firstField {
                                                                  expression {
                                                                    tableconstructor {
                                                                      fieldlist {
                                                                        firstField {
                                                                          expression {
                                                                            tableconstructor {
                                                                              fieldlist {
                                                                                firstField {
                                                                                  expression {
                                                                                    tableconstructor {
                                                                                      fieldlist {
                                                                                        firstField {
                                                                                          expression {
                                                                                            unary {
                                                                                              unop {
                                                                                                not: 1024
                                                                                              }
                                                                                              exp {
                                                                                                tableconstructor {
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                        lastSep {
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                lastSep {
                                                  semicolon: 0
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  call {
                                    prefArgs {
                                      prefixexp {
                                      }
                                      args {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
              prefArgs {
                prefixexp {
                }
                args {
                }
              }
            }
          }
        }
      }
      condition {
        ellipsis: "H"
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
  }
}
