chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: "0.3E2"
        num: 0
      }
      startexp {
        binary {
          leftexp {
            binary {
              leftexp {
                prefixexp {
                  exp {
                    binary {
                      leftexp {
                        unary {
                          unop {
                          }
                          exp {
                            prefixexp {
                              exp {
                                str: "\\file:flush0D"
                              }
                            }
                          }
                        }
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                      }
                    }
                  }
                }
              }
              binop {
                less: 262144
              }
              rightexp {
              }
            }
          }
          binop {
            less: 262144
          }
          rightexp {
          }
        }
      }
      stopexp {
        nil: 0
      }
      stepexp {
        str: "\\file:flush0D"
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                }
                stopexp {
                }
                doblock {
                  block {
                    chunk {
                      laststat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
            stat {
              forcyclename {
                name {
                  name: "0.3E2"
                  num: 0
                }
                startexp {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                          prefixexp {
                            exp {
                              binary {
                                leftexp {
                                  unary {
                                    unop {
                                    }
                                    exp {
                                      prefixexp {
                                        exp {
                                          nil: 262144
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  concat: 0
                                }
                                rightexp {
                                  nil: 1
                                }
                              }
                            }
                          }
                        }
                        binop {
                          less: 262144
                        }
                        rightexp {
                        }
                      }
                    }
                    binop {
                      less: 262144
                    }
                    rightexp {
                    }
                  }
                }
                stopexp {
                  nil: 0
                }
                stepexp {
                  str: "\\filchunk {\n  stat {\n    repeatcycle {\n      block {\n        chunk {\n          stat {\n            forcyclename {\n              name {\n                name: \"\"\n                num: 0\n              }\n              startexp {\n                number: 0\n              }\n              stopexp {\n                number: 0\n              }\n              stepexp {\n                unary {\n                  unop {\n                    negate: 0\n                  }\n                  exp {\n                    number: 0\n                  }\n                }\n              }\n              doblock {\n                block {\n                  chunk {\n                    stat {\n                      list {\n                        varlist {\n                     e:flus     var {\n                          }\n                        }\n                        explist {\n                          explast {\n                            binary {\n                              leftexp {\n                                tableconstructor {\n                                }\n                              }\n                              binop {\n                                andh0D: 1\n                              }\n                              rightexp {\n                              }\n                            }\n                          }\n                        }\n                      }\n                      semicolon: true\n                    }\n                    stat {\n                      list {\n                        varlist {\n                          var {\n                          }\n                        }\n                        explist {\n                          explast {\n                            binary {\n                              leftexp {\n                                tableconstructor {\n                                }\n                              }\n                              binop {\n                                and: 1\n                              }\n                              rightexp {\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      condition {\n        nil: 0\n      }\n    }\n  }\n}\n"
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              call {
              }
              semicolon: true
            }
            stat {
              semicolon: true
            }
            laststat {
              break: 262144
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  laststat {
    break: 262144
  }
}
