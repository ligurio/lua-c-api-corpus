chunk {
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
          false: 0
        }
        block {
          chunk {
            stat {
              localnames {
                namelist {
                  firstname {
                    name: "jlogjjjjjjjjjjDjjjj"
                    num: 0
                  }
                  names {
                    name: "jlogjjjjjjjjjjDjjjj"
                    num: 0
                  }
                  names {
                    name: "jlogjjjjjjjjjjDjjjj"
                    num: 0
                  }
                  names {
                    name: "jlogjjjjjjjjjjjjjjj"
                    num: 0
                  }
                  names {
                    name: "jlogjjjjjjjjjjDjjjj"
                    num: 0
                  }
                  names {
                    name: "jlogjjjjjjjjjjDjjjj"
                    num: 0
                  }
                }
              }
            }
            stat {
              localnames {
                namelist {
                  firstname {
                    name: "+"
                    num: 0
                  }
                  names {
                    name: "jlogjjjjjjjjjjDjjjj"
                    num: 0
                  }
                  names {
                    name: "jlogjjjjjjDjjjj"
                    num: 0
                  }
                  names {
                    name: "+"
                    num: 2752512
                  }
                  names {
                    name: "jlog\226\225jjjjjjjjDjjjj"
                    num: 0
                  }
                  names {
                    name: "jlogjjjjjjjjjjDjjjj"
                    num: 67108868
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 4294967295
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
          false: 0
        }
        block {
          chunk {
            stat {
              call {
              }
            }
            stat {
              localnames {
                namelist {
                  firstname {
                    name: "+"
                    num: 0
                  }
                  names {
                    name: "jlogjjjjjjjjjjDjjjj"
                    num: 0
                  }
                  names {
                    name: "jlogjjjjjjDjjjj"
                    num: 0
                  }
                  names {
                    name: "+"
                    num: 2752512
                  }
                  names {
                    name: "jlog\226\225jjjjjjjjDjjjj"
                    num: 0
                  }
                  names {
                    name: "jlogjjjjjjjjjjDjjjj"
                    num: 67108868
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
              semicolon: true
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                    explist {
                      explist {
                        expressions {
                          str: "jlogjjjjjjjjjjjjjjj0"
                        }
                        explast {
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              call {
              }
              semicolon: true
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              semicolon: true
            }
            stat {
            }
            stat {
              call {
              }
              semicolon: true
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
              semicolon: true
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                    explist {
                      explist {
                        expressions {
                          str: "jlogjjjjjjjjjjjjjjj0"
                        }
                        explast {
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              ifstat {
                condition {
                  unary {
                    unop {
                      negate: 29551
                    }
                    exp {
                    }
                  }
                }
                first {
                  chunk {
                  }
                }
                clauses {
                  condition {
                    number: 7.46014145261229e-316
                  }
                  block {
                    chunk {
                      laststat {
                        break: 0
                      }
                    }
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
                clauses {
                  condition {
                    false: 0
                  }
                  block {
                    chunk {
                      stat {
                        call {
                        }
                      }
                      stat {
                        localnames {
                          namelist {
                            firstname {
                              name: ""
                              num: 0
                            }
                          }
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                        semicolon: true
                      }
                      stat {
                        call {
                        }
                        semicolon: true
                      }
                      stat {
                        semicolon: true
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                        semicolon: false
                      }
                      stat {
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                        semicolon: true
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        ifstat {
                          condition {
                            unary {
                              unop {
                                negate: 29551
                              }
                              exp {
                              }
                            }
                          }
                          first {
                            chunk {
                            }
                          }
                          clauses {
                            condition {
                              number: 7.46014145261229e-316
                            }
                            block {
                              chunk {
                                laststat {
                                  break: 0
                                }
                              }
                            }
                          }
                          last {
                            chunk {
                              stat {
                                localnames {
                                  namelist {
                                    firstname {
                                      name: ""
                                      num: 0
                                    }
                                  }
                                  explist {
                                    explast {
                                      unary {
                                        unop {
                                          not: 0
                                        }
                                        exp {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        ifstat {
                          condition {
                          }
                          first {
                            chunk {
                              stat {
                                semicolon: false
                              }
                              stat {
                                whilecycle {
                                  condition {
                                    tableconstructor {
                                      fieldlist {
                                        firstField {
                                          namedassign {
                                            name {
                                              name: "local"
                                              num: 0
                                            }
                                            value {
                                            }
                                          }
                                        }
                                        fields {
                                          field {
                                            exprassign {
                                              key {
                                                tableconstructor {
                                                  fieldlist {
                                                    firstField {
                                                      expression {
                                                        tableconstructor {
                                                          fieldlist {
                                                            firstField {
                                                              expression {
                                                                tableconstructor {
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    fields {
                                                      field {
                                                        expression {
                                                          prefixexp {
                                                            var {
                                                            }
                                                          }
                                                        }
                                                      }
                                                      sep {
                                                      }
                                                    }
                                                    fields {
                                                      field {
                                                        expression {
                                                          tableconstructor {
                                                            fieldlist {
                                                              firstField {
                                                              }
                                                              fields {
                                                                field {
                                                                  exprassign {
                                                                    key {
                                                                    }
                                                                    value {
                                                                      prefixexp {
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                                sep {
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      sep {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              value {
                                              }
                                            }
                                          }
                                          sep {
                                          }
                                        }
                                        fields {
                                          field {
                                            exprassign {
                                              key {
                                                tableconstructor {
                                                  fieldlist {
                                                    firstField {
                                                      exprassign {
                                                        key {
                                                          tableconstructor {
                                                          }
                                                        }
                                                        value {
                                                        }
                                                      }
                                                    }
                                                    fields {
                                                      field {
                                                        expression {
                                                          str: "recunroll="
                                                        }
                                                      }
                                                      sep {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              value {
                                                number: 1.79266204420746e-310
                                              }
                                            }
                                          }
                                          sep {
                                            comma: 268435456
                                          }
                                        }
                                        fields {
                                          field {
                                            expression {
                                            }
                                          }
                                          sep {
                                            semicolon: 268435456
                                          }
                                        }
                                      }
                                    }
                                  }
                                  doblock {
                                    block {
                                      chunk {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                          namedArgs {
                            prefixexp {
                            }
                            name {
                              name: "jlogjjjjjjjjjjDjjjj"
                              num: 0
                            }
                            args {
                            }
                          }
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        ifstat {
                          condition {
                          }
                          first {
                            chunk {
                            }
                          }
                          clauses {
                            condition {
                              number: 7.46014145261229e-316
                            }
                            block {
                              chunk {
                                stat {
                                  semicolon: true
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        semicolon: true
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                      stat {
                        call {
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
                namedArgs {
                  prefixexp {
                  }
                  name {
                    name: "jlogjjjjjjjjjjDjjjj"
                    num: 0
                  }
                  args {
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
                clauses {
                  condition {
                    number: 7.46014145261229e-316
                  }
                  block {
                    chunk {
                      stat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              semicolon: true
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
          }
        }
      }
    }
  }
}
