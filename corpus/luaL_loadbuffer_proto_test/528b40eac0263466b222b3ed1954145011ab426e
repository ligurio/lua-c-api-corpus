chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 4
      }
      startexp {
        number: -0
      }
      stopexp {
        number: -0
      }
      stepexp {
        prefixexp {
          exp {
            binary {
              leftexp {
                number: -0
              }
              binop {
                and: 0
              }
              rightexp {
                number: 118.78498777467757
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: 0
      }
      stopexp {
        number: 4.46154336699119e-308
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                  binary {
                    leftexp {
                      number: 118.78498777467757
                    }
                    binop {
                      add: 0
                    }
                    rightexp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                              number: -0
                            }
                            binop {
                              and: 0
                            }
                            rightexp {
                              number: -0
                            }
                          }
                        }
                      }
                    }
                  }
                }
                stopexp {
                  number: -0
                }
                stepexp {
                  tableconstructor {
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
