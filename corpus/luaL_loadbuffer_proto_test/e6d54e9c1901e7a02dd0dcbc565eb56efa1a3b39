chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                  }
                }
              }
              condition {
                binary {
                  leftexp {
                    false: 0
                  }
                  binop {
                  }
                  rightexp {
                    prefixexp {
                    }
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                          }
                        }
                      }
                      condition {
                        binary {
                          leftexp {
                            false: 0
                          }
                          binop {
                          }
                          rightexp {
                            prefixexp {
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                  }
                }
              }
              condition {
                binary {
                  leftexp {
                    prefixexp {
                    }
                  }
                  binop {
                    notEqual: 0
                  }
                  rightexp {
                    prefixexp {
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        binary {
          leftexp {
            prefixexp {
            }
          }
          binop {
          }
          rightexp {
            prefixexp {
              var {
                indexexpr {
                  prefixexp {
                    exp {
                      tableconstructor {
                        fieldlist {
                          firstField {
                            expression {
                            }
                          }
                        }
                      }
                    }
                  }
                  exp {
                    binary {
                      leftexp {
                        unary {
                          unop {
                            length: 0
                          }
                          exp {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                }
                              }
                            }
                          }
                        }
                      }
                      binop {
                        add: 0
                      }
                      rightexp {
                        unary {
                          unop {
                            length: 0
                          }
                          exp {
                            str: "b"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
