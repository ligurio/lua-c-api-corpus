chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            ifstat {
              condition {
                tableconstructor {
                  fieldlist {
                    firstField {
                    }
                    fields {
                      field {
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        expression {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                      }
                                    }
                                    binop {
                                      concat: 0
                                    }
                                    rightexp {
                                      unary {
                                        unop {
                                          length: 4
                                        }
                                        exp {
                                          tableconstructor {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  concat: 503316481
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                        exp {
                                          binary {
                                            leftexp {
                                              prefixexp {
                                                exp {
                                                  binary {
                                                    leftexp {
                                                      prefixexp {
                                                      }
                                                    }
                                                    binop {
                                                      concat: 0
                                                    }
                                                    rightexp {
                                                      binary {
                                                        leftexp {
                                                          prefixexp {
                                                          }
                                                        }
                                                        binop {
                                                          concat: 0
                                                        }
                                                        rightexp {
                                                          unary {
                                                            unop {
                                                              length: 4
                                                            }
                                                            exp {
                                                              tableconstructor {
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            binop {
                                              concat: 0
                                            }
                                            rightexp {
                                            }
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                      concat: 0
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          prefixexp {
                                            exp {
                                              binary {
                                                leftexp {
                                                  prefixexp {
                                                  }
                                                }
                                                binop {
                                                  concat: 0
                                                }
                                                rightexp {
                                                  binary {
                                                    leftexp {
                                                      prefixexp {
                                                      }
                                                    }
                                                    binop {
                                                      concat: 0
                                                    }
                                                    rightexp {
                                                      unary {
                                                        unop {
                                                          length: 4
                                                        }
                                                        exp {
                                                          tableconstructor {
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        binop {
                                          concat: 0
                                        }
                                        rightexp {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                            }
                            rightexp {
                            }
                          }
                        }
                      }
                      sep {
                      }
                    }
                  }
                }
              }
              first {
                chunk {
                }
              }
            }
          }
          laststat {
            semicolon: true
          }
        }
      }
      condition {
        number: -1.02060157050899e-314
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    semicolon: true
  }
}
