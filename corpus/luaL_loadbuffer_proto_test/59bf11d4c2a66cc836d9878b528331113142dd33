chunk {
  stat {
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
          function {
            body {
              parlist {
                ellipsis: "\377\377\377\377\377\377\377\377"
              }
              block {
                chunk {
                  laststat {
                    explist {
                      explist {
                        explast {
                          number: 5.40142540615654e-310
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  explast {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          exprassign {
                            key {
                              unary {
                                unop {
                                }
                                exp {
                                  binary {
                                    leftexp {
                                      binary {
                                        leftexp {
                                        }
                                        binop {
                                          concat: 0
                                        }
                                        rightexp {
                                          unary {
                                            unop {
                                              length: 4
                                            }
                                            exp {
                                              tableconstructor {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                      mod: 41
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          number: -11.596000671386719
                                        }
                                        binop {
                                          exp: 0
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                              binary {
                                                leftexp {
                                                  number: 0
                                                }
                                                binop {
                                                  mod: 0
                                                }
                                                rightexp {
                                                }
                                              }
                                            }
                                            binop {
                                            }
                                            rightexp {
                                              str: "\377\377\377\377\377\377\377\377"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            value {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
      last {
        chunk {
        }
      }
    }
    semicolon: true
  }
}
