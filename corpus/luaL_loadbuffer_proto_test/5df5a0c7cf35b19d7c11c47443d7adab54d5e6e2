chunk {
  stat {
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                  var {
                    indexname {
                      prefixexp {
                      }
                      Name: "char"
                    }
                  }
                }
                args {
                  explist {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              expression {
                binary {
                  leftexp {
                  }
                  binop {
                    lessEqual: 0
                  }
                  rightexp {
                    prefixexp {
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          binary {
                            leftexp {
                            }
                            binop {
                              lessEqual: 0
                            }
                            rightexp {
                              prefixexp {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                      }
                      stat {
                        whilecycle {
                          condition {
                            ellipsis: "\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370\370"
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              semicolon: true
            }
            stat {
              semicolon: true
            }
          }
        }
      }
    }
  }
}
