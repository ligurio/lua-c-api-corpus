chunk {
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
          stat {
            func {
              name {
                firstname {
                  name: "\000\000\377\321"
                  num: 0
                }
              }
              body {
                parlist {
                }
                block {
                  chunk {
                    stat {
                      forcyclename {
                        name {
                          name: ""
                          num: 6
                        }
                        startexp {
                          prefixexp {
                          }
                        }
                        stopexp {
                        }
                        stepexp {
                          number: -416
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                list {
                                  varlist {
                                    var {
                                    }
                                  }
                                  explist {
                                    expressions {
                                      number: 196608
                                    }
                                    expressions {
                                      number: -0
                                    }
                                    expressions {
                                      number: 0
                                    }
                                    expressions {
                                      number: -2.75
                                    }
                                    expressions {
                                      number: 4.75
                                    }
                                    expressions {
                                      number: -3.05175781254146e-05
                                    }
                                    expressions {
                                      number: 2.0004558488724342
                                    }
                                    expressions {
                                      number: -0.011718750000106137
                                    }
                                    expressions {
                                      number: -2.5
                                    }
                                    expressions {
                                      number: -2
                                    }
                                    expressions {
                                      binary {
                                        leftexp {
                                          number: 196608
                                        }
                                        binop {
                                        }
                                        rightexp {
                                        }
                                      }
                                    }
                                    expressions {
                                      ellipsis: "222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222"
                                    }
                                    expressions {
                                    }
                                    expressions {
                                      number: 4.75
                                    }
                                    expressions {
                                      number: 2
                                    }
                                    explast {
                                      number: 8.4999999749707058
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      semicolon: true
                    }
                    laststat {
                    }
                  }
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  laststat {
                    semicolon: true
                  }
                }
              }
              condition {
              }
            }
          }
          laststat {
          }
        }
      }
      last {
        chunk {
        }
      }
    }
  }
}
