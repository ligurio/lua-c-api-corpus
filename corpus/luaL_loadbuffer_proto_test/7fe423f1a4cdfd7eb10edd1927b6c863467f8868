chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 1
      }
      startexp {
        number: 44
      }
      stopexp {
        number: 0
      }
      stepexp {
        number: -1.020601600647e-314
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  explast {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                            var {
                              indexname {
                                prefixexp {
                                }
                                Name: "char"
                              }
                            }
                          }
                          args {
                            explist {
                              explist {
                                expressions {
                                  number: 0
                                }
                                explast {
                                  unary {
                                    unop {
                                      length: 0
                                    }
                                    exp {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                      }
                      fields {
                        field {
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          expression {
                            binary {
                              leftexp {
                                prefixexp {
                                  exp {
                                    binary {
                                      leftexp {
                                        number: -468.75
                                      }
                                      binop {
                                        concat: 0
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                            prefixexp {
                                            }
                                          }
                                          binop {
                                            concat: 0
                                          }
                                          rightexp {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                mod: 2097152
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
                first {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
