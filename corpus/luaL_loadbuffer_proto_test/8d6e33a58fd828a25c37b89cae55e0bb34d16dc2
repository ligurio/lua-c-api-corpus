chunk {
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                  }
                  stat {
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            forcyclename {
                              name {
                                name: ""
                                num: 0
                              }
                              startexp {
                                number: 0
                              }
                              stopexp {
                                unary {
                                  unop {
                                    length: 2
                                  }
                                  exp {
                                  }
                                }
                              }
                              doblock {
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                          stat {
                            whilecycle {
                              condition {
                                prefixexp {
                                  exp {
                                    number: 0
                                  }
                                }
                              }
                              doblock {
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                    semicolon: true
                  }
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            whilecycle {
              condition {
                tableconstructor {
                  fieldlist {
                    firstField {
                    }
                    fields {
                      field {
                        exprassign {
                          key {
                            binary {
                              leftexp {
                                unary {
                                  unop {
                                    length: 0
                                  }
                                  exp {
                                    tableconstructor {
                                    }
                                  }
                                }
                              }
                              binop {
                                add: 0
                              }
                              rightexp {
                                unary {
                                  unop {
                                    length: 8192
                                  }
                                  exp {
                                    prefixexp {
                                    }
                                  }
                                }
                              }
                            }
                          }
                          value {
                          }
                        }
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                      }
                      sep {
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
}
