chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    localfunc {
                      name {
                        name: ""
                        num: 0
                      }
                      funcbody {
                        block {
                          chunk {
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                    stat {
                                      repeatcycle {
                                        block {
                                          chunk {
                                            stat {
                                              call {
                                              }
                                            }
                                          }
                                        }
                                        condition {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                              }
                                              fields {
                                                field {
                                                }
                                                sep {
                                                  comma: 33
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                condition {
                                  nil: 0
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                  stat {
                                    call {
                                      prefArgs {
                                        prefixexp {
                                        }
                                        args {
                                          str: "\312"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                            semicolon: true
                          }
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                }
              }
              condition {
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                expressions {
                }
                expressions {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                expressions {
                }
                expressions {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                explast {
                  prefixexp {
                  }
                }
              }
            }
            semicolon: true
          }
          laststat {
            explist {
            }
          }
        }
      }
      condition {
        nil: 256
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          prefixexp {
            exp {
              prefixexp {
                exp {
                  unary {
                    unop {
                      length: 64
                    }
                    exp {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
