chunk {
  stat {
    localfunc {
      name {
        name: "min"
        num: 0
      }
      funcbody {
        block {
          chunk {
            laststat {
            }
          }
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: "oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\377\377\377>ooooooooo"
          num: 0
        }
        lastname {
          name: "\\001\\000\\001\\000"
          num: 16
        }
      }
      body {
        parlist {
          ellipsis: "min"
        }
        block {
          chunk {
            laststat {
              explist {
                explist {
                  expressions {
                    unary {
                      unop {
                      }
                      exp {
                        str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                      }
                    }
                  }
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: "oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\377\377\377>ooooooooo"
          num: 0
        }
        names {
          name: "?"
          num: 0
        }
      }
      expressions {
        explast {
          unary {
            unop {
              negate: 4
            }
            exp {
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: false
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                    exp {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                exprassign {
                                  key {
                                    binary {
                                      leftexp {
                                        binary {
                                          leftexp {
                                            unary {
                                              unop {
                                                negate: 11776
                                              }
                                              exp {
                                                ellipsis: "\\376\\360\\271\\330"
                                              }
                                            }
                                          }
                                          binop {
                                            sub: 2
                                          }
                                          rightexp {
                                            binary {
                                              leftexp {
                                                unary {
                                                  unop {
                                                    negate: 2
                                                  }
                                                  exp {
                                                  }
                                                }
                                              }
                                              binop {
                                                sub: 2
                                              }
                                              rightexp {
                                                unary {
                                                  unop {
                                                    length: 0
                                                  }
                                                  exp {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      binop {
                                        add: 65580
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                            unary {
                                              unop {
                                                length: 2
                                              }
                                              exp {
                                                tableconstructor {
                                                  fieldlist {
                                                    firstField {
                                                      exprassign {
                                                        key {
                                                          binary {
                                                            leftexp {
                                                              binary {
                                                                leftexp {
                                                                  unary {
                                                                    unop {
                                                                      negate: 11776
                                                                    }
                                                                    exp {
                                                                      binary {
                                                                        leftexp {
                                                                          unary {
                                                                            unop {
                                                                              negate: 2
                                                                            }
                                                                            exp {
                                                                            }
                                                                          }
                                                                        }
                                                                        binop {
                                                                          sub: 2
                                                                        }
                                                                        rightexp {
                                                                          unary {
                                                                            unop {
                                                                              length: 0
                                                                            }
                                                                            exp {
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                                binop {
                                                                  sub: 2
                                                                }
                                                                rightexp {
                                                                  binary {
                                                                    leftexp {
                                                                      unary {
                                                                        unop {
                                                                          negate: 2
                                                                        }
                                                                        exp {
                                                                        }
                                                                      }
                                                                    }
                                                                    binop {
                                                                      sub: 2
                                                                    }
                                                                    rightexp {
                                                                      unary {
                                                                        unop {
                                                                          length: 0
                                                                        }
                                                                        exp {
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                            binop {
                                                              add: 65580
                                                            }
                                                            rightexp {
                                                              binary {
                                                                leftexp {
                                                                  unary {
                                                                    unop {
                                                                      length: 2
                                                                    }
                                                                    exp {
                                                                      unary {
                                                                        unop {
                                                                          negate: 2
                                                                        }
                                                                        exp {
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                                binop {
                                                                  sub: 2
                                                                }
                                                                rightexp {
                                                                  number: -2.0000009089708328
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                        value {
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          binop {
                                            sub: 2
                                          }
                                          rightexp {
                                          }
                                        }
                                      }
                                    }
                                  }
                                  value {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  args {
                    explist {
                      explist {
                        expressions {
                          ellipsis: "min"
                        }
                        explast {
                          tableconstructor {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            laststat {
              break: 9
            }
          }
        }
      }
    }
    semicolon: true
  }
}
