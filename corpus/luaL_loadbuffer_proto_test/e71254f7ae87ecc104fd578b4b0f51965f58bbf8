chunk {
  stat {
    call {
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 4
      }
      startexp {
      }
      stopexp {
        number: 2.38570835609644e-312
      }
      doblock {
        block {
          chunk {
            stat {
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 4
      }
      startexp {
      }
      stopexp {
        function {
          body {
            block {
              chunk {
              }
            }
          }
        }
      }
      stepexp {
        function {
          body {
            block {
              chunk {
                stat {
                  list {
                    varlist {
                      var {
                      }
                      vars {
                        indexexpr {
                          prefixexp {
                          }
                          exp {
                            ellipsis: "."
                          }
                        }
                      }
                    }
                    explist {
                      explast {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              ifstat {
                condition {
                  unary {
                    unop {
                      negate: 0
                    }
                    exp {
                    }
                  }
                }
                first {
                  chunk {
                    stat {
                      localnames {
                        namelist {
                          firstname {
                            name: ""
                            num: 4096
                          }
                        }
                      }
                    }
                    stat {
                      forcyclelist {
                        names {
                          firstname {
                            name: ""
                            num: 4
                          }
                        }
                        expressions {
                          expressions {
                            prefixexp {
                              functioncall {
                                prefArgs {
                                  prefixexp {
                                    var {
                                      name {
                                        name: ""
                                        num: 33554432
                                      }
                                    }
                                  }
                                  args {
                                  }
                                }
                              }
                            }
                          }
                          expressions {
                            binary {
                              leftexp {
                              }
                              binop {
                                add: 0
                              }
                              rightexp {
                                nil: 1
                              }
                            }
                          }
                          explast {
                            ellipsis: ""
                          }
                        }
                        doblock {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                  }
                }
                clauses {
                  condition {
                    binary {
                      leftexp {
                        number: -0
                      }
                      binop {
                        greaterEqual: 0
                      }
                      rightexp {
                      }
                    }
                  }
                  block {
                    chunk {
                    }
                  }
                }
                clauses {
                  condition {
                  }
                  block {
                    chunk {
                      stat {
                        localnames {
                          namelist {
                            firstname {
                              name: ""
                              num: 4096
                            }
                          }
                          explist {
                            expressions {
                              binary {
                                leftexp {
                                }
                                binop {
                                  add: 0
                                }
                                rightexp {
                                  nil: 1
                                }
                              }
                            }
                            explast {
                              str: "pairs"
                            }
                          }
                        }
                        semicolon: true
                      }
                      stat {
                        forcyclelist {
                          names {
                            firstname {
                              name: ""
                              num: 4
                            }
                          }
                          expressions {
                            expressions {
                              prefixexp {
                                functioncall {
                                }
                              }
                            }
                            expressions {
                              binary {
                                leftexp {
                                }
                                binop {
                                  add: 0
                                }
                                rightexp {
                                  nil: 1
                                }
                              }
                            }
                            explast {
                              ellipsis: ""
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                last {
                  chunk {
                    laststat {
                      break: 0
                      semicolon: false
                    }
                  }
                }
              }
            }
            laststat {
              break: 0
              semicolon: false
            }
          }
        }
      }
    }
  }
  laststat {
    break: 0
    semicolon: true
  }
}
