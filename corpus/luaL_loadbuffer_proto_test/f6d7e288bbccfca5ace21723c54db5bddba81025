chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 4
      }
      funcbody {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      forcyclename {
                        name {
                          name: ""
                          num: 4
                        }
                        startexp {
                          number: 0
                        }
                        stopexp {
                          number: 3
                        }
                        doblock {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                    stat {
                      semicolon: true
                    }
                  }
                }
                condition {
                  prefixexp {
                  }
                }
              }
            }
            laststat {
              explist {
                explist {
                  explast {
                    prefixexp {
                      var {
                        name {
                          name: ""
                          num: 4
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
          prefixexp {
            var {
              name {
                name: ""
                num: 4
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
