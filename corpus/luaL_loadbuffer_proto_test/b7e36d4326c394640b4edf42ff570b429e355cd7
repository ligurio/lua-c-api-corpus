chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                prefixexp {
                  functioncall {
                  }
                }
              }
              binop {
              }
              rightexp {
              }
            }
          }
          binop {
          }
          rightexp {
            binary {
              leftexp {
                prefixexp {
                  functioncall {
                  }
                }
              }
              binop {
              }
              rightexp {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
            }
            stat {
              call {
              }
            }
            stat {
              func {
                name {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                body {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: false
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              func {
                name {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                body {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
              semicolon: false
            }
            stat {
              call {
              }
              semicolon: true
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                  }
                }
              }
              semicolon: true
            }
            stat {
              call {
              }
              semicolon: true
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                    str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
            }
            stat {
              call {
              }
            }
            stat {
              call {
                namedArgs {
                  prefixexp {
                  }
                  name {
                    name: "\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364"
                    num: 0
                  }
                  args {
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            laststat {
              break: 2097152
            }
          }
        }
      }
    }
  }
}
