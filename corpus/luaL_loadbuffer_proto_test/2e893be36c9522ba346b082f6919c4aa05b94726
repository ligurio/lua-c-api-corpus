chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 1
        }
      }
      expressions {
        explast {
          function {
            body {
              block {
                chunk {
                  laststat {
                    explist {
                      explist {
                        explast {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                  str: "__newind\206ex"
                }
                value {
                  ellipsis: ""
                }
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    str: "__newind\206ex"
                  }
                  value {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                        fields {
                          field {
                            exprassign {
                              key {
                                str: "__newind\206ex"
                              }
                              value {
                                ellipsis: ""
                              }
                            }
                          }
                          sep {
                            semicolon: 1
                          }
                        }
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              namedassign {
                name {
                  name: ""
                  num: 0
                }
                value {
                  ellipsis: "\373chunk {\n  stat {\n    forcyclelist {\n      names {\n        firstname {\n          name: \"\"\n          num: 1\n        }\n        names {\n          name: \"\"\n          num: 1\n        }\n      }\n      expressions {\n        explast {\n          function {\n            body {\n              block {\n                chunk {\n                  laststat {\n                    explist {\n                      explist {\n                        explast {\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      doblock {\n        block {\n          chunk {\n            stat {\n              whilecycle {\n                condition {\n                }\n                doblock {\n                  block {\n                    chunk {\n                      stat {\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
                }
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    str: "__newind\206ex"
                  }
                  value {
                    ellipsis: ""
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
        }
      }
    }
  }
}
