chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 4
      }
      startexp {
        number: 34359738368
      }
      stopexp {
        binary {
          leftexp {
            number: 9
          }
          binop {
            div: 1
          }
          rightexp {
            unary {
              unop {
                length: 0
              }
              exp {
                tableconstructor {
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
            }
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 4
                }
                startexp {
                  number: 34359738368
                }
                stopexp {
                  binary {
                    leftexp {
                      prefixexp {
                        functioncall {
                          prefArgs {
                            prefixexp {
                              var {
                                indexname {
                                  prefixexp {
                                  }
                                  Name: "char"
                                }
                              }
                            }
                            args {
                              explist {
                              }
                            }
                          }
                        }
                      }
                    }
                    binop {
                      concat: 3840
                    }
                    rightexp {
                      binary {
                        leftexp {
                          unary {
                            unop {
                              length: 0
                            }
                            exp {
                              tableconstructor {
                              }
                            }
                          }
                        }
                        binop {
                          div: 1
                        }
                        rightexp {
                          unary {
                            unop {
                              length: 0
                            }
                            exp {
                              tableconstructor {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                stepexp {
                  number: 5.0064161980250207e-308
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 4
                          }
                          startexp {
                            number: 0
                          }
                          stopexp {
                            binary {
                              leftexp {
                                prefixexp {
                                  functioncall {
                                    prefArgs {
                                      prefixexp {
                                        var {
                                          indexname {
                                            prefixexp {
                                            }
                                            Name: "char"
                                          }
                                        }
                                      }
                                      args {
                                        explist {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                concat: 3840
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    unary {
                                      unop {
                                        length: 0
                                      }
                                      exp {
                                        tableconstructor {
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                    div: 1
                                  }
                                  rightexp {
                                    unary {
                                      unop {
                                        length: 0
                                      }
                                      exp {
                                        tableconstructor {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          stepexp {
                            number: 9
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  forcyclelist {
                                    names {
                                      firstname {
                                        name: ""
                                        num: 0
                                      }
                                      names {
                                        name: ","
                                        num: 0
                                      }
                                    }
                                    expressions {
                                      explast {
                                        ellipsis: "\001\000\000\000"
                                      }
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        forcyclelist {
                          names {
                            firstname {
                              name: ""
                              num: 0
                            }
                            names {
                              name: ","
                              num: 0
                            }
                          }
                          expressions {
                            explast {
                              function {
                                body {
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
