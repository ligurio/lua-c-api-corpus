chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
                vars {
                }
                vars {
                }
                vars {
                }
                vars {
                }
                vars {
                }
                vars {
                  name {
                    name: ""
                    num: 4
                  }
                }
                vars {
                }
                vars {
                }
                vars {
                }
                vars {
                }
                vars {
                }
                vars {
                }
                vars {
                }
                vars {
                }
                vars {
                  indexexpr {
                    prefixexp {
                      var {
                        name {
                          name: "          name: \"\"\n                num: 4\n              }\n              funcbody {\n                block {\n                  chunk {\n                  }\n                }\n              }\n            }\n          }\n          stat {\n            localfunc {\n              name {\n                name: \"\"\n                num: 0\n              }\n              funcbody {\n                block {\n                  chunk {\n                  }\n                }\n              }\n            }\n          }\n          stat {\n            localfunc {\n              name {\n                name: \"\"\n                num: 1\n              }\n              funcbody {\n                block {\n                  chunk {\n                    stat {\n                      list {\n                        varlist {\n                          var {\n                            name {\n                              name: \"\"\n                              num: 4\n                            }\n                          }\n                          vars {\n                            name {\n                              name: \"\"\n                              num: 1\n                            }\n                          }\n                        }\n                        explist {\n                          explast {\n                          }\n                        }\n                      }\n                    }\n                    stat {\n                    }\n                  }\n                }\n              }\n            }\n          }\n          stat {\n            forcyclelist {\n              names {\n                firstname {\n                  name: \"\"\n                  num: 4\n                }\n              }\n              expressions {\n                explast {\n                }\n              }\n              doblock {\n                block {\n                  chunk {\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      condition {\n        unary {\n          unop {\n          }\n          exp {\n          }\n        }\n      }\n    }\\002$"
                          num: 0
                        }
                      }
                    }
                    exp {
                    }
                  }
                }
                vars {
                }
                vars {
                }
                vars {
                }
                vars {
                }
                vars {
                }
                vars {
                }
                vars {
                }
                vars {
                }
                vars {
                }
              }
              explist {
                expressions {
                }
                expressions {
                  number: 0
                }
                expressions {
                  number: 0
                }
                expressions {
                  number: 6.79038653108887e-313
                }
                expressions {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                expressions {
                  nil: 0
                }
                expressions {
                }
                expressions {
                }
                expressions {
                }
                expressions {
                }
                expressions {
                  number: 6.79038653108887e-313
                }
                expressions {
                  number: 0
                }
                expressions {
                  number: 0
                }
                expressions {
                  number: 0
                }
                expressions {
                }
                expressions {
                }
                expressions {
                }
                expressions {
                }
                expressions {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                expressions {
                }
                expressions {
                  binary {
                    leftexp {
                    }
                    binop {
                    }
                    rightexp {
                      binary {
                        leftexp {
                          ellipsis: ""
                        }
                        binop {
                          notEqual: 0
                        }
                        rightexp {
                        }
                      }
                    }
                  }
                }
                expressions {
                  true: 0
                }
                expressions {
                }
                expressions {
                }
                expressions {
                }
                expressions {
                  false: 0
                }
                expressions {
                }
                explast {
                }
              }
            }
          }
        }
      }
      condition {
        binary {
          leftexp {
            ellipsis: ""
          }
          binop {
            notEqual: 0
          }
          rightexp {
          }
        }
      }
    }
  }
}
