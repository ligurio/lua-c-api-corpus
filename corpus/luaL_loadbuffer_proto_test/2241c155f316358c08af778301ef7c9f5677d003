chunk {
  stat {
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 1819042147
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
          }
          binop {
            lessEqual: 0
          }
          rightexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                  }
                  binop {
                    less: 4
                  }
                  rightexp {
                    str: "bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
                  }
                }
              }
              binop {
                and: 0
              }
              rightexp {
              }
            }
          }
        }
      }
      first {
        chunk {
          stat {
            ifstat {
              condition {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        number: -0
                      }
                      binop {
                        lessEqual: 0
                      }
                      rightexp {
                        nil: 0
                      }
                    }
                  }
                  binop {
                    lessEqual: 0
                  }
                  rightexp {
                    binary {
                      leftexp {
                        unary {
                          unop {
                          }
                          exp {
                          }
                        }
                      }
                      binop {
                        sub: 12845056
                      }
                      rightexp {
                        number: -0
                      }
                    }
                  }
                }
              }
              first {
                chunk {
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                }
              }
              last {
                chunk {
                  stat {
                  }
                  stat {
                    ifstat {
                      condition {
                        binary {
                          leftexp {
                          }
                          binop {
                            lessEqual: 114
                          }
                          rightexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                  }
                                  binop {
                                    less: 4
                                  }
                                  rightexp {
                                    str: "bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
                                  }
                                }
                              }
                              binop {
                                and: 0
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                      }
                      first {
                        chunk {
                        }
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                    ifstat {
                      condition {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                number: -0
                              }
                              binop {
                                lessEqual: 0
                              }
                              rightexp {
                                number: -0
                              }
                            }
                          }
                          binop {
                            lessEqual: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                              }
                              binop {
                                lessEqual: 0
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                      }
                      first {
                        chunk {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "collectgarbage"
              num: 0
            }
          }
        }
        args {
          str: "loadfile"
        }
      }
    }
    semicolon: false
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 1819042147
        }
      }
      body {
        parlist {
          namelist {
            namelist {
              firstname {
                name: ""
                num: 0
              }
            }
            ellipsis: "\001\000\000\000"
          }
        }
        block {
          chunk {
          }
        }
      }
    }
  }
}
