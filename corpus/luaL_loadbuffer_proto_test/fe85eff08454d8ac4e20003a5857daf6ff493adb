chunk {
  stat {
    ifstat {
      condition {
        unary {
          unop {
            negate: 0
          }
          exp {
          }
        }
      }
      first {
        chunk {
          stat {
          }
          stat {
            forcyclelist {
              names {
                firstname {
                  name: ""
                  num: 12800
                }
              }
              expressions {
                expressions {
                  binary {
                    leftexp {
                      prefixexp {
                        var {
                          indexexpr {
                            prefixexp {
                              functioncall {
                                prefArgs {
                                  prefixexp {
                                  }
                                  args {
                                    explist {
                                      explist {
                                        explast {
                                          str: "0"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            exp {
                            }
                          }
                        }
                      }
                    }
                    binop {
                      greaterEqual: 0
                    }
                    rightexp {
                    }
                  }
                }
                explast {
                  ellipsis: ""
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      list {
                        varlist {
                          var {
                          }
                        }
                        explist {
                          explast {
                            number: -2.75
                          }
                        }
                      }
                    }
                    stat {
                      forcyclename {
                        name {
                          name: "LUA_PATH_5_4"
                          num: 12800
                        }
                        startexp {
                          number: -2.75
                        }
                        stopexp {
                        }
                        stepexp {
                          number: -0
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                forcyclename {
                                  name {
                                    name: ""
                                    num: 0
                                  }
                                  startexp {
                                    prefixexp {
                                    }
                                  }
                                  stopexp {
                                    prefixexp {
                                    }
                                  }
                                  stepexp {
                                    prefixexp {
                                      var {
                                        indexname {
                                          prefixexp {
                                            var {
                                              indexexpr {
                                                prefixexp {
                                                  functioncall {
                                                    namedArgs {
                                                      prefixexp {
                                                        exp {
                                                          tableconstructor {
                                                            fieldlist {
                                                              firstField {
                                                                exprassign {
                                                                  key {
                                                                  }
                                                                  value {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      name {
                                                        name: ""
                                                        num: 0
                                                      }
                                                      args {
                                                        explist {
                                                          explist {
                                                            explast {
                                                              prefixexp {
                                                                functioncall {
                                                                  namedArgs {
                                                                    prefixexp {
                                                                    }
                                                                    name {
                                                                      name: ""
                                                                      num: 0
                                                                    }
                                                                    args {
                                                                      explist {
                                                                        explist {
                                                                          expressions {
                                                                            true: 0
                                                                          }
                                                                          explast {
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                exp {
                                                }
                                              }
                                            }
                                          }
                                          Name: "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"
                                        }
                                      }
                                    }
                                  }
                                  doblock {
                                    block {
                                      chunk {
                                        stat {
                                          whilecycle {
                                            condition {
                                            }
                                            doblock {
                                              block {
                                                chunk {
                                                  stat {
                                                    repeatcycle {
                                                      block {
                                                        chunk {
                                                        }
                                                      }
                                                      condition {
                                                        binary {
                                                          leftexp {
                                                          }
                                                          binop {
                                                          }
                                                          rightexp {
                                                            function {
                                                              body {
                                                                block {
                                                                  chunk {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  stat {
                                                    whilecycle {
                                                      condition {
                                                        prefixexp {
                                                          functioncall {
                                                          }
                                                        }
                                                      }
                                                      doblock {
                                                        block {
                                                          chunk {
                                                          }
                                                        }
                                                      }
                                                    }
                                                    semicolon: true
                                                  }
                                                  stat {
                                                    whilecycle {
                                                      condition {
                                                      }
                                                      doblock {
                                                        block {
                                                          chunk {
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  laststat {
                                                    break: 0
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        laststat {
                                          semicolon: true
                                        }
                                      }
                                    }
                                  }
                                }
                                semicolon: true
                              }
                            }
                          }
                        }
                      }
                      semicolon: true
                    }
                    stat {
                      call {
                        namedArgs {
                          prefixexp {
                          }
                          name {
                            name: "\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245\245"
                            num: 0
                          }
                          args {
                          }
                        }
                      }
                    }
                    stat {
                    }
                  }
                }
              }
            }
          }
        }
      }
      clauses {
        condition {
          binary {
            leftexp {
              number: 1.24335690876871e-314
            }
            binop {
            }
            rightexp {
            }
          }
        }
        block {
          chunk {
            stat {
              semicolon: false
            }
          }
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
            stat {
            }
          }
        }
      }
    }
  }
  laststat {
    break: 0
    semicolon: false
  }
}
