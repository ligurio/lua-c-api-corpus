chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
                tableconstructor {
                  fieldlist {
                    firstField {
                      exprassign {
                        key {
                          number: -8232
                        }
                        value {
                          number: nan
                        }
                      }
                    }
                    fields {
                      field {
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        exprassign {
                          key {
                            number: -8232
                          }
                          value {
                            number: nan
                          }
                        }
                      }
                      sep {
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      ifstat {
                        condition {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                }
                                binop {
                                  greater: 0
                                }
                                rightexp {
                                }
                              }
                            }
                            binop {
                              greater: 0
                            }
                            rightexp {
                              binary {
                                leftexp {
                                }
                                binop {
                                  greater: 0
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                        first {
                          chunk {
                          }
                        }
                      }
                    }
                    stat {
                      ifstat {
                        condition {
                          binary {
                            leftexp {
                            }
                            binop {
                              greater: 0
                            }
                            rightexp {
                              binary {
                                leftexp {
                                }
                                binop {
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                        first {
                          chunk {
                          }
                        }
                      }
                    }
                    stat {
                      ifstat {
                        condition {
                          binary {
                            leftexp {
                            }
                            binop {
                              greater: 0
                            }
                            rightexp {
                              binary {
                                leftexp {
                                }
                                binop {
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                        first {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
}
