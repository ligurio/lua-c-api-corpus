chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                  prefixexp {
                    exp {
                      str: "555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555"
                    }
                  }
                }
                stopexp {
                  prefixexp {
                  }
                }
                stepexp {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 0
                          }
                          startexp {
                            ellipsis: "\376\377\377\375"
                          }
                          stopexp {
                            prefixexp {
                            }
                          }
                          stepexp {
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                      stat {
                        whilecycle {
                          condition {
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                      laststat {
                        explist {
                          explist {
                            expressions {
                              binary {
                                leftexp {
                                }
                                binop {
                                  concat: 0
                                }
                                rightexp {
                                  function {
                                    body {
                                      block {
                                        chunk {
                                          stat {
                                            call {
                                              namedArgs {
                                                prefixexp {
                                                  exp {
                                                    function {
                                                      body {
                                                        parlist {
                                                          namelist {
                                                            namelist {
                                                              firstname {
                                                                name: ""
                                                                num: 0
                                                              }
                                                            }
                                                            ellipsis: "555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555"
                                                          }
                                                        }
                                                        block {
                                                          chunk {
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                name {
                                                  name: ""
                                                  num: 0
                                                }
                                                args {
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            explast {
                            }
                          }
                        }
                        semicolon: false
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            laststat {
              explist {
                explist {
                  expressions {
                    binary {
                      leftexp {
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        function {
                          body {
                            block {
                              chunk {
                                stat {
                                  call {
                                    namedArgs {
                                      prefixexp {
                                        exp {
                                          function {
                                            body {
                                              parlist {
                                                namelist {
                                                  namelist {
                                                    firstname {
                                                      name: ""
                                                      num: 0
                                                    }
                                                  }
                                                  ellipsis: "555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555"
                                                }
                                              }
                                              block {
                                                chunk {
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      name {
                                        name: ""
                                        num: 0
                                      }
                                      args {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  explast {
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
}
