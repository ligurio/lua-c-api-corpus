chunk {
  stat {
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
      explist {
        expressions {
          number: -2.9740338169555661e+284
        }
        explast {
          binary {
            leftexp {
              unary {
                unop {
                  length: 2
                }
                exp {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            true: 0
                          }
                          value {
                          }
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              tableconstructor {
                              }
                            }
                            value {
                            }
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          expression {
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          expression {
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              tableconstructor {
                              }
                            }
                            value {
                            }
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          expression {
                            binary {
                              leftexp {
                              }
                              binop {
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          expression {
                            unary {
                              unop {
                                length: 2
                              }
                              exp {
                              }
                            }
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                            }
                            value {
                            }
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
              }
            }
            binop {
            }
            rightexp {
            }
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
      explist {
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
              }
              fields {
                field {
                  expression {
                    function {
                      body {
                        parlist {
                          namelist {
                            namelist {
                              firstname {
                                name: ""
                                num: 0
                              }
                            }
                          }
                        }
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
                sep {
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        parlist {
          namelist {
            namelist {
              firstname {
                name: ""
                num: 512
              }
            }
          }
        }
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: ""
                  num: 4
                }
                funcbody {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
        lastname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
      explist {
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
              }
              fields {
                field {
                  expression {
                    function {
                      body {
                        parlist {
                          namelist {
                            namelist {
                              firstname {
                                name: ""
                                num: 512
                              }
                            }
                          }
                        }
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
                sep {
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 4
      }
      startexp {
        tableconstructor {
          fieldlist {
            firstField {
            }
            fields {
              field {
                expression {
                  function {
                    body {
                      parlist {
                        namelist {
                          namelist {
                            firstname {
                              name: ""
                              num: 512
                            }
                          }
                        }
                      }
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
}
