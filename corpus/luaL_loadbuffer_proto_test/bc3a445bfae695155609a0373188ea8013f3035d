chunk {
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          number: 1.5
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              namedassign {
                name {
                  name: ""
                  num: 0
                }
                value {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                          str: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                        }
                      }
                    }
                  }
                }
              }
            }
            fields {
              field {
                expression {
                  str: "\001\000\000\000\000\000\000\000"
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  binary {
                    leftexp {
                      false: 13312
                    }
                    binop {
                      or: 13312
                    }
                    rightexp {
                      false: 1073741824
                    }
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
