chunk {
  stat {
    localfunc {
      name {
        name: "."
        num: 0
      }
      funcbody {
        parlist {
        }
        block {
          chunk {
            stat {
            }
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    ifstat {
                      condition {
                      }
                      first {
                        chunk {
                        }
                      }
                    }
                  }
                  stat {
                    block {
                      block {
                        chunk {
                        }
                      }
                    }
                    semicolon: true
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                          }
                          stat {
                          }
                          stat {
                            localfunc {
                              name {
                                name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                num: 0
                              }
                              funcbody {
                                block {
                                  chunk {
                                    stat {
                                      whilecycle {
                                        condition {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                                expression {
                                                  prefixexp {
                                                    functioncall {
                                                      prefArgs {
                                                        prefixexp {
                                                        }
                                                        args {
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        doblock {
                                          block {
                                            chunk {
                                            }
                                          }
                                        }
                                      }
                                    }
                                    laststat {
                                      explist {
                                        explist {
                                          expressions {
                                            unary {
                                              unop {
                                              }
                                              exp {
                                              }
                                            }
                                          }
                                          expressions {
                                          }
                                          expressions {
                                            prefixexp {
                                              functioncall {
                                                prefArgs {
                                                  prefixexp {
                                                  }
                                                  args {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          expressions {
                                            number: 6.0134700142097243e-154
                                          }
                                          expressions {
                                          }
                                          explast {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                  stat {
                                    whilecycle {
                                      condition {
                                        prefixexp {
                                          functioncall {
                                            prefArgs {
                                              prefixexp {
                                              }
                                              args {
                                              }
                                            }
                                          }
                                        }
                                      }
                                      doblock {
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              condition {
                                ellipsis: ""
                              }
                            }
                            semicolon: true
                          }
                          stat {
                          }
                          laststat {
                            break: 34
                          }
                        }
                      }
                      condition {
                      }
                    }
                  }
                }
              }
              condition {
                ellipsis: ""
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
  }
}
