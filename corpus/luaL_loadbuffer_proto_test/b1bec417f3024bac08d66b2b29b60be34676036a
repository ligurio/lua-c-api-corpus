chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  binary {
                    leftexp {
                    }
                    binop {
                    }
                    rightexp {
                      binary {
                        leftexp {
                          prefixexp {
                            exp {
                              function {
                                body {
                                  parlist {
                                  }
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        binop {
                          concat: 0
                        }
                        rightexp {
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  binary {
                    leftexp {
                    }
                    binop {
                    }
                    rightexp {
                      nil: 4
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  binary {
                    leftexp {
                    }
                    binop {
                    }
                    rightexp {
                      binary {
                        leftexp {
                          prefixexp {
                            exp {
                              function {
                                body {
                                  parlist {
                                    namelist {
                                      namelist {
                                        firstname {
                                          name: ""
                                          num: 0
                                        }
                                      }
                                      ellipsis: "("
                                    }
                                  }
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        binop {
                          concat: 0
                        }
                        rightexp {
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  binary {
                    leftexp {
                    }
                    binop {
                    }
                    rightexp {
                    }
                  }
                }
              }
              semicolon: false
            }
            laststat {
              break: 543712032
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  binary {
                    leftexp {
                    }
                    binop {
                    }
                    rightexp {
                      binary {
                        leftexp {
                          prefixexp {
                            exp {
                              function {
                                body {
                                  parlist {
                                    namelist {
                                      namelist {
                                        firstname {
                                          name: ""
                                          num: 0
                                        }
                                      }
                                      ellipsis: "("
                                    }
                                  }
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        binop {
                          concat: 0
                        }
                        rightexp {
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  true: 16711424
                }
              }
            }
            laststat {
              break: 543712032
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    semicolon: false
  }
}
