chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 1
      }
      startexp {
        number: 44
      }
      stopexp {
        number: -1.2280047771833039e-178
      }
      stepexp {
        number: -1.2280047771833039e-178
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  expressions {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          exprassign {
                            key {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                  }
                                  fields {
                                    field {
                                    }
                                    sep {
                                      comma: 1
                                    }
                                  }
                                }
                              }
                            }
                            value {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                    exprassign {
                                      key {
                                        binary {
                                          leftexp {
                                            tableconstructor {
                                            }
                                          }
                                          binop {
                                          }
                                          rightexp {
                                            prefixexp {
                                            }
                                          }
                                        }
                                      }
                                      value {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        lastSep {
                          comma: 1
                        }
                      }
                    }
                  }
                  explast {
                  }
                }
              }
              semicolon: true
            }
            laststat {
            }
          }
        }
      }
    }
  }
}
