chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        parlist {
          ellipsis: "maxtrace"
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        parlist {
          ellipsis: ""
        }
        block {
          chunk {
            stat {
            }
            stat {
            }
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 4
                }
                startexp {
                  number: -0
                }
                stopexp {
                  unary {
                    unop {
                      length: 1
                    }
                    exp {
                      prefixexp {
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        whilecycle {
                          condition {
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  list {
                                    varlist {
                                      var {
                                      }
                                    }
                                    explist {
                                      expressions {
                                        prefixexp {
                                          functioncall {
                                            prefArgs {
                                              prefixexp {
                                                var {
                                                  indexname {
                                                    prefixexp {
                                                    }
                                                    Name: "char"
                                                  }
                                                }
                                              }
                                              args {
                                                explist {
                                                  explist {
                                                    explast {
                                                      unary {
                                                        unop {
                                                          negate: 0
                                                        }
                                                        exp {
                                                          binary {
                                                            leftexp {
                                                              unary {
                                                                unop {
                                                                  length: 2
                                                                }
                                                                exp {
                                                                }
                                                              }
                                                            }
                                                            binop {
                                                              div: 2
                                                            }
                                                            rightexp {
                                                              unary {
                                                                unop {
                                                                  negate: 0
                                                                }
                                                                exp {
                                                                  binary {
                                                                    leftexp {
                                                                      unary {
                                                                        unop {
                                                                          length: 2
                                                                        }
                                                                        exp {
                                                                          prefixexp {
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                    binop {
                                                                      add: 0
                                                                    }
                                                                    rightexp {
                                                                      unary {
                                                                        unop {
                                                                          negate: 0
                                                                        }
                                                                        exp {
                                                                          binary {
                                                                            leftexp {
                                                                              unary {
                                                                                unop {
                                                                                  length: 2
                                                                                }
                                                                                exp {
                                                                                }
                                                                              }
                                                                            }
                                                                            binop {
                                                                              add: 0
                                                                            }
                                                                            rightexp {
                                                                              unary {
                                                                                unop {
                                                                                  negate: 0
                                                                                }
                                                                                exp {
                                                                                  binary {
                                                                                    leftexp {
                                                                                      unary {
                                                                                        unop {
                                                                                          length: 2
                                                                                        }
                                                                                        exp {
                                                                                          prefixexp {
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                    binop {
                                                                                      add: 2
                                                                                    }
                                                                                    rightexp {
                                                                                      unary {
                                                                                        unop {
                                                                                          length: 0
                                                                                        }
                                                                                        exp {
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      explast {
                                      }
                                    }
                                  }
                                }
                                laststat {
                                  break: 2
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
        }
      }
      condition {
        false: 2099837
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
                vars {
                  name {
                    name: ""
                    num: 0
                  }
                }
              }
              explist {
                expressions {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                          prefixexp {
                            exp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                        exp {
                                          binary {
                                            leftexp {
                                              prefixexp {
                                              }
                                            }
                                            binop {
                                              concat: 0
                                            }
                                            rightexp {
                                            }
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                      concat: 0
                                    }
                                    rightexp {
                                      str: ""
                                    }
                                  }
                                }
                                binop {
                                  concat: 3840
                                }
                                rightexp {
                                  prefixexp {
                                  }
                                }
                              }
                            }
                          }
                        }
                        binop {
                          concat: 0
                        }
                        rightexp {
                        }
                      }
                    }
                    binop {
                      concat: 0
                    }
                    rightexp {
                      binary {
                        leftexp {
                          prefixexp {
                            exp {
                              binary {
                                leftexp {
                                  prefixexp {
                                    exp {
                                      binary {
                                        leftexp {
                                          prefixexp {
                                          }
                                        }
                                        binop {
                                          concat: 0
                                        }
                                        rightexp {
                                          prefixexp {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  concat: 0
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                        binop {
                          concat: 0
                        }
                        rightexp {
                          str: ""
                        }
                      }
                    }
                  }
                }
                expressions {
                  tableconstructor {
                  }
                }
                explast {
                }
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                }
                vars {
                  name {
                    name: "jlogjjjjjjjjjjDjjjj"
                    num: 0
                  }
                }
              }
              explist {
                expressions {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                          prefixexp {
                            exp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                        exp {
                                          binary {
                                            leftexp {
                                              prefixexp {
                                              }
                                            }
                                            binop {
                                              concat: 0
                                            }
                                            rightexp {
                                            }
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                      concat: 0
                                    }
                                    rightexp {
                                      str: ""
                                    }
                                  }
                                }
                                binop {
                                  concat: 3840
                                }
                                rightexp {
                                  prefixexp {
                                  }
                                }
                              }
                            }
                          }
                        }
                        binop {
                          concat: 0
                        }
                        rightexp {
                        }
                      }
                    }
                    binop {
                      concat: 0
                    }
                    rightexp {
                      binary {
                        leftexp {
                          prefixexp {
                            exp {
                              binary {
                                leftexp {
                                  prefixexp {
                                    exp {
                                      binary {
                                        leftexp {
                                          prefixexp {
                                          }
                                        }
                                        binop {
                                          concat: 0
                                        }
                                        rightexp {
                                          prefixexp {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  concat: 0
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                        binop {
                          concat: 0
                        }
                        rightexp {
                        }
                      }
                    }
                  }
                }
                expressions {
                  tableconstructor {
                  }
                }
                explast {
                }
              }
            }
          }
        }
      }
      condition {
        nil: 4
      }
    }
  }
  stat {
  }
}
