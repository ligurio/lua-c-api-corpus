chunk {
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
          }
          binop {
            or: 0
          }
          rightexp {
          }
        }
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
          binary {
            leftexp {
            }
            binop {
              or: 0
            }
            rightexp {
            }
          }
        }
        block {
          chunk {
          }
        }
      }
      clauses {
        condition {
          binary {
            leftexp {
            }
            binop {
              or: 0
            }
            rightexp {
            }
          }
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
            true: 1853161472
          }
          binop {
            or: 0
          }
          rightexp {
          }
        }
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
          binary {
            leftexp {
              number: 7.2294757342930368e+221
            }
            binop {
              or: 0
            }
            rightexp {
              number: 0
            }
          }
        }
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                  vars {
                    indexname {
                      prefixexp {
                        functioncall {
                          prefArgs {
                            prefixexp {
                            }
                            args {
                            }
                          }
                        }
                      }
                      Name: ""
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        functioncall {
                          prefArgs {
                            prefixexp {
                              functioncall {
                                prefArgs {
                                  prefixexp {
                                    functioncall {
                                      prefArgs {
                                        prefixexp {
                                          functioncall {
                                          }
                                        }
                                        args {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                                expression {
                                                  number: 7.2294757342930368e+221
                                                }
                                              }
                                              fields {
                                                field {
                                                  expression {
                                                    binary {
                                                      leftexp {
                                                        number: -3.0517578125e-05
                                                      }
                                                      binop {
                                                        concat: 4
                                                      }
                                                      rightexp {
                                                        str: "getupv\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000alue"
                                                      }
                                                    }
                                                  }
                                                }
                                                sep {
                                                }
                                              }
                                              fields {
                                                field {
                                                  expression {
                                                    tableconstructor {
                                                    }
                                                  }
                                                }
                                                sep {
                                                }
                                              }
                                              lastSep {
                                                comma: 0
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  args {
                                  }
                                }
                              }
                            }
                            args {
                            }
                          }
                        }
                      }
                      exp {
                      }
                    }
                  }
                  vars {
                  }
                  vars {
                    indexname {
                      prefixexp {
                        exp {
                          number: 0
                        }
                      }
                      Name: ""
                    }
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                      }
                      exp {
                      }
                    }
                  }
                }
                explist {
                  explast {
                  }
                }
              }
            }
          }
        }
      }
      clauses {
        condition {
          binary {
            leftexp {
            }
            binop {
              or: 0
            }
            rightexp {
            }
          }
        }
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
            prefixexp {
              functioncall {
                namedArgs {
                  prefixexp {
                    functioncall {
                      namedArgs {
                        prefixexp {
                        }
                        name {
                          name: ""
                          num: 0
                        }
                        args {
                          str: "-"
                        }
                      }
                    }
                  }
                  name {
                    name: ""
                    num: 0
                  }
                  args {
                  }
                }
              }
            }
          }
          binop {
            or: 0
          }
          rightexp {
            true: 7864320
          }
        }
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
          binary {
            leftexp {
              true: 0
            }
            binop {
              or: 0
            }
            rightexp {
            }
          }
        }
        block {
          chunk {
          }
        }
      }
    }
  }
}
