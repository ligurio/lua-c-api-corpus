chunk {
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
              }
              args {
                str: "4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444"
              }
            }
          }
        }
        args {
          explist {
            explist {
              expressions {
                function {
                  body {
                    parlist {
                      ellipsis: "9"
                    }
                    block {
                      chunk {
                      }
                    }
                  }
                }
              }
              explast {
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
              }
              args {
                str: "\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'"
              }
            }
          }
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
                expression {
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
