chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            ifstat {
              condition {
                nil: 0
              }
              first {
                chunk {
                }
              }
              clauses {
                condition {
                }
                block {
                  chunk {
                  }
                }
              }
              clauses {
                condition {
                }
                block {
                  chunk {
                  }
                }
              }
              last {
                chunk {
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
                nil: 0
              }
              first {
                chunk {
                }
              }
              last {
                chunk {
                }
              }
            }
          }
          stat {
          }
          stat {
            ifstat {
              condition {
                nil: 0
              }
              first {
                chunk {
                }
              }
              last {
                chunk {
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
                nil: 0
              }
              first {
                chunk {
                }
              }
              last {
                chunk {
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
                nil: 0
              }
              first {
                chunk {
                }
              }
              clauses {
                condition {
                  true: 0
                }
                block {
                  chunk {
                  }
                }
              }
              last {
                chunk {
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
                nil: 0
              }
              first {
                chunk {
                }
              }
              last {
                chunk {
                }
              }
            }
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                }
                args {
                  explist {
                    explist {
                      expressions {
                        ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                      }
                      explast {
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
                nil: 0
              }
              first {
                chunk {
                }
              }
              last {
                chunk {
                }
              }
            }
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          number: nan
                        }
                      }
                    }
                  }
                }
                value {
                }
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    number: 32.4296875
                  }
                  value {
                    number: nan
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    prefixexp {
                      var {
                        indexname {
                          prefixexp {
                            functioncall {
                            }
                          }
                          Name: ""
                        }
                      }
                    }
                  }
                  value {
                    ellipsis: ""
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
