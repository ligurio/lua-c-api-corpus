chunk {
  stat {
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                number: -3
              }
              binop {
                mod: 0
              }
              rightexp {
                unary {
                  unop {
                    length: 0
                  }
                  exp {
                  }
                }
              }
            }
          }
          binop {
          }
          rightexp {
            function {
              body {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  explast {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            number: -3
                          }
                          binop {
                            mod: 0
                          }
                          rightexp {
                            unary {
                              unop {
                                length: 0
                              }
                              exp {
                              }
                            }
                          }
                        }
                      }
                      binop {
                      }
                      rightexp {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
