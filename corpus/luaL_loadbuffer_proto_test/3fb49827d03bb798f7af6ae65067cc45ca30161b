chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
            list {
              varlist {
                var {
                  indexexpr {
                    prefixexp {
                      functioncall {
                        namedArgs {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                }
                                args {
                                  str: "\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023\023"
                                }
                              }
                            }
                          }
                          name {
                            name: ""
                            num: 0
                          }
                          args {
                          }
                        }
                      }
                    }
                    exp {
                    }
                  }
                }
                vars {
                  indexexpr {
                    prefixexp {
                      exp {
                        tableconstructor {
                          fieldlist {
                            firstField {
                              exprassign {
                                key {
                                  unary {
                                    unop {
                                      length: 0
                                    }
                                    exp {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                          }
                                          fields {
                                            field {
                                              exprassign {
                                                key {
                                                  binary {
                                                    leftexp {
                                                      binary {
                                                        leftexp {
                                                          number: 358.08969533209165
                                                        }
                                                        binop {
                                                          exp: 0
                                                        }
                                                        rightexp {
                                                          number: 118.78498777467757
                                                        }
                                                      }
                                                    }
                                                    binop {
                                                      div: 0
                                                    }
                                                    rightexp {
                                                      number: -2.9740338169555661e+284
                                                    }
                                                  }
                                                }
                                                value {
                                                  number: -2.9740338169555661e+284
                                                }
                                              }
                                            }
                                            sep {
                                              comma: 32768
                                            }
                                          }
                                          lastSep {
                                            comma: 32768
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                value {
                                  nil: 0
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    exp {
                    }
                  }
                }
              }
              explist {
                explast {
                }
              }
            }
            semicolon: true
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 0
              }
              startexp {
                number: -0
              }
              stopexp {
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
            semicolon: false
          }
          stat {
            call {
            }
          }
        }
      }
      condition {
        number: 0
      }
    }
    semicolon: true
  }
}
