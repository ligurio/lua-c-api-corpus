chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 4
              }
              startexp {
              }
              stopexp {
                str: "\000\000\000\000"
              }
              stepexp {
                str: "instunroll"
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 0
              }
              startexp {
              }
              stopexp {
              }
              stepexp {
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          ellipsis: "instunroll"
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
        }
        explast {
          ellipsis: "\241"
        }
      }
    }
  }
  laststat {
    break: 0
  }
}
