chunk {
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              expression {
                number: -48.00000000000005
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
              whilecycle {
                condition {
                  unary {
                    unop {
                      length: 0
                    }
                    exp {
                      binary {
                        leftexp {
                        }
                        binop {
                          greaterEqual: 0
                        }
                        rightexp {
                          number: 2.07226151461452e-317
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                            }
                            vars {
                              name {
                                name: "jlogjjjjjjjjjjDjjjj"
                                num: 16
                              }
                            }
                            vars {
                            }
                          }
                          explist {
                            expressions {
                              binary {
                                leftexp {
                                }
                                binop {
                                  concat: 0
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                        exp {
                                          binary {
                                            leftexp {
                                              prefixexp {
                                                exp {
                                                  binary {
                                                    leftexp {
                                                      prefixexp {
                                                      }
                                                    }
                                                    binop {
                                                      concat: 0
                                                    }
                                                    rightexp {
                                                      prefixexp {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            binop {
                                              concat: 0
                                            }
                                            rightexp {
                                            }
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                      concat: 0
                                    }
                                    rightexp {
                                      str: ""
                                    }
                                  }
                                }
                              }
                            }
                            explast {
                            }
                          }
                        }
                      }
                      stat {
                        list {
                          varlist {
                            var {
                            }
                            vars {
                              name {
                                name: "jlogjjjjjjjjjjDjjjj"
                                num: 16
                              }
                            }
                          }
                          explist {
                            expressions {
                              binary {
                                leftexp {
                                  prefixexp {
                                    exp {
                                      binary {
                                        leftexp {
                                          prefixexp {
                                            exp {
                                              binary {
                                                leftexp {
                                                  prefixexp {
                                                  }
                                                }
                                                binop {
                                                  concat: 0
                                                }
                                                rightexp {
                                                  prefixexp {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        binop {
                                          concat: 0
                                        }
                                        rightexp {
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  concat: 0
                                }
                                rightexp {
                                  str: ""
                                }
                              }
                            }
                            expressions {
                              tableconstructor {
                              }
                            }
                            explast {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        whilecycle {
                          condition {
                            unary {
                              unop {
                                length: 0
                              }
                              exp {
                                binary {
                                  leftexp {
                                  }
                                  binop {
                                    or: 0
                                  }
                                  rightexp {
                                    number: 2.07226151461452e-317
                                  }
                                }
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                      stat {
                      }
                    }
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
            }
          }
        }
      }
    }
  }
}
