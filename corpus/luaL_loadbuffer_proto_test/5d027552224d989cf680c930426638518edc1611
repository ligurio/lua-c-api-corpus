chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 16
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
            laststat {
              break: 16
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
            }
            fields {
              field {
                exprassign {
                  key {
                    binary {
                      leftexp {
                        number: -4.9591064453125e-05
                      }
                      binop {
                        mult: 4
                      }
                      rightexp {
                        binary {
                          leftexp {
                            number: -4.9591064453125e-05
                          }
                          binop {
                            mult: 4
                          }
                          rightexp {
                            binary {
                              leftexp {
                                number: -4.9591064453125e-05
                              }
                              binop {
                                mod: 256
                              }
                              rightexp {
                                number: 1.0728402099575969e+253
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  value {
                    false: 0
                  }
                }
              }
              sep {
                comma: 0
              }
            }
            fields {
              field {
                expression {
                  unary {
                    unop {
                    }
                    exp {
                      prefixexp {
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                }
              }
              sep {
                semicolon: 0
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  expressions {
                  }
                  explast {
                  }
                }
              }
              semicolon: false
            }
          }
        }
      }
    }
  }
}
