chunk {
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          prefixexp {
            exp {
              binary {
                leftexp {
                }
                binop {
                  or: 0
                }
                rightexp {
                  prefixexp {
                    exp {
                      binary {
                        leftexp {
                        }
                        binop {
                          or: 4
                        }
                        rightexp {
                          prefixexp {
                            exp {
                              binary {
                                leftexp {
                                }
                                binop {
                                  or: 0
                                }
                                rightexp {
                                  prefixexp {
                                    exp {
                                      binary {
                                        leftexp {
                                        }
                                        binop {
                                          or: 0
                                        }
                                        rightexp {
                                          prefixexp {
                                            exp {
                                              binary {
                                                leftexp {
                                                }
                                                binop {
                                                  or: 0
                                                }
                                                rightexp {
                                                  prefixexp {
                                                    exp {
                                                      binary {
                                                        leftexp {
                                                        }
                                                        binop {
                                                          or: 0
                                                        }
                                                        rightexp {
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: "1"
        num: 4
      }
      startexp {
        unary {
          unop {
          }
          exp {
            prefixexp {
              exp {
                binary {
                  leftexp {
                  }
                  binop {
                    or: 0
                  }
                  rightexp {
                    prefixexp {
                      exp {
                        binary {
                          leftexp {
                          }
                          binop {
                            or: 0
                          }
                          rightexp {
                            prefixexp {
                              exp {
                                binary {
                                  leftexp {
                                  }
                                  binop {
                                    or: 4
                                  }
                                  rightexp {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      stopexp {
        prefixexp {
          exp {
            binary {
              leftexp {
              }
              binop {
                or: 0
              }
              rightexp {
                prefixexp {
                  exp {
                    binary {
                      leftexp {
                      }
                      binop {
                        or: 0
                      }
                      rightexp {
                        prefixexp {
                          exp {
                            binary {
                              leftexp {
                              }
                              binop {
                                or: 0
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      stepexp {
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  explast {
                    unary {
                      unop {
                      }
                      exp {
                        prefixexp {
                          exp {
                            binary {
                              leftexp {
                              }
                              binop {
                                or: 0
                              }
                              rightexp {
                                prefixexp {
                                  exp {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                        or: 0
                                      }
                                      rightexp {
                                        prefixexp {
                                          exp {
                                            binary {
                                              leftexp {
                                              }
                                              binop {
                                              }
                                              rightexp {
                                                binary {
                                                  leftexp {
                                                  }
                                                  binop {
                                                    or: 0
                                                  }
                                                  rightexp {
                                                    prefixexp {
                                                      exp {
                                                        binary {
                                                          leftexp {
                                                          }
                                                          binop {
                                                            or: 4
                                                          }
                                                          rightexp {
                                                            prefixexp {
                                                              exp {
                                                                binary {
                                                                  leftexp {
                                                                  }
                                                                  binop {
                                                                    or: 0
                                                                  }
                                                                  rightexp {
                                                                    prefixexp {
                                                                      exp {
                                                                        binary {
                                                                          leftexp {
                                                                          }
                                                                          binop {
                                                                            or: 0
                                                                          }
                                                                          rightexp {
                                                                            prefixexp {
                                                                              exp {
                                                                                binary {
                                                                                  leftexp {
                                                                                  }
                                                                                  binop {
                                                                                    or: 0
                                                                                  }
                                                                                  rightexp {
                                                                                    prefixexp {
                                                                                      exp {
                                                                                        binary {
                                                                                          leftexp {
                                                                                          }
                                                                                          binop {
                                                                                            or: 0
                                                                                          }
                                                                                          rightexp {
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
