chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: "."
        num: 0
      }
      funcbody {
        parlist {
          ellipsis: "os.difftime"
        }
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                          }
                        }
                        condition {
                          ellipsis: ""
                        }
                      }
                      semicolon: true
                    }
                    stat {
                      whilecycle {
                        condition {
                          ellipsis: "debug.getuservalue"
                        }
                        doblock {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                  }
                }
                condition {
                  ellipsis: ""
                }
              }
              semicolon: true
            }
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  expression {
                                    prefixexp {
                                      functioncall {
                                        prefArgs {
                                          prefixexp {
                                          }
                                          args {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  field {
                                    expression {
                                      prefixexp {
                                        functioncall {
                                          prefArgs {
                                            prefixexp {
                                            }
                                            args {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  sep {
                                  }
                                }
                              }
                            }
                          }
                          value {
                          }
                        }
                      }
                      fields {
                        field {
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                            }
                            value {
                              ellipsis: "debug.getuservalue"
                            }
                          }
                        }
                        sep {
                          comma: 0
                        }
                      }
                      fields {
                        field {
                          expression {
                            prefixexp {
                              functioncall {
                                prefArgs {
                                  prefixexp {
                                  }
                                  args {
                                  }
                                }
                              }
                            }
                          }
                        }
                        sep {
                          semicolon: 268435456
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    whilecycle {
                      condition {
                        tableconstructor {
                          fieldlist {
                            firstField {
                              exprassign {
                                key {
                                  unary {
                                    unop {
                                      length: 2
                                    }
                                    exp {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                            exprassign {
                                              key {
                                                true: 15335167
                                              }
                                              value {
                                                ellipsis: ""
                                              }
                                            }
                                          }
                                          fields {
                                            field {
                                              exprassign {
                                                key {
                                                  number: 4
                                                }
                                                value {
                                                  number: -0
                                                }
                                              }
                                            }
                                            sep {
                                            }
                                          }
                                          fields {
                                            field {
                                              exprassign {
                                                key {
                                                  number: 5
                                                }
                                                value {
                                                  ellipsis: ""
                                                }
                                              }
                                            }
                                            sep {
                                              comma: 0
                                            }
                                          }
                                          fields {
                                            field {
                                            }
                                            sep {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                value {
                                  false: 2
                                }
                              }
                            }
                          }
                        }
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                  stat {
                    whilecycle {
                      condition {
                        function {
                          body {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  laststat {
                  }
                }
              }
              condition {
                ellipsis: ""
              }
            }
          }
          stat {
            whilecycle {
              condition {
                tableconstructor {
                  fieldlist {
                    firstField {
                      exprassign {
                        key {
                        }
                        value {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                }
                                args {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
  }
}
