chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        parlist {
          ellipsis: ""
        }
        block {
          chunk {
            stat {
              func {
                name {
                  firstname {
                    name: "g\203"
                    num: 0
                  }
                  lastname {
                    name: ""
                    num: 8192
                  }
                }
                body {
                  block {
                    chunk {
                      stat {
                        func {
                          name {
                            firstname {
                              name: "\203"
                              num: 0
                            }
                            lastname {
                              name: "\203"
                              num: 0
                            }
                          }
                          body {
                            block {
                              chunk {
                                stat {
                                  func {
                                    name {
                                      firstname {
                                        name: "\203"
                                        num: 0
                                      }
                                      lastname {
                                        name: "\203"
                                        num: 148
                                      }
                                    }
                                    body {
                                      block {
                                        chunk {
                                          stat {
                                            semicolon: true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                ellipsis: ""
              }
            }
            semicolon: true
          }
          stat {
            semicolon: true
          }
          stat {
            whilecycle {
              condition {
                prefixexp {
                  functioncall {
                    prefArgs {
                      prefixexp {
                      }
                      args {
                        explist {
                          explist {
                            expressions {
                            }
                            explast {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
  }
}
