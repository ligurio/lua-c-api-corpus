chunk {
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          tableconstructor {
          }
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
            stat {
              call {
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    block {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    block {
                      block {
                        chunk {
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            block {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            block {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            func {
                              name {
                                firstname {
                                  name: ""
                                  num: 0
                                }
                                names {
                                  name: ""
                                  num: 0
                                }
                              }
                              body {
                                parlist {
                                  namelist {
                                    namelist {
                                      firstname {
                                        name: "!"
                                        num: 0
                                      }
                                      names {
                                        name: "z"
                                        num: 0
                                      }
                                    }
                                  }
                                }
                                block {
                                  chunk {
                                    stat {
                                      call {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                            semicolon: true
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                            semicolon: true
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                            semicolon: true
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            whilecycle {
                              condition {
                              }
                              doblock {
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    func {
                      name {
                        firstname {
                          name: ""
                          num: 0
                        }
                        names {
                          name: ""
                          num: 0
                        }
                      }
                      body {
                        parlist {
                          namelist {
                            namelist {
                              firstname {
                                name: ""
                                num: 0
                              }
                              names {
                                name: "z"
                                num: 0
                              }
                            }
                          }
                        }
                        block {
                          chunk {
                            stat {
                              call {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                }
              }
              condition {
                ellipsis: "\363"
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            block {
              block {
                chunk {
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    block {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    block {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    func {
                      name {
                        firstname {
                          name: ""
                          num: 0
                        }
                        names {
                          name: ""
                          num: 0
                        }
                      }
                      body {
                        parlist {
                          namelist {
                            namelist {
                              firstname {
                                name: "!"
                                num: 0
                              }
                              names {
                                name: "z"
                                num: 0
                              }
                            }
                          }
                        }
                        block {
                          chunk {
                            stat {
                              call {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    whilecycle {
                      condition {
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            block {
              block {
                chunk {
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    block {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    block {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    func {
                      name {
                        firstname {
                          name: ""
                          num: 0
                        }
                        names {
                          name: ""
                          num: 0
                        }
                      }
                      body {
                        parlist {
                          namelist {
                            namelist {
                              firstname {
                                name: ""
                                num: 0
                              }
                              names {
                                name: "z"
                                num: 0
                              }
                            }
                          }
                        }
                        block {
                          chunk {
                            stat {
                              call {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    whilecycle {
                      condition {
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 4
              }
              startexp {
                number: 188978561024
              }
              stopexp {
                unary {
                  unop {
                    length: 2
                  }
                  exp {
                  }
                }
              }
              stepexp {
                number: -0
              }
              doblock {
                block {
                  chunk {
                    stat {
                      semicolon: true
                    }
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                    stat {
                                      list {
                                        varlist {
                                          var {
                                          }
                                          vars {
                                            name {
                                              name: "jlogjjjjjjjjjjDjjjj"
                                              num: 0
                                            }
                                          }
                                          vars {
                                          }
                                        }
                                        explist {
                                          expressions {
                                            binary {
                                              leftexp {
                                              }
                                              binop {
                                                concat: 0
                                              }
                                              rightexp {
                                                binary {
                                                  leftexp {
                                                    prefixexp {
                                                      exp {
                                                        binary {
                                                          leftexp {
                                                            prefixexp {
                                                              exp {
                                                                binary {
                                                                  leftexp {
                                                                    prefixexp {
                                                                      exp {
                                                                        binary {
                                                                          leftexp {
                                                                          }
                                                                          binop {
                                                                            concat: 0
                                                                          }
                                                                          rightexp {
                                                                            binary {
                                                                              leftexp {
                                                                                prefixexp {
                                                                                  exp {
                                                                                    binary {
                                                                                      leftexp {
                                                                                        binary {
                                                                                          leftexp {
                                                                                            binary {
                                                                                              leftexp {
                                                                                                prefixexp {
                                                                                                }
                                                                                              }
                                                                                              binop {
                                                                                                concat: 0
                                                                                              }
                                                                                              rightexp {
                                                                                                prefixexp {
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                          binop {
                                                                                            concat: 0
                                                                                          }
                                                                                          rightexp {
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                      binop {
                                                                                        or: 4
                                                                                      }
                                                                                      rightexp {
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                              binop {
                                                                                concat: 0
                                                                              }
                                                                              rightexp {
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                  binop {
                                                                    concat: 0
                                                                  }
                                                                  rightexp {
                                                                    binary {
                                                                      leftexp {
                                                                      }
                                                                      binop {
                                                                        concat: 2097152
                                                                      }
                                                                      rightexp {
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          binop {
                                                            concat: 0
                                                          }
                                                          rightexp {
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  binop {
                                                    concat: 0
                                                  }
                                                  rightexp {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          expressions {
                                            tableconstructor {
                                            }
                                          }
                                          explast {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                condition {
                                  false: 0
                                }
                              }
                            }
                            stat {
                              list {
                                varlist {
                                  var {
                                  }
                                  vars {
                                    name {
                                      name: "jlogjjjjjjjjjjDjjjj"
                                      num: 0
                                    }
                                  }
                                }
                                explist {
                                  expressions {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                        concat: 0
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                            prefixexp {
                                              exp {
                                                binary {
                                                  leftexp {
                                                    prefixexp {
                                                      exp {
                                                        binary {
                                                          leftexp {
                                                            prefixexp {
                                                              exp {
                                                                binary {
                                                                  leftexp {
                                                                    unary {
                                                                      unop {
                                                                        length: 2
                                                                      }
                                                                      exp {
                                                                        tableconstructor {
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                  binop {
                                                                    concat: 0
                                                                  }
                                                                  rightexp {
                                                                    binary {
                                                                      leftexp {
                                                                        prefixexp {
                                                                          exp {
                                                                            binary {
                                                                              leftexp {
                                                                                binary {
                                                                                  leftexp {
                                                                                  }
                                                                                  binop {
                                                                                    concat: 0
                                                                                  }
                                                                                  rightexp {
                                                                                  }
                                                                                }
                                                                              }
                                                                              binop {
                                                                                concat: 3840
                                                                              }
                                                                              rightexp {
                                                                                prefixexp {
                                                                                  exp {
                                                                                    binary {
                                                                                      leftexp {
                                                                                        binary {
                                                                                          leftexp {
                                                                                            binary {
                                                                                              leftexp {
                                                                                                prefixexp {
                                                                                                }
                                                                                              }
                                                                                              binop {
                                                                                                concat: 0
                                                                                              }
                                                                                              rightexp {
                                                                                                prefixexp {
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                          binop {
                                                                                            concat: 0
                                                                                          }
                                                                                          rightexp {
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                      binop {
                                                                                        or: 4
                                                                                      }
                                                                                      rightexp {
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                      binop {
                                                                        concat: 0
                                                                      }
                                                                      rightexp {
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          binop {
                                                            concat: 0
                                                          }
                                                          rightexp {
                                                            binary {
                                                              leftexp {
                                                                prefixexp {
                                                                  exp {
                                                                    number: 44
                                                                  }
                                                                }
                                                              }
                                                              binop {
                                                                concat: 0
                                                              }
                                                              rightexp {
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  binop {
                                                    concat: 0
                                                  }
                                                  rightexp {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          binop {
                                            concat: 0
                                          }
                                          rightexp {
                                          }
                                        }
                                      }
                                    }
                                  }
                                  expressions {
                                    tableconstructor {
                                    }
                                  }
                                  explast {
                                  }
                                }
                              }
                            }
                          }
                        }
                        condition {
                          false: 6225920
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            func {
              name {
                firstname {
                  name: ""
                  num: 0
                }
                names {
                  name: ""
                  num: 0
                }
              }
              body {
                parlist {
                  namelist {
                    namelist {
                      firstname {
                        name: ""
                        num: 0
                      }
                      names {
                        name: "z"
                        num: 0
                      }
                    }
                  }
                }
                block {
                  chunk {
                    stat {
                      call {
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
        }
      }
      condition {
        ellipsis: "\363"
      }
    }
  }
  laststat {
  }
}
