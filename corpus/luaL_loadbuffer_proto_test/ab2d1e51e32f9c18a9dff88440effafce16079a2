chunk {
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
        }
        expressions {
        }
        expressions {
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                    localfunc {
                      name {
                        name: ""
                        num: 0
                      }
                      funcbody {
                        block {
                          chunk {
                            stat {
                              localfunc {
                                name {
                                  name: ""
                                  num: 0
                                }
                                funcbody {
                                  block {
                                    chunk {
                                      stat {
                                      }
                                      stat {
                                        forcyclename {
                                          name {
                                            name: "\000\377\377\177\000\000\000\000"
                                            num: 4
                                          }
                                          startexp {
                                            unary {
                                              unop {
                                              }
                                              exp {
                                                prefixexp {
                                                  exp {
                                                    unary {
                                                      unop {
                                                      }
                                                      exp {
                                                        prefixexp {
                                                          exp {
                                                            unary {
                                                              unop {
                                                              }
                                                              exp {
                                                                prefixexp {
                                                                  exp {
                                                                    binary {
                                                                      leftexp {
                                                                      }
                                                                      binop {
                                                                      }
                                                                      rightexp {
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          stopexp {
                                          }
                                          stepexp {
                                            false: 4
                                          }
                                          doblock {
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                      }
                                      stat {
                                        semicolon: true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                  }
                                }
                                condition {
                                  nil: 4294967290
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                  }
                }
              }
            }
          }
        }
        expressions {
        }
        expressions {
        }
        expressions {
        }
        expressions {
        }
        expressions {
          number: 1.03613075730726e-317
        }
        expressions {
        }
        expressions {
        }
        expressions {
        }
        expressions {
        }
        explast {
        }
      }
    }
  }
}
