chunk {
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
              }
              binop {
                greater: 0
              }
              rightexp {
              }
            }
          }
          binop {
            greater: 0
          }
          rightexp {
            binary {
              leftexp {
              }
              binop {
                greater: 0
              }
              rightexp {
              }
            }
          }
        }
      }
      first {
        chunk {
        }
      }
      last {
        chunk {
          stat {
            semicolon: true
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
              }
              binop {
                greater: 0
              }
              rightexp {
              }
            }
          }
          binop {
            greater: 0
          }
          rightexp {
            binary {
              leftexp {
              }
              binop {
                greater: 0
              }
              rightexp {
              }
            }
          }
        }
      }
      first {
        chunk {
          stat {
            whilecycle {
              condition {
                unary {
                  unop {
                    length: 15676
                  }
                  exp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            tableconstructor {
                            }
                          }
                          binop {
                            greaterEqual: 2542564096
                          }
                          rightexp {
                            number: 2.07226151461452e-317
                          }
                        }
                      }
                      binop {
                        and: 0
                      }
                      rightexp {
                        ellipsis: ""
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            semicolon: true
          }
          stat {
            whilecycle {
              condition {
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
          }
          binop {
            greater: 0
          }
          rightexp {
            binary {
              leftexp {
              }
              binop {
                greater: 1952972800
              }
              rightexp {
                nil: 64
              }
            }
          }
        }
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
                last {
                  chunk {
                    laststat {
                      semicolon: true
                    }
                  }
                }
              }
            }
          }
        }
      }
      last {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                explast {
                  number: 0
                }
              }
            }
          }
          stat {
          }
          stat {
            whilecycle {
              condition {
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
