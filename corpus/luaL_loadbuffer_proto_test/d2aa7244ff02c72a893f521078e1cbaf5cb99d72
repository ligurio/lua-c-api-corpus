chunk {
  stat {
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              expression {
              }
            }
            fields {
              field {
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    unary {
                      unop {
                      }
                      exp {
                        tableconstructor {
                          fieldlist {
                            firstField {
                            }
                            fields {
                              field {
                                exprassign {
                                  key {
                                    unary {
                                      unop {
                                        negate: 0
                                      }
                                      exp {
                                        binary {
                                          leftexp {
                                            unary {
                                              unop {
                                                length: 0
                                              }
                                              exp {
                                              }
                                            }
                                          }
                                          binop {
                                            mult: 0
                                          }
                                          rightexp {
                                            unary {
                                              unop {
                                                negate: 0
                                              }
                                              exp {
                                                binary {
                                                  leftexp {
                                                    unary {
                                                      unop {
                                                        length: 2
                                                      }
                                                      exp {
                                                        prefixexp {
                                                        }
                                                      }
                                                    }
                                                  }
                                                  binop {
                                                    add: 0
                                                  }
                                                  rightexp {
                                                    unary {
                                                      unop {
                                                        length: 2
                                                      }
                                                      exp {
                                                        prefixexp {
                                                          functioncall {
                                                            prefArgs {
                                                              prefixexp {
                                                                var {
                                                                  indexname {
                                                                    prefixexp {
                                                                    }
                                                                    Name: "char"
                                                                  }
                                                                }
                                                              }
                                                              args {
                                                                explist {
                                                                  explist {
                                                                    explast {
                                                                      unary {
                                                                        unop {
                                                                          negate: 0
                                                                        }
                                                                        exp {
                                                                          binary {
                                                                            leftexp {
                                                                              unary {
                                                                                unop {
                                                                                  length: 0
                                                                                }
                                                                                exp {
                                                                                }
                                                                              }
                                                                            }
                                                                            binop {
                                                                              mult: 0
                                                                            }
                                                                            rightexp {
                                                                              unary {
                                                                                unop {
                                                                                  negate: 0
                                                                                }
                                                                                exp {
                                                                                  unary {
                                                                                    unop {
                                                                                      length: 2
                                                                                    }
                                                                                    exp {
                                                                                      prefixexp {
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  value {
                                    number: 2
                                  }
                                }
                              }
                              sep {
                              }
                            }
                            lastSep {
                            }
                          }
                        }
                      }
                    }
                  }
                  value {
                    str: ""
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: ""
                  num: 0
                }
                funcbody {
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                            }
                          }
                          explist {
                            explast {
                              binary {
                                leftexp {
                                }
                                binop {
                                  or: 0
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        list {
                          varlist {
                            var {
                            }
                          }
                          explist {
                            explast {
                              binary {
                                leftexp {
                                }
                                binop {
                                  or: 0
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        list {
                          varlist {
                            var {
                            }
                          }
                          explist {
                            explast {
                              binary {
                                leftexp {
                                }
                                binop {
                                  or: 0
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        list {
                          varlist {
                            var {
                              indexexpr {
                                prefixexp {
                                }
                                exp {
                                }
                              }
                            }
                          }
                          explist {
                            explast {
                              binary {
                                leftexp {
                                }
                                binop {
                                  or: 0
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                      }
                      laststat {
                      }
                    }
                  }
                }
              }
            }
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 1
                  }
                }
                expressions {
                  explast {
                    binary {
                      leftexp {
                        unary {
                          unop {
                            negate: 0
                          }
                          exp {
                          }
                        }
                      }
                      binop {
                      }
                      rightexp {
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                            }
                          }
                          explist {
                            explast {
                              binary {
                                leftexp {
                                }
                                binop {
                                  or: 0
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
  }
}
