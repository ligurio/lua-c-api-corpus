chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        number: -2
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        number: -2.5
                      }
                    }
                  }
                  binop {
                    div: 0
                  }
                  rightexp {
                    binary {
                      leftexp {
                        number: -4.9591064453125e-05
                      }
                      binop {
                        div: 4
                      }
                      rightexp {
                        binary {
                          leftexp {
                            unary {
                              unop {
                              }
                              exp {
                              }
                            }
                          }
                          binop {
                            mult: 0
                          }
                          rightexp {
                            function {
                              body {
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      semicolon: true
                    }
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            localfunc {
              name {
                name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                num: 0
              }
              funcbody {
                block {
                  chunk {
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            localnames {
              namelist {
                firstname {
                  name: "\262\262\262\262\262\262\262\262\262\262\262\262\262\262\262\262\262\262\262\262\262\262\262"
                  num: 0
                }
              }
              explist {
                expressions {
                  binary {
                    leftexp {
                    }
                    binop {
                      mod: 538976256
                    }
                    rightexp {
                      number: 7.00000001491253
                    }
                  }
                }
                expressions {
                  prefixexp {
                    functioncall {
                    }
                  }
                }
                explast {
                }
              }
            }
            semicolon: true
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 0
              }
              startexp {
                function {
                  body {
                    parlist {
                      ellipsis: "\262\262\262\262\262\262\262\262\262\262\262\262\262\262\262\262\262\262\262\262\262\262\262"
                    }
                    block {
                      chunk {
                      }
                    }
                  }
                }
              }
              stopexp {
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377"
      }
    }
  }
  laststat {
    break: 0
  }
}
