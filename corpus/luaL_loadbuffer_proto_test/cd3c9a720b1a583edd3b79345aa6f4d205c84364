chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 4
      }
      funcbody {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      list {
                        varlist {
                          var {
                            name {
                              name: ""
                              num: 1
                            }
                          }
                          vars {
                            indexname {
                              prefixexp {
                              }
                              Name: "R"
                            }
                          }
                          vars {
                            indexname {
                              prefixexp {
                                var {
                                }
                              }
                              Name: ""
                            }
                          }
                        }
                        explist {
                          explast {
                            prefixexp {
                            }
                          }
                        }
                      }
                    }
                  }
                }
                condition {
                  true: 4
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
          prefixexp {
            var {
              name {
                name: ""
                num: 4
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
