chunk {
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                }
              }
              clauses {
                condition {
                  function {
                    body {
                      parlist {
                        namelist {
                          namelist {
                            firstname {
                              name: ""
                              num: 0
                            }
                          }
                          ellipsis: "#"
                        }
                      }
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      clauses {
        condition {
          function {
            body {
              parlist {
                namelist {
                  namelist {
                    firstname {
                      name: ""
                      num: 0
                    }
                    names {
                      name: ""
                      num: 0
                    }
                  }
                  ellipsis: "#"
                }
              }
              block {
                chunk {
                  laststat {
                    explist {
                    }
                  }
                }
              }
            }
          }
        }
        block {
          chunk {
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        whilecycle {
                          condition {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                }
                                fields {
                                  field {
                                    expression {
                                      binary {
                                        leftexp {
                                          binary {
                                            leftexp {
                                            }
                                            binop {
                                            }
                                            rightexp {
                                              binary {
                                                leftexp {
                                                }
                                                binop {
                                                  notEqual: 0
                                                }
                                                rightexp {
                                                  number: -0
                                                }
                                              }
                                            }
                                          }
                                        }
                                        binop {
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                              binary {
                                                leftexp {
                                                }
                                                binop {
                                                }
                                                rightexp {
                                                  binary {
                                                    leftexp {
                                                    }
                                                    binop {
                                                      notEqual: 0
                                                    }
                                                    rightexp {
                                                      number: -0
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            binop {
                                            }
                                            rightexp {
                                              binary {
                                                leftexp {
                                                  number: -0
                                                }
                                                binop {
                                                }
                                                rightexp {
                                                  number: -0
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  sep {
                                  }
                                }
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                      stat {
                      }
                    }
                  }
                }
              }
              semicolon: false
            }
          }
        }
      }
    }
  }
}
