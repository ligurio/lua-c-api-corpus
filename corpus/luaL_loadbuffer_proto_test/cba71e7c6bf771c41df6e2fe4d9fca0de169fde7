chunk {
  stat {
    whilecycle {
      condition {
        number: 2
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                  number: 2
                }
                stopexp {
                  number: 0
                }
                stepexp {
                  number: -0
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 0
                          }
                          startexp {
                            prefixexp {
                            }
                          }
                          stopexp {
                            prefixexp {
                            }
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  ifstat {
                                    condition {
                                    }
                                    first {
                                      chunk {
                                      }
                                    }
                                  }
                                }
                                stat {
                                  list {
                                    varlist {
                                      var {
                                      }
                                      vars {
                                        name {
                                          name: ""
                                          num: 2
                                        }
                                      }
                                    }
                                    explist {
                                      expressions {
                                        unary {
                                          unop {
                                            length: 4
                                          }
                                          exp {
                                            tableconstructor {
                                            }
                                          }
                                        }
                                      }
                                      explast {
                                        prefixexp {
                                        }
                                      }
                                    }
                                  }
                                }
                                laststat {
                                  break: 4
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        list {
                          varlist {
                            var {
                            }
                            vars {
                              name {
                                name: ""
                                num: 1
                              }
                            }
                          }
                          explist {
                            expressions {
                            }
                            explast {
                              prefixexp {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            laststat {
            }
          }
        }
      }
    }
  }
}
