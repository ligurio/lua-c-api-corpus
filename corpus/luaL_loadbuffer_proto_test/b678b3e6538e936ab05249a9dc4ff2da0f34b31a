chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 1
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        function {
          body {
            block {
              chunk {
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        number: 5.40730738969727e-317
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: "k"
          num: 0
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        function {
          body {
            block {
              chunk {
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
    semicolon: true
  }
  stat {
    func {
      name {
        firstname {
          name: "k"
          num: 458752
        }
      }
      body {
        block {
          chunk {
            stat {
            }
            stat {
              semicolon: true
            }
            stat {
              whilecycle {
                condition {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        semicolon: true
                      }
                      stat {
                        semicolon: true
                      }
                      stat {
                        localnames {
                          namelist {
                            firstname {
                              name: ""
                              num: 0
                            }
                            names {
                              name: ""
                              num: 0
                            }
                            names {
                              name: "\000"
                              num: 0
                            }
                            names {
                              name: ""
                              num: 0
                            }
                          }
                        }
                      }
                      stat {
                        forcyclelist {
                          names {
                            firstname {
                              name: "\000"
                              num: 0
                            }
                          }
                          expressions {
                            explast {
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            semicolon: true
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                  name {
                    name: "k"
                    num: 458752
                  }
                }
                vars {
                }
                vars {
                }
                vars {
                }
                vars {
                  name {
                    name: "k"
                    num: 1
                  }
                }
              }
              explist {
                expressions {
                  ellipsis: "k"
                }
                explast {
                  unary {
                    unop {
                      negate: 0
                    }
                    exp {
                      binary {
                        leftexp {
                          unary {
                            unop {
                              length: 0
                            }
                            exp {
                            }
                          }
                        }
                        binop {
                        }
                        rightexp {
                          unary {
                            unop {
                              negate: 0
                            }
                            exp {
                              binary {
                                leftexp {
                                  unary {
                                    unop {
                                      length: 2
                                    }
                                    exp {
                                      prefixexp {
                                      }
                                    }
                                  }
                                }
                                binop {
                                  add: 0
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      unary {
                                        unop {
                                          length: 2
                                        }
                                        exp {
                                        }
                                      }
                                    }
                                    binop {
                                      add: 0
                                    }
                                    rightexp {
                                      number: 1.9967195973108936e+209
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
          }
        }
      }
      condition {
        nil: 3825139712
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 18
        }
      }
      body {
        parlist {
          ellipsis: "B"
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
}
