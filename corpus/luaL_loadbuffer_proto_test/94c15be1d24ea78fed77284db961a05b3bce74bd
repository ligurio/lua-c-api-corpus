chunk {
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
    block {
      block {
        chunk {
          laststat {
            break: 0
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        expressions {
          binary {
            leftexp {
              binary {
                leftexp {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          prefixexp {
                            exp {
                              unary {
                                unop {
                                }
                                exp {
                                  prefixexp {
                                    functioncall {
                                      prefArgs {
                                        prefixexp {
                                        }
                                        args {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                binop {
                }
                rightexp {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                        }
                        binop {
                          mult: 3892183038
                        }
                        rightexp {
                          unary {
                            unop {
                            }
                            exp {
                              prefixexp {
                                exp {
                                  str: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    binop {
                    }
                    rightexp {
                      unary {
                        unop {
                        }
                        exp {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                }
                                args {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            binop {
              and: 262144
            }
            rightexp {
            }
          }
        }
        explast {
          prefixexp {
            var {
              indexname {
                prefixexp {
                  functioncall {
                  }
                }
                Name: "next"
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
