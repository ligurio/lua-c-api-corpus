chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            forcyclename {
              name {
                name: ""
                num: 4
              }
              startexp {
                number: 0
              }
              stopexp {
              }
              stepexp {
                number: -0.3906249674037095
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 4
              }
              startexp {
                number: 0
              }
              stopexp {
                number: 0
              }
              stepexp {
                number: -0.3906249674037095
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 4
              }
              startexp {
                number: 0
              }
              stopexp {
                number: 0
              }
              stepexp {
                number: -0.3906249674037095
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
              }
              binop {
                or: 45
              }
              rightexp {
                binary {
                  leftexp {
                    nil: 0
                  }
                  binop {
                    notEqual: 0
                  }
                  rightexp {
                    nil: 0
                  }
                }
              }
            }
          }
          binop {
            notEqual: 0
          }
          rightexp {
          }
        }
      }
    }
  }
}
