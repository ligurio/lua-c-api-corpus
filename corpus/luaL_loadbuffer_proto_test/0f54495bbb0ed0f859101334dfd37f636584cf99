chunk {
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
          nil: 0
        }
        block {
          chunk {
          }
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
                clauses {
                  condition {
                  }
                  block {
                    chunk {
                      stat {
                        call {
                          prefArgs {
                            prefixexp {
                              var {
                                indexname {
                                  prefixexp {
                                    functioncall {
                                      prefArgs {
                                        prefixexp {
                                          var {
                                            name {
                                              name: ""
                                              num: 0
                                            }
                                          }
                                        }
                                        args {
                                        }
                                      }
                                    }
                                  }
                                  Name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                }
                              }
                            }
                            args {
                            }
                          }
                        }
                      }
                      stat {
                        repeatcycle {
                          block {
                            chunk {
                              stat {
                                ifstat {
                                  condition {
                                    false: 2
                                  }
                                  first {
                                    chunk {
                                      stat {
                                        ifstat {
                                          condition {
                                          }
                                          first {
                                            chunk {
                                            }
                                          }
                                          clauses {
                                            condition {
                                              false: 8388608
                                            }
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                semicolon: true
                              }
                              stat {
                              }
                            }
                          }
                          condition {
                            unary {
                              unop {
                                negate: 4128512
                              }
                              exp {
                                prefixexp {
                                  exp {
                                    binary {
                                      leftexp {
                                        number: -8.3711609936427934e+298
                                      }
                                      binop {
                                        concat: 0
                                      }
                                      rightexp {
                                        unary {
                                          unop {
                                            negate: 0
                                          }
                                          exp {
                                            prefixexp {
                                              exp {
                                                binary {
                                                  leftexp {
                                                    number: -8.3711609936427134e+298
                                                  }
                                                  binop {
                                                    exp: 0
                                                  }
                                                  rightexp {
                                                    unary {
                                                      unop {
                                                        negate: 0
                                                      }
                                                      exp {
                                                        prefixexp {
                                                          exp {
                                                            binary {
                                                              leftexp {
                                                                number: -8.3711609936427134e+298
                                                              }
                                                              binop {
                                                                concat: 0
                                                              }
                                                              rightexp {
                                                                unary {
                                                                  unop {
                                                                    negate: 0
                                                                  }
                                                                  exp {
                                                                    prefixexp {
                                                                      exp {
                                                                        binary {
                                                                          leftexp {
                                                                            number: -8.3711609936427134e+298
                                                                          }
                                                                          binop {
                                                                          }
                                                                          rightexp {
                                                                            unary {
                                                                              unop {
                                                                                negate: 0
                                                                              }
                                                                              exp {
                                                                                number: 2.8125
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        semicolon: false
                      }
                    }
                  }
                }
                clauses {
                  condition {
                  }
                  block {
                    chunk {
                    }
                  }
                }
                clauses {
                  condition {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                      }
                    }
                  }
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
                clauses {
                  condition {
                    nil: 3221159936
                  }
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
      clauses {
        condition {
          tableconstructor {
          }
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
          prefixexp {
          }
        }
        block {
          chunk {
          }
        }
      }
    }
  }
}
