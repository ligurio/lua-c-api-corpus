chunk {
  stat {
  }
  stat {
    semicolon: false
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  laststat {
    explist {
      explist {
        expressions {
          prefixexp {
            exp {
              function {
                body {
                  block {
                    chunk {
                      stat {
                      }
                      stat {
                        list {
                          varlist {
                            var {
                            }
                          }
                          explist {
                            explast {
                            }
                          }
                        }
                      }
                      stat {
                      }
                      stat {
                      }
                      stat {
                        list {
                          varlist {
                            var {
                            }
                            vars {
                            }
                          }
                          explist {
                            expressions {
                              false: 0
                            }
                            expressions {
                              false: 0
                            }
                            explast {
                            }
                          }
                        }
                      }
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 0
                          }
                          startexp {
                            number: 2.0004768371582031
                          }
                          stopexp {
                            number: 10.5
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  whilecycle {
                                    condition {
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                }
                                stat {
                                  localnames {
                                    namelist {
                                      firstname {
                                        name: ""
                                        num: 2048
                                      }
                                    }
                                  }
                                }
                                stat {
                                  semicolon: false
                                }
                                stat {
                                }
                              }
                            }
                          }
                        }
                        semicolon: false
                      }
                      laststat {
                        explist {
                          explist {
                            expressions {
                              prefixexp {
                              }
                            }
                            explast {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
}
