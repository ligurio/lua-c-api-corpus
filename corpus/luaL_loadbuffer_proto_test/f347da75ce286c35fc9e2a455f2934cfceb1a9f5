chunk {
  stat {
    semicolon: true
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
      expressions {
        expressions {
          prefixexp {
            var {
              name {
                name: "\\377\\005"
                num: 0
              }
            }
          }
        }
        explast {
          binary {
            leftexp {
            }
            binop {
            }
            rightexp {
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 4
        }
      }
      expressions {
        explast {
          prefixexp {
            var {
              indexexpr {
                prefixexp {
                  var {
                    indexexpr {
                      prefixexp {
                      }
                      exp {
                        str: "\000\000\000\000\000\000\000\021"
                      }
                    }
                  }
                }
                exp {
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
            }
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
      expressions {
        expressions {
          binary {
            leftexp {
              unary {
                unop {
                }
                exp {
                  nil: 536870912
                }
              }
            }
            binop {
              concat: 3840
            }
            rightexp {
              binary {
                leftexp {
                  nil: 4
                }
                binop {
                  concat: 983040
                }
                rightexp {
                }
              }
            }
          }
        }
        expressions {
          number: -0
        }
        expressions {
          binary {
            leftexp {
              prefixexp {
                exp {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                        }
                        binop {
                          concat: 0
                        }
                        rightexp {
                          function {
                            body {
                              parlist {
                                ellipsis: "\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                              }
                              block {
                                chunk {
                                  laststat {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    binop {
                      or: 536870912
                    }
                    rightexp {
                      function {
                        body {
                          block {
                            chunk {
                              stat {
                                semicolon: true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            binop {
              concat: 0
            }
            rightexp {
            }
          }
        }
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: false
  }
  stat {
  }
  stat {
    semicolon: true
  }
  laststat {
    semicolon: false
  }
}
