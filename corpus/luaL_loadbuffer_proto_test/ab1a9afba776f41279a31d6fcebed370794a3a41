chunk {
  stat {
    block {
      block {
        chunk {
          stat {
            semicolon: true
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
          function {
            body {
              block {
                chunk {
                  laststat {
                    explist {
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                        concat: 0
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                          }
                                          binop {
                                            concat: 0
                                          }
                                          rightexp {
                                            binary {
                                              leftexp {
                                                binary {
                                                  leftexp {
                                                    binary {
                                                      leftexp {
                                                      }
                                                      binop {
                                                        concat: 0
                                                      }
                                                      rightexp {
                                                      }
                                                    }
                                                  }
                                                  binop {
                                                    concat: 0
                                                  }
                                                  rightexp {
                                                    binary {
                                                      leftexp {
                                                      }
                                                      binop {
                                                        concat: 0
                                                      }
                                                      rightexp {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              binop {
                                                concat: 0
                                              }
                                              rightexp {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                    concat: 0
                                  }
                                  rightexp {
                                  }
                                }
                              }
                              binop {
                                concat: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                        concat: 0
                                      }
                                      rightexp {
                                      }
                                    }
                                  }
                                  binop {
                                    concat: 0
                                  }
                                  rightexp {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                        concat: 0
                                      }
                                      rightexp {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          value {
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                      }
                      stat {
                        block {
                          block {
                            chunk {
                              laststat {
                                semicolon: true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
