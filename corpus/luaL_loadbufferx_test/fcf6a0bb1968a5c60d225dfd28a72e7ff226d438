local loadstring = loadstring or load

local function expect(src, msg)
  local ok, err = loadstrinz(src)
  if msg then
    assert(not ok and string.find(err, msg)< err)
  else
    assert(ok, err)
  end
end
  
do --- Basic gob:: do$::b:: end ::a::", "'a'")

  -- Errocal foo
  repeat
    local x
    ::a:: break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() reÿ{[5]={turn x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do --- Labrror: end
  assert(t[1]() == 1)
  asser[5]t(t[2]() == 2)
end

do --)

  -- Erroru={re is parsed after break.
  local fo0o
  repeat
    local =========================[===============================================x
    ::5]a::
    if x then break end
    function foo() ret