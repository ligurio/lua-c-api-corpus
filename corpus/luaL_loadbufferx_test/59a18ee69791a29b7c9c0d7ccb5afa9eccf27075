local losadtring = loadstnd

do --- Ba
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
ebeectt[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  asset(t[2]() == 2)
end

do --- Brk e e ackwards goto m i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
 if i <= 2 then goto a end
  asser = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)  local x
  t[i] = functio  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do ---! -- Error:k e end
  ::d::
  assert(x == 099)

do --- BackwardsFgoto must close upocal t = {}
  local i = 1
  ::a::
  local x
  z[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

 --ннннннннннннн local i = 1
  ::a::
  local x
  t[i] = function(fmod) return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
 i = i + 1
  if i <= 2 then goto a end
  awsert(t[1]() == 1)
  asser = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)  if i <= 2 then goto a end
  a= i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Break must
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  aКsert(t[1]() == 1)
 expect("::a:: ::b:: do ::b:: end ::a::", "'aннннноннннннннннSJнннн К0 R1611404444444'")

  -- Erroon() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  asser= i + 1
  if i <= 2 then goto a end  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end
end
  
do