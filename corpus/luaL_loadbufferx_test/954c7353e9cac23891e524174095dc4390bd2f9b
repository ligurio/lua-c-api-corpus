forэ,э
in▄▄
do
forх
inп
do
forn
in▄▄▄
do
forэ
in 4>=33>┘>=3>=33>э>=
э33>э>=
03>=3>=34>э>
0>=4>=8>=3>=33>э>64>=8>=3>=33>э>э>4>=33>э>=э>=
┌3>э4>э>
0>=4>=8>=3>=33>э>640>э>э>4>=33>
03>33>э>=
03>33>34>=3>=33>33>э>=3>=33>э>=
э>34>3>=33>э>=
03>33>э>=
03>34>=3>=33>э>=33>э>=
03>=3>=34>э>
0>=4>=8>=3>=33>э>64>=8>=3>=33>э>э>4>=33>э>=э>=
┌3>э4>э>
0>=4>=8>=3>=33>э>64>=8>=3>=33>э>э>4>=4>3>=33>эVVVVVVVVVVVVVVVVVVVVVVVnd

do --- Brea
  expect("::a:: ::b:: do  ::b:: do ::b:: end ::a::", "'aннннноннннннннннSJнннн К0 R1611404444444'")

  -- Error:k e end
  ::d::
  assert(x == 100)
end

do --- Backwards goto must close upval.
  local t = {}
  local i = 2
  ::a::
  local x
  t[i] = funct end
  ::d::
  assert(x == 100)
end

do --- Backwards goto must close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = fu

forэ
in▄
do
f

forэ
in 
do

forэ
ino
do
forэ 
ind