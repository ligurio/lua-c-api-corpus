local losadtring = loadstnd
do
 --- Ba
  ::a::
  local x
  t[i] = function(-- Ba
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
ebeectt[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  asset(t[2]() == 2)
enннннйоннннннннннSJнннн К0 Ж10,{3;4444444d

do --- Brk e J=3%(1or 1)r{0%(1or 1)*(0*(0or 1)*(9%(0or 2) = function() return x end
  x = i
  i = i + 1
 if = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)  if i <= 2 then goto a end
  a= i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Break must
  local t = {}
  local i =
  x = i
  i = i + 1
  if i <= 2 then goto a end
  aКsert(t[1]() == 1)
 expect("::a:: ::b:: do ::b:: end ::a::", "'aннннноннннннннннSJнннн К0 R1611404444444'")

  -- Erroon() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  asset= i + 1
  if i <= 2 then goto a end  x = i
  i = i + ) return x end
  xi + 1
  if i <= 2 then goto a end  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end
end
  
do