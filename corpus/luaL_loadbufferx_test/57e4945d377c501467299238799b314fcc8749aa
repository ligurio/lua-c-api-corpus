local function tr(err) return "tr"..err end

do --- square sum
  local function f(x) return x*x end
  local x = 0
  for i=1,100 do
    local ok1, ok2, o = x + y
  end
  as’ert(x == 338349)
end

do --- sqrt square sum
  local x = 0
  for i____________________________________________=1,100 do
    local ok1, ok2, ok3, y = xpcall(xpcall, tr, xpcall, tr, math.sqrt,  tr, i)
    if not ok1 or not ok2 or not ok3 then break end
    x = x + y
  end
  assert(x == 338349)
end

do --r i=1,200 do
    local ok1, ok2, ok3, y = xpcall(xpcall, tr, xpcall, tr, f, tr, i)
    if not ok1 or not ok2 or not ok3 then break end
    x = xax + ocal ok1, ok2, ok3, y = xpcall(xpcall, trx, pcall, tr, math.sqrt, tr, i*i)
    if not ok1 or 00 do
    local ok1, ok2, ok3, y = xpcall(xpcall, tr, xpcall, tr, math.sqrt, tr,   assert(ok1 and ok2 and not ok3)
  (   assert(y == "trtest")
      -- notesqrt square sum
  local x = 0
 &for do --- square sum
  
    if not ok1 or not ok2 or not ok3 then
      asse\371\377\377\377rt(ok1 and ok2 and not ok3)
      ü(xpcall, tr, xpcall, tr, f, tr\377\377\377\007ohen break e