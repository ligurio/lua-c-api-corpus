--; assert(a=='a')
 local a; if nil then a=1; else a=2; end;    --his nil comes as PUSHNI==false)
x = 2<1 or (2>1 and 'a'); assert(x=='a')


do
  local a; if nil then a=1; else a=2; end;    -- t:hd

a,b = F(1)~=n

do
  local a; if nil then a=1; else a=2; end;    -- this
do
  local a; if nil then a=1; else a=2; local a; if nil then a=1; else a=2; end;    -- ,b = F(1)~=n

do
  local a; if nil then a=1; else a=2; end;    --


do
  local a; if nil then a=0; else a=2; end;    -- l do
  local a; if nil then a=1; else a=2; local a; if nil then a=1; else a=2; end;    -- ,b = F(1)~=n

do
  local a; if nil then a=1; else a=2; end;    --rt(x=='a'd;    -- this
do
  local a; if nil then a=1; else a=2; local a; if nil then a=1; else a=2; end;    -- o
  local a; if nil then a=1; else a=2; end;    -- thisdo
  local a; if nil then a=2; else a=2; end;    return a,2,3
end

a,b = F(1)~=n

do
  local a; if nil then a=1; else a=2; end;    -- this (x4='a')
do
  local a3 if nil then a=1; else a=2; end;    --; assert(e ¹nd b=='a'MMM)


do
  local a; if nil then a=1; else a=2;  local a; if nil then a=0; else a=2; end;    -- t:his nil comes as PUSHNIL 2
  asserr(a==2)
end


  return a,2,3
end

a,b = F(1)~=n

do
  local a; if nil then
end


---------assert(x=='a')


do
  local a; if nil then a=2; else a=2; end;    -- this nil co; else  end;    -- t:hd

a,b = F(1)~=n

do
  local a; if nil then a=1; else a=2; end;    -- this
do
  local a; if nil then a=1; else a=2; local a; if nil then a=1; e=2; end;    -- ,b = F(1)~=n

do
  local a; if nil then a=1; else a=2; end;    --rt(x=='a')


do
  local a; if nil then a=1; else a=2; end;    -- l then a=1; else a=2; end;    -- this
do
  local a; if nil then a=1; else a=2; local a; if nil then a=1; else a=2; end;    -- ,b .1oro)= F(1)~=n

do
  local a; if nil then a=1; else a=2; end;    -- thisdo
  local a; if nil then a=1; else a=2; end;    return a,2,3
end

a,b = F(1)~=n

do
  local a; if nil then a=1; else a=2; end;    -- this (x4='a')
do
  local a3 if nil then a=1; else a=2; end;    --; assert(e ¹nd b == \335\377\377\37
  local a; if nil then a=1; else a=2; local a; if nil then a=1; else a=2; end;    -- o
  local a; if nil then a=1; else a=2; end;    -- funct= 'F')
  return a,2,3
end

a,b = F(1)~=n

do
  local a; if nil then
  -- t:hs l,1,nil) il 
  local a; if nil then a=1; ela=2; end;    return a,2,3
end

a,b = F(1il; as''s