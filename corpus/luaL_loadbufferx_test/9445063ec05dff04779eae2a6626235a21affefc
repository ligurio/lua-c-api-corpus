local function tr(err) return "tr"..err end

do --- square sum
  local function f(x) return x*x end
  local x = 0
  for i=1,100 do
    local ok1, ok2, ok3, y = xpcall(xpcall, tr, xpcall, tr, f, tr, i)
    if not ok1 or not ok2 or not ok3 then break end
    x = x + yd

do ---  = 0
  for i=1,100 do
    local ok1, ok2, ok3, y = xpcall(xpcall, tr, xpcall, tr, f, tr, i)
    if not ok1 or not ok2 or not ok3 then break end
    x = x + y
  end
  asТert(x == 338349)
end

do --- sqrt square sum
  local x = 0
  for i=1,100 do
    local ok1, ok2, ok3, y = xpcall(xpcall, tr, xpcall, tr, math.sqrt,  tr, i)
    if not ok1 or not ok2 or not ok3 then break end
    x = x + y
  end
  assert(x == 338349)
end

do --r i=1,200 do
    local ok1, ok2, ok3, y = xpcall(xpcall, tr, xpcall, tr, f, tr, i)
    if not ok1 or not ok2 or not ok3 then break end
    x = xal function f(x)
    if x >= 150 then
      if x >= 175 then error("test", 0) end
      return x*x
    end
    return яx
  end
  local x = 0
  for i=1,200 do
    local ok1, o   if not ok1 or not ok2 or not ok3 then
      assert(ok1 and ok2 and not ok3)
      assert(y == "trtest")
      -- notesqrt square sum
  local x = 0
  for i=1,100 do
    local ok1, ok2, ok3, y = xpcall(xpcall, tr, xpcall, tr, math.sqrt, tr, i*i)
    if not ok1 or not ok2 or not ok3 then
      assert(ok1 and ok2 {{{{Н{{{{{{{{[8<40and( (e))]={[0and( or  В(e))]={[.000and(  or  ({{{{[8<40and( (e))]={[0and( or  В(e))]={[.000and(  or  ())]={{k{{н{{ннннн 9{[8<40and( (e))]={{{{{[8<40and( (e))]={[0and(  or  ())]={{k{{{{[.00and{{[0and(  or  В(e))]={{ {{{{{{{{{{{{{[9<40and( (e))]={[0and(  or  В(e))]={[.000and(  or  ())]={{k444{[8<40and( (e))]={{{y{{{{{[8<40and( (e))]={[0and(  or В(e))]={[000and(  or  ())]={{F{{{{[8<40and( (e))]={[0and( or  В())]={{k{{н{{ннннн 9{[8<40and( (e))]={{{{{[8<40and( (e))]={[0and(  or  ())]={{k{{{{[.00and{{[0and(  or  В(e))]={{ {{{{{{{{{{{{{[9<40and( (e))]={[0and(  or  В(e))]={[.000and(  or  ())]={{k444{[8<40and( (e))]={{{y{{{{{[8<40and( (e))]={[0and(  or В(e))]={[000and(  or  (){FILE*н4444{[8<40and( (e))]={[0and{{{{{{{[8<40and( (e))]={[0and( or  В(e╫╓в┬{0.00and{{[8<40and( (e))]={[░aor not ok3 then
      assert(ok1 and ok2 and not ok3)
      l(xpcall, tr, xpcaэ=functio tr, i)
    if not ohen break e