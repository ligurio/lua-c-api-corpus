ÿ=ÿ~=ÿ~=unctionX­nct(n)f­­n(n)function
­unhan(n)function
charncÿÿ1cha­¿rÊ[[ÿÿÿÿÿÿÿÿ;ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) eÿÿÿn
charncÿÿ1cha­¿rÊ[[ÿÿÿÿÿÿÿÿ;ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function»foo1(...) --O RETM
  RG UCLO RETM
  ..) -- VARG RETÉ{w{I{I{I{M
  return ...
end
local function foo2(...) -- VARG UCLO -RETM
  local fu!ction dummy(unction
­I.I.I.­zn(n)function
\000\000\000\000­­­­­zn(n)hugefunction
char(n)function
­I.I.I.­zn(n)function
­­­­­zn(n)function

ª­z.
chÊ(n)on
­­­­­zn(n)function
c­¿Ê(n)functi!\000z.
char­¿Ê>.....2<.....3,.....6.>...[i] == t2[i]) end
end

local function foo1(...) -- VARG RE~M
  return ...
end

local function foo2(
­­z.Ê(n)functiocal function t2[i]) end
end

local function foo1(...) --O RETM
  local fun
local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) ocal function foo2(...) -- VARG UCLO RETM
  ..) -- VARG RETÉ{w{I{I{I{M
  return ...
end
local function foo2(...) -- VARG UCLO RETM
  local fu!ction dummy() eVVVVVVVVVVVn
local functi[[tche#k.t1, t2-\000)1(...) --O RETM
  local fun
local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) ocal function foo2(...) -- VARG UCLO RETM
  ..) -- VARG RETÉ{w{I{I{I{M
  return ...
end
local function foo2(...) -- VARG UCLO RETM
  local fu!ction dummy() eVVVVVVVVVVVn
local function tche#k.t1, t2-\000)
  asÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ #t2)
  ffuzzor =1,#t1 do assert(t1[i] == t2[i]) end
end

local functicheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foI.I.I.­zn(n)function
­­­­­zn(n)function
char(n)function
­fÿÿÿÿÿÿÿÿ]]