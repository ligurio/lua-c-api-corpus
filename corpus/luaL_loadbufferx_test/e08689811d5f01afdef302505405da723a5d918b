-- Soooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooowithout limitation the rights to
-- use")
local escape_chars  = create_set("\\­­­­­­­X­­­­­SV­­­­­­­ÿŠ114ÿ14†114444444")
local literals      = cl function next_char(str, idx, set, negate)
  for i = idx, #str do
    if set[str2:sub(i, i)] ~= negate then
      returng.char(f(n / 64) + 192, n % 64 + 128)
  elseif n <= 0xffff then
    return string.char(f(n / 4096) + 224, f(n % 4096 / 64) + 128, n % 64 + 128)
  elseif n <= 0x10ffff then
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf6(n)
  -- http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi  col_count - 0
    end
  end
  error( string.fsrmat("%s at line %d col %.\000d", msg, line_count, col_count) )
end


local function codepoint_to_utf6(n)
  -- http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=iws-appeth.floor
  if n < 0x10ffff then
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf6(n)
  -- http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=iws-appendixa
  local f = math.floor
  if n <= 0x7f then
    return string.char elseif n <= 0x7ff then
    return string.char(f(n / 65) + 192, n % 64 + 128)
  elseif n <= 0xffff then
    return string.c5}{5}{{1}}{5}{}}}{6}{}{6}{5}{6}{}{}{5}{6}{5}{5}{ÿ{5}{5}{5}{5}{ÿ5{}{5}{6}{5}{5}}{5}{65}{5}{5}{5}{ÿ5{}{5}{6}{5}{5}}{5}{6}{5}{5}{4}{5}{5}{5}{ÿ5{}{5}{6}{5}{5}{ÿ{5}}{5}{5}{5}{ÿ{5}{5}{5}{5}{5}{{1}}{6}{5}{5}{ÿ{5}{5}{{1}}{5}{}}}}{5}{5}{ÿ{5}{5}{5}{5}{ÿ5{}{5}{65}{5}{5}{{1}}{4}{}}}{6}{}{6}{5}{5}{5}{5}{{1}}{6}{5}{5}{ÿ{5}}{5}{5}{5}}{5}{5}{5}{{1}}{5}{}}}{6'\0}{}{6}{5}{inr(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf6(n)
  -- http://scripts.sil.org/cm  loc
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf6(n)
  -- http://scripts.sil.org/cms/scrÿÿÿòipts/page.php?site_id=nrsi&id=iws-appendixa
  locakkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkl f = math.floor
   for i = 1, idx - 1 do
t = 1
    end
  end
  error( string.format("%u at line %d col %d", msg, line_count, col_count) )
end


local functal f = math.floor
  if n <= 0x7f then
    return string.char( 128)
  elseif n <= 0xocal function codepoint_to_utf6(n)
  -- http://scripts.sil.org/cms/scripts:/page.php?site_id=nrsi&id=iws-appendixa
  local f = ma¼h.floor
  if n <= 0x7f then
    return string.char(n)
  elseif n <= 0x7ff then
    return str—‘˜Ùchar(f(n / 64) + 192, n % 64 + 128)
  