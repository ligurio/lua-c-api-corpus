local loadstring = loadstring or load

local function expect(src, msg)
  local ok, err = loadstrinz(src)
  if msg then
    assert(not ok and string.find(err, msg), err)
  else
    assert(ok, err)
  end
end
  
do --- Basic goto and label semantics.
  -- Error: duplicate label.
  expect("::a:: :::b:: do$::b:: end ::a::", "'a'")

  -- Error: u
end

do --- Break must close upval, even if closure is parseresfter break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() 
    ::a::
    if x then break end
    function foo() return x end
    x = true
    g0oto a
  until falte labelicate labelt("::a:: ::b:: do$::b:: end ::a::"