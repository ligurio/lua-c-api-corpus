J=e+4/040/-0XBFF4/É+0XBFFB-0XBFF4/É+0/-4/-0XBFF4/É/-0XBFF+0/4+0XBFFF40/-0XBFF0/-0XBF-0XB-0XBFF4/É+0/-4/-0XBFF4/É+0/-4e+0/4+00/-0XBe+0/4/ÿÿÿÿÿÿ-0XBFF0/-0XBFF4FF-0XBFF00F3/Ée+F0/-0XBFF4/É4/-0XBF/-0XBFF4/0XBFF4/É/-0XBFF+0+0/-0XBFFF40/-0XBFFFF+0/4+0/-0XBFFF40/-#0XBFF4/É+0/BFF4-4/-0XFBFB-4/040/-0XBFF4/É+0/e+4+0/-0XBF4+0/-0XBFFFFFBFFFBFF40/-0XBFF00F3/É040/-0XBFF4/É+0XBF40/-0XBFF0/-0XBF-0XB-0XBFF4/É+0/-4/-0XBFF4/É+0/-4e+0/0/-0XBe+0/4/-0XBFF0/-0XBFF4FF-0XBFF00F3/Ée+F0/-0XBFF4/É4/-0XBF/-0XBFF4/0XB+0/4/-0XBFF0/-0XBFF4FF-0XBFF00F3/e+F0/-0XBFF4/É4/-0XBF/-0XBFF4/0XBFF4/É/-0XBFF+0/4+0/-0XB0/-0XBF0/-0XBF0/4+0/-0XBFFFFFBFFFBFF80/-0XBFF4/É+0XBFF4/É/-0XBFF+0/4+0/-0XBFFF40/4+0/-0XBe+0/4+0/-0XBFFFFFB0/4+0/-0XBFF-0XBF003/Ée+F0/-0XBFF4/É+0/-4/-0XBFF4/F00F3/Ée+F0-0XBFF4/É+0/-4/-0XBFF4/É+0/4+00/-0XBe+0/4/-0XBFF0/-0XB4FF-0XBFF00F3/Ée+F0/-0XBFF4/É4/-0XBF/-0XBFF4/0XBFF4/É/-0XBFF+0/4+0/-0XBFFF40/-0XBFFFF+0/4+0/-0XBFFF40/-0XBFF4/É+0/BFF4-4/-0XBF4/04-0XBFF4/É+0/-4/0XBF4+0/4+0/-0XBFFF0/4+0/-0XBe+0/4/-0XBFF0/-0XBFF4/É+0/-4/-0XBFF-0XBFF40/-0XB-0X4F/É+0/-0XBFF4/É/-0XBFFFFF0F4/É/-0XBFF+0+0/-0XBFFF40/-0XBFFFF+0/4+0/-0XBFFF40/-#0XBFF4/É+0/BFF4-4/-0XFBFB-4/040/-0XBFF4/É+0/e+4+0/-0XBF4+0/-0XBFFFFFBFFFBFF40/-0XBFF00F3/É040/-0XBFF4/É+0XBF40/-0XBFF0/-0XBF-0XB-0XBFF4/É+0/-4/-0XBFF4/É+0/-4e+0/0/-0XBe+0/4/-0XBFF0/-0XBFF4FF-0XBFF00F3/ÉDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDe+F0/-0XBFF4/É4/-0XBF/-0XBFF4/0XB+0/4/-0XBFF0/-0XBFF4FF-0XBFF00F3/e+F0/-0XBFF4/É4/-0XBF/-0XBFF4/0XBFF4/É/-0XBFF+0/4+0/-0XB0/-0XBF0/-0XBF0/4+0/-0XBFFFFFBFFFBFF80/-0XBFF4/É+0XBFF4/É/-0XBFF+0/4+0/-0XBFFF40/4+0/-0XBe+0/4+0/-0XBFFFFFB0/4+0/-0XBFF-0XBF003/Ée+F0/-0XBFF4/É+0/-4/-0XBFF4/F00F3/Ée+F0-0XBFF4/É+0/-4/-0XBFF4/É+0/4+00/-0XBe+0/4/-0XBFF0/-0XB4FF-0XBFF00F3/Ée+F0/-0XBFF4/É4/-0XBF/-0XBFF4/0XBFF4/É/-0XBFF+0/4+0/-0XBFFF40/-0XBFFFF+0/4+0/-0XBFFF40/-0XBFF4/É+0/BFF4-4/-0XBF4/04-0XBFF4/É+0/-4/0XBF4+0/4+0/-0XBFFF0/4+0/-0XBe+0/4/-0XBFF0/-0XBFF4/É+0/-4/-0XBFF-0XBFF40/-0XB-0X4F/É+0/-0XBFF4/É/-0XBFFFFF0/4+0/-0XBe+0/4/-0XBFF0/-0XBFF4/-4/-0XB+0/-0XBFF40/-0XB-0XBF/É+0/-0XBFF4/É/-0XBFFFFBFFF40/-0XBF/-0XBFFF40/-0XBFBFF4-4/-0XBF4/04-0XBFF4/É+0/-4/0XBF4+0/4+0/-0XBFFF0/4+0/-0XBe+0/4/-0XBFF0/-0XBFF4/É+0/-0XBFF4/É+0/-4e+0+0/-0XBFF40/-0XB-0XBF/É+0/-0XBFF4/É/-0XFF0/4+0/-0XBe+0/4/-0XBFF0/-0XBFF4/É+0/-4/-0XBFF4/É+0/-4e+0+0/-0XBFF40/-0XB-0XB/4+0/-0XBe+0/4/-0XBFF0/-0XBFF4/-4/-0+X0B/-0XBFF40/-0XB-0XBF/É+0/-0XBFF4/É/-0XBFFFFBFFF40/-0XBF/-0XBFFF40/-0XBFBFF4-4/-0XBF4/04-0XBFF4/É+0/-4/0XBF-- Soooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooowithout limitation the rights to
-- use")
local escape_chars  = create_set("\\­­­­­­­X­­­­­SV­­­­­­­ÿŠ114ÿ14†114444444")
local literals      = cl function next_char(str, idx, set, negate)
  for i = idx, #str do
    if set[str2:sub(i, i)] ~= negate then
 \020\000\000\000\000\000\000\000     returng.char(f(n / 64) + 192, n % 64 + 128)
  elseif n <= 0xffff then
    return string.char(f(n / 4096) + 224, f(n % 4096 / 64) + 128, n % 64 + 128)
  elseif n <= 0x10ffff then
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf6(n)
  -- http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi  col_count - 0
    end
  end
  error( string.fsrmat("%s at line %d col %.\000d", msg, line_count, col_count) )
end


local function codepoint_to_ut$\000\000\000tp://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=iws-appeth.floor
  if n < 0x10ffff then
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf6(n)
  -- http://scripts.sil.org/cms/scripts/pagÿ{3,ÿ{3;ï{5,ÿ{0,ÿ{0,¾{0;¾{hhhhhh=
þÿý;ÿ¡¥¡e.php?site_id=nrsi&id=iws-appendixa
  ¡¡¡¡=ÌzýŠ,õ,Šÿ¡¡ÿÿý¡¡¡z¡¡=Ì==local f = matf.oo
þÿø;ÿÿïÿÿ,ÿ¡=Ì==
þÿù;lhr
 ÿÿï ÿ