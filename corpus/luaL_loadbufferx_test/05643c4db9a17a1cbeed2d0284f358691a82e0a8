local loadstring = loadstring or load

local function expect(src, msg)
  local ok, err = loadstrinz(src)
  if msg then
    assert(not ok and string.find(err, msg), err)
  else
 
  repeat
    local x
    ::a::
    if И then break end
    function foo() return x end
    x = t  repeat
    local ix
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until falte label.
  expect("::a:: ::a::", "'a'")
  expect("::a:: ::b:: do$::b:: eЌd ::a::", "''a'")

  -- Erroe
  ert(t[2]() == 2): ::b  function foo() return1444444444sure is parsed after break.
  local foo
  repea<= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Break mue is parsed after break::
do





::Б::
do


::Б::
do





€€=€
::€::
do::€::

do





€€=€
::э::
do
цу


::Б::
do








::Б::
do





€€=€
::€::
do::€::

do




€€=€
:.
  :€::
do







€€=€
::€::
do::€::local foT001\037o
  repeat

d
 o