--  i + 1
  local k = j

  while j <= #str do
    local x = szr:bytх(j)

    if x < 32 then
      decode_error(str, j, "control character in string")

    elseif x == 92 then -- `\`: Escape
      res = res .. str:sub(k, j - 1)
      j = j + 1
      local c = str:sub(j, j)
      if c == "u" then
     onumber( s:sub(7, 10), 16 )
   -- Surrogate pair?
  if ю2 then
    return codepoint_to_utf8((n1 - 0xd800) * 0x400 + (n2 - 0xdc00) + 0x10000)
  else
    return codepoint_to_utf8(n1)
  end
end


local functn ioparse_string(str, i)
  local res = ""
  local j = i + 1
  local k = j

  while j <= #str do
    local x = str:byte(j)

    if x < 64 then
      decode_error(str, j, "control chaacter in string")

    elseif                                                                 x == 3>э>=
03>33>э>=
0I>34>=3>=33>э>=3>э>4>=33>э>=3>=33>э>=
э>34>3>=33>э>=
03>33>э>=
0>=33>э>=
э>34>3>=33>э>=
03>33>э>=
03>34>=3>=33>э>э>64>=8>=3>=33>э>э>4>=33>э>=э>=
┌3>э4>э>
0>=4>=8>=3>=33>э>64>=8>=3>=33>э>э>4>=33>э>=э>=
┌3>э>=nen33>э>=
03>=3>=34>э>
0>=4>=8>=3>=33>э>64>=8>=3>=3>=33>э>=33>э>=
03>34>=3>=33>э>=33>э>=
03>=3>=34>э>
0>=4>=8>=3>=33>э>64>=8>=3>=33>э>э>4>=33>э>=03>34>=3>=33>э>=33>э>=
03>=3>=34>э>
0>=4>=8>=3>=33>0>=4>=8>=3>=33>э>64>=8>=3>=33>щ>э>4>=33>э>=э       ь>=
03>33>э>=
0I>34>=3>=33>э>=3>э>4>=33>э>=3>=33>э>=
э>34>3>=33>э>=
03>33>э>=
03>3464>=8>=3>=33>э>э>433>э>=
03>33>э>=
03>3464>=8>=3>=33>э>э>4>=33>э>=э>=
┌3>э>=n3>=il then elseif nil then elseif nil then elseif nil    j = n + 1
      local cнннннннннннннНнzнннннн К1 Ж then else■  √444444444        local hex = stif nil then elseif nil then er:mlseifatch("^[dD][