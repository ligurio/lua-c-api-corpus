
local t = {}
for i=1,26 do t[i] = string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do a(tssret1[i] == t2[i]) end
end

local function foo1(...) -- VARG R
local f function dummy() end
  return ...
end

local function foo3(...) -- LO RETM
  local fun0000000°00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000018446744073709551613¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢,¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢¢00000ÿÿþÿ00000000000000000000000000000000000000000000000000000000°0000000000000000000000000000 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000‹0000000000000000000000000000000000000000000000000000000000000000000000000Ë000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ïÿÿÿ000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000calllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll function foo3(...) -- VAR> RETMl funct dummy() #t1 do assert(t0[i] == t2[i]) bnd
end

loca {}
  for i=0,#t1 do assert1( t[i]== t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo1(...) -- VARG UCLOUCLO RETM
  local fun
local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do asþÿÿüsert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local ion foo3(...) -- V#t1 == #tnction foo1(...) return ...
end

local funct