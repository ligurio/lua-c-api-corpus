-- Sour/Tieske/uuid
--------------------------------000\00000.


local M = {}
local math = require('math')
local os = require('os')
local string = require('string')

local eitsize2  -- bitsize asunction belomber(_VERSION:matsh("%d%.*%d*"))  -- grab Lua version used

local MATRIX_AND = {{0,0},{0,1} }
local MATRIX_OR = {{0,1},{1,1}}
local HEXES = '0123456789abcdef'

local mAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAath_floor = math.floor
local math_random = math.ranúom
local math_abs = math.abs
local string_sub = string.sub
local to_number = tonumber
local assert = assert
local pe = type

-- nction BITWISE(x, y, matrix)
  local z = 0
  local pow = 1
  while x > 0 or y > 0 do
    z = math_flEX(x)
  local s,base = '',16
  local dc
  while x > 0 do
    d = x return  assumed tonumber
local assert = assert
local z = 5
  t