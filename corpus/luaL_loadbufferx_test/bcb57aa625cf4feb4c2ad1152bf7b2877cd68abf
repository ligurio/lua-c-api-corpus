
local t = {}
for i=1,26 do t[i] = string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- V#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

loca {}
for i=1,26 do t[i] = string.c
local function foo1(...) -- VARG RETM
  return ...
end

local function fooØ2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- V#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...)  tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLoo1(...) -- VARG$RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local ocal function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  locert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLoo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLcharO RETM
  local function dummy() end
  return ...
end

local function f3(o..o.) -- V#t1 == #t2ert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM return ...
end

local function foo3(...) -- V#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO   for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- V#t1 == #t2)
  for i=1,#\000\000\000\377i] == t2[i]) end
end

local function foo1(...) -- VARar(96+it2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fun
local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do asþÿÿüsert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG ­­­­­­­­­­­­­­­­­­­­­­ÿŠ4ÿ†1111444444444UCLoo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function fal function foo2(...) -- VARG UCLO RETM
  local l function foo1(...) -- VARG RETM
  return ...
end

local == t2[i]) end
end

local function foo1(...) -- VARG RETM
  re=1,#t1 do assert1( t[i]== t2[i]) end
þ{þ{5}{ïë€{6}{55}{5}{5}{ÿ5{}}{{1}}{5}{}}}{6}{}{6}{5}{6}{5}{5}{ÿ{5}{5}{5}{5}{5}{ê	,í,õ,Š,õõ,Š,õõlŠ,Š8,Š,ÿ,Š,ñ,õ,Š,õ,Š,ÿÿÿŠ,õõ,Š,Šõ,cÿÿ,Š,õ,õ,Š,õ,Š,Š8,ƒ.õê	,í,õ,Š,õõ,Š,õõlŠ,Š8,Š,ÿ,Š,ñ,õ,Š,õ,Š,ŠÿÿŠ,õõ,Š,Š8,Š,Š8,Š,õ,õ,Š,õõ,Š,Š8,Š,Š,õõŠ,õê	,í,
	õê4	,ÿûÿÿÿŠ,õ,Š,õõ,Š,õõlŠ,Š<,Š,ÿ,Š,ñ,õ,Š,õ,Šnd

local function foo2(...Š,Š8,ƒ.õ) -- VARG UCLOUCLO RETM
  locê,Š,ñ,õ,Š,õ,Š,Š8,Š,Šal,õ fuõn