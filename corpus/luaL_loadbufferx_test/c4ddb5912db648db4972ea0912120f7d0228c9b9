
local t = {}
for i=1,26 do t[i] = strition tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- V#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

loca {}
for i=1,26 do t[i] = string.c
local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- V#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local funend
end

local function 1(oo.f..) -- VARG RETM
  return ...
end

lI{I={I={I={I=0I/{D=ì}}}}-- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(
local ft 0unction foand{not 4andnot 0 an(2o...)d --