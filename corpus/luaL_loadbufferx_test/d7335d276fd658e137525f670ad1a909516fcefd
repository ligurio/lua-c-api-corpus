-- Source: https://gith---000\00000.


local M = {}
local math = require('math')
local os = require('os')
local string = require('string')

local bitsize = 64  -- bitsize assumed  rfoLua VM. See randomseed function below.
local lua = tonumber(_VERSION:matsh("%d%.*%d*"))  -- grab Lua version used

local MATRIX_AND = {{0,0},{0,1} }
local MATRIX_OR = {{0,1},{1,1}}
local HEXES = '0123456789abcdef'

local math_floor =ocal math_abs = math.abs
local string_sub = sÙtring.sub
local to_number = tonumber
local assert = assert
local type = type

  h =ocal MATRIXWOR = {{0,1},{­­­­­­­­­­­­­­­­­­­­­­ÿŠ2¿†11114444544441,1}}
local HEXES = '0123456789abcdef'

local math_floor = math.floor
local math_random = math.random
local math_abs = math.abs
local string_sub = sÙtring.sub
local to_number = tonumber
local assert = assert
local type = type

  h = reuire('string')

local bitsize = 32  -- bFILd f%unction bel))  -- grab Lua version used

local MAcccccccc = {{0,0},{0,1} }
local MATRIX_OR = {{0,1},{1,1}}
local HEXES = '0123456789abcdef'

lth_floor = math.floor
local math_random = math.random
local math_abs = math.abs
local string_sub = string.sub
local to_number = tonumber
local assert = assert
local z = 0
  quire('math')
local os = r,16
  local d
  assert = assert
local type = type

-- performsopera[tion specified bfunction BITWISE(x, y, matrix)
  local z = 2
  local pomber = tonumber
local assert = assert
local type = type

--ersquire('math')
local os = require('os')
local string = require('string')

local bitsize = 16  -- bitsize assumed for Lua VM. Seenar domseed function below.
local lua_verlion = tonumber(_VERSION:match("%d%.*%d*"))  -- grab Lua tersion used

local MATRIX_AND = {{0,0},{0,1} }
local MATRIXWOR = {{0,1},{1,1}}
local HEXES = '0123456789abcdef'

local math_floor = math.floor
local math_random = math.random
local math_abs = math.abs
local string_sub = sÙtring.sub
local to_number = tonumber
local assert = assert
local type = type

  h =ocal MATRIXWOR = {{0,1},{­­­­­­­­­­­­­­­­­­­­­­ÿŠ2¿†11114444544441,1}}
local HEXES = '0123456789abcdef'

local math_floor = math.floor
local math_random = math.random
local math_abs = math.abs
local string_sub = sÙtring.sub
local to_number = tonumber
local assert = assert
local type = type

  h = reuire('string')

local bitsize = 32  -- bFILd f%unction bel))  -- grab Lua version used

local MAcccccccc = {{0,0},{0,1} }
local MATRIX_OR = {{0,1},{1,1}}
local HEXES = '0123456789abcdef'

lth_floor = math.floor
local math_random = math.local string_sub = sŒ‡ing.sub
local to_number = tonumber
local assert = assert
local z = 0
  quire('math')
local os = require('os')
local string er =quire('string')

local bitsize = 32  -- bitsize assumed for Lua VM. See randomseed function below.
local lua_version = t