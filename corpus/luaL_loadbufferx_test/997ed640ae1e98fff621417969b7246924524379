fLo=Â e=ÿÿ
í=function(o)íoÿÿÿ00í=function(n)í=0


 e=ÿÿ
í=function(o)í=5


orÿ
í=function(n)í=0


orÿ
í=function(n)í=0


oro



ooÿLo=Â e=ÿÿ
í=function(o)í=fu

 e=ÿÿ
m=«function(o)í=5


orÿ
í=unÿ
<function(n)±í=0
tion(o)í=5


orÿ
í=funcmendfFIín(o)í=5


orÿ
í=function(n)í=0


orÿ
í=fwunction(n)í=0


or
o


ooÿLo=Â e=ÿÿ
í=function(o)í=6


orÿ
í=function(n)í=tion(n)í=0


 e=ÿÿ
íd=function(o)é=5



o=Â e=ÿÿunction(n)
dogotoÿ end::ÿ::endfFIL´Š,ÿ=6<Þ==‚001,
0B0ll-1,
-0B0ll,
-0B0ll-00,
0B0ll-1,
0B0ll
í=-0B0ll--1,r-000
í=-0B0ll-00,
0B01,
0
í=function(o)n(o)í=5


orfFILooÿÿÿ00í=function(n)í=0
 end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) --eturn ...
end

local function foo3(...) -- or i=1,#t1 do assert(t1[i] == t2[i])n tcheck(2[i]) end

local function foo1(...) -- Veturn ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo4(...) -- V#) end
end

local function foo1(...) -- V

local function foo2(...) -- VARG UCLO RETM
  local fun
local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t2[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG ...) ETM
  return ...
end

local function fo2(...) -- VARG UCLO RETM
  local function dmmy() end
  return ...
end

local function foo3(...) -- .\361J5\277\3uend
end

local function foo1(...) -- RG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- V#t == t2[i]) end
end

local funfn=function() endt=function()endí=function()endí=function()t=function()end
end-function()endí=function()end­=function()enction foo1(...) -- VARG RETM
  return ...
end

local bunction foo2(...) --(VARG UCLO RETM
  local fun
local fundction tcheck(t1, t2)
  assert(#t1 ==2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG Rreturn .