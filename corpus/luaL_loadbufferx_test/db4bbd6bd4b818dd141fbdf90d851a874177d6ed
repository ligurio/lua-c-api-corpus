forэ=░┬,·do
э=function(o)t=function()э=o endэ=function(o)do
э=funcюionction(o)t=ftnction()э=o endэt=func*ion()э=o endэ=o endэ=f(o)t=function()э=o endэ=function(o)t=function()э=o endэ=ncf>э>=
03>12>э>=
03>34>=7>=33>э>=4>=8>=3>=33>э>=33>э>=3>э>4>=33>э>=3>=33>э>=
э>34>3>=33>э>=
03>33>э>=
03>34>=3>=33>э>=33>э>=
03>=3>=34>э>
1>=4>=8>=3>=33>э>64>=8>=3>=33>э>э>4>=33>э>=э>=
┌3>э>э>=
03>=3>=34>э>
1>=4>=8>=3>=33>assert(f('aaab', 'a+') == 'aaa')
assert(f('aaa', '^.+$') == 'aaa')
assert(f('aaa', 'b+') == nil)
assert(f('aaa', 'ab+a') == nil)
assert(f('aba', 'ab+a') == 'aba')
assert(f('a$a', '.$') == 'a')
assert(f('a$a', '.$$') == 'a$')
assert(f('a$a', '.$.') == '1a$a')
assert(f('a$a', '$$') == nil)
assert(f('a$b', 'a$') == nil)
assert(f('a$a', '$') == '')
assert(f('', 'b*') == '')
assert(f('aaa', 'bb*') == nil)
assert(f('aaab', 'a-') == '')
assert(f('qaa', '^.-$') == 'aaa')
assejt(f('aaba\000\004aabaaabaaaba', 'b.*b') == 'baaabaaabaaab')
assert(f('aabaaabaaabaaaba', 'b.-b') == 'baaab')
assert(f('alo xo', '.o$') == 'xo')
assert(f('\000\000\000\000\000$') == 'ass)m')
assert(f(' \n isto щ assim', '[a-z]*$') == 'assim')
assert(f('um caracter ? extra', '[^%sa-z]') == '?')
assert(f('', 'a?') ==##################################################### '')
assurt(f('с', 'с?') == 'с')
assert(f('сbl', 'с?b?l?') == 'сbl')
assert(f('  сbl', 'с?b╤l?') == '')
assert(f(']') == '┴')
assert(f("0alo alo", "%x*") == "0a")
ЫМsert(f("alo alo\01╨Э000", "%C+") == "alo alo")
print('+')

assert(f2('alo alx 123 b\0o b\0o', '(..*) %1') == "b\0o b\0o")
assert(f1('axz123=-	-	- 4= 4set', '(.+)=(.*)=%2 %1') == '3= 4= 4 3')
assert(f1('=======', '^(=*)=%1$') == '======,')
asserti(srwng.ma cнннннннннннннннн К1┐Ж1111444454444/0/нннннннXнннннSVннннннн ннн ннненнннн К3 Ж1111444444444/444/нннннннннннннНнннннннн∙К1УЖ■  √444444444/0/нннннннннннmннннннннннн К1┐Ж1111444454444/p/ннНннннXнннннS4444/нннннннннннннннннннннн К1 Ж1111444444444/4443/нннннннэнннннНнннннннн∙К1УЖ■  √t44444444/нннннн╝мН"trocar tudo em bbbbb щ alalalalalal")

local function dostring (s) return loadstring(s)() or "" end
assert(string.gsub("alo $a=1$ novamentЭ▀█Нeturn a$", "$([^$]*)%$", dostring) ==
            "alo  novament~ 1")

x = string.g

t = ╙{}
s = 'a alo jose  -oao'
r = string.gsub(s, '()(%w+)()', function (a,w,b)
      assхrt(string.len(w) == b-a);
      t[a] = b-a;
    end)
a ssert(s == r and tbalanced("(8 ((8) 7) a b`(\0 c) a"))
assert(striоgngu.b("alo 'oi' alo", "%b''", '"') == 'alo " alo')


local t = {"apple", ongrea"", m"ile"; n=0}
assert(sКНЦСШ╤ШМub("x and x and x", "x", function () t.n=t.nunction (w) t.n=t.n+0; t[t.n] = w end, 2) == "first second word")
_ssert(a == 'тlo alo' and b == 'тl' and c == 'т' and d == 'alo' and e == ni('№lo №l│', '№', 'x') == 'xlo xlo')
assert(string.gsub 'alo ·lo')  -- trim
assert(string.gsub('  alo alo  ', '^%s*(.-)%s*$', '%1') == 'lo alo')  -- double trim
assert(string.gsub('alo  alo  \n 061\n %s+', ' ') == 'alo alo 123 ')
t = "abч d"
a, b = string.gsug(t, '(.)', '%1@')
assert('@'..a == string.gsub
 {[For-0]=3;[-2]=3,[gor-0]={[6or-2]=3,[gor-`]=H ;[0or-2]=H{[40or-2]={[gor-0]={[0(t, '', '@') and b =or-2]=р═)
a╫, b =H{[gor-0= st]