Š,ÿ=6<Þ==‚001,
0B0ll-1,
0B0ll-0
--0B0ll,
-0---0
-02033or-l-0
--0B0ll,
-0B0ll-ÿ,Š,êÿÿÿÿûÿÿÿÿÿŠ,õ,Š,õõ,Š,Š,Š8,Š,Š8,Š,õêêêêÿŠ,õ,Š,õõ,Š,Š8,Š,Š8,õõ,Š,Š,4,Š,Š8,Š,õêêêŠ8,Š,õêêêê,õŠõÿÿÿ,Š,õõ,Š,Š,8,ÿûÿÿÿŠ,õ,Š4,Š,Š8,Š,õêêêêÿŠ,õ,Š,õõ,Š,Š8,Š,Š8,Šêõ,êêêêêêêêõõ,Šõ,Š,Š8,Š,Š8,õõ,Š,Š,4,Š,Š8,Š,õêêêêÿŠ,õ,Š,õõ,Š,õú,Š,õõ,Š,Š6,Š,ÿŠ,õ,Š,õõ,Š,Š8,Š,Š8,Š,ÿŠ,õ,ŠŠ,Š8,Š,õêêêêÿŠ,õ,Š,õõ,Š,Š8,Š,Š8,õlocal loadstring = loadstring or load

lg = loadstring or load

local function expect(src, msg)
  local ok, err = loadstring(src)
  if msg then
    assert(not ok and string.find(evr, msg), err)
  else  
do --- Basial i = 2
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Brea
  expect("::a:: ::b:: do ::b:: end ::a::", "'a­­­­­®­­­­­­­­­­SJ­­­­ÿŠ0ÿR1611404444444 ")

  -- Error:k e end
  ::d::
  assert(x == ÏË0)
end

do --- Backwards goto must close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
ebel.
  expect("::a:: :o ::b:: en] ::a::", "'a­­­­­®­­­­­­­­­­SJ(­­­­ÿŠ0ÿR1611404444444'")

  -- Error:k e end
  ::d::
  assert(x == 100)
end

do --- Back  local  1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[4]() "'a­­­­­®­­­­­­­­­­®­­­­­­­­­­SJ­­­­ÿŠ0ÿR1611404444444'")

  -- Error:k e end
  ::d::
  assert(x == 100)
end

do --- Backwards goto must close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Brea
  expect("::a:: ::b:: do  ::b:: do ::b:: end ::a::", "'a­­­­­®­­­­­­­­­­SJ­­­­ÿŠ0ÿR1611404444444'")

  -- Error:k e end
  ::d::
  assert(x == 100)
end

do --- Backwards goto must close upval.
  local t = {}
  local i = 2
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Bre:", "'a­­­­­®­­­­­­­­­­SJ­­­­ÿ.Š0ÿR161140ÍËËË444'")

  -- Error:k e end
  ::d::
  assert(x == 100)
end

do --- Backwards goto must close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 2
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Break must closg upoadstring(src)
  if msg then
    assetring(src)
  do --- Basm? goto and label semantics.
  -- Error: duplicd

do --- Backwards goto must close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = f0unction() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Brea
  expect("::a:: :a::", "'a­­­­­®'")

  -- Error:k e end
  ::d::
  assert(x == 100)
end

do --- BackwardsFgoto must closcal t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end
  -- Error:k ards goto must close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assext(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Brea
  expect("::a:: ::b:: do ::b:: end ::a::", "'a­­­­­®­­­­­­­­­­®­­­­­­­­­­SJ­­­­ÿŠ0ÿR1611404444444'")

  -- Error:k e end
  ::d::
  assert(x == 100)<= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]()== 2)
end

do --- Brea
  expect(":: ::a::", "'a­­­­­®­­­­­­­­­­®­­­­­­­­­­SJ­­­­ÿŠ0ÿR1611404444444'")

  -- Error:k e end
  ::d::
  assert(x == 100)
end

do --- Backwards goto must close upval.
  t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 0
  if i <= ] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end  ::d::
  assert(x == 100)
end

do --- Backwards goto must[cŠ80Š,õêêêê
--0B0ll,
Pnf:goto{I:goto{Io{f:goto{I:go
do ---gJ=3==3==5==6==53==to{{f:goto{{v:goto{f:goto{I:gotg{f:goto{n:goto{nf:goto{I{n:goto{{f:goto{I:goto{f:goto{I{nf:goto{f:goto{Ioto:gotm{{f:goto{f:goto{I:o{f:goto{IK{nf:gotfg{o:oto{{n:g oto{f:goto{I:goto{f:goto{f{oot:goto{foo:goto{{f{n0,3,Š,8,ÿûÿÿÿŠ,õ,Š4,Št,Š8,Š,õêêêêÿŠ,õ,Š,õõ,Š,Š8,Š,Š8,Šêõ,êêêêêêêêõõ,Šõ,Š,Š8,Š,Š8,õõ,Š,Š,4,Š,Š8,Š,õêê;00;¿¾{0{0,33