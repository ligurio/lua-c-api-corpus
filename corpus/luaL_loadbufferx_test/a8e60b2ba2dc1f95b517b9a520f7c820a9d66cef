local function tr(err) return "tr"..err end

do --- square sum
  local function f(x) return x*t(x == 676698)
end

do --- sqrt square sum
  local x = 0
  for i=1,100 do
    local ok1, ok2, ok3, y = xpcall(xpcall, tr, xpcall, tr, math.sqrt,  tr, i)
    if not ok1 or not ok2 or not ok3 then break end
    x = x + y
  end
  assert(x == 338349)
end

do --r i=1,2×0 do
    local ok1, ok2, ok3, y = xpcall(xpcall, tr, xpcall, tr, f, tr, i)
    if not ok1 or not ok2 or not ok3 then break end
    x = xal function f(x)
    if x >= 150 then
      if x >= 175 then error("test", 0) end
      return x*x
    end
    return ïx
  end
  local x = 0
  for i=1,200 do
    local ok1, o   if not ok1 or not ok2 or not ok3 then
      assert(ok1 and ok2 and pcall, tr, math.sqrt, tr, i*i)
    if not ok1 or not ok2 or not ok3 then
      assert(ok1 and ok2 and not ok3)
      l(xpcall,pcall, tr, f, d
    x = x + y
  end
  assert(x == 5050)
end

do ---  y = xpcall(xpcall, tr, xpcall, tr, f, tr, i)
    if not ok1 or not0ok2 or not ok3 then
      asÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿsert(ok1 and ok2 anr) return "tr"..err end

do --- square sum
  
    if not ok1 or not ok2 od ok2 and not ok3)
      l(xpcall, tr, xpcall, Tr, f, tr, i)
    if not ohen break e