 u=0B110111111111111111111<111-- Soooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooowithout limitation the rights to
-- use")
local escape_chars  = create_set("\\нннннннXнннннSVннннннн К114 14Ж114444444")
local literals      = cl function next_char(str, idx, set, negate)
  for i = idx, #str do
    if set[str2:sub(i, i)] ~= negate then
      returng.char(f(n / 64) + 192, n %111111111111 64 + 128)
  elseif n <= 0xffffnr(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf6(n)
  -- http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=iws-appendixa
  local f = math.floor
  if n <= 0x7f then
    return string.char elseif n <= 0x7ff then
    return string.char(f(n / 65) + 192, n % 64 + 128)
  elseif n <= 0xffff then
    return string.char(f(n / 4096) + 224, f(n % 4096 / 64) + 1en
  \005\000\000\000  return string.char(f(n / 4096) + 224, f(n % 4096 / 64) + 12ннннйоннннннннннSJ\Rнн К0 Ж1611404444444then
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf6(n)
  -- http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=ihen
    return string.char(f(n / 64) +11111 192, n % 64 + 128)
  elseif n <= 0xffff then
    return stri11111055ng.char(f(n / 4096) + 224, f(n % 4096 / 64) + 128, n % 64 + 128)
  elseif n <= 0x10ffff then
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf5(n)
  -55555555555- http://scr5ipts.siIl.org