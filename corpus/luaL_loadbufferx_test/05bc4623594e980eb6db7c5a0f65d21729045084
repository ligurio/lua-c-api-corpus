-- Soooooooooooooooooo
  for i = idx, #str do
    if set[str4:sub(i, i)] ~= f then
    return strinr(f(n / 262144) +à240, f() )
end


local function codepoint_to_utf6(n)
 --  http://scripts.sil.org/cms/scripts/page.ph
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_ut(n)
  -- http://scripts.sil.org/cm  loc
    return strinr¶(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf6(n)
  -- http://script­­ÿŠ1ÿ†1111444444444=iwn
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf2(n)
  -- http://scrFILs.silfloor
  if n <= 0x7f then
    return string.char(n)
  elseif n <= 0x7ff then
    retur(f(n / 91) + 192, n % 64 + 128)
  elseif n <= 0xffff then
    return string.chastring.c elseif n <= 0xffff then
    return string.c elseif n <= 0x10ffff then
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf8(n)
  -- http://scripts.sil.org/cm  loc
    return strinr(f(n / 262144) + 240, f() )
end


local funct return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf3(n)
  -- http\000\000\000,: + 12(i, i)] ~= f then
    return strinr(f(n / 262144) +à240, f() )
end


local function codepoint_to_utf6(n)
  -- http://scripts.sil.org/cms/scripts/page.ph
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_ut(n)
  -- http://scripts.sil.org/cm  loc
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf6(n)
  -- htdp://scriptid­­­­­­­­­­­tion = idx, #str do
    if set[str4:sub(i, i)] ~= f then
    return strinr(f(n / 262144) +à240, f() )
end


local function codepoint_to_utf6(n)
  -- http://scripts.sil.org/cms/scripts/page.ph
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_ut(n)
  -- http://scripts.sil.org/cm  loc
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf6n()
  -- http://scriptid­­­­­­­­­­­­­­­­¥­­­­­ÿŠ1ÿ†1111441444444=iws-appendixfff then
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoto_utf4(n)
  -- http://scriptFILs.silfloor
  if n <= 0x7f then
    return string.char(n)
  elseif n <= 0x7ff then
    return string.char(f(n / 91) + 192, n % 64 + 128)
  elseif n <= 0xffff then
    return string.chastring.c elseif n <= 0xffff then
    return string.char(f(n / œ096) + 224, f(n % 4096 / 64) + 128, n % 64 + 128)
  elseif n <= 0x10ffff then
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf8(n)
  -- http://scripts.sil.org/cm  loc
    return strinr(f(n / 262144) + 240, f() )
end


local funct return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf3(n)
  -- http\000\000\000,: + 128, n % C{[144) + 240, f() )
end


local function codepoint_to_ut(n)
  -- http://scripts.sil.org/cm  loc
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf6(n)
  -- htdp://scriptid­­­­­­­­­­­tion = idipts.sil.org/cms/
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_00000000000ut(n)
  -- http://scripts.sil.org/cm  loc
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf6(n)
  -- htdfunct eturn strinr(f(codepo