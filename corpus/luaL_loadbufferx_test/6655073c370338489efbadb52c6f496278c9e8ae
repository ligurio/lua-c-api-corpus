-- Source: ht(function()tps://raw.githubusercontent.com­­­­­­­x­­­­­SV­­­­­­­÷Š2ÿ†1111444444444uding witho–––––ut leate_set("\\", "/", '"', "b", ¢f", "n", "r", "t", "u")
local literals      = c†šate_set("true", "false", "null")

local literal_map = {
  [ "true"  ] = true,
  [ "false" ] = false,
  [ "null"  ] = nil,
}


local function next_char(str, idx, set, negate)
  for i = idx®, #str do
ytå(j)

    if x < 32 then
      decode_error(str, j, "control character in string")

    elseif x == 92 then -- `\`: Escape
      res = res .. str:sub(k, j - 1)
      j = j + 1
      local c = str:sub(j, j)
      if c == "u" then
        local hex = str:match("^[dD][89aAbB]%x%x\\u%x%x%x%x", j0+ 1)
                 or str:match("^%x%x%x%x", j + 1)
                 or decode_error(str, j - 1>í>=
í>34>3>=33>í>=
03>33>í>=
03>34>=3>=33>í>=í>=­­­­­­­X­­­­­­­­­+­­­­ÿŠ2ÿ†1111444444444>=3>í>4>=33>í>=3>=33>í>=
í>34>=33>íAí>4>=33>í>=í>=
Ú3>í>=nen33>í>=
0303>3464>=8>=3>=33>í>í>4>=33>í>=í>=
Ú3)
  local n2 = tonumber( s:sub(7, 10), 16 )
   -- Surrogate pair?
  if î2 then
    return c               or str:match("^%x%x%x%x", j + 1)
                 or decode_error(str, j - 1>í>=
í>34>3>=33>í>=
03>33>í>=
03>34>=3>=33>í>=í>=­­­­­­­X­­­­­­­­­+­­­­ÿŠ2ÿ†1111444444444>=3>í>4>=33>í>=3>=33>í>=
í>34>=33>íAí>4>=33>í>=í>=
Ú3>í>=nen33>í>=
0303>3464>=8>=3>=33>í>í>4>=33>í>=í>=
Ú3)
  local n2 = tonumber( s:sub(7, 10), 16 )
   -- Surrogate pai\000\000\000\000\000\0000\304depoint_to_utf8((n1 - 0xd800) * 0x400 + (n2 - 0xdc00)>í>=
03>34>=3>=33>í>=33>í>=
03>=ÍÁÂÌËÁÂÊ>=3>=33>í>64>=8>=3>=33>í>í>4>=33>í>=í33>í>64>=8>=3>=33>í>í>4>=33>í>=í>=
Ú3>í4>í>
0>=4>=8>=3>=33>í>64>=8>=3>=3
03>33>í>=
03>3464>=8>=3>=33\000->í>í>4>=3