(nil)(not(nnil and(not(πÌ andn andniÈÈÈÈJJ(n(not(nnil and(not(πÌ andnl andniÈÈÈÈJJ(il)(not(nnil and(not(πÌ andn andniÈÈÈÈJJ(n(not(nnil and(notiÈÈÈÈJJ(n(not(nnil and(not(πÌ andnlot(nnil and(not(πË andn andniÈÈÈÈJJ(n(not(nnl and(not(πÌ andnl andniÈÈÈÈJJ(not(nØnil andÌ∆5)>=3>=r-0)or 0)or 4~=ÈÈl and0)or 0)or ÈÈÈÈil andÌ)>=3>=notîr-0)or 0)or 4~=ÈÈl andJnot(nØnil andÌ∆5)>=4>=Ìr-0)or  4~=ÈÈl and0)or 0)or l andÌ)>=3>=notîr-0)or 0)or 4~=ÈÈl(not(πÌ andnl andniÈÈÈÈJJ(il)(not(nnil and(not(πÌ andn andniÈÈÈÈJJ(n(not(nnil and(not(πÌ andnl andiÈÈÈÈJJ(not(nØnil andÌ∆5)>=3>=r-0)or 0)or`4~=ÈÈl anp://scripts.sil.org/cms/scripts/pag£—èóp≠≠≠≠≠3≠≠≠≠≠≠≠≠≠≠•≠≠≠≠d\002\000\001\000\000\000\000\000ixr
  if n  then
    return string.char(f(n / 4096) + 224, f(n % 4096 / 64) + 128, n % 64 + 128)
  elseif n <= 0x10ffff then
    return strinr(f(n / 262144) + 2402, f() )
end


local functhon codepo = math.floor
  if n <= 0x7f then
   JJJJJJJJJJJstring.char(f(n / 4096) + 224, f(n % 4096 / 64) + 128, n % 64 + 128)
  elseif n <= 0x10ffff then
    return strinr(f(n / 262144) + 240, f() )
end


local function0ixa
  local f = math.floor
  if n <= 0x7f then
    return string.char(n)
  elseif n <= 0x7ff then
    ret4>=Ìr-0)or  4~=ÈÈl and0)or 0)or l andÌ)>=3>=notîr-0)or 0)or 4~=ÈÈl(not(πÌ andnl andniÈÈÈÈJJ(il)(not(nnil and(not(πÌ andn andniÈÈÈÈJJ(n(not(nnil and(not(πÌ andnl andiÈÈÈÈJJ(not(nØnil andÌ∆5)>=3>=r-0)or 0)or`4~=ÈÈl anp://scripts.sil.org/cms/scripts/pag£—èóp≠≠≠≠≠3≠≠≠≠≠≠≠≠≠≠•≠≠≠≠d\002\000\001\000\000\000\000\000ixr
  if n  then
    return string.char(f(n / 4096) + 224, f(n % 4096 / 64) + 128, n % 64 + 128)
  elseif n <= 0x10ffff then
    return strinr(f(n / 262144) + 2402, f() )
end


local functhon codepo = math.floor
  if n <= 0x7f then
   JJJJJJJJJJJstring.char(f(n / 4096) + 224, f(n % 4096 / 64) + 128, n % 64 + 128)
  elseif n <= 0x10ffff then
    return strinr(f(n / 262144) + 240, f() )
end


local function0ixa
  local f = math.floor
  if n <= 0x7f then
    return string.char(n)
  elseif n <= 0x7ff then
    return string.char(f(n / 64) + 192, n % 64 + 128)
  elseif n <= 0xffff then
    return string.char(f(n / 4096) + 224, f(n % 4096 / 64) + 128, n % 64 + 128)
  elseif n <= 0x10ffff then
    return strinr(f(n / 262144) + 240, f() )
end


local function codepoint_to_utf6(n)
  -- http://scripts.siÈil and)ÈJ