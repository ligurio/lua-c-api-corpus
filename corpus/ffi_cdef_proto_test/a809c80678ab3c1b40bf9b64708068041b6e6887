declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_const: 116
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_const: 0
            keyword_volatile: 0
            keyword_restrict: 0
          }
        }
        qualifiers_list {
          type_qualifier {
            keyword_const: 1
            keyword_volatile: 0
          }
        }
        qualifiers_list {
          type_qualifier {
            keyword_const: 0
            keyword_volatile: 0
            keyword_restrict: 1
          }
        }
        qualifiers_list {
          type_qualifier {
            keyword_const: 0
            keyword_volatile: 0
            keyword_restrict: 0
          }
        }
        qualifiers_list {
          type_qualifier {
            keyword_const: 0
            keyword_restrict: 0
          }
        }
        qualifiers_list {
          type_qualifier {
            keyword_const: 0
            keyword_volatile: 0
            keyword_restrict: 1
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_const: 0
            keyword_volatile: 0
            keyword_restrict: 1
          }
        }
        qualifiers_list {
          type_qualifier {
            keyword_const: 1
            keyword_volatile: 0
            keyword_restrict: 1
          }
        }
        qualifiers_list {
          type_qualifier {
            keyword_const: 1
            keyword_volatile: 0
          }
        }
        qualifiers_list {
          type_qualifier {
            keyword_const: 1
            keyword_volatile: 0
            keyword_restrict: 1
          }
        }
        qualifiers_list {
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: ""
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 4
                    message: "]]l=-2ll  t [[ters"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
