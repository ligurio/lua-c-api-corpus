declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
            enum_type {
              enum_name {
                name: ""
                num: 0
              }
              constant {
                name: "\001\013"
                num: 0
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 2
                    message: "\242]]it=\354-l  goto\n l  goto\n l  got[[[[[rtersi"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 0
                    message: "\242]]it=\354-l  goto\n l  goto\n l  got[[[[[rtersi"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 0
                    message: "\242]]it=\354-l  goto\n l  goto\n l  got[[[[[rtersi"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 0
                    message: "\242]]it=\354-l  goto\n l  goto\n l  got[[[[[rtersi"
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 2
                    message: "]]lName4=p5lW*\3540::xxxxyx::::l::a[[[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
