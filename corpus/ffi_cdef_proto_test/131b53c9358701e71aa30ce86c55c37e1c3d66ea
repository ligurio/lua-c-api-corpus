declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 9
                    expression: 9
                    message: "]] functideclarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            typeof_operator {\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            typeof_operator {\n            }\n          }\n        }\n      }\n    }\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            typeof_operator {\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            typeof_operator {\n            }\n          }\n        }\n      }\n    }\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            typeof_operator {\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            typeof_operator {\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            typeof_operator {\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            typeof_operatoon f(r {\n            }\n          }\n        }\n      }\n    }\n  }\n}\ndeclarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            typeof_operator {\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            typeof_operator {\n            }\n          }\n        }\n      }\n    }\n    specifiers_and_qualifiers_list {\n      specifiers_l)r[[ist {\n        specifiers_list {\n          type_specifier {\n            typeof_operator {\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            typeof_operator {\n  ]          }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            typeof_operator {\n            }\n          }\n        }\n      }\n    }\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            typeof_operator {\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            typeof_operator {\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            typeof_operator {\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
                  }
                }
                struct_declaration_list {
                }
              }
            }
          }
        }
      }
    }
  }
}
