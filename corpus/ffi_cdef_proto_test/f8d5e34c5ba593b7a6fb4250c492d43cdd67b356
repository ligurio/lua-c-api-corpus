declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 9
                    message: "\242]]\354\354NNNNNNNNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"vo\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"\"\"un\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"NNNNNNNNNNNNNNNNNNNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"[[[[ers[cifie_and"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: ";]]\354\354\354\354d_\354\354\354\354{\n \354\354\354lz\354\354\354=\354\354if_Alig\377\377s_list {\n      q\354=false1{\n \354\354\354\354\354\354z\354=\354lok9\262,\354\377\377\377s_list {\n      q\354=\354\354\354\354,\354\377\377\377\377\377\377\377\377\377st {lz;\3540=\354\354\354\354\2272,\354x0\377s_list {_Alignas=\354\354\354\354\3541,\354\377t\354\354\377_Aligg1{\n        }\n }\n  ;        }\n      }\n    }\n,\354\377\377\377\377\377constt {\354z\354\354P= \354\354\354\2272,\354\377\377/s_li  }\n      }\n    }\n[[[\354"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 9
                    message: "\242]]\354\354NNNNNNNNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"vo\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"\"\"un\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"NNNNNNNNNNNNNNNNNNNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"[[[[ers[cifie_and"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 0
                    message: "\242]]C\354\354\354d_2ticonst\354\354\354\354\354\354\354{\n \354\354\354,z\354\354\354=\354\354\354\354\2272,\354\377\3770s_list {\n      q\354=false1{\n \354\354\354=\354\354\354\354\2272x0\377j0s_list {\n      q\354=\354\354\354\354\354i {\n    \354z\354\354\354=\354\354\354_A2,  q\354=_list {\n      q\354=\354.l2\3541,\354\377t\354\3542typedef{\n        }\n      }\n  \n        }\n      }\n    }\n,#\377_Alignasst {\354z\354\354P=\354\354\354\354\2272,\354\377\377\377s_li  }\n      }\n    }\354\354\354\354{\n \354\354\354\354z\354\354\354=\354\354\354\354c0,\354\377\377\377s_list {\n      q\354=false1{\n \354\354\354=\354\354\354\354\2272x0\377\377\377s_list {\n      q\354=\354\354\354\354\354iers_list {\nName3z\354\354\354=\354\354\354\354\2272,  q\354=_list {\n      q\354=\354\354\377s_li\354\377t*\3542\354\354\377\377st {\n        }\n      }\n  \n        }\n      }\n    }\n,\354\377\377\377\377\377\377\377\377^st {\354z\354\354P=\354\354\354\354,2,\354\377\377\377s_li  }\n      }\n    }\n[[[\354"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
