declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 6644736
                    message: "\242]]\354\354\354\354\354l\354:Name4s {\n{\n0000,00000-0B00000000000010000000000+0000000000000000000,00000-00000000000000000-0B00000000000010000000000+00000000000,00000-0000000000000018446*00000000000095516150000000009551615*00000,00000-0B00000000000010000000000+0000000000000000000,00000-000000000000000000000,00000-0000000000000017440446744073709551615-specifiers_0000000009551615*00000,00000-0B0000000000001000000000*000000000000446744073709551615-specifiers_0000000009551615*00000,00000-0B00000000000010000000000+0000000000000000000,00000-00000000000000000-0B00000000000010000000000+00000000000,00000-000000000000001844674615*000000000000009551615*00000,00000-0B00000000000010000000000+0000000000000000000,00000-00000000000000000-0B00000000000010000000000+00000000000,00000-000000000000001844674404467440737073709551615*0000000000009551615*000000000000000000000000000000000000000,00000-00000000000000184467440446744073709551615-specifiers_0000000009551615*00000,00000-0B00000000000010000000000+0040446744073709551630-specifiersspecifiers_0000000000i"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
