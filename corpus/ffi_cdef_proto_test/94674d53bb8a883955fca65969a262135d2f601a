declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 3
                    message: "\242]]\354m\354=\354 goto\n i0  goto\n _qual  got_\354=nd_qual  goto\n i0  goto\n i4  \354\354\354=nd_qual  goto\n i \354ma\354e\354\354\354\354\354=Hual  goto\n i4  \354i\354=nd_qual  goto\n i0  goto\n i4  \354\354A=nd_qual  goto\n i et [[[[[[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 0
                    message: "]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3i^r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 0
                    message: "]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3i^r[["
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 0
                    message: "]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3i^r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 4
                    message: "\242]]\354\354\354\354\354\354\354\354\354tions {\n{\n  \240467440737095516000000009551615*0000000000000000000000000000000000000000000000002,00000-0x700000000000184467440446744037709551615-s*000000000000000000000000000000000000001,00000-0x700000000000184467440446744073709551615-specifiers_000000000000000184467440446744073709551615-specifiers_0000000009551615*00000,00000-0744073709551615*000073709551615*0000000000009551615*000000000000000000000000000000000000001,00000-0x700000000000184467440446744073709551615-specifiers_000051615*0000000000    }\n        }\n        qualifiers_list {\n          type_qualifier {\n            key000000010000000000000000000001,000006-specifiers_000000declarat000955160000002,00000-0x700000000000184467440446744073709551615-s*0000000000000000000000000000000000001615-spe095000000000000000000000000051615*0000000000000000010000000000000000000001,000006-specifiers_000000declarat0009551615*000000i"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
