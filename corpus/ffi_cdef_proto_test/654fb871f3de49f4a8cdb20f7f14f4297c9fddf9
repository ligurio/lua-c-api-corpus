declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 9
                    message: "?]]    function f()    function z()    function f() function f() function f()    fu[[]?]]    function f()    function f() function f()    fur[[=pe=n f() ("
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 9
                    message: "?]]    function f()    function f()    function f() function f() function f()   fu[[]?]]    function f()    function f() function f()    fu[[]?]]    function f()    function f() function f()    fur[[f() io f() ("
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 8
                    message: "?]]    function f()    function f(`)    function f() function f() function f()   fu[[]?]]    function f()    function f() function f()    fu[[]?]]    function f()    function f() function f()    fur[[f() io f() ("
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 25856
                    expression: 9
                    message: "]]go=#i>=#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
      }
    }
  }
}
