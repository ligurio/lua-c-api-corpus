declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 2
                    message: "]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]eertyp=3i^r[[]]e=3i^r[[]]ertype=6i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3i^r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 4
                    message: "i>[[f$$]]go=#i>=#i>#i>=#i>[[f$]]go=#i\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232\232>7i>=#i>#i>=#i>[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 0
                    message: "\242]]\354\354[[\rs]]\354n[[\rs]]\354\354[[2\rS_Amigl]2\rS_Alig]].k[[\rs[\r ]]\354[[\rs]]\354\354[[2\rS_Alig]].k[[\rs]]\354\354[[\rs]]\354n[[\rs]]\354\354[[2\rS_Amigl]2\rS_Alig]].k[[\rs[\r ]]\354[[\rs[[2\rS_Alig]].k[[\rs]x9  ]]\354\354[[\rs].k[[1s\354\354[[2\rS_Alig]].k[[\rs]]\354\354[[\r        }\n                       s]]\354\354[[2\rS_Alig]].k[[\rs]]\354S[[\rs]]\354n[[\rs]]\354\354[[2\rS_Amigl]2\rS_A[2\rS_Alig]].k[[\rs][\rs]]\354\354[[externi       }\n lig"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
