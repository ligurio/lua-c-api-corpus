declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            arithmetic_type {
              type_long_int_1: 149
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          function_specifier {
            keyword_noreturn: 149
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 150994945
                    message: "\242]]\354\354\354\354\354\354=\354\354\354\354\354\354\354\354\354\354\354\354\354\354nullptr\354\354\354\354\354l\354\354\354\354\354lo{\n  specifiers_and_qu+a\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\' {ist {\n    spqualifiers_\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'g\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'lifaliers_and_qu+a\'\'\'\'\'\'\'\'\'\'\'\'\'\'#\'\'\'\'\'\'\'\'\'\'\' {{\n    specifiers_aEEEEEEEEEEEEE    \'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'g\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'lifaliers_and_qu+a\'\'\'\'\'\'\'\'\'\'ca\'\'#\'\'\'\'\'\'\'\'\'\'\' {\n  specifiers_and_qu+alifalifiers_li       "
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
