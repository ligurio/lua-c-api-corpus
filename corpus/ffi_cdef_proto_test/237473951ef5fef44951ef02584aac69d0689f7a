declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 2
                    message: "]_]][9999999999.90900000000500005   \r\r<\r-\r999999.00005   \r\r<\r\r\r999999.9000000005000\r\r999999.9000000000010112]]]]]]]]]]"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 7
                    expression: 7
                    message: "*[[]ligo[[]]ont8=\ti or \354{}s=2 ligo[[]]ont8=\ti or \354{}s=2 or wh[[)]]me0W=-cca_or wh[[)]]me0W=-ca_Bi or lxr{}igo[[]]ont8=\ti or \354{}s=2 or wh[[)]]met8=\ti or \354{}s=2 or wh[[)]]me0W=-ca_or wh[[)]]me0W=-ca_Bi or lx\354{}s=2i or S[[f]]me0W=\354{}s=2 ligo[[]]ont8=\ti or \354{}s=2 or wh[[)]]me0W=-ca_or wh[[)]]me0W=-ca_Bi or lxr{}s=2i or S[[f]]me0W=-ca_Bi or lx\354{}s=2i or S[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 7
                    expression: 7
                    message: "*[[]ligo[[]]ont8=\ti or \354{}s=2 ligo[[]]ont8=\ti or \354{}s=2 or wh[[)]]me0W=-cca_or wh[[)]]me0W=-ca_Bi or lxr{}igo[[]]ont8=\ti or \354{}s=2 or wh[[)]]met8=\ti or \354{}s=2 or wh[[)]]me0W=-ca_or wh[[)]]me0W=-ca_Bi or lx\354{}s=2i or S[[f]]me0W=\354{}s=2 ligo[[]]ont8=\ti or \354{}s=2 or wh[[)]]me0W=-ca_or wh[[)]]me0W=-ca_Bi or lxr{}s=2i or S[[f]]me0W=-ca_Bi or lx\354{}s=2i or S[[f"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
