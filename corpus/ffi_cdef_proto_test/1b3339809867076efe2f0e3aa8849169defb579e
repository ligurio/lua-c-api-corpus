declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 9
                    expression: 9
                    message: "U]] f ,x,mx.\n mx.\n ffi, ffi, f ,x,mxgoiifi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi,  ffi,\n ffmx.\n ffi, ffi, f ,x,ffi, ffi, f ,mx.\n ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,ff ,x,mx.\n ff ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi,  ffi,\n ffmx.\n ffi, ffi, f ,x,ffi, ffi, f ,mx.\n ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mxfmx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi, x,mfi, ffi, f ,x,mffi,  ffi,\n ffmx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mffi,  ffi,\n ffmx.\n ffi, ffi, f ,x,ffi, ffi,ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi,  ffi,\n ffmx.\n ffi, ffi, f ,x,ffi, ffi, f ,mx.\n ffi, ffi, f ,x,mx.\n ffi, ffi.\n ff ,x,ffi, ffi, f ,x,staticfi, ffi, f ,x,mx.\n ffi,  i.\n ff ,x,ffi, ffi, f ,x,staticfi, ffi, f ,x,mx.\n ffi, ffi, f ,x,m_Aligfi,  ffconstfmx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mName6fi, ffi, f ,x,mx.\n ffi, x,mfi, ff,x,ffi, ffi, f ,x,ffi, f ffmx.\n ff ffi -i -i"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
