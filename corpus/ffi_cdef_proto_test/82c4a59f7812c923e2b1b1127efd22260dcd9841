declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_restrict: 0
          }
        }
      }
      specifiers_list {
        specifiers_list {
          storage_class_specifier {
            storage_class_static: 0
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 8
                    message: "g[[][]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,zz,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[[]]A,j,u=[[]]A,z,u=g[[]]A,zz,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J=[[ []]A,j,u=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J=[[  "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 8
                    expression: 8
                    message: "g[[][]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,zz,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[g[[]]A,z,u=[[]]A,jz,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[[[]]A,A,z,u=[[]]A,j,u=[[]]Aj,_=[[ ]]A,J=[[  "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 8
                    message: "g[[][]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,zz,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[g[[]]A,z,u=[[]]A,jz,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[[[]]A,A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J=[[  "
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 4
                    message: "\']]\354l\354\354c8NNNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"st!\"\"\"\"\"\"\"ty\"\"\"\"\"\"\"\"\"(\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"inalif{3er"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
