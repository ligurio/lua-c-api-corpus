declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 9
                    expression: 9
                    message: "\242]:OOOOOOOO([[!s]]:\354n[[\r= [\r[[M= [s]]:n[[[\rs]]:ln[[\r= [[!s]]:\354n[[\r= [[!s]]:n[[\r[[M= [[!s]]:n[[\r- ]] [[[]]\r\014[[[\rs[!s]]:n[[!s]]:n[[\r- ]] [[[]]\r\354[[[[!s]]:\354n[[\r= [[!s]]:n[[\r[[M= [[!s]]:n[[\r- ]] [[[]]\r\014[[[\rs]]:ln[[;= [[!s]]:n[[(-[[_Alignas2]]:n[[boolgl:n[[\r[[!s]]:\354n[[\r= [[!s]]:n[[!s]]:n[[\r- ]]coo_ec_\354[[[\rs]]:ln[[\r= [[!s]]:\354n[[\r= [[\rs]]:ln[[\r= [[!s]]:\354n[[\r= [[!s]]:n[[;[[M= [[!s]]:n[[\r- ]] [[[]]\r\354[[[Ms]]:ln[[\r= [[!s]]:n[[(     static_assertc4]]:n[[iA ]] [[[]]\r\354[[[Ms]]:ln[[\r= [[!s]]:n[[(     static_assertc4]]:n[[iAlgl   [[  ]]:n000   [[:\354n[[*= [[!s]]:n[[\r[[M= [[!s]]:n[[\r00000000000000000000000000"
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          alignment_specifier {
            alignment_specifier_Alignas: 82
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: ""
                num: 0
              }
              struct_declaration_list {
              }
            }
          }
        }
      }
    }
  }
}
