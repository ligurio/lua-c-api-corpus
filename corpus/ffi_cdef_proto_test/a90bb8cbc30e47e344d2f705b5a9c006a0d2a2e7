declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 3
                    message: "\242]]\354\354\354=\354-\275a,nd_qual  goto\n i goto\n i0  goto iqual \3541=nd_nd_qual  goto\n i4  \354\354lY=nd_qual  goto\n ual  goto iqual  goto iqual  goto\n i et [[[[[[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 3
                    message: "\242]]\354\354\354=\354-\275a,nd_qual  goto\n i goto\n i0  goto iqual \3541=nd_nd_qual  goto\n i4  \354\354lY=nd_qual  goto\n ual  goto iqual  goto iqual  goto\n i et [[[[[[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]]go=#i>=#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      declarator_parentheses {
        declarator {
          declarator_parentheses {
            declarator {
              array_declarator {
                qualifiers_list {
                  qualifiers_list {
                    type_qualifier {
                      keyword_atomic: 8
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  bit_field {
                    name {
                      name: ""
                      num: 54
                    }
                    width: 0
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 3
                    message: "\242]]\354\354\354=\354-\275a,nd_qual  goto\n i goto\n i0  goto iqual \3541=nd_nd_qual  goto\n i4  \354\354lY=nd_qual  goto\n ual  goto iqual  goto iqual  goto\n i et [[[[[[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]]go=#i>=#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
