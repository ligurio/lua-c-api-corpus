declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              attr_spec_seq {
              }
              struct_declaration_list {
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 9
                    expression: 4
                    message: ":]]\354\354l=qual  goto\n i4  \t\354l=qual  goto\n i4  \t\354rs50=nd_0  goto\n i4  goto\n i \354marati\354\354z=\354l  goto\n i4 inline\354=nd_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i \354maled\354\354\354z=\354l  goto\n i4 inline\354=nd_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i et [[["
                  }
                }
              }
            }
          }
        }
        specifiers_list {
        }
        specifiers_list {
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 3
                    message: "c]]\354:mmmmmmmmt {\n   ############\354d\354\354_t {\n   #############################fier*s_l+is }\n    }\n   eci[[[[[[]]mt {\n   ############ dl\354_t {\n   #############################fier*s_l+ist {\n        }\n      }\n    }\n   ec[[[[[}3#####F"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]]go=#i>=#i>#i>=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#ii>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=#i>[[f$]>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 9
                    expression: 4
                    message: "]]e=3i^r[[]]ertyp=6i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]eertyp=3i^r[[]]e=3i^r[[]]ert=6i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3i^r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 9
                    expression: 9
                    message: ":]]\354\354l=qual  goto\n i4  \t\354l=qual  goto\n i4  \t\354rs50=nd_0  goto\n i4  goto\n i \354marati\354\354z=\354l  goto\n i4 inline\354=nd_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i \354maled\354\354\354z=\354l  goto\n i4 inline\354=nd_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i et [[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
