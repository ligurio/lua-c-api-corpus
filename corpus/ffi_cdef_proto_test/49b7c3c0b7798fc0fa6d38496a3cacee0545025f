declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 8
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 8
                    message: "[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\243\223\220declarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifier }\n          }\n        }\n                 expression: 0\n                    message: \"[]]local   c    t0[[          message: \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\\243\\223\\220\\234\\23        }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}essage: \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\\243\\223\\220\\234\\236\\223 t000\"\n                  }\n                }\n                struct_declaration_list urGo                static_assertion {\n                    static_assert_1: 0\n       t             expression: 0\n                    message: \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[0]\\22e: \"\"\n                num: 0\n              }\n              constant {     0 0   "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 8
                    message: "[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\243\223\220declarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifier }\n          }\n        }\n                 expression: 0\n                    message: \"[]]local   c    t0[[          message: \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\\243\\223\\220\\234\\23        }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}essage: \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\\243\\223\\220\\234\\236\\223 t000\"\n                  }\n                }\n                struct_declaration_list urGo                static_assertion {\n                    static_assert_1: 0\n       t             expression: 0\n                    message: \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[0]\\22e: \"\"\n                num: 0\n              }\n              constant {     0 0   "
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 8
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 1
                    expression: 1
                    message: "h][[sa[[er]] goto[[]] goto[[sa[ter]] goto[[sa[tmr]] goto[[tel[sa[ter]] goto[[sr]] goto[[sa[ter]] goto[[sa[tr][[sia[ter]] goto[[si"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
