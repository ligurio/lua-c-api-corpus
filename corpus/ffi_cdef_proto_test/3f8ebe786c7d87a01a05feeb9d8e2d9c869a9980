declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 59904
                    message: "?]]    function f()    fu[[]]e=3i^r[[]]ertpe=3i^r[[]]ertyp=3i^r[[]]e=3i^r\226[[]^r[[]ction f() (u"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 67371012
                    expression: 0
                    message: "!!]];\354=0-\275a_a,{\n[[]];\354=0-\275a_a,{\n[[!!]];\354=0-\275a_a-\275a_a,{\n[[]];\354=a-\2750_a,{\n[[1]];l=0-\275,{\n[[[0E161]];l=0-\275,{\n[[[05*0ers[0E]];l=0-\275,{\n[[A05*,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*!!]];\354=0-\275a_a,{\n[[[0E161]];l0_a,{\n[[1]];l=0-\275,{\n[[[0E161]];l=0-\275,{\n[[[05*0ers[0E]];l=0-\275,{\n[[A05*,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0E161]];l=0-\275,{\n[[[]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[095p3161E161]];l=0-\275,{\n[[[05const*0ers[0E161]];l0-pa_a,{\n[[[0E161]];l=0-\275,{\n[[[0E161]];l=0-\275,{\n[[[05*0!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[01]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*!!]];\354=0-\275a_a,{\n[[\n[[[0E161]];l=0-\275,{\n[[[05*0ers[0E]];l=0-\275,{\n[[A05*,{\n[[[0E[05*161]];l=0-\275,{\n[[[0E161]];l=0-\275,{\n[[[05*0ers[0E]];l=0-\275,{\n[[[05*0er[05*0ers"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "!]];\354=0-BBBBB{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E1[[[0E161]];l=0-\275,{\n[[!!]];l=0-\275a_a,{\n[[[0E162]];l=0-\275,{\n[[[09]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[{\n[[!!]];\354=0-\275a_a{\n      sPecifiers_list {\n        specifiers_list {\n          type_specifier {\n            union_typl=0-\275,{\n[{\n[[!!]];\354=0-\275a__Alig[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[l=[0955E1615E161E161]];l=0-\275,{\n[[[05*1E161]];l=0-\275,{\n[{\n[[!!_Decimal12a,{\n[[[0E161]];l=0-ty{[[05*0ers[0E161]];l=0-\275,{\n[[[0955Eion_list {\n       eclaratio;l=0-\275,{\n[[[0955E1615E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[!]];\354=0-BBBBB{\n[[!!]];\354=0-\275a_a,{\n[[[0E1605*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=[[[0955E161E1)5]\n[[[09]];l=0-\275,{\n[[[0955E161ist {\n E161]];l=0-\275,{\n[[[0955E1610955E161E161]];l=[[05*ers"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  declarators_and_initializers {
    declarators {
      pointer_declarator {
        declarator {
        }
      }
    }
  }
}
