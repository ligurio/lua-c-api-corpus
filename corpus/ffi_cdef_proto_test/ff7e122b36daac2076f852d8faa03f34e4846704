declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 6
                    message: "U]] f ,x, ffi, ffi, f ,x,ffi, ffi, f ,x,mx.ype {\n              struct_declaration_list {i, f ,x,mx.ype {\n              struct_declaration_list {\n                struct_declaratim_Aligfi,  ffi,\n ffmx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi, x,mfi, ffi, f ,x,mx.\n ffi,  ffi, ffi, f ,x,ffi, ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi, x,mx.Name0, ffi, f ,x,mx.\n ffi,  ffi,\n i ,x,mx.ffi, f ,x,ix.\n ffi,  ffi, ffi, f ,x,ffi, ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mxfi, ffi, f ,x,mx,mx.\n ffi, x,mfi, ffi, f ,x,mx.\n ffi,  ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mxtruefi, x,mx.\n ffi, ffi, f ,x,mx.\n ffi,  ffi,\n i ,x,mx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,fi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi,  ffi,\n ffmx.\n ffi, ffi, f ,x,ffi, ffi, f ,mx.\n ffi, ffi, f ,x,mfi, ffif ,x,mfi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mxfi, f ,x,ffi, ffi, f ,x,mxfi, ffi, f ,x,mx,mx.\n ffi, x,mfi, ffi, f ,x,mx.\n ffi,  ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mxtruefi, x,mx.\n ffi, ffi, f ,x,mxfi, f ,x,ffi, ffi, f ,x,mxfi, ffi, f ,x,mx,mx.\n ffi, x,mfi, ffi, f ,x,mx.\n ffi,  ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mxtruefi, x,mx.\n ffi, ffi, f ,x,mx.\n ffi,  ffi,\n i ,x,mx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi,  ffi,\n ffmx.\n ffi, ffi, ffi, f ,x,ffi, ffi, ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mxfi, f ,x,ffi, ffi, f ,x,mxfi, ffi, f ,x,mx.f ,x, ffi, f ,fmx   ff ffi -i -i"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            arithmetic_type {
              type_long_int_2: 234881024
            }
          }
        }
      }
    }
  }
}
