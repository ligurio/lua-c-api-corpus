declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              attr_spec_seq {
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 4
                    message: "^]]\354\354{\n \354dName0\354=\354\354\354\354\2272,\354\377\377\377s_list {\n      q\354=\354\354\354\354\3541{\n     q\354=\354pecers\354\2272,\354/\377\377s_list {     q\354=\354pecers\354\2272,\354\377\377\377s_list {\n      q\354=\354\354\354\354\3541,\354\377st{\n     q\354=\354Name1,\354\377t\354\354\354\354o_Tht {\n        }\n      }\n  \n        }\n      }\n    }\n,Name8ool\377\377st {\354zal\354=G\344\354\354\2272,\354\377\377\377s_list {\n      q\354=\354\354\354\356\3541,{\n      q\354       }\n          }\n      }\n    }\n,Name}\n[[[\354"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 4
                    message: "^]]\354\354{\n \354dName0\354=\354\354\354\354\2272,\354\377\377\377s_list {\n      q\354=\354\354\354\354\3541{\n     q\354=\354pecers\354\2272,\354/\377\377s_list {     q\354=\354pecers\354\2272,\354\377\377\377s_list {\n      q\354=\354\354\354\354\3541,\354\377st{\n     q\354=\354Name1,\354\377t\354\354\354\354o_Tht {\n        }\n      }\n  \n        }\n      }\n    }\n,Name8ool\377\377st {\354zal\354=G\344\354\354\2272,\354\377\377\377s_list {\n      q\354=\354\354\354\356\3541,{\n      q\354       }\n          }\n      }\n    }\n,Name}\n[[[\354"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 4
                    message: "\242]]Name3\354\354\354registers_list {\n    z\354\354\354=\354ca\354,\354\3771\377s_liss_list {\n      q\354=A\354\354\354\3541,\354p5\377:st {\354z\3545\354=\354\354\354\354\2272,\354\377\377\377s_list {\n      q\354=A\354\354\354\3541,\354\377 }\n   }\n      }\n    }\n[[[\354"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 4
                    message: "^]]\354\354{\n \354dName0\354=\354\354\354\354\2272,\354\377\377\377s_list {\n      q\354=\354\354\354\354\3541{\n     q\354=\354pecers\354\2272,\354/\377\377s_list {     q\354=\354pecers\354\2272,\354\377\377\377s_list {\n      q\354=\354\354\354\354\3541,\354\377st{\n     q\354=\354Name1,\354\377t\354\354\354\354o_Tht {\n        }\n      }\n  \n        }\n      }\n    }\n,Name8ool\377\377st {\354zal\354=G\344\354\354\2272,\354\377\377\377s_list {\n      q\354=\354\354\354\356\3541,{\n      q\354       }\n          }\n      }\n    }\n,Name}\n[[[\354"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 4
                    message: "\242]]Name3\354\354\354registers_list {\n    z\354\354\354=\354ca\354,\354\3771\377s_liss_list {\n      q\354=A\354\354\354\3541,\354p5\377:st {\354z\3545\354=\354\354\354\354\2272,\354\377\377\377s_list {\n      q\354=A\354\354\354\3541,\354\377 }\n   }\n      }\n    }\n[[[\354"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
