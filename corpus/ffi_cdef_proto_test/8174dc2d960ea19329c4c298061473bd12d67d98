declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 8
                    expression: 8
                    message: "g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[  "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 8
                    message: "g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[  "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 8
                    expression: 8
                    message: "g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[  "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 8
                    message: "g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[g[rs_list {\n      qualifiers_list {\n      }\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            void_type: 0\n          }\n        }\n      }\n    }\n    specifiers_and_qualifiers_list {\n      qualifiers_list {\n      }\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            void_type: 0\n          }\n        }\n      }\n    }\n    specifiers_and_qual[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[  "
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 9
                    message: "BB]]g=#i>st>i>st[[]]go=#i>st[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 9
                    message: "B]]g=#i>st>st[[f]]go=#i>st[[]]go=#i>st[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 9
                    message: "B]]g=#i>st>st[[f]]go=#i>=#i>st[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 9
                    expression: 9
                    message: "B]]g=#i>st>st[[f]]go=#i>st[[]]go=#i>st[[f"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
