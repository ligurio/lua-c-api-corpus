declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 536870912
                    message: "r]]l\354\354=\354 goto\n i1  goto\n _qui1  goto\n _ goto\n _qualal  goto\n i0  goto\n al  goto\n i0 goto\n i et [[[[[[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 5
                    message: "ttttttttttttttttttttttt"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 536870912
                    message: "r]]l\354\354=\354 goto\n i1  goto\n _qui1  goto\n _ goto\n _qualal  goto\n i0  goto\n al  goto\n i0 goto\n i et [[[[[[[[["
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
      }
      specifiers_list {
        specifiers_list {
          storage_class_specifier {
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: "ttttttttttttttttttttttt"
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]_]][9999999999.9000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\r\r\r\r\r\r\r\r\r<\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r9999.900000000500000000000000000000000000000000000000000000\r\r\r\r\r\r<\r\r\r\r\r\r\r\r\r\r-\r\r999999.9000000005000000000\r\r\r\r\r\r\r\r\r\r<\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r999999.9000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\r\r<-\r\r\r\r\r\r\r\r\r\r\r\r\r\r999999.90000000050000000000000000000000000000000000000000000000000000000000\r\r\r\r\r\r\r\r\r\r<\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r999998.90000000050000000000000000000000000000000000000000000000000000000000000\r\r\r\r\r\r\r\r\r\r<\r\r\r\rualifiers_list {\n        qualifiers_list {\n   \r\r\r\r\r\r\r\r\r999999.9000000005\r\r\r\r\r\r\r\r\r<\r\r\r\r\r\r\r\r\r\r\r\r\rA\r999999.9000000005000000000000000000000000\r\r\r-_BitInt\r\rfiers_an0000000000000000000000000\r\r]]]]]]"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
