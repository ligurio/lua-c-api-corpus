declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            void_type: 1024
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "r]]lB\354=\354 goto\n i1  goto\n _qui1  goto\n _ goto\n _qualal  goto\n i0  goto\n as  goto\n i0 goto\n i et [[[[[[\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000[[["
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "r]]lB\354=\354 goto\n i1  goto\n _qui1  goto\n _ goto\n _qualal  goto\n i0  goto\n as  goto\n i0 goto\n i et [[[[[[\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 0
                    message: "g[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,Jz0=[[ ]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[  "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "r]]lB\354=\354 goto\n i1  goto\n _qui1  goto\n _ goto\n _qualal  goto\n i0  goto\n as  goto\n i0 goto\n i et [[[[[[[[declarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            union_type {\n              struct_declaration_list {\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_1: 0\n                    expression: 1\n                    message: \"J]]   while   s[[A\"\n                  }\n                }\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_2: 4\n                    expression: 0\n                    message: \"]]and[[\"\n[                  }\n                }\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_2: 0\n                    expression: 4\n                    message: \"]]^[[\"\n                  }\n                }\n                struc\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    specifiers_and_qualifiers_list {\n      specifiers_li"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
