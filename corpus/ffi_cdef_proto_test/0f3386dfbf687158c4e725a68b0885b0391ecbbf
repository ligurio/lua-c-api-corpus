declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 4
                    message: "]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ert=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^[[]]rtyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3i^ypei^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertyptype=3i^r[[]]r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3i^r[[]]err[[]]e=3i^r[[]]ertype=3i^[[]]e=3i^r[[][]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3i^ypei^r[[]]e=3i^r[[]]ertyp=3i^r[[]typ=3i^r[[=3i^ype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3i^r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 3
                    message: "$]]{c={m=u} } [[$]]{c={m=u} } [["
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "]_]]999999999999900000000000000000000000033333333333333333333333339999999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000]]]]]]]]]]"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  attr_spec_seq {
    keyword_unsequenced: -9
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
          }
        }
      }
    }
  }
}
