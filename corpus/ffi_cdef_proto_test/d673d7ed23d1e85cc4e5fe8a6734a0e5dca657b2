declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 1
                    message: "]]{s[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "]]~=6,l[[ ]]~="
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          function_specifier {
            keyword_inline: 0
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    expression: 49
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      pointer_declarator {
        declarator {
          function_declarator {
            noptr_declarator {
            }
            identifiers_list {
              identifiers {
                name: "OOOOOOOOOOOOOOOOOOOO"
                num: 0
              }
            }
          }
        }
      }
    }
    declarators {
      function_declarator {
        noptr_declarator {
          declarator_parentheses {
            declarator {
              pointer_declarator {
                declarator {
                  pointer_declarator {
                    attr_spec_seq {
                      keyword_fallthrough: 0
                    }
                    declarator {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
