declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 3
                    message: "]]declarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            struct_type {\n              struct_declaration_list {\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_2: 0\n                    expression: 4\n                    message: \"]]D=not[[\"\n                  }\n                }\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_1: 5\n                    expression: 4\n                    message: \"!]]H=not[[]],not[[\"\n                  }\n                }\n              }\n            }\n          }{[[\n        }\n      }\n    }\n  }\n}\n"
                  }
                }
                struct_declaration_list {
                  bit_field {
                    name {
                      name: ""
                      num: 0
                    }
                    width: 0
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 3
                    message: "]]and[[]]and[[]]and[[]]and[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "]]and[[]]and[[]]and[[]]and[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 4
                    message: "]]and[[]]and[[]]and[[]]and"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
