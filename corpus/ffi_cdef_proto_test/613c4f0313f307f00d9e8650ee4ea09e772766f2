declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_const: 32
            keyword_atomic: 8704
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
        specifiers_list {
          type_specifier {
            union_type {
              attr_spec_seq {
                keyword_reproducible: 12
              }
              name {
                name: ""
                num: 12
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "\rX\r\r\r\r\r\r\r\r"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 5
                    expression: 0
                    message: "]]e=3i^r[[]]ertyp=3i^r[[]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]eertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]eertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[i^r[[]]ertyp=3i^r[[=3i^r[["
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          alignment_specifier {
            alignment_specifier_Alignas: 0
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              attr_spec_seq {
                keyword_reproducible: 12
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 5
                    message: "!]];\354=0-BBBBB{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[09]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[l=[[[0955E161E15]];l=0-\275,{\n[[[09]];l=0-\275,{\n[[[0955E1615E161E161]];l=0-\275,{\n[[[05*1E161]];l=0-\275,{\n[{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[@E161]];l=0-\275,{\n[[[0955E161E161]];l=[[[0955E161E15]];l=0-\275,{\n[[[09]];l=0-\275,{\n[[[0955E1615E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[!]];\354=0-BBBBB{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E1610955E161E161]];l=[[05*ers"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 115
                    expression: 3
                    message: "!!]];\354=0-\275a_a,{\n[[!!]];\354=0-\275a_a,{\n[[[0E1!!]];\354=0-\275a0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,ex[[[05*0ers[0E16[0E1!!]];\354=0-\275a0-\275a_a,{\n[[1]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers61]];l=0-\275,{\n[[[0955E!161E161]];l=0-\275[[!!]];\354=0-\275a_a,{\n[[[0E1!!]];\354=0-\275a_a,{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[0]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers61],{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E6E11161]];l=0-\275,{\n[[[05*0ers"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
