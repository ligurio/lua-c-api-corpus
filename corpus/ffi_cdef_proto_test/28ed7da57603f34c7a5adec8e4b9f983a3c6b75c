declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]_]][9999999\r\r\r\r\r\r\r\r\r<\r\r\r000000000000000000\r\r\r\r\r\r\r\r\r\r<\r\r\r\r\r\r\r\r\r\r\r(\r\r\r\r\r\r\r\r\r.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000160066774785\r\r\r\r<\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r_AligX\r\r\r\r\r.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005\000\000\000000000000000000000000000000000000000000000000015714185884247130112]]]]]]]]]]"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      declarator_attr {
        name {
          name: "*#@ e@;\n;\n  _Static_assert(0), #"
          num: 0
        }
      }
    }
    initializers {
    }
  }
}
