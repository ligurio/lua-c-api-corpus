declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 0
                    message: "\242]]\354\354\354\354\354\'\' {ist {\nrs_and_qualifiers_\'\'\'\'\'\'\'\'\'\'\'\'\'iiiiiiiiiiName0iiiiiiiiiiiiiiiiiiii\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'g\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'lifaliers_and_qu+a\'\'\'\'\'\'\'\'\'\'\'\'x0#\'\'\'\'\'\'\'\'\'\'\' {\n  specifiers_and_qu+alifalifiers_list {\n    speci\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'\'               static_assert_1: 0\n                    expression: 0\n                    message: \"]_]][999999.90000<\\r\\r\\r\\r.90099/.90)]\"\n                  }\n      E           "
                  }
                }
                struct_declaration_list {
                }
              }
            }
          }
        }
      }
    }
  }
}
