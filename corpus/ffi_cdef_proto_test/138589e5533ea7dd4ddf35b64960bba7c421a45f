declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 1
                    message: "\242]]Name3_2ticonst\354\354\354\354\354\354\354{\n \354\354const\354=\354_B\354\2272,\354\377\3770s_list {\n      q\354=false1{\n \354\354\354=\354\354\354_list {\n      q\354=f\354\354_al2rs_list {\nName3z\354\354\354=_Thread_localt {\n  static=\354\354\377s_li\354\377t*\3542\354\354\377zst {\n        }\n      }\n}\n      }\n    }\n,const {\n      q\354=\354.l2\3541,\3542,\354\377\377\375s_li  }\n      }\n    }\n[[[7"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "!!]];\354=0-\275a_a,{\n[[!!]];\354=0-\275a_a,{\n[[]];\354=0-Name0{\n[[!!0ers61]];l=0-\275,{\n[[[0955E!161E161]];l=0-\275,{\n[[[05*0ers[0E16E161E161]];l=0-\275,{[[[[05*0ersE1!!]];\354=0-\275a_a,{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E1]];l=0-\275,{\n[[[]];l=0-\275,{[[[[05*0ersE1!!]];\354=0-\275a_a,{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E1]];l=0-\275,{\n[[[0955E11E161]];l=0-\275,{\n[[[05*0ers61]];l=0-\275,{\n[[[0955E!161E161]];l=clar[0955E161Eist p0        specifiers"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
