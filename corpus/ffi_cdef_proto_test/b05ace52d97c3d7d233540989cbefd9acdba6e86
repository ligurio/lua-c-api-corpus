declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              attr_spec_seq {
                keyword_maybe_unused: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4294967291
                    expression: 0
                    message: "pecifier {\n            union_type {\n              struct_declaration_list {\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_1: 3\n                    expression: 0\n                    message: \"^]]rat=c^ri^rs_^ri^sz[[[\"\n                  }\n                }\n              0\n                    message: \"]]^r^r^ri^z^r^r^r^z[[\"\n                  }\n                }\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_2: 2\n                    expression: 0\n                    message: \"]]^r^r^ri^z^r^r^r^z[[\"\n                  }\n                }\n              }\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            union_type {\n              struct_declaration_list {\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_1: 0\n                    expression: 0\n                    message: \"]]^r^r^ri^z^r^r^r^z[[\"\n                  }\n                }\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_2: 0\n                    expression: 0\n                    messagName3]^r^r^ri^z^r^r^r^z[[\"\n                  }\n                }\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_2: 2\n          ^]]rat=c^ri^rs_^ri^sz[[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
