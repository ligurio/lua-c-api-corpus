declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 8
                    message: "[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\243\223\220declarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            typeof_operator {\n            }\n          }\n        }\n                 expression: 0\n                    message: \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\\243\\223\\220\\234\\236\\223 t000\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}essage: \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\\243\\223\\220\\234\\236\\223 t000\"\n                  }\n                }\n                struct_declaration_list urGo                static_assertion {\n                    static_assert_1: 0\n       t             expression: 0\n                    message: \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[0]\\2220\\234\\236\\223 t000\"\n                  }\n                }\n     }\n        0 0   "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 8
                    message: "\242]]\354\354[[3\rS_Alig\r   [[  \rs]\r ]]\354\354[[\rs_B]]\354\354[[\r]]\354\354\354[[\rs_SiAlig]].k[[\rs]]\354\354[[]   [[ g]].k[[\rs]]\354l[[\r   [[  [S_Alig]].k[[1s\354[[2\rSiAlig]].k[[\rs]]\354\354[[]   [[ g]].k[[\rs]]\354\354[[\r   [[  [[[]]\354\354[[_Alig][[  \rs]\r ]]\354\354k[[[\rS_Alig]].k[[[\r[[\r   [[  \rs]\r ][1s\354[[2\rSiAS_Alig]].k[[[\rS[]   [[ g]].k[[Ms]]\354\354[[\r   [[  [[[al8\354[[_Alig]].k[[[\r[[]]\354\354[[3\rS_Alig]].k[[1s\354]]\354v[[2\rS_Alig]].k[[1s\354[[2\rSiAlig]].k[[\rs]]\354\354[[]   [[ g]].k[[\rs]]\354\354[[\r   [[  [[\rs]\r ]]\354\354[[\rs_B]}1s\r ]]\354\n[[\rs_BitInBitInt\rS_Alig]].k[[[\rS_Alig]].k[[[\r[[\r   [[  \rs]\r ][1s\354[[2\rSiA_Alig]].k[[[\rS_Alig]].k[[[\r[[\r   [[  \rs]\r ][1s\354[[2\rSiAS_Alig]].k[[[\rS_Alig]].k[[[=[[]]\354\354[[2\rS_Alig]].k[[[[2\rS_Alig]].k[[1s\354[[2\rSiAlig]].k[[\rs]]Name2\354H[[]   [[ g]].k[[Ms]]\354\354[[ig]].k[[1s\354[[2fiers_and_qualifiers_]   [[  [[ 0000001Alig"
                  }
                }
                struct_declaration_list {
                }
              }
            }
          }
        }
      }
    }
  }
}
