declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_volatile: 184549376
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 2
                    message: "]]function f()u[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "U]] f ,x,mx.\n mName9fi, ffi. f ,x,mx.\n ffi, ffi, fffi, ffi. f ,x,m {\n                      struct_decl, f ,x,ffi, ffi. f , f ,xfi, f ,x,ffi, ffi. f , f ,x.\n ffi, ffi, fffi, ffi. f ,x,m {\n                      struct_decl, f ,x,ffi, ffi. f , f ,xfi, f ,x,ffi,ffi. f , f ,xfi, f ,x,ffi, ffi. f , f ,x.\n ffi, ffi, fffi, ffi. f ,x,m {\n                      struct_decl, f ,x,ffi, ffi. f , f ,xfi,x,mx.\n ffi, ffi, fffi, ffi. f ,x,mx.\n ffi, ffi ,i, ffi. f ,x,mx.\n ffi, ffi ,x,mx.\n ffi, ffi, fffict_decl, f ,x,ffi, ffi. f , f ,xfi, f ,x,ffi, ffi. f , f ,x.\n ffi, ffi, fffi, ffi. f ,x,m {\n                      struct_decl, f ,x,ffi, ffi. f , f ,xfi, f ,x,ffi, ffi. f , f ,x, {\n "
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: ""
                num: 0
              }
              struct_declaration_list {
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            enum_type {
              enum_name {
                name: "]]function f()u[["
                num: 8
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          function_specifier {
            keyword_inline: 0
          }
        }
      }
    }
  }
}
