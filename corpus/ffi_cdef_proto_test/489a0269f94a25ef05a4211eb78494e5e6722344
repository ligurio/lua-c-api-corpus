declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 4
                    message: "\242]]\354\354\354\354d_2ticonst\354\354\354\354\354\354\354{\n \354\354\354\354z\354\354\354=\354\354\354\354\2272,\354\377\377\377s_list {\n      q\354=false1{\n \354\354\354=\354\354\354\354\2272x0\377\377\377s_list {\n      q\354=\354\354c\354\354iers_list {\n    \354z\354\354\354=\354\354\354\354\2272,  q\354=_list {\n      q\354=\354\354l\354\3541,\354\377t\354\3542\354\354\377\377st {\n        }\n      }\n  \n        }\n      }\n    }\n,\354\377\377\377\377\377\377\377\354l\354\3541,\354\377t\354\3542\354\354\377\377st {\n    li  }\n      }\n    }\354\354\354\354{\n \354\354\354\354z\354\354\354=\354\354\354\354\2272,\354\377\377\377s_list {\n      q\354=false0{\n \354\354\354=\354\354\354\354\2272x0\377\377\377s_list {\n      q\354=\354\354\354\354\354iers_list {\n    \354z\354\354\354=\354Name0,  q\354=_list {\n      q\354=\354\354l\354\3541,\354\377t\354\3542\354\354\377\377st {\n        }\n      }\n  \n        }\n      }\n    }\n,\354\377\377\377\377\377\377\377\377^st {\354z\354\354P=\354\354\354\354\2272,\354\377\377\377s_li  }\n      }\n    }\n[[[\354"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 8
                    message: "]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]eertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3i^r[["
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
