declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "*]]\354z4444444444444444444444444444444444444declarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            union_type {\n              struct_declaration_list {\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_2: 0\n      44444444444444444444444444444444t444444t44444444444444444444t444444t444444444444444444444444444444444444444444444444444444444444444444444444444444444444              expression: 0\n                    message: \"]]go=#i>=#i>#i>=#i>=#i>#i>=#i>[[f$]]go=#i>=i>#i>i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>[[f$$]]go=#i>=#ii>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=#[[f$]]go=#i>=#i>#9i>=#i>i>=#i>#i>=#i>[[f\"\n                  }\n                }\n                struct_declaration_l4444444444444t444444ist {\n                  static_assertion {\n                    static_assert_2: 0\n                    expression: 0\n                    message: \"]]go=#i>=#i>#i>=#i>=#i>#i>=#i>[[f$]]go=#i>=i>#i>i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>[4444444444444444444444444444444444ty44uax[f$$]]go=#i>=#ii>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=#[[f$]]go=#i>=#i>#9i>=#i>i>=#i>#i>=#i>[[f\"\n                  d}\n                }\n        ecx      }\n            }\n d         }\n        }\n      }\n    }\n  }\n}\n"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
