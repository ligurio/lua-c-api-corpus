declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 3
                    message: "1]]\354\354[[\rs]]\354n[[\rs]]\354\354[[2\rS_Aligl]]\354n[[A\r \r   [[  [[[]]\354\354[[\rs]]\354n[[\r\r ]]\354\354[[\rs]]\354\354[[2\rS_A_Decim!l32s]]\354\354[[2\r.o\r   [[  ]\354\354[[2\rS_Aligl]]\354n[[A\r \r [2\r.o\r   [[  [[[]]\354\354[[\rs]]yn[[\r\r ]]\354\354[[\rs]]\354\354[[\r\r \r   [[  [[[]]\354\354[[\rs]]\354n[[ty ]]\354\354[[1s]]\354\354[[2-S_Alig]Ms]]\354n[[\rM ]]\354n[[ty ]]\354\354[[1s]]\354\354[[2-S_Alig]]\354\354[[\rs]]\354  [[  [[[]]\354\354[[\rs]]\354l[[2\rS_Aligl]]\354n[[\r\r \r   [[  [[const[[Ms]]\354n[[\r\r ]]\354\354[[\rs   }\n   s]]\354n[[ty ]]\354\354[[1s]]\354\354[[2-S_Alig]Ms]]\354n[[\r[[Ms]]\354n[[\r\r ]]\354\354[[\r  [[[]]\354\354[[Ms]]\354n[[+\r ]]\354n[[ty ]]\354\354[[1s]]\354i[[2-S_Alig]]\354\354[[,s]]\354  [[  [[[]]\354\354[[\rs]]\354n[[[[]]\354\354[[\rss]]\354n[[+\r ]]\354n[[ty ]]\354n[[ty ]]\354\354[[1s]]\354i[[2-S_Alig]]\354\354[[,s]]\354  [[  [[[]]\354\354[[\rs]]\354n[[[[ty ]]\354\354[[1s]]\354i[[2-S_Alig]]\354\354[[,s]]\354  [[  [[[]]\354\354[[\rs]]\354n[[[[]]\354\354[[-s]]\354\354[[]]ertyp=3i^r[[ig"
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
    }
    initializers {
    }
  }
}
