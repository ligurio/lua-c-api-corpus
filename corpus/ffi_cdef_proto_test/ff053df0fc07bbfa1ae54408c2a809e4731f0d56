declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "\242]]\354\354\354a\354\354=\354c\377<\377exter\377\377\377\377\377  or {}\n>   spe,A<\377er\377\n>   spe\377\377<typeof_unqualpe,\377<\377er\377\n>   spe\377\377<\377er\377\377\377\377\377  or {}\n>  exter\377\377constor {}\n>\377\377\377J<\377exe,_2oog\377\n>   spe\377\377<\377\n>   spe,\377<\377er\377\n>   spe\377\377<\377erz\254\377\377\377\377>   spe\377exter\377\377\377\377\377  or {}\n>   spe,\377\377  or {}\n>   spe,\377<\377er\377\n>\254\377\377,\377>   spe\377exter\377\377\377\377\377  or {}\n>   spe,\377\377  or {}\n>   spe,\377<\377er\377\n>   spe\377\377<\377er\377\377\377\377\377>   spe,\377<\377er\377\n>   spe/\377<\377__________\n>   spe\377\377<\377er\377\377\377\377\377  or {}\n>  exter\377\377const\377\377va\354\377\377<\377ext>   spe\377\377<\377er\377\377\377\377\377  or {}\n>  exter\377\377{}\n>{}\n>\377\377\377\377<\377exter\377\377%\377\377  or {}\n>   spe,\377\377  or {}\n>   spe,\377<\nthre>   spe\377\377<\377er>   spe\377\377<\377er\377\377\377\377\377\377v\377case\377\377<\377ext>   spe\377\377<\377er\377\377\377\377\377  or {}\n>  exter\377>{}\n>{}\n>\377\377\377\377<\377extchar\377\377\377  or {}\n>   spe,\377<\377err\377\377constor {}\n>\377\377\377\377<\377exter\377\377\377\377\377  or {}\n>   spe,\377<\377\377>   spe,\377goog\377\n>   spe\377\377<\377er\377else  or {}\n>  exter\377\377const\377\377va\354\ns[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 4
                    message: "[]]go=i>s[[f]]go=i>st[[]]go=#i>t[[]]go=#i>s[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 0
                    message: "]]e=3i^r[[]]ertyrtype=3i^r[[]]e=3i^r[[]]\270rtyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3i^r[[]]e=3i^r[[=3i^r[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  declarators_and_initializers {
    declarators {
      declarator_attr {
        name {
          name: "_"
          num: 0
        }
      }
    }
    declarators {
      declarator_attr {
        name {
          name: "_"
          num: 0
        }
      }
    }
    declarators {
      declarator_attr {
        name {
          name: "_"
          num: 0
        }
      }
    }
  }
}
declarations {
  attr_spec_seq {
    keyword_noreturn_1: 105
  }
}
