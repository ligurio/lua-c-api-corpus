declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "\242]]\354\354\354\354d\377const{\n \354ex\354z\354\354l=\354\354_2\2272,s_list {\n      q\354=false1{st {\n      q\354=\3541-\354\3541,\354\377{\354z\354\354\354=\354\354\354_Decimal3_list {\n   \3541,st {\n    2,\354  }\n      }\n    ist {\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_unsigned_long_long_int_2: 9\n            }\n          }\n        }\n        specifiers_list {\n          function_specifier {\n            keyword_inline: 0}\n[[[ "
                  }
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 2
                    message: "\242]]\354_Aligxternons {\n{\n  V46744073709551615*000073709551615*I00000000440446744073709551615-s*00000000000000051615*00000000000000001,00000-0x467440446744073709551615-specifi551615*00000,00000-0744073709551615*00007344073709551615-specifiers_000051615*000000000000000010000000000000000000001,000006-specifiers_000000d00006-specifiers_000000declarat0009551615*000000i"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
