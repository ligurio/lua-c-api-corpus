declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]]\n\354l=qual  goto\n i   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i Imaledc8ou=\354l goto\n i ers50=nd_0  goto\n i44   goto\n_qual  goto i   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i Imaledc8ou=\354l goto i ers50=nd_i4   goto\n_qual  goto\n i et [[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]]\n\354l=qual  goto\n i   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i Imaledc8ou=\354l goto\n i ers50=nd_0  goto\n i44   goto\n_qual  goto i   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i Imaledc8ou=\354l goto i ers50=nd_i4   goto\n_qual  goto\n i et [[["
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 4
                    message: "!!]];\354=0-\275a_a,{\n[[!!]];b=0-\275a_a,{\n[[[0E1!!]];\354=0,{\n[[!!]];b=0-\275a_a,{\n[[[0E1!!]];\354=0-\275a_a,{\n[[!)]];\354=0-\275a_a,{\n[[[0E161]161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955161E161]];l=0-\275,{\n-\275a_a,{\n[[!!]];l=0-\275a_a,{\n[[[0E161]161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[E161]];l=0-\275[[095161E161]];l=0-\275,{\n[[[05*0ers61]];l=0-\275,{\n[[[0955E!161E161]];l=0-\275,{\n[[[]];l=0-\275,{\n[[[05*0   "
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
