declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              attr_spec_seq {
                keyword_nodiscard: 0
              }
              name {
                name: ""
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 2
                    message: "%]]\354=ra*6*551615*00316/15-s*00446 or \354[[longf"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "(]](C%ty905*00000,00000-0B0000000,005*00000,000,00000-0B0000000,000-000000-0B000-0B00000000i-000000-0B000-0B000000%ty905*00000,00000-\377\377\377\377\377000000i-00-0B00000000i-000000-0B000-0B000000%ty905*00000000000i-000000-0B000-0B000000%ty905*00000*000i-000000-0B000-0B000000%ty905*00000000000i-000000-0B000-0B000000%ty905*000000000000-0B00000000i-00-0B00000000i-000000-0B000-0B000000%ty905*00000000000i-000000-0B000-0B000000%ty905*00000,00000-\377\377\377\377\377Name4\377\377\377\377\377\377\377\377\377\377\377\37700-000000-0B000-0B00000000i-000000-0B000-0B000000%ty-0B000-0B00000000-0B000-0B0000000-0B000-0B00000000i-00-0B00000000i-000000-0B000-0B000000%ty905*00000000-00-0B00000000i-000000-0B000-0B000000%ty905*00000000000i-000000-0B000-0B000000%ty905*000000000000-0B00000000i-00-0B00000000i-000000-0B000-0B000000%ty905*00000000000i-000000-0B000,00000-\377\377\377\377\377Name4\377\377\377\377\377\377\377\377\377\377\377\37700-000000-0B000-0B00000000i-000000000,00000-0B0000000,005*00000,000,00000-0B0000000,000-000000-0B000-0B00000000i-000000-0B000-0B000000%ty905*00000,00000-\377\377\377\377\377000000i-00-0B00000000i-000000-0B000-0B000000%ty905*00000000000i-000000-0B000-0B000000%ty905*000000000000-0B00000000i-00-0-0B00000000i-0000000i-00-0B00000000000i-0000000i-00-0B00000000i-000000-0B000-0B000000%ty905*00000,00000-\377\377\377/\377\377\377\377\377\357\377\377\377\377\377\377\377\37700000-0B000-0B00000000i-00-0B00000000i-000000-0B000-0B000000%ty905*00000000000i-000000-0B000-0B000000%ty905*000000000000-0B00000000i-00-0B00000000i-000000-0B000-0B000000%ty905*00000000000i-000000-0B000-0B000000%ty905*000i-000000-0B000-0B000000%ty905*00000000000i-000000-0B000-0B000000%ty905*000000000000-0B00000000i-00-00i-0000000i-00-0B00000000i-000000-0B000-0B0000000000-0B000-0B00000000i-000000-0B000000%ty905*000009,00000-\377\377\377\377\377Nam000000-0B000-0B000000%ty905*000000000000-0B00000000i-00-0B00000000i-000000-0B000-0B000000%ty905*000000000*000i-000000-0B000-0B000000%ty905*00000000000i-000000-0B000-0B000000%ty905*000000000000-0B00000000i-00-0B00000000i-000000-0B000-0B000000%ty905*00000000000i-000000-0B000-0B000000%ty905*00000,00000-\377\377\377\377\377Name4\377\377\377\377\377\377\377\377\377\377\377\37700-000000-0B000-0B00000000i-000000-0B000-0B000000%ty-0B000-0B00000000-0B000-0B0000000-0B000-0B00000000i-00-0B00000000i-000000-0B000-0B000000%ty905*00000000-00-0B00000000i-000000-0B000-0B000000%ty905*00000000000i-000000-0B000-0B000000%ty905*000000000000-0B00000000i-00-0B00000000i-000000-0B000-0B000000%ty905*00000000000i-000000-0B000-0B000000%ty905*000i-000000-0B000-0B000000%ty905*00000000000i-000000-0B000-0B000000%ty905*000000000000-0B00000000i-00-0B00000009-0B000-0B00000000i-00-0B00000000i-0000000i-00-0B00000000i-000000-0B000-0B0000000000-0B000-0B00000000i-000000-0B000000000000000-0B000-0B00000000i-000000-0B000-0B00000000i"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
