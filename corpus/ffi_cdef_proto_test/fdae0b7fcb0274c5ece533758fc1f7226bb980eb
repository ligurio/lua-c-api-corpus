declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            enum_type {
              enum_name {
                name: ""
                num: 0
              }
              constant {
                name: ""
                num: 2
              }
              constant {
                name: ""
                num: 4
              }
              constant {
                name: ""
                num: 0
              }
              constant {
                name: ""
                num: 0
              }
              constant {
                name: ""
                num: 7
              }
              constant {
                name: ""
                num: 3
              }
              constant {
                name: ""
                num: 8
              }
              constant {
                name: ""
                num: 6
              }
              constant {
                name: ""
                num: 9
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: ""
                num: 7
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "\242]]k9\354a\354\354=\354pece\n>\377\377\377\377<\377exter\377co\377\377  or {}\n>   spe,\377<\377er\377\n>  BBBBB\377<\377eName0\377>   spe,\377<\377er\377\n>   spe\377\377<\377er-\377<\377\377O0 or {}\n>   spE,\377<\377er\377\377,\377\377typeof_unquaName0\377\377tru or {}\n>   s[[f"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
