declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_const: 16842752
            keyword_volatile: 16842752
          }
        }
      }
      specifiers_list {
        specifiers_list {
          alignment_specifier {
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "]_]             s][9.900000000000000000000000ge: \"]_]][4.900000000][8.900000000][9.900000][9.90000000000000][9.900000000][9.90000000000000][9.90000000000000000000000000090000000000][9.900000][9.900000000000000000][9.90000000000][9.900000000][9.900000000000000000][9.900000000000000000][9.900000000000000][9.900000000000000000][9.9000000000000000000090000000000][9.90000000][9.900000000][90][9.90000000000000][9.900000000][9.900000000000000000][9.90000000000][9.90000000000000000000000000090000000000][9.900000][9.900000000000000000][9.9000000000][8.900000000][9.900000][9.90000000000000][9.900000000][9.90000000000000][9.900000000][9.900000][9.900000000000000000][9.90000000000][9.900000000][9.900000000000000000][9.900000000000000000][9.900000000000000][9.900000000000000000][9.9000000000000000000090000000000][9.90000000][9.900000000][90][9.90000000000000][9.900000000][9.900000000000000000][9.90000000000][9.90000000000000000000000000090000000000][9.900000][9.900000000000000000][9.9000000000][8.900000000][9.900000][9.90000000000000][9.900000000][9.90000000000000][9.90000000000000000000000000090000000000][9.900000][9.900000000000000000][9.90000000000][9.900000000][9.900000000000000000][9.900000000000000000][9.900000000000000][9.900000000000000000][9.9000000000000000000090000000000][9.90000000][9.900000000][90][9.90000000000000][9.900000000][9.900000000000d0"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
