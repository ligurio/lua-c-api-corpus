declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
        specifiers_list {
          type_specifier {
            union_type {
              attr_spec_seq {
                keyword_deprecated: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 9
                    expression: 9
                    message: "\']ligl]]\354n[[\r\r \r  g]].k[[\rs]]\354\354[[\r   [[  Ms]]\354n[[\r\r ]]\354\354[[\rs]]\354\354[[2\rS_Alig]].k[[\rs\354\354[[2\rS_Alig]].k[[\rs]]l0[[\r   [[  \rs]]ln[[\r\r ]]\354\354[[\r \rs]]ln[[\r\r ]]\354\354[[\rs]]\354\354[[2pS_Alig]].k[[\rs]]\354\354[[\r  [[[]]l\354[[\r]]T\354[[\r   [[li\205"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 3
                    message: "h][[sa[ter]] [[sa[ter]] goto[[sa[ter]] goto[[sa[tr]]\354\354to[[sia[]] goto[[sa[tr]goto[[sa[ter]] goto[[ster]] goto[[sa[ter]] goto[[sto[[sa[tr]goto[[sa[ter]] goto[[sa[ter]] goto[[sa[ter]] goto[[ster]] goto[[sa[ter]] goto[[sa[tr]r]] goto[[sa[tr]]goto[[sa[ter]] goto[[sa[tr]r]] goto[[sa[tr]]\354ato[[sia[]] goto[[sa[tr]]x\354to[[si"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 8
                    message: "]]go=#i>=#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>#i>i>#i>=#i>i>=#i>#i>=#i>[[f"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
