declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 8
                    message: "g[[][]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,zz,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,z,u=[[]]A,ju=[[]]A,j,_=[[g[[]]Az,u=[[][]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,zz,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J=[[ []]A,j,u=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J=[[  "
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "?z]]Name8i4=\354exc,not not [[_]$_Dla]]\354_Deci4=x,not not [[z]]\354_Deci4=\354exc,not not [[_]$_D]]\354_Deci4=x,not not [[lexlex]?z]]i4=x,not not [[lexlex]?z]]l_Deci4=#-not not not not [[lasz]]l_Deci4=#-noto,not not [[lass_spes"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "?z]]Name8i4=\354exc,not not [[_]$_Dla]]\354_Deci4=x,not not [[z]]\354_Deci4=\354exc,not not [[_]$_D]]\354_Deci4=x,not not [[lexlex]?z]]i4=x,not not [[lexlex]?z]]l_Deci4=#-not not not not [[lasz]]l_Deci4=#-noto,not not [[lass_spes"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
