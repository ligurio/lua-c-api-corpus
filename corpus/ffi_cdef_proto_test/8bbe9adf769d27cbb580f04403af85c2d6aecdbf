declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "[]]local   c    t0[[[[]]local   c    t[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\243\223oca t0[[[[]]local   c    t0[[]\243\223ocal   c0"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "[]]local   c    t0[[[[]]local   c    t0[[[[[]]local  c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[    t0[[[[]]local   c    t0[[    t0[[[[]]local   c    t0[[ocal   c  c0"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "[]]local   c    t0[[[[]]local   c    t0[[[[[]]local  c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[    t0[[[[]]local   c    t0[[   declarations {\n  specifiers_and_qualifiers_list {\n    speci t0[[[[]fiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n  ]local   c    t0[[ocal          unionand_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_float_imaginary: 0\n            }\n          }\n        }\n      }\n    }\n  }\n  declarators_and_initializers {\n    declarators {\n      declarator_parentheses {\n        declarator {\n        }\n      }\n    }\n    declarators {\n      function_declarator {\n        noptr_declarator {\n          declarator_attr {\n            name {\n              name: \"\"\n              num: 0\n            }\n          }\n        _type {\n              struct_declaration_list {\n                 c    struct_decc0l"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "[]]local   c    t0[[[[]]local   c    t[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\243\223oca t0[[[[]]local   c    t0[[]\243\223ocal   c0"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "[]]local   c    t0[[[[]]local   c    t0[[[[[]]local  c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[    t0[[[[]]local   c    t0[[   declarations {\n  specifiers_and_qualifiers_list {\n    speci t0[[[[]fiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n  ]local   c    t0[[ocal          union_type {\n              struct_declaration_list {\n                 c    struct_decc0l"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
