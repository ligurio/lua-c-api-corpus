declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 524288
                    expression: 2
                    message: "]]e=3i^r[[]]ertyp=3i^r[[^r[[]]ype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 2
                    message: "!!]];\354=0-\275a_a,{\n[[!!]];\354=0-\275a_a,{\n[[[0E1!!]];\354=0-\275a_a,{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E1>1]];l=0-\275,{\n[[[05*0ers61]];l=0-\275,{\n[[[0955E!161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers"
                  }
                }
                struct_declaration_list {
                  bit_field {
                    name {
                      name: ""
                      num: 206
                    }
                    width: 0
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 67108864
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 2
                    message: "!!]];\354=0-\275a_a,{\n[[!!]];b=0-\275a_a,{\n[[[0E1!!]];\354<0-\275a_a,{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E16;l=0-\275[[0955E161E161]];l=0-\275,{\n[[[05*0ers61]];l=0-\275,{\n[[[0955E!161E161]];l=0-\275,{\n[[[05*0s"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
