declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "U]] f ,x,mx.\n mx.\n ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.ype {\n              struct_decst {\n                  static_a.\n ffi, f ,x,mfi, ffi, ffi, f ,x,ffi, ffi, f ,mx.\n ffi, ffi, f ,x,mx.\n ffi, f, f ,x,mx.\n ffi, ffi.\n ff ,x,ffi, ffi, f ,x,mx009551615*00000,00000-f ,mx.\n ffi, ffi, f ,x,mfi, ffif ,x,mfi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mxfi, f ,x,ffi, ffi, f ,x,mxfi, ffi, f ,x,mx.f ,x,mx.\n ffi, ffi, f ,x,x.\n ffi, x,mfi, ffi, f ,x,mx.\n ffi,  ffi,\n f ,x,mx.\n ffi,  ffi,\n ffmx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\nfi, ffi, f ,x,mxName8i, x,mfi, ffi, f ,x,x,mfi, ffi, f,x,ffi, ffi, f ,mx.\nffi, f ,x,mx.\n ffi, ffi.\n ff ,x,ffi, ffi,              static_a.\n ffi, f ,x,mfi, ffi, ffi, f ,x,ffi, ffi, f ,mx.\n ffi, ffi, f ,x,mx.\n ffi, f, f ,x,mx.\n ffi, ffi.\n ff ,x,f00-000000000000000,00000-0000000000000000010000000000001000000000,00000-0000000000-0000000000000000010000000000000000000000,00000-000000000000001844674404467709551615-si"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
  }
}
