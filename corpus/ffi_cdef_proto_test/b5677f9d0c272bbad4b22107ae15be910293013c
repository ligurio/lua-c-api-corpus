declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 4
                    message: "!{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[l=[[[0955E161E15]];l=0-\275,{\n[[[09]];l=0-\275,{\n[[[0955E1615E161E161]];lName5{\n[[BBBB{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{a_a,{\n[[[0E1\2661]];l=0-\275,J0[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[l=[[[0955E161E15]];l=0-\275,{\n[[[09]];l=0-\275,{\n[[[0955E1615E161E10955E161E15]];l=0-y,{m[[[09]];l=0-\275,{\n[[[0955E1615E161E161]];l=0-\275,l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-J,{\n[[[0955E161E161]];l=[[[0955E161E15]];l=0-y,{\n[[[09]];l=0-\275,{\n[[[0955E1615E161E161]];a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E1610955E161E10-]];l=0-\275,{a_a,{\n[[[0E1\2661]];l=0-\275,J0[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[l=[[[0955E161E15]];l=0-\275,{\n[[[09]];l=0-\275,{\n[[[0955E1615E161E1095[09]];l=0-\275,{\n[[[0955E1615E161E10955E161E15]];l=0-y,{m[[[09]];l=0-\275,{\n[[[0955E1615E161E161]];l=0-\275,l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-J,{\n[[[0955E161E161]];l=[[[0955E161E15]];l=0-y,{\n[[[09]];l=0-\275,{\n[[[0955E1615E161E161]];a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E1610955E161E161]];l=[[05*ers"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "]]0ll"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 4
                    message: "U]] f ,x,mx.\n mx.\n ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.ype {\n              strffi,\n ffmx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi, x,mfi, ffi, f ,x,mffi, ffi, f ,mx.\n ffi, ffi, 0 ,x,mx.\n ffi, ffi.\n ff ,x,ffi, ffi, f ,x,mx.\n fi, f ,x,ffi, ffi, f ,mx.\n ffi, ffi, f ,x,mfi, ffif ,x,mfi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mxfi, f ,x,ffi, ffi, f ,x,mxfi,mx.f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi, x,mfi, ffi, f ,x,mx.\n ffi, fi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f_lislaration_list {\n                  static_a.\n ffi, ffi, f ,x,mx.\n ffi,  ffi,\n ffmx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi,  ffi,\n ffmx.\n ffi, ffi, ffi, f ,x,ffi, ffi, f ,mx.\n ffi, ffi, 0 ,x,mx.\n ffi, ffi,\n ffmx.\n ffi, ffi, ffi, f ,x,ffi, ffi, f ,mx.\n ffi, ffi, f ,x,mx.\n ffi, ffi.\n ff ,x,ffi, ffi, f ,x,mx.\n ffict_declaration_list {\n                s, x,mx.\n fflist {\n                struct_declaration_li,mfi, ffif ,x,mfi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,x,mx.\n ffi,  ffi,\n ffmx.\n ffi, ffi, ffi, f ,x,ffi, ffi, f ,mx.\n ffi, ffi, 0 ,x,mx.\n ffi, ffi.\n ff ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n i -i"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
