declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 0
                    message: "\242[[]]ont\354=\354ca_Bi or \354lz0 {}s=\354 or bl\354[[)]]me0W=\354ca_Bi or lx0\354 {}\nnt\354=a_Bi or SintSii[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 2
                    message: "B]]g=#i>t[[[f]]go=#i>st[[]]o=#i>st[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 6
                    message: "\242]]\354\354\354\354d_2t\354\354\354\354\354{\n \354\354l\354z\354\354\354=const1,\354\377\3771sWlist {\n      q\354=\354\354\354\354\3541,\354\377\377\377\377\377\377\377\377\377st {\354z\354\354\354=\354\354\354\354\2272,l\377\377\377s_list {\n      q\354=\354\354\354\354     }\n  \n        }\n      }\n    }\n[[[\354"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 0
                    message: "B]]g=#i>t[[[f]]go=#i>st[[]]o=#i>st[[f"
                  }
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2063597568
                    expression: 0
                  }
                }
              }
            }
          }
        }
        specifiers_list {
        }
      }
    }
  }
}
