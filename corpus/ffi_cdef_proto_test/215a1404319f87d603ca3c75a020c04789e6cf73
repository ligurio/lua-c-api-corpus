declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "[[[]]local   c    t0[[t000"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 150994953
                    message: "\242]]C\354\354\354d_2ticonst\354\354\354\354\354\354\354{\n \354\354T,z\354\354\354=\354_B\354\2272,\354\377\3770s_list {\n      q\354=false1{\n \354\354\354=\354\354\354\354\227 {\n      q\354=\354\354\354\354\354i {\n    \354z\354A\354=list {\n      q\354=\354.l2\3541,\354\377t\354\3542typeddf{\n        }\n      }\n  \n        }\n      }\n    }\n,#\377_Alignasst {\354z\354\354P=\354\354\354\354\2272,\354\377\377\377s_li  }\n      }\n    }\n[[[7"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 4
                    message: "?]]    function f()    fu[[]]e=3i^r[[]]ertyp=3i^r[[=3 (u"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 4
                    message: ",] n           name: 0x\"\n           {\n   ]c= not o[[2]]c=not o[[6"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 0
                    message: "\242]]go_Alig\377pe {i {\n  f {\n  f_type {i {\n  f {\n  f{\n  ffi {\n  ffi{\n\377\377\377\377er {\n            ari_type {i {\n i {\n  ffi{\n  ffitic_type {i {\n  f {\n  f_mype {i {\n  f {\n  f{\n  ff\207 {\n  ffi{\n  ffi {\n \377\377\377\377\377\377\377er {\n ic_type {i_type {i     "
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
