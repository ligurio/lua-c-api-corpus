declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 3
                    message: "=]]\354\354\354=\354 goto\n _qual  goto\n i0  goto\n i4  \354x6=nd_l  goto\n i a\354\354\354=\354 goto\n i1  goto\n al  goto\n i0  got=nd_qual  goto\n i et [[[[[[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 3
                    message: "=]]\354\354\354=\354 goto\n i1  goto\n _qual  got\354\354=nd_qual  goto\n i0  goto\n i4  \354x6=nd_l  goto\n i \354ma\354,\354=\354 goto\n i1  goto\n al  goto\n i0  got=nd_qual  goto\n i et [[[[[[[[["
                  }
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "!]];\354{J[[!!]];\354=0-\275a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0E161]];l=0-\275,{\n[[[05*0ers[0E]];l=0-\275,{\n[[[05*0ers"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
