declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "BBB]]g=#i>t[[]]go=#i>s[[f]]go=#i>st[[]]go=#ideclarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_int_1: 0\n            }\n          }\n >st[[B]]g=#i       }\n      }\n   >t[[]]go=#i>s[[f]]go=#i>st[[i>st }\n  }\n[}\n[f"
                  }
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                  bit_field {
                    name {
                      name: ""
                      num: 4
                    }
                    width: 0
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 6
                    expression: 0
                    message: "\242]]o.\354=#######################################################################################################################################er or _F[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 0
                    message: "]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^3i^r[[=3i^r[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
  }
}
