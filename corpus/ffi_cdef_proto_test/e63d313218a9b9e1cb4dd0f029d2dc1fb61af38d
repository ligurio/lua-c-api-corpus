declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 1
                    expression: 2
                    message: "]]r=l[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 1
                    message: " ]]~=6,l[[i]]~=6,l[[i"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 1
                    message: "\377\377\377\377\377\377\377\000"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 0
                    message: "!!]];\354=0-\275a_a,{\n[[!!]];\354=0-\275a_a,{\n[[[0]c=not t[[\"\n                  }\n                }161E161]];l=5-\275,ex[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers61]];l=0-\275,{\n[[[0955E!161[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers61]];l=0-\275,{\n[[[0955E!161E1610955E161E161]];l=0-\275,{\n[[[0]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers61],{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers"
                  }
                }
                struct_declaration_list {
                }
              }
            }
          }
        }
      }
    }
  }
}
