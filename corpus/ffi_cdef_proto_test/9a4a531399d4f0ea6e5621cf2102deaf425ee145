declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 1668183398
                    expression: 0
                    message: "]]go=#i>=#i>#i>=#i>=#i>#i>=#i>[[f$]]go=#i>=i>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#declarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_int_2: 0\n            }\n          }\n        }\n        specifiers_list {\n          storage_class_specifier {\n            storage_class_typedef: 0\n          }\n        }\n      }\n    }\n  }\n  declarators_and_initializers {\n    declarators {\n      array_declarator {\n        keyword_static: 0\n        qualifiers_list {\n          qualifiers_list {\n            type_qualifier {\n              keyword_atomic: 0\n            }\n          }\n        }\n        expression: 0\n      }\n    }\n  }\n}\ndeclarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_int_2: 0\n            }\n          }\n        }\n      }\n    }\n  }i>[[f$$]]go=#i>=#ii>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=#[[f$]]go=#i>=#i>#9i>=#i>\n  declarators_and_initializers {\n    declarators {\n      array_declarator {\n        keyword_static: 0\n        qualifiers_list {\n          qualifiers_list {\n            type_qualifier {\n              keyword_atomic: 0\n            }\n          }\n        }\n        expression: 1024\n      }\n    }\n  }\n}\ndeclarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      qualifiers_list {\n        qualifiers_list {\n          type_qualifier {\n            keyword_atomic: 0\n          }\n        }\n      }\n    }\n  }\n  declarators_and_initializers {\n    declarators {\n      declarator_attr {\n        name {\n          name: \"\"\n          num: 0\n        }\n      }\n    }\n    declarators {\n      declarator_attr i>={\n#i>#i>=#i        name {\n          name: \"\"\n       >[[   num: 0\n        }\n      }\n    }\n  }f\n}\n"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
