declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 5
                    expression: 0
                    message: "U]] f ,x,mx.\n mx.\n ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.ype {\n              struct_declaration_list {\n        ffi, f ,x,mx.\n ffi, x,mfi, ffi, f ,x,mx.\n ffi,  ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi,claration_list {\n        ffi, f ,x,mx.\n ffi, x,mfi, ffi, f ,x,mx.\n ffi,  i, ffi, f ,mx.\n ffi, ffi, 0 ,x,mx.\n ffi, ffi.\n ff ,x,ffi, ffi, f ,x,mx.\n fi, f ,x,ffi, ffi, f ,mx.\n ffi, ffi, f ,x,mfi, ffifi, ffi, f ,mx.\n        struct_declaration_list {\n                struct_declaration_li,mx,mx..\n ffi, ffi, f ,x,mx.\n f\232\226\323\337\337\231\231\226,\n ffmx.\n ffi, ffi, ffi, i, ffi, f ,mx.\n ffi, ffi, 0 ,x,mx.\n ffi, ffi.\n ff ,x,ffi, ffi, f ,x,mx.\n fi, f ,x,ffi, ffi, f ,mx.\n ffi, ffi, f ,x,mfi, ffifi, f f ,x,ffi, ffi, f ,mx.\n ffi, ffi, f ,x,mfi, ffif ,x,mfi, ffi, f ,x,ffi, ffi, f ,x,mx.forfi, fx.\n ff ffi -i -i"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
