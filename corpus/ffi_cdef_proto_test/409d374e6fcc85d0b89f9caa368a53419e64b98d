declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 9
                    expression: 9
                    message: "\242]]  fv{\n  ffi -\n ffi -\n  ffi -\n ff-\n ffi -\n -\n ffi -\ni -\n ffi -\n i {\n  ffi -\nfi -\n ffi -\n -\n ffi -\ni -\n ffi -\n i {\n  v{\n  ffi -\n ffi -\n  ffi -\n ff-sersi -\n -\n ffi -\ni -\n ffi -\n xxxxxxxxxxxx0ffi -\nfi -\n ffi -\n -\n ffi -\ni -\n ffi -i -\n ffi -\nfi -\n ffi -\ni -\ni -\n ffi -\n i {\n  v{\n  ffi -\n ffi -\n  ffi -\n ff-\n ffi -\n -\n ffi -\ni -\n ffi -\n i {\n  ffi -\n ffi -\nfi -\n ffi -\n -\n ffi -\ni -list {-\n i {\n  ffi -\n ffi -\n -\n ffi -\nffi -\n ffi -\n -\n ffi -  fv{\n  ffi -\n ffi -\nv{\n  ffi -\n ffi -\n  ffi -\n ff-\n ffi -\n -\n ffi -\ni -\n ffi -\n i {\n  ffi -\nfi -\n ffi -\n -\n ffi -\ni -\n ffi -\n i {\n  v{\n  ffi -\n ffi -\n  ffi -\n ff-sersi -\n -\n ffi -\ni -\n ffi -\n xxxxxxxxxxxx0ffi -\nfi -\n ffi -\n -\n ffi -\ni -\n ffi -i -\n ffi -\nfi -\n ffi -\n -\n ffi -\ni -\n ffi -\n i {\n  v{\n  ffi -\n ffi -\n  ffi -\n ff-\n ffi -\n -\n fffi -i -\n ffi -\nfi -\n ffi -\n -\n ffi -\ni -\n ffi -\n i {\n  v{{\n  ffi -\n ffi -\n  ffi -\n ff-sersi -\n -\n ffi -\ni -\n ffi -\n xxxxxxxxxxxx0ffi -\nfi -\n ffi -\n -\n ffi -\ni -\n ffi -i -\n ffi -\nfi -\n ffi -\n -\n ffi -\ni -\n ffi -\n i {\n  v{\n  ffi -\n ffi -\n  ffi -\n ff-\n ffi -\n -\n fffi -i -\n ffi -\nfi -\n ffi -\n -\n ffi -\ni -\n ffi -\n i {\n  v{\n  ffi -\n ffi -\n  ffi -\n ff-\n ffi -\n -\n ffi -\ni -\n ffi -\n i {\n  ffi -\n ffi -\nfi -\n ffi -\n -\n ffi -\ni -list {-\n i {\n  ffi -\n ffi -\n -\n ffi -\nffi -\n ffi -\n -\n ffi -  fv{\n  ffi -\n ffi -\n  ffi -\n ff-\n ffi -\n -\n ffi -\ni -\n ffi -\n i {\n  ffi -\nfi -\n ffi -\n -\n ffi -\ni -i -list {-\n i {\n  \n ffi"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
