declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 0
                    message: "]]go=#i>=#i>#i>=#i>=#i>#i>=#i>[[f$]]go=#i>=i>=#i>#i>=[[f$$]]go=#i>=#ii>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=#[[f$]]go=#i>=#i>#9i>=#i>i>=#i>#i>=#i>[[f"
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 1
                    message: "1]]--- \n for  _,_,_,_,_, _,__,_,_,_,_,_,_,_,_,_,_, _,_,_,__,_,_, _,_,_,_,_,_,_,_,__,_,_,_"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
    }
    declarators {
      declarator_attr {
        name {
          name: ""
          num: 0
        }
      }
    }
    declarators {
      declarator_attr {
        name {
          name: ""
          num: 0
        }
      }
    }
    declarators {
      function_declarator {
        noptr_declarator {
        }
      }
    }
    declarators {
    }
  }
}
