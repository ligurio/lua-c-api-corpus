declarations {
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_atomic: 1761607680
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
    }
    declarators {
    }
    declarators {
    }
    declarators {
    }
    declarators {
    }
    declarators {
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "\242]]\354\354NNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"s4\"\"_A\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"NNNNNNNNNNNNNNNNNNNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"[[[[[[[iers_anpecifiers_and"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 8
                    message: "]]e=3i^r[[d_qualifiers_list {\n      sptyp=3^r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "!!]];\354=0-\275a_a,{\n[[!!]];\354=_Aliga,{\n[[]];\354=0-Name0{\n[[!!]];\354=0-\275a_a,{\na_a,{\n[[!!]];\354=0-\275a_a,{\n[[[0\342E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E1]];l=0-\275,{\n[[[05*0ers61]];l=0-\275,{\n[[[0955E!161ers[0E16E161E161]];l=0-\275,{\n[[[05*0ers[0E1!![0E16E!161E161]];l=0-\275,{\n[[[05*0ers[0E16E161E161]];l=0-\275,{\n[[[0-\275,{\n[[[_li       \"\n                  }\n                }\n            1]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  declarators_and_initializers {
    declarators {
    }
    declarators {
    }
    declarators {
    }
    declarators {
    }
    declarators {
    }
    declarators {
    }
    initializers {
    }
  }
}
declarations {
  declarators_and_initializers {
    declarators {
      pointer_declarator {
        declarator {
        }
      }
    }
    declarators {
    }
    declarators {
    }
    declarators {
    }
    declarators {
    }
    declarators {
    }
    declarators {
    }
    declarators {
    }
  }
}
