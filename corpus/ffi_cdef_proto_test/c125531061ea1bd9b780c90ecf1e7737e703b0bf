declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_volatile: 0
          }
        }
        qualifiers_list {
          type_qualifier {
            keyword_volatile: 0
          }
        }
        qualifiers_list {
          type_qualifier {
            keyword_volatile: 0
          }
        }
        qualifiers_list {
          type_qualifier {
            keyword_volatile: 0
          }
        }
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
            typedef_type {
            }
          }
        }
        specifiers_list {
          function_specifier {
            keyword_inline: 83886081
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_volatile: 0
          }
        }
        qualifiers_list {
          type_qualifier {
            keyword_volatile: 0
          }
        }
        qualifiers_list {
          type_qualifier {
            keyword_volatile: 0
          }
        }
        qualifiers_list {
          type_qualifier {
            keyword_volatile: 0
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_volatile: 0
          }
        }
        qualifiers_list {
          type_qualifier {
            keyword_volatile: 0
          }
        }
        qualifiers_list {
          type_qualifier {
            keyword_volatile: 0
          }
        }
        qualifiers_list {
          type_qualifier {
            keyword_volatile: 0
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "c]];l\354{\n   ######con\377%T\377}eci[[sn"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "]]lo{\n ########\377z%T"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
