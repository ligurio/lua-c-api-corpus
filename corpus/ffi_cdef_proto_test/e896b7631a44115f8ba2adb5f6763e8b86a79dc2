declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 3
                    message: "(]] l{\n  ffi ,{{declarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_char: 0\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_char: 0\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_char: 0\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_char: 0\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_char: 0\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_char: 0\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_char: 0\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_char: 0\n            }\n          }\n        }\n      }\n    }\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_char: 0\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_char: 0\n  ffi          }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            arith ,{[{ fmetic_type {\n              type_char: 0\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_char: 0\n            }\n          }\n        }\n        specifiers_list {\n      fi    type_specifier {\n            arithmetic_type {\n              type_char: 0\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_char: 0\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_char: 0\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_char: 0\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
