declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 6553600
                    expression: 2
                    message: "?]]function f()u[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 2
                    message: "%]]\354=ra*6*551615*00316/15-\354[[longf"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 0
                    message: ";;]]l=-2ll l  =-0ll  t [[t][[t]]l=-2ll l  =-0ll  tl=-2ll l =-2ll l=-2ll l  =-0ll  tl=-2ll l =-2ll  t [[ts"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 2
                    message: "%]]\354=ra*6*551615*00316/15-\354[[longf"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 5
                    message: "%]]\354=ra*6*00044551615*00,-s5-s*00446 or \354[[lo6 or \354[[longf"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 2
                    message: "%]]\354=ra*6*55161515-ngf"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
