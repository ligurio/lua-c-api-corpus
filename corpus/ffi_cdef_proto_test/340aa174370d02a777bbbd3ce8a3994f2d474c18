declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1376256
                    expression: 6
                    message: "?z]]Name8i4=\354exc,not not [[_]$_Dla]]\354_Deci4=x,not not [[z]]\354_Deci4=\354exc,not not [[_]$_D]]\354_Deci4=x,not not [[lexlex]?z]]i4=x,not nil,nil ,nil,nl5a,nil,nil \\354[[* e@\"\n                  }\n                }\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_1: 6\n                    expression: 6\n                    message: \"#]]zD=\\354p5,nil,nil ,nil,nil  \\354=\\3545a,nil,nia,nil,nil ,nil,nil c0=\\3545a,nil,nilong,nil,ng,nil,nil ,nil,nl  ~=l5a,nil,long,nil,ng,nil,nil ,nil,nl  ~=l5a,nil,nil \\354[[* e@\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            struct_type {\n              struct_declaration_list {\n                struct_ot [[l]]l_Deci4=#-not not [[_]$_Dlas]]\354_Deci4=xo,not not [[lasz]]l_Deci4=#-noto,not not [[lass_spes"
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
