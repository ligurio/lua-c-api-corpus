declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 5
                    message: "[]]ll=2,o,ndd[[[]]lz=\3542,o,nd[[[]]l\354=rs,o,n[[[]]\354\354=b,o,nndd[[[]]lz=\3542,o,nd[[[]]l\354=rs,ond[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 5
                    expression: 5
                    message: "]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]eertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]eertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[i^r[[]]ertyp=3i^r[[=3i^r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 8
                    message: "\242]]\354\354\354\354_Aligtions {\nand_quali{07370955161i*00000000080000004674000800514407370955161i*000000000800000000000000000000020,00000000000000000515*00955161i*000000000800000000000000000000020,61i*000000000800000000000000000000020,000i*0000000008000000000000000000000          "
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      array_declarator {
        qualifiers_list {
          qualifiers_list {
            type_qualifier {
              keyword_atomic: 0
            }
          }
        }
      }
    }
    declarators {
      pointer_declarator {
        declarator {
          array_declarator {
            qualifiers_list {
              qualifiers_list {
                type_qualifier {
                  keyword_atomic: 0
                }
              }
            }
          }
        }
      }
    }
  }
}
