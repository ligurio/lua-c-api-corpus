declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 4
                    message: ";;]]l=-2ll l  =-0ll  t [[]]l=-2ll l  =-2ll t [[t]]l=-2ll l  =-0ll  t [[t]]l=-2ll l =-2ll t [[ts"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 4
                    message: ";;]]l=-2ll l  =-0ll  t [[]]l=-2ll l  =-2ll t [[t]]l=-2ll l  =-0ll  t [[t]]l=-2ll l =-2ll t [[ts"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 4
                    message: ":]]\354\354l=qual  goto\n i4  \t\354l=qual  goto\n i4  \t\354rs50=nd_0  goto\n i4  goto\n i \354marati\354\354z=\354l  goto\n i4 inline\354=nd_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i \354maled\354\354\354z=\354l  goto\n i4 inline\354=nd_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i et [[["
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 4
                    message: ";;]]l=-2ll l  =-0ll  t [[]]l=-2ll l  =-2ll t [[t]]l=-2ll l  =-0ll  t [[t]]l=-2ll l =-2ll t [[ts"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 4
                    message: ";;]]l=-2ll l  =-0ll  t [[]]l=-2ll l  =-2ll t [[t]]l=-2ll l  =-0ll  t [[t]]l=-2ll l =-2ll t [[ts"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 8
                    expression: 3
                    message: "!!]];\354_Alignas{\n[[]];\354=0-\275a_a,{\n[[!!]];\354=0-\275a_externa,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-n,{\n[[[05*!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0E161]];l=0-\275,{\n[[[]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[externa,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-n,{\n[[[05*!!]];\354=0-\275a_a,{\n[[[0E161]];l=vol,{\n[[[0E161]];l=0-\275,{\n[[[]_Thread_local[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\277,{\n[[[09E161E161]];l=0-\275,{\n[[[05*!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0E161]];l=0-\275,_A[[[05*0ers[0E]];l=0-\275,{\n[[=0-\275a_a,[0E161]];l=0-\275,{\n[[[0E16[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-t,{\n[[[0E161]];l=0-\275,{\n[[[05*0ers[0E]];l=0-\275,{\n[[[05*0er[05*0ers"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
