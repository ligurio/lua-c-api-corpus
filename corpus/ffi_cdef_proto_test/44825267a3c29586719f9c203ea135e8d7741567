declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 7
                    expression: 9
                    message: "\242]:OOOOOOOO([[!s]]:\354n[[\r= [\r[[M= [s]]:n[[[\rs]]:ln[[\r= [[!s]]:\354n[[\r= [[!s]]:n[[\r[[M= [[!s]]:n[[\r- ]] [[[]]\r\014[[[\rs]]:ln[[\r= [[!s]]:n[[(-[[[]].\354[[c4]]:n[[boolgl:n[[\r[[!s]]:\354n[[\r= [[!s]]:n[[!s]]:n[[\r- ]] [[[]]\r\354[[[\rs]]:ln[[\r= [[!s]]:\354n[[\r= [[!s]]:n[[\r[[M= [[!s]]:n[[\r- ]] [[[]]\r\354[[[\rs]]:ln[[\r= [[!s]]:n[[(     static_assertc4]]:n[[iAlgl   [[  ]]:n000   [[:\354n[[*= [[!s]]:n[[\r[[M= [[!s]]:n[[\r00000000000000000000000000"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 9
                    expression: 7
                    message: "go]\354\354[[\rs]]:\354n[[\r&][[#s]]:\354n[[M= [[!s]]:n[[[]]\354[[![\rs]]:\354n[[&= ([!s]]:n[[\r[[M= [[!s]]:n[[\r- ]] [[[]]Ml1[[[\rs]]:ln[[\r= [[!s]]:n[[(-!s]]:n[[\r[[M= [[!s]]:press  funct "
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
