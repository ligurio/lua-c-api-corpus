declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 10
                    expression: 3
                    message: "D]]\354\354\354=\354 goto\n i1  goto\n _ui1 goto\n l   goto\n alal  goto\n i0  goto i1  goto\n _   goto\n i et [[[[[[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 3
                    message: "D]]\354\354\354=\354 goto\n i1  goto\n _ui1 goto\n l   goto\n alal  goto\n i0  goto i1  goto\n _   goto\n i et [[[[[[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 4
                    message: "i>[[f$$]]go=#i>=#i>#i>=#i>[[f$]Name0i>#i>=#i>#i>=#i>[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 2
                    message: "!]];\354=0-BBBBB{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[{\n[[!!]];,{\n[[[0955E161E161]];l=0-\275,{\n[{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{B[[[0955E161E161]];l=[[[0955E161E161]];l=[[05*ers"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
  }
  attr_spec_seq {
    keyword_nodiscard: 0
  }
}
