declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 4
                    message: "]] function f() fu[[3"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "U]] f ,x,mx.\n mx.\n ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi,  ffi,\n ffmx.\n ffi, ffi, f ,x,ffi, ffi, f ,m,x,ffi, ffi, f ,x,m,x,mx.\n ffi,  ffi,\n ffmfi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi,  ffi,\n ffmx.\n ffi, ffi, f ,x,ffi,fi, ffi, f ,Ax,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,xx.\n ffi, ffi, f ,Ax,ffi, ffi, f ,x,mx.x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,xx.\n ffi, ffi, f ,Ax,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi, x,mx.\n ffi, f=fi, f ,xm,i,  ffi,  ffi,\n i ffi -i -i"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
