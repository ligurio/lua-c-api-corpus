declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: ""
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 7
                    expression: 7
                    message: "]]l=ty<f andl=ty<f and[[f]]l=t_Deciy<f and[[f]]l=ty<P and[[]]l=ty<f and[[f]]l=ty<f and[[f]]l=ty<P [[f]]l=ty<f and[[f]]l=ty<P and[[]]l=ty<ty<f and[[f]]l=ty<P and[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 7
                    message: "]]l=ty<f andl=ty<f and[[f]]l=t_Deciy<f and[[f]]l=ty<P and[[]]l=ty<f and[[f]]l=ty<f and[[f]]l=ty<P [[f]]l=ty<f and[[f]]l=ty<P and[[]]l=ty<ty<f and[[f]]l=ty<P and[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 7
                    expression: 25607
                    message: "?]]    function f()    fu[[]?]]    function f()     function f() function f() function f()    fu[[]?]]   fu[[]?]]    function f()     function f() function f() function f()    fu()        function f() function f() function f()        function f() function f()    fur[[=3i) (u"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 7
                    expression: 7
                    message: "]]l=ty<f andl=ty<f and[[f]]l=t_Deciy<f and[[f]]l=ty<P and[[]]l=ty<f and[[f]]l=ty<f and[[f]]l=ty<P [[f]]l=ty<f and[[f]]l=ty<P and[[]]l=ty<ty<f and[[f]]l=ty<P and[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
