declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 0
                    message: "g[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,Jz0=[[ ]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,u=[[]]A,z,u=g[[  "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 3
                    message: "g[[]]A,z,u=g[[]]A,z,u=[[]]A,j_=[[ ]]A,Jz0=[[ ]]A,j,_=[[g[[]]A,z,u=[[]]A,u=[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,Jz0=[[ ]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[  "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 0
                    message: "g[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,Jz0=[[ ]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,u=[[]]A,z,u=g[[  "
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 3
                    message: ";]]\"\\\"6\217\217\217urGo\217\217\217\217\217copp\217\217\217\217\217\217\217\217\217\2175\217\217fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\217\217\217\217\217\217\217\217{\217\217\217\217\217\217\217\217\217\217\217\217_Noreturn\217U\217\217\217\217\217\217\217\217{qp\217pppp\204\\u{ddddd}_s_A\217\217\217\217\217\217\217\217\2179\217\217\217p0\217\217\217\217{wp\217\217wh\217\217\217\217Name5\377\377\377\217\217\217\217U|@\217\217\217\217\217\217{\217\217p\217\217\217\217s\\u{ddddd}_s u{d}_s\\u{dd}{d}\217p\217\217\217\217\217\217\217\217\217\2173\217\217ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\217\217\217\217\217\217\217\217{\217\217\217\217\217\217\217\217\217\217\217\217\217\217\217\217\217\217\217\217:\217U\217\217\217\217\217\217*\217{qp\217pppp\204\\u{ddddd}_s_A\217\217\217\217\217bool\217\217\217\217\217\217\217\217\217\217{wp\217\217\217\217ex\217\217\217\217\217\217\217\217\217\217\217\217\217\217U|\217\217\217\217\217\217\217{\217\217p\217\217\217\217s\\u{ddddd}_s u{d}_s\\u{dd}{d}\217\217\217urGolist {\n      qualifiers_list {%        quali\217\217K\000\217\217\217\217Ceu{__s"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
