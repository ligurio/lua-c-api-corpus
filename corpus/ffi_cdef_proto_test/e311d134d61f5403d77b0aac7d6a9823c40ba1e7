declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 6
                    expression: 6
                    message: "#]]z=\354p,nia,nil,nil,inil,ng,nil,nil ,n,nil,ngz,nil,nil ,nil,nil,ni,ni[[**e@"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 6
                    expression: 0
                    message: "U]] f ,x,mx.loca.\n ffi, ffi. f ,x,mx._Affi, ffi, fffi, ffi. f ,x,mx.\n ffi, ffi  ,x,mx.\n _Alignas, ffi. f ,x,mx.\n ffi, ffi, fffi, ffi. f ,x,mx.\n ffi, ffi ,x,mx.\n ffi, ffi, fffi, ffi. f ,x, Name0ffi,mx.\n fff ,x,ffi, ffi. f , f ,x,mx.\n ffi,  ffmfor0mx.\n ffi, ffdeclarators_and_initializers,f,x,ffi, ffi. f ,                    messi, f ,x,ffi, ffi. f , f ,x,mx.  ffi,  ffi,\n ffi ffi -i -i"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 3
                    message: "*]]ons{[A]=lnst{[d]=lis }\n  [{[eost{[A]=lnst{[d]=lis }\n  [{[eonst{[O]=lnst,[\242]=lons }\n  [{[\242]=t{[g]=   e"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
