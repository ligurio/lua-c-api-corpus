declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          function_specifier {
            keyword_inline: 10
          }
        }
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3173376
                    expression: 3173376
                    message: "c]]\354erist {\n   ############typede2{\n   #############################fier*s_l+ist {\n  }\n     }\n }\n   ci[[[[#F"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    expression: 3
                    message: "c]]\354erist {\n   ############typede2{\n   ##############typede2{\n   ##############\001\000\000\000\000\000\000\000t {\n {\n\n     }\n }\n   ci[[[[#F"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 3
                    message: "c]]\354ers_fis_list {\n   ############typede2{\n   #############################fier*s_l+ist {\n  }\n     }\n }\n   ci[[[[#F"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 3
                    message: "c]]\354ers_fis_list {\n   ############typede2{\n   #############################fier*s_l+ist {\n  }\n     }\n }\n   ci[[[[#F"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 0
                    message: "c]]\354ers_fis_list {\n   ############typede2{\n   #############################fier*s_l+ist {\n   }\n    }\n  }\n  decl speci[[[[#F"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
