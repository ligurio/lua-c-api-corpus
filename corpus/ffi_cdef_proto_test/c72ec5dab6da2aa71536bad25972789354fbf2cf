declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    expression: 0
                    message: "]]go=#i>=#i>#i>=#i>=#i>#i>=#i>[[f$]]>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#ii>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=#i>[[f$]>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 0
                    message: "]]go=#i>=#i>#i>=#i>=#i>#i>=#i>[[f$]]>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#ii>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=#i>[[f$]>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 0
                    message: "]]er=3i^3i^r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "\242]].\354\354ld_2ti2tico{\n\354\354_Dec=\354\354\354\354\2272,\354*\377\377s_list {\n      q\354=false1{\354\354=\354\354urnist {\n      q\354=l\354\354\354\354iers_list {\n    Name5=\354l\354\354\2272,  qe=_list {\n      q\354=\354p0\354\354thread_localst {\n        }\n      }\n  \n        }\n      }\n    }\n,\377\377\377\377ist {\n  OOOOOO=falsetypes_li  }\n      }\n    }\n[[[\354"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
