declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 0
                    message: "\242]]\354l\354\354st {\n       #qrs_list {fq_Alig       }{\n    ist {faltyp8      }\n      }\n    }l\354\354\354\354st {\n       #qrs_list {false\n        }{\n  i {false\n     }  }\n    }\n    spato[[[st {falsez     l "
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 0
                    message: "]]\377=3i^[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 2
                    message: "\"]]l\354\354=d_2ticovolatile\354\354\354{\354\354\354z\354\354\356=\354ers {\n    declarators {\n      e4    {\354z\354\354\354=\354\354l\354\2272,\354\377\377\377s_list {\n    \354\3541\354OOOOO       }\n      }\n  \n        }\n      }\n    }`[[[\354"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
