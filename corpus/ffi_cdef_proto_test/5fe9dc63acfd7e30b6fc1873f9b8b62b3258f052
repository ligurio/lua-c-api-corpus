declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 2
                    message: "\242]]goiidXXXXXoooo\354\354{\n ttttal2\354=zwh\354\2272,\354\3771\377s_list {\n      q\354=\354H\354l28{\n  q\354=\354pecerx1ex,\354\377\377\377s_list {  const=x0ecerlon2,\354\377V21{\n     \n       q\354=Y466dXXXXXoooo\354s_list {          qa=\354pecextern,l\377  }      }\n      }\n    }\n,LtN{\354z0\354\354=_Alig2,\354\377uns_list {\n      q\354=\354,\354\377ts    }\n  \n     }      }\n    }\n[[QQ6"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]]\354\354l=qual  goto\n i   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i \354maledc8ou=\354l  goto\n il  goto\n i0  goto\n i4   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i \354maledwhou=\354l  goto\n i4 inlc000=nd_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i et [[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "]]\354\354l=qual  goto\n i   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i \354maledc8ou=\354l  goto\n il  goto\n i0  goto\n i4   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i \354maledwhou=\354l  goto\n i4 inlc000=nd_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i et [[["
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
  }
}
