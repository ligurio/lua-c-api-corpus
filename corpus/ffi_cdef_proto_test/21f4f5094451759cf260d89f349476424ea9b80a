declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 7
                    expression: 47872
                    message: "]]l{c<=la<=l<=ieso<=iea<=a<=c<=la<=l<=eso<=ioa<=a<=l<=ieso<=il<=ieso<=ie"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 0
                    message: "?]]    function f()    fu[[]]e=3i^r[[]]ertyp=3i^r[[=3i^ype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^i^r[[]]e=3i^r[[]nction f()(   fun?]]    function f()    fu[[]]e=3i^r[[]]ertyp=3i^r[[=3i^ype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^i^r    function f()    mu[[]]e=3i^r[[]]ertyp=3i^r[[=3i^[]]ertyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^i^r[[]]e=3i^r[[]nction f()(   fun?]]    function f()    fu[[]]e=3i^r[[]]ertyp=3i^r[[=3i^ype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[^r[[]]e=3i^i^r[[]ction f() ([[]cu"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 3
                    message: "?]]    function f()    fu[[]]e=3i^r[[]]ertyp=3i^r[[=3i^ype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^i^r[[]]e=3i^r[[]nction f()(   fun?]]    function f()    fu[[]]e=3i^r[[]]ertyp=3i^r[[=3i^ype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^i^r    function f()    fu[[]]e=3i^r[[]]ertyp=3i^r[[=3i^[]]ertyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^i^r[[]]e=3i^r[[]nction f()(   fun?]]    function f()    fu[[]]e=3i^r[[]]ertyp=3i^r[[=3i^ype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[^r[[]]e=3i^i^r[[]ction f() ([[]cu"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
