declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "U]] f ,x,mx.\n mx.\n ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi,mx.\n mx.\n ffi, f ,x,mx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi,mx.\n mx.\ndeclarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            union_type {\n              struct_declaration_list {\n                stru ffi, ffi,  ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,ff, ffi, f ,x,ffi, ffi, f,  f f ,x,ffi,fi -ict_declaration_list {\n                  static_assertion {\n                    static_assert_2: 0\n                    expression: 0\n           -          message: \"U]] f ,x,mx.\\n mx.\\n ffi, ffi, f ,x,mx.\\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\\n ffi, ffi,mx.\\n mx.\\n ffi, f ,x,mx.\\n ffi, ffi, f ,x,ffi, ffi, f ,ix,mx.\\n ffi, ffi,mx.\\n mx.\\n ffi, ffi,  ffi, ffi, f ,x,mx.\\n ffi, ffi, f ,x,ff, ffi, f ,x,ffi, ffi, f,  f f ,x,ffi,fi -i -i\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
