declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 3
                    message: "\005   struct_declaration_list {\n                  static_assertio      static_assert_              expression: 0\n                    messafe: \"]]c=not t[[\"\n     age: \"]]or[[\"\n   c_assert_2: 0\n                    expression: 0\n                    message: \"]]c=not t[[\"\n                      s"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 4
                    message: "\005   struct_declaration_list {\n                  static_assertion {\n                    static_assert_              expression: 0\n                    messafe: \"]]c=not t[[\"\n     age: \"]]or[[\"\n   c_assert_2: 0\n                    expression: 0\n                    message: \"]]c=not t[[\"\n                      s"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 3
                    message: "\005   struct_declaration_list {\n                  static_assertion {\n                    static_assert_              expression: 0\n                    messafe: \"]]c=not t[[\"\n     age: \"]]or[[\"\n   c_assert_2: 0\n                    expression: 0\n                    message: \"]]c=not t[[\"\n                      s"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
        }
      }
    }
  }
}
