declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 3
                    message: ";]]\"\\\"s u{d}externpp~\\u{ddddd}_s_A*\217\217thread_loc\377\377\377\377\377Name7\377\377\377q0\377\377\377\377\377\377als\\u{ddddd}_s u{d}_s\\u{dd}{d\203pName\217s\\u{ddddd}_s u{d}_scu{dd_Aligs u{d}_scu{dd}j2\217s\\u{ddddd}_Aeu{_s"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255"
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  bit_field {
                    name {
                      name: ";"
                      num: 0
                    }
                    width: 0
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 1
                    expression: 1
                    message: "]]~=V[[]]~=V[[]]~=V[[]]~=V[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 1
                    message: "]]~=V[[]]~=V[[]]~=V[[]]~=V[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 1
                    message: "]]~=V[[]]~=V[[]]~=V[[]]~=V[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 4
                    message: "]]~=V[[]]~=V[[]]~=V[[]]~=V[["
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 1
                    message: "]]~=V[[]]~=V[[]]~=V[[]]~=V[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 1
                    message: "]]~=V[[]]~=V[[]]~=V[[]]~=V[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 1
                    expression: 1
                    message: "]]~=V[[]]~=V[[]]~=V[[]]~=V[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 1
                    message: "]]~=V[[]]~=V[[]]~=V[[]]~=V[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
