declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: ""
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 3
                    message: ""
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 3
                    message: "?$]]\354_Deci4=\354-Ca,not not [[_]$_Deci4_clas]]\354=l-\275a,not not [[[[lass_sp@s)]]\354_Deci4=E-\275a,not not [[_eci4_clas]]eci4=\275a,not not [[lass_spes"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 3
                    message: "?$]]\354_Deci4=\354-Ca,not not [[_]$_Deci4_clas]]\354=l-\275a,not not [[[[lass_sp@s)]]\354_Deci4=E-\275a,not not [[_eci4_clas]]eci4=\275a,not not [[lass_spes"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 3
                    message: "?$]]\354_Deci4=\354-Ca,not _Alig[_]$_Deci4_clas]]\354=l-\275a,not not [[[[lass_sp@s)]]\354_Deci4=E-\275a,not not [[_eci4_clas]]eci4=\275a,not not [[lass_spes"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            typedef_type {
            }
          }
        }
        specifiers_list {
          storage_class_specifier {
            storage_class_typedef: 3328
          }
        }
      }
    }
  }
}
