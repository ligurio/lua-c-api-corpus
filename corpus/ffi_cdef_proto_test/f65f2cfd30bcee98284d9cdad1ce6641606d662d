declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 2
                    message: "\242]]go_Alig\377pe {i {\n  f {\n  f_type {i {\n  f {\n  f{\n  ffi {\n  ffi{\n\377\377\377\377er {\n            ari_type {i {\n i {\n  ffi{\n  ffitic_type {i {\n  f {\n  f_mype {i {\n  f {\n  f{\n  ff\207 {\n  ffi{\n  ffi {\n \377\3772\377\377\377\377er {\n            arithmetic_type {i {\n  f {\n  f{\n i {\n  f {\n void0er {\n            arithmetic_type {i_type {i {\n  f {\n  f{\n  fsprithmetic_type {i {\n  f {\n  f{\n  ffi {\n  ffi{-  ffitic_type {i {\n  f {\n  f_type {i {\n  f {\n \n  f {\n  f{\n   f_type {i {\n  f {\n \n  f {\n  f{\n  ffi {\n  ithmetic_type {i {\n  f {\n  f{\n  ffi {\n  ffi{-  ff_type {i {\n  f {\n \n  f {\n  f{\n   f_type {i {\n  f {\n \n  f {\n  f{\n  ffi {\n  ffi{       arithmetiion_list {\n           \n  ffi {\n  ffi{\n  ffi {\n pe {i {\n  f {\n  f{{\n  f_type {i000000 { {\n  ffi"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
