declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              attr_spec_seq {
              }
              struct_declaration_list {
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 3
                    message: "a]]constw=\354eci[co or r1\377]a\354\354=pprs_lii[\377  or {}>\377r]\377[[[~f"
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 67108864
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 0
                    message: "a]]constw=\354eci[co or r1\377]a\354\354=pprs_lii[\377  or {}>\377r]\377[[[~f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "a]]constw=\354eci[co or r1\377]a\354\354=pprs_lii[\377  or {}>\377r]\377[[[~f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "a]]constw=\354eci[co or r1\377]a\354\354=pprs_lii[\377  or {}>\377r]\377[[[~f"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
