declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "c]]\354Name3itia\354\354\354\354\354:lifiere3irs_list {\n   ############\377\377\377:\377iers_and_qualiflist {\n   #############################fier*s_l+ist {\n        }\n      }\n    }\n    speci[[[[[[    }\n                }\n      a\nF"
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 805306368
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "c]]\354Name3itia\354\354\354\354\354:lifiere3irs_list {\n   ############\377\377\377:\377iers_and_qualiflist {\n   #############################fier*s_l+ist {\n        }\n      }\n    }\n    speci[[[[[[    }\n                }\n      a\nF"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "\242]]\354\354\354\354d_2ticonst\354\354\354\354\354\354\354\354{\n \354\354\354\354z\354\354\354=\354\354\354\354\2272,\354\377\377\377s_list {\n      q\354=\354\354\354\354\3541{\n \354\354\354\354z\354\354\354=\354\354\354\354\2272,\354\377;\377\377s_list {\n      q\354=\354\354\354\354\354+1,\354\2272,\354\377\377\377s_list {\n      q\354=\354\354\354\354\3541,\354\377st{\n      q\354=\354\354\354\354\3541,\354\377t\354\354\354\354\354\377\377st {\n        }\n      }\n  \n        }\n      }\n    }\n,\354\377\377\377bool\377\377st {\354z\354\354\354=\354\344\354\354\2272,\354\377\377\377s_list {\n      q\354=\354\354\354\354\3541,\354\377t\354\354\354\354\354\377\377st {\n        }\n      }\n  \n        }\n      }\n    }\n[[[\354"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n%\n\n\n\n\n\n\n\n\n\nAlignas\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\ngoto0\n\n\n\n\n\n\n\n\n\n\n\n }        specifiers_l   \n\n"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4294901760
                    expression: 0
                    message: "c]]\354Name3itia\354\354\354\354\354:lifiere3irs_list {\n   ############\377\377\377:\377iers_and_qualiflist {\n   #############################fier*s_l+ist {\n        }\n      }\n    }\n    speci[[[[[[    }\n                }\n      a\nF"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
