declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "\242]]\354\354\354\354n\354\354\354\354tions {\n{\n   4674446744073709551615-specif615*00000,-0000-0000000000000010000000000000000010000000000000000000000,00000-00000000000000184467440446744073709551615-specif615*00000,-0000-0000000000000010000000000000000000000,00000-051615*0000000000009551615*000000000000000184467440446744073709551615-specifiers_0000000009551615*00000,15-specif615*00000,0000000000000000184467440446744073709551615-specif615*0000,-0000-000000000000000,00000-000000000000001000000000000,00000-0000000000000018446744044674407370000000000,00000-0000000000000018446744044674407300000184467440446744073709551615-specifiers_0000000009551615*00000,00000-000000000000001000000000,00000-000000000000001844674404467440737095551615-specif615*0000,-0000-000000000000000,00000-0000000000000000010000000000000000000000,00000-000000000000001844674404467709551615-specif615*00000,00000-0000000000000010000000000000000000000,00000-000000000000000000,00000-00000000000000100000000010000000000000000000000,00000-00000000000000184467440446744073709551615-specif615*00000,-0000-0000000000000010000000000000000000000,00000-051615*0000000000009551615*000000000000000184467440446744073709551615-specifiers_0000000009551615*00000,15-specif615*00000,0000000000000000000,00000-000000000000001844674404467440737     noeclarat0009551615*000000i"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
      }
    }
  }
}
