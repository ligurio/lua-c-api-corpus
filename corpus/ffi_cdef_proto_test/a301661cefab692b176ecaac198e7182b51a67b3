declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 3
                    message: "\242]]C\354\354\354d_2ticonst\354\354\354\354\354\354\354{\n \354\354\354,z\354\354\354=\354_B\354\2272,\354\377\3770s_list {\n      q\354=false1{\n \354\354\354=\354\354\354\354\227 {\n      q\354=\354\354\354\354\354i {\n    \354z\354\354\354=\354\354\354_A2,  q\354=_list {\n      q\354=\354.l2\3541,\354\377t\354\3542typeddf{\n        }\n      }\n  \n        }\n      }\n    }\n,#\377_Alignasst {\354z\354\354P=\354\354\354\354\2272,\354\377\377ression: 0\n                    message: \"\\242]]\\354\\354\\354\\354d\\377\\3776\\354\\354\\354{\\n \\354ex\\354z\\354\\354l=\\354\\354\\354\\354\\2272,s_list {\\n      q\\354=false1{st {\\n      q\\354=\\3541\\354\\354\\3541,\\354\\377\\377JNconstst {\\354z\\354\\354\\354=\\354\\354\\354_Decimal3_list {\\n   \\3541,\\354\\377t\\354OOOOOOOO {\\n        }\\n      }\\n  \\n        }\\n     } \\n    }\\n,\\354\\354t_declarst {\\354z\\354\\354P=\\354\\354\\354\\354\\2272,\\354\\377\\377\\377s_li  }\\n      }\\n    }\\n[[[ \"\n                  }\n                }\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_1: 0\n                    expression: 2\n                    message: \"\\342]]l\\354B=s_aextern,n_a,n[[[]]F2\\354[[[]]ntt0=s_[[[[]]F\\354=\\354s_a,n[[[[\"\n                  }\n                }\n                struct_d\377s_li  }\n      }\n    }\n[[[7"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
