declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 1
                    expression: 0
                    message: "[[[]]local   c =[[]000"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 2
                    message: "?]]  function f()r[[[]]ertyp=[[]n"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 0
                    message: "\005   ste: \"]]c=not t[[\"\n                  }\n                }\n                structic_assertion {\n                    static_assert_2: 6\n                    expression: 4\n                    message: \"]]or[[\"\n                  }\n                }\n                struct_declaration_lisName0                 static_assertion {             static_assge: \"]]c=not t[[\"       static_asserti_assertion {\n                    static_assert_2: 6\n                    expression: 4\n                    message: \"]]or[[\"\n                  }\nsage: \"]]c=not t[[\"\n                  }{\n                    s"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
