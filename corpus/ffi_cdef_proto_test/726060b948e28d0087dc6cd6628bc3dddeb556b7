declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 1
                    message: "/]]\377, Nae3,s_  ,cm=[[ "
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 3
                    message: "&]]z.oz=e or _F[[fa]]n0.z=er or _F[[f1]]n0.z=er or _F[[fh]]n0.z=r or _F[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 3
                    message: "&]]z.oz=e or _F[[fa]]n0.z=er or _F[[f1]]n0.z=er or _F[[fh]]n0.z=r or _F[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 536870912
                    expression: 0
                    message: "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndeclarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            union_type {\n              struct_declaration_list {\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_2: 0\n                    expression: 4\n                    message: \"]]l=not not[[\"\n          \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n        }\n                }\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_1: 1\n                    expression: 0\n                    mess_Alig0]]and[[\"\n                  }\n                }\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_2: 0\n                    expression: 4\n                    message: \"]]l=not not[[\"\n                  }\n                }\n                struct_declaration_list {\n                  static_assertion {\n                    static_\n\nassert_1: 1\n                   \n\n\n expression: 0\n  \n               "
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
