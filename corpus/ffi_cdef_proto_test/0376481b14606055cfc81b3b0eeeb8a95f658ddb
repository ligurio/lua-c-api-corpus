declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 3
                    message: "L]]::x::::l::a[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "V]]::xx::::ec::::decl1::a[[t:"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 4
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 0
                    message: "]o]dtatic_assertion {\n                    static_assert_1: 5\n                    expression: 5\n                    message: \"][]]eertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=2i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r p[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "V]]::xx::::ec::::decl1::a[[t:"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 1
                    message: "\242]]::xxxxyx::::dec1::\354=L\354::xxxxxy::::dxxL1::ammal12=ypx0::xxyx:::cd:"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
