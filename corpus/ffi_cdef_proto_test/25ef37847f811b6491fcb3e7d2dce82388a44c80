declarations {
  specifiers_and_qualifiers_list {
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          storage_class_specifier {
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      declarator_parentheses {
        declarator {
          declarator_parentheses {
            declarator {
              function_declarator {
                noptr_declarator {
                }
                identifiers_list {
                  identifiers {
                    name: ""
                    num: 0
                  }
                }
              }
            }
          }
        }
      }
    }
    declarators {
      declarator_parentheses {
        declarator {
          declarator_parentheses {
            declarator {
              function_declarator {
                noptr_declarator {
                }
                identifiers_list {
                  identifiers {
                    name: "\326"
                    num: 0
                  }
                }
                attr_spec_seq {
                  keyword_nodiscard: -1
                }
              }
            }
          }
        }
      }
    }
    declarators {
      declarator_parentheses {
        declarator {
          declarator_parentheses {
            declarator {
              declarator_parentheses {
                declarator {
                  function_declarator {
                    noptr_declarator {
                    }
                    identifiers_list {
                      identifiers {
                        name: ""
                        num: 0
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    declarators {
      declarator_parentheses {
        declarator {
          pointer_declarator {
            attr_spec_seq {
              keyword_deprecated: 1024
            }
            declarator {
            }
          }
        }
      }
    }
  }
}
