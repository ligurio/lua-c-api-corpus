declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "\242]]\354l\354\354st {\n       #qrs_list {fq_Alig       }{\n    ist {faltyp8      }\n      }\n    }l\354\354\354\354st {\n       #qrs_list {false\n        }{\n  i {false\n     }  }\n    }\n    spato[[[st {falsez     l "
                  }
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]]\354\354l=qual  goto\n i   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i \354maled\354dou=\354l  goto\n i4 inline\354=_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i \354maled\354dou=\354l  goto\n i4 inlc000=nd_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i et [[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "]]\354\354l=qual  goto\n i   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i \354maled\354dou=\354l  goto\n i4 inline\354=_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i \354maled\354dou=\354l  goto\n i4 inlc000=nd_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i et [[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
