declarations {
  specifiers_and_qualifiers_list {
  }
  declarators_and_initializers {
    initializers {
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: "???????????????????????????????????????"
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    expression: 0
                    message: "???????????????????????????????????????"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              attr_spec_seq {
                keyword_unsequenced: 0
              }
              name {
                name: "???????????????????????????????????????"
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 0
                    message: ",]]eclat{[\242]=j,t=it  }\n  [{[W]=sb,t=larat{[h]=tttt,t=it  }"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_restrict: 4608
          }
        }
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: "???????????????????????????????????????"
                num: 0
              }
              struct_declaration_list {
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    initializers {
    }
  }
}
