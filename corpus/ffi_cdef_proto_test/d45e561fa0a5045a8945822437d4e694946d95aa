declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 7
                    expression: 7
                    message: "]]l=y<\377 and[[f`]]l=ty<P and[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              name {
                name: ""
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 0
                    message: "c]]\354:mmmmmmmmt {\n   #### #######\354d\354\354_t {\n   ########################fier*s_l+ist {c7       }\n      }\n    }\n   ecmmmmmmmmt {##########\354d\354\354_t {\n   ######################fier*s_l+ist {\n        }\n      }\n    }\n   ec[[[[[}######F"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "c]]\354:mmmmmmmmt {\n   #### #######\354d\354\354_t {\n   ########################fier*s_l+ist {c6       }\n      }\n    }\n   eci[[[[[[]]\354:mmmt {\n   #### #######el\354\354_t {\n   ########################fier*s_l+ist {c3       }\n      }\n    }SintSi6[mmmmmmmmt {######### {\n   #############################fier*s_l+ist#F"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  attr_spec_seq {
    keyword_reproducible: 0
  }
}
