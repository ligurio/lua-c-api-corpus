declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 9
                    expression: 8
                    message: "[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\243\223\220declara       me3\\220X           me \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[cal   c    t]local   c    t0[[[[cal   c    t0  t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]a   }\n       []]local   c    t0[[[[[]]local   c    t0[[[[cal   c    t]local   c    t0[[[[cal   c    t0  t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]a   }\n        0 0   "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]]go=#i>=#i>#i>=[[f$$]]go=##i>=#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#ii>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[f$]>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>##i>=#i>i>=#i>#i>=#i>[[f>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
