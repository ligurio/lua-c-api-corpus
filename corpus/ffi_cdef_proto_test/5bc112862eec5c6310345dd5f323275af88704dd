declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 9
                    expression: 0
                    message: "?]]    function f()    fu[[]?]]    fun;\n;\n  _Static_assert(6), #function f() function f()    fu[[]?]]    function f()        function f() function f()    fur[[=3i^pe=n f()"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 822083810
                    expression: 8
                    message: " ]                express]]go=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>i>=#i>#i>=#i>[[f$]>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#ii>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#i>#i>#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]gyp=3i^r[[=3i]~6=,l[[i]]~=6,l[[,i]]~=6,l[[i"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 3
                    message: "+]]\354\354\354v\354\354\354\354\354entheses {                          ame1   or { {\n                                ame1   or {\n e0   or {\n   eses {\n                     ame0   or {\n                       ame0   or {\n     ame1   or { {\n                                ame1   or {\n e0   or {\n                 ame0   or {\n                                ame1   or {\n e0   or {\n              ame0   or {\n \n                     ame0   or {\n                           declarame0   or {\n         ntheses {eses {\n                     ame0   or {        ame0   or {\n                   declarame0   or {\n         ntheses {eses {\n                     ame0{\n   ame1   or {\n e0   or {\n   eses {\n                     ame0   or {\n                       ame0   or {\n     ame1   or { {\n                       ame0   or {\n                                ame1   or {\n e0   or {\n              ame0   or {\n \n                     ame0   or {\n                           declarame0   or {\n         ntheses {eses {\n                     ame0   or {        ame0   or {\n                   declarame0   or {\n         ntheses {eses {\n                     ame0   or {\n                       ame0   or {\n                                }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}                                                 }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}                       ame1   or {\n              }}}}}}}   }\n"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
