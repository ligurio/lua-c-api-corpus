declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: ""
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 4
                    message: "]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ert=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3i^ypei^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3i^ype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]*]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3i^r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 4
                    message: "]]e=3i^r[[]]ertyp=3i^r[[=r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3i^ype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3i^r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 2
                    message: "!{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[l=[[[0955E161E15]];l=0-\275,{\n[[[09]];l=0-\275,{\n[[[0955E1615E161E161]];l=0-\275,{\n[[BBBB{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[09]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[l=[[[0955E161E15]];l=0-\275,{\n[[[09]];l=0-\275,{\n[[[0955E1615E161E10955E161E15]];l=0-y,{\n[[[09]];l=0-\275,{\n[[[0955E1615E161E161]];l=0-\275,l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers61]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[09]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,J0[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[l=[[[0955E161E15]];l=0-\275,{\n[[[09]];l=0-\275,{\n[[[0955E1615E161E10955E161E15]];l=0-y,{\n[[[09]];l=0-\275,{\n[[[0955E1615E161E161]];l=0-\275,l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=[[[0955E161E15]];l=0-y,{\n[[[09]];l=0-\275,{\n[[[0955E1615E161E161]];a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E1610955E161E161]];l=[[05*ers"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          function_specifier {
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
      }
    }
  }
  declarators_and_initializers {
  }
}
