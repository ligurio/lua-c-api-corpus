declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          storage_class_specifier {
            storage_class_auto: 4
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 5
                    expression: 0
                    message: "]]local  c t[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 3
                    message: "]] function f()r[[]"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 3
                    message: "]]c[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 5
                    expression: 4
                    message: "[]]  ff{\n fffi -\n ffi -\n  fi {\n  ffi -\n\n -\n ffi -\nfi -\n ffi -  ffi -*      "
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "\242]]onst{[\242]=lnslisuconst  }\n  [{[\242]=t{[\242]=lisuconst  }\n  [{[econst{[\242]=l\n  [{[econ\242]=l\n  [{[econst{[\242]=lnst,[\242]=lisuconst  }\n  [{[d]=t{[\242]=lisuconst  }\n  [{[\372\372\372onst{[\242]=lnst{[\242]=lisuconst  }\n  [{[econst{[\242]=lnst,[\242]=lisuconst  }\n  [{[\242]=t{[2]=lisuconst  }\n  [{[ecost{[\242]=lnst,[\242]=lisuconst  }\n  [{[\242]=t{[\242]=li{[\242]=lisuconst  }\n  [{[econst{[\242]=l\n  [{[econst{[\242]=lnst,[\242]=lisuconst  }\n  [{[d]=t{[\242]=lisuconst  }\n  [{[\372\372\372onst{[\242]=lnst{[\242]=lisuconst  }\n  [{[econst{[\242]=lnst,[\242]=lisuconst  }\n  [{[\242]=t{[\242]=lisuconst  }\n  [{[\372\372\372\372\372\372ruet{[\242]=lisuations {\n  specifiers_and_qualifiers_list {\n   nst  }\n  }\n  [{[econst{[\242]=l\n  [{[econ [{[econst{[\242]=lnst,[\242]=lisuconst  }\n  [{[\242]=t{[\242]=\372\372\372\372\372\372\372econStonst{[\242]=lnst{[\242]=lisuconst  }\n  [{[econst{[\242]=lnst,[\242]=lisuconst  }\n  [{[\242]=t{[2]=ecifier {\n            union_type {\n              struct_declaration_list {  }\n  [{[econst{[0]=l\n  [{[e  [{[econst{[\242]=l\n  [{[econst{[\242]=lnst,[\242]=lisuconst  }\n  [{[d]=t{[\242]=lisuconst  }\n  [{[\372\372\372onst{[\242]=lnspecifiers_and_qualinst{[\242]=uconst  }\n  [{[econst{[0]=l\n t{[\242]=l\n  [{[econ [{[econ   tt{"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
