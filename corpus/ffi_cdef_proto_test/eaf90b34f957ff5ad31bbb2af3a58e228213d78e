declarations {
  attr_spec_seq {
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 8
                    message: "\037 specifiers_and_qualifiers_liurGo7n            attr_spec_seq declaratin        speci999union_999999999999999999999999ie   specifiers_and_qualifiers_list {ecifiers_act_declaration_lit                 rd_la99999999union_999999999999999999999999ie   specifiers_and_qualifiers_list {ecifiers_act_delaration_lit                 rd_la99999999union_9999999999999999999999eq declaratilarations {\n  specifiers_and_qualifiers_list {\n  }\n  declarators_and_initializers {\n    declarators {\n      function_declarator {\n        noptr_declarator {\n        }\n        parameters_list {\n          parameters {\n            parameters {\n              name {\n                name: \"\\377\\t\"\n                num: 0\n              }\n            }\n          }\n     999999ie   specifiers_and_qualifiers_list {ecifiers_act_declaration_lit                 rd_la99999999union_999999999999999999999999ie   specifiers_and_qualifiers_list {ecifiers_act_delaration_lit                 rd_la99999999union_999999999999999999999999i\n\n"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 36
                    expression: 4
                    message: "]]go=#i>=#i>#i>=[[f$$]]go=##i>=#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#ii>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[f$]>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[fi>#i>=[[f$$]]go=#i>=#ii>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[f$]>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 4
                    message: "]]go=#i>=#i>#i>=[[f$$]]go=##i>=#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#ii>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[f$]>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[fi>#i>=[[f$$]]go=#i>=#ii>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[f$]>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 4
                    message: "?z]]Name8i4=\354exc,not not [[_]$_Dla]]\354_Deci4=x,not not [[z]]Ai4=\354exc,not not [[_]$_Dla]]\t_Deci4=x,not not [[lexlex]?z]]i4=x,not not [[lexlex]?z]]l_Deci4=#-not not [[_]$_Dlas]]u_Deci4=xo,not not [[lassx]?z]]l_Deci4=#-noto,not not [[lass_spes"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
