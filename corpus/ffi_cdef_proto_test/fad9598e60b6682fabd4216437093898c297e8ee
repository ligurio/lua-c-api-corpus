declarations {
  attr_spec_seq {
    keyword_fallthrough: 0
    keyword_nodiscard_reason: 4
  }
}
declarations {
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 1
                    message: "]]a=[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 1
                    message: "]]~=[[]]~=[[]]~=[[]]~=[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 1
                    message: "]]~=[[]]~=[[]]~=[[]]~=[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              attr_spec_seq {
                keyword_maybe_unused: 0
                keyword_noreturn_2: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 1
                    message: "]]~=[[]]~=[[]]~=[[]]~=[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 1
                    message: "]]~=[[]]~=[[]]~=[[]]~=[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
