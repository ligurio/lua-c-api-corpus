declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 128
                    expression: 4
                    message: "\242]]lo[[\rs]]:\354n[[\r\r ]]\354\354[[\rs]]\354\354[[2\r.\r#]]\354\354[[\rs]]:\354n[[\rM ]]\354\354[[\rs]]\354\354[[2\r.\r\r   [[  [[[]]\354\354[[\rs]]:n[[in ]]\354r[[\rs]]\354_[[\rs]]\354n[[\r[ ]]\354\354[[\rs]]\354\354[[]]:\354n[[\r\r ]]\354\354_Aligl   [[  [[[]]\354\354[[\rs]]:n[[\r\r ]]\354\354[[2s_BitInt\r.\r\r   [[  [[[]]\354\354[[\rs]]:n[[\r\r ]]\354\354[[\rs]]\354\354_Aligl   [[  [[[]]\354\354[[\rs]]:n[[\r\r ]]\354\354[[\rs]]\354l[[\rs]]\354 [[  [[[]]\354\354[[\rs]]:n[[\r\r ]]\354\354[[\rs]]\354\354[[[  [[[]]_\354[[\rs]]:n[[\r\r ]]\354\354[[\rs]]\354\354_Aligl   [[  [[[]]\354\354[[\rs]]:n[[\r\r ]]\354\354[[\rs][[  [[[]]\354\354[[\r ]]\354\354[[\rs][[  [[[]]\354\354[[\rs]]:n[[\r\r ]]\354\354[[\rs]]\354\354_Aligl   [[  [[[]]l\354[[\rs]]:n[[\r\r ]]W\354[[\rs]]\354l[[\rs]]\354 [[  [[[]]\354\354[[\rs]]:n[[\r\r *\r ]]\354\354[[\rMs]]\354 [[  [[[]]\354\354[[\rs]]:n[[\r\r ]]\354\354[[\rs]]\354\354[[[  [[[]]_\354[[\rs]]:n[[\r\r ]]\354\354[[\rs]]\354\354_Aligl   [[  [[[]]\354\354[[\rs]]:n[[\r\r ]]\354\354[[\rs][[s]]\354\354_Aligl   [[  [[[]]\354\354[[\rs]]:n[[\r\r ]]\354\354[[\rs][[  [[[]]\354\354[[\rs]]:n[[\354_Aligl   [[  [[[]]\354\354[[\rs]]:n[[\r]l\354[[\rs]]:n[[\r\r ]]W\354[[\rs]]\354l[[\rs]]\354 [[  [[[]]\354\354[[\rs]]:n[[\r\r *\r ]]\354\354[[\rs]]\354_[[\rbbbbbbbbb[22S_Aligl"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 0
                    message: "!!]];\354=0-\275a_a,{\n[[]];\354=0-\275a_a,{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0E161]];l=0-\275,{\n[[[]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0E161]];l=0-\275a_a,{\n[[]];\354=0-\275a_a,{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*!!]];\354=0-\275a_a,{\n[[[0E105*0ers[0E]];l=0-\275,{\n[[=0-\275a_a,{\n[[]];\354=0-\275a_a,{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0E161]];l=0-\275,{\n[[[05*0ers[0E]];l=0-\275,{\n[[[05*0er[05*0ers"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
