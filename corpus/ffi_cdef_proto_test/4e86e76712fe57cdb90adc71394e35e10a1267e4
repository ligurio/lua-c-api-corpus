declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            atomic_type {
              atomic_type: 0
            }
          }
        }
        specifiers_list {
          alignment_specifier {
            alignment_specifier_Alignas: 255
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 9
                    message: "\242]]\354\354\354a\354\354=\354c\377<\377exter\377\377\377\377\377  or {}\n>   spe,A<\377er\377\n>   spe\377\377<\377er\377*\377\377\377>   spe,\377<\377er\377\n>   spe\377\377<\377er\377\377\377\377\377  or {}\n>  exter\377\377constor {}\n>\377\377\377\377<\377exe,\377goog\377\n>   spe\377\377<\377\n>   spe,\377<\377er\377\n>   spe\377\377<\377erz\254\377\377\377\377>   spe\377exter\377\377\377\377\377  or {}\n>   spe,\377\377  or {}\n>   spe,\377<\377er\377\n>   spe\377\377<\377er\377\377\377\377\377>   spe,\377<\377er\377\n>   spe/\377<\377or\377,\377.\377er\377\n>   spe\377\377<\377er\377\377\377\377\377  or {}\n>  exter\377\377const\377\377va\354\354\354\354\377\377\377\377v\377/v\377\377\377\377<\377ext>   spe\377\377<\377er\377\377\377\377\377  or {}\n>  exter\377\377{}\n>{}\n>\377\377\377\377<\377exter\377\377\377\377\377  or {}\n>   spe,\377\377  or {}\n>   spe,\377<\377er\377\n>   spe\377\377<\377er\377\377\377\377\377\377v\377case\377\377<\377ext>   spe\377\377<\377er\377\377\377\377\377  or {}\n>  exter\377\377{}\n>{}\n>\377\377\377\377<\377exter\377\377\377\377\377  or {}\n>   spe,\377<\377er\377\n>   spez\377<\377er\377\377\377\377\377>   spe,\377<\377e>   spe\377\377<\377er\377\377\377\377\377  or {}\n>  exter\377\377constor {}\n>\377\377\377\377<\377exter\377\377\377\377\377  or {}\n>   spe,\377<\377\377>   spe,\377goog\377\n>   spe\377\377<\377er\377else  or {}\n>  ex\377\n>   spe,\377<\377e\354\ns[[f"
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 11403264
                    expression: 3
                    message: "]]e=3i^r[[]]ertyp=3i^r[[]i^r[[]r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[[["
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
    }
    specifiers_and_qualifiers_list {
    }
    specifiers_and_qualifiers_list {
    }
    specifiers_and_qualifiers_list {
    }
    specifiers_and_qualifiers_list {
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_const: 4
            keyword_atomic: 0
          }
        }
        qualifiers_list {
          type_qualifier {
            keyword_const: 0
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
    }
  }
}
