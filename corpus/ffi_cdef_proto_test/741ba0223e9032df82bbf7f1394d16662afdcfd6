declarations {
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 7
                    message: "J]] while o do while   so do s[[J]] while o do while   so do s[[A-"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 0
                    message: "J]] while o do while   so do s[[J]] while o do while   so do s[[A-"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 3
                    message: "?]]    function f()    fu[[]]e=3i^r[[]]ertyp=3i^r[[=3i^ype=3i^r[[]]e=3i^r[[]]ertyp=3i^3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]nction f()(   function f() (u"
                  }
                }
                struct_declaration_list {
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 7
                    message: "]]ffi{ffi"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
