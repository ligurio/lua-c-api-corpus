declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: ""
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 7
                    message: "go]\354\354[[\rs]]:\354n[[\r\r][[#s]]:\354n[[M= [[!s]]:n[[[]]\354[[![\rs]]declarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            union_type {\n              struct_declaration_list {\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_2: 0\n                    expression: 3\n                    message: \"!]];l{\\n[[!!]];\\354=0-\\275a_a,{\\n[[[0E161]];l=0-\\275,{\\n[[[0955E161E161]];const,{\\n[{\\n[[!!]];\\354=0-\\275a_a,{  [[0E161]];l=0-\\275,{\\n[[[0955E1611]];l=0-\\275,{\\n[[[05*0ers:\354n[[&= ([!s]]:n[[\r[[M= [[!s]]:n[[\r- ]][0E161]];l=0-\\275,{\\n[[[0955E15*ers\"\n                  }\n                }\n              [[[]]Ml1[[[\rs]]:ln[[\r= [[! }\n            }\n          }\n        }\n      }\n    }\n  }\n}s]]:n[[\n(-!s]]:n[[\r[[M= [[!s]]:press  funct "
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
