declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 2
                    message: "??]]function f(goto)function f(goto) r[[]]function f(goto)function f(goto) r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 0
                    message: "??]]function f(goto)function f(goto) r[[]]function f(goto)function f(goto) r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 2
                    message: "??]]function f(goto)function f(goto) r[[]]function f(goto)function f(goto) r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 0
                    message: "??]]function f(goto)function f(goto) r[[]]function f(goto)function f(goto) r[["
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 1
                    message: ";;]]l=-2ll l  =-0ll  t [[t]]l=-2ll l  =-2-0ll  t [[t]]l=-2ll l  =-2ll  t [[t;]]l=-2ll l  =-0ll  t [[tll  t [[t;]]l=-2ll l  =-0ll  =-2s"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
