declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "(]]ct_d{ \2407*.5-0B000      num: 2\n              }\n              constant {\n                name: \"\"\n                num: 5\n              }\n              constant {\n                name: \"\"\n                num: 4\n              }\n              constant {\n                name: \"\"\n                num: 0\n              }\n              constant {\n                name: \"\"\n                num: 0\n              }\n              constant {\n                name: \"\"\n                num: 3\n              }\n              constant {\n                name: \"\"\n                num: 1\n              }\n              constant {\n                name: \"\"\n                num: 9\n              }\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            enum_type {\n              enum_name {\n                name: \"\"\n                num: 0\n              }\n              constant {\n                name: \"\"\n                num: 2\n              }\n              constant {\n                name: \"\"\n                num: 5\n              }\n              constant {\n                name: \"\"\n                num: 4\n              }\n              constant {\n                name: \"\"\n                num: 0\n              }\n              constant {\n                name: \"\"\n                num: 0\n              }\n              constant {\n                name: \"\"\n                num: 3\n              }\n              constant {\n                00-0B0"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
