declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "[[[]]local  c =   t0[[]]local  c =   t0[[]00o[]]local  c =    t0[[]]local  c =   t0[[]]local  c =   [[]0]]local  c =   [[ t0[]000]]local  c =   [[]]local  c =   t0[[]00o[]]local  c =   [[][]]local  c =   t0[[]]local  c=   [[][]]local  c =   t0[[]]local  cal  c =   t0[[]]local  c =   t0[[]00o[]]local  c =   [[][]]local  c =   t0[[]]local  c =   t0[[]]local  c =   [[]0]]local  c =   [[ t0[]000]]local  c =   [[]]local  c =   t0[[]00o[]]local  c =   t0[[]00o[]]local  c =   [[][]]local  c =   t0[[]]local  c =   t0[[]]local  c =   [[]0]]local  c =   [[ t0[]000]]local  c =   [[]]local  c =   t0[[]00o[]]local  c =   [[][]]local  c =   t0[[]]local  c=   [[][]]local  c =   t0[[]]local  c =   t0[[]]local  c =   [[]0]]local  c =   [[ t0[]000]]local  c =   [[ t0[]0 t0[] =   t0[[]]local  c =   [[]0]]local  c =   [[ t0[]000]]local  c =   [[ t0[]0 t0[]00"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 3
                    message: "\242]]on{[eco[{[etor_t{[st[{[econs  [st{[st[{[ecot{[{[e[{[eco[{[etornt e"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
