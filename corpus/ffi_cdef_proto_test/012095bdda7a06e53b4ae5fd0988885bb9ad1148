declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 1
                    message: "]]l_A1 {caf_list {\nf,es_,ist {    }\n   }}:    sp[[e"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 1
                    expression: 1
                    message: "~]]:d{-  _,itc {\n  }\n } s[[ "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 1
                    message: "?]]g{\nlo2,l+\3542r\354,\354\3542,co{ }      }ers "
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          storage_class_specifier {
            storage_class_typedef: 0
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      declarator_attr {
        name {
          name: ""
          num: 4
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            arithmetic_type {
              type_float_imaginary: 0
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      declarator_parentheses {
        declarator {
          function_declarator {
            noptr_declarator {
              declarator_attr {
                name {
                  name: ""
                  num: 4
                }
              }
            }
            parameters_list {
              ellipsis: 0
            }
          }
        }
      }
    }
  }
}
