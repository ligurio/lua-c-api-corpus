declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 9
                    expression: 0
                    message: "\242]]\354\354\354=\354-a,nd_qual  goto\n i4  \354\354\354\354\354\354=nd_qual  goto\n i0  go=nd_qual  goto\n ial  goto\n i \354\354=nu\275a,nd_qual  goto\n i4  sName7=nd_qual  goto\n i0  goto\n i4  \354\354\354=nd_qual  goto\n i et [[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 9
                    expression: 9
                    message: "\242]]\354\354\354=\354-a,nd_qual  goto\n i4  \354\354\354\354\354\354=nd_qual  goto\n i0  go=nd_qual  goto\n ial  goto\n i \354\354=nu\275a,nd_qual  goto\n i4  sName7=nd_qual  goto\n i0  goto\n i4  \354\354\354=nd_qual  goto\n i et [[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 9
                    expression: 4294901761
                    message: "L]]fonst\354=_AligI0::\310xyx::::l::tico[[[[declarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            enum_type {\n              enum_name {\n                name: \"\"\n                num: 0\n             "
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
          }
        }
      }
    }
  }
}
