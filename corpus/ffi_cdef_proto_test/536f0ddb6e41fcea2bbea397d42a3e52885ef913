declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            enum_type {
              enum_name {
                name: ""
                num: 0
              }
              constant {
                name: "s"
                num: 0
              }
              constant {
                name: ""
                num: 0
              }
              constant {
                name: ""
                num: 0
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 0
                    message: "^]]\354\354[[\rs]n\354][[/\r ]]\354  [[  [[[]]\354\354[[\rs]]:n[[z% ]]\354\254[[\rs]]\354\354[[\rs]]\354n[[]\354\354[[\rs]]:n[[\r\r ]]\354\354[[1s]]\354\354[[2\rS_Ali[\rs]]T[[2\rS_Aligl]\354\354[[OOOOOOOOl"
                  }
                }
                struct_declaration_list {
                  bit_field {
                    name {
                      name: "x0"
                      num: 0
                    }
                    width: 0
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 6
                    message: "]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^R[[]]e=3i^r[[]]ertypr[[]]rtyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3i^r[["
                  }
                }
              }
            }
          }
        }
        specifiers_list {
        }
      }
    }
  }
}
