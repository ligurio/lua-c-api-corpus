declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 2
                    message: "A]]dodeclarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            union_type {\n              struct_declaration_list {\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_2: 0\n                    expression: 2\n                    message: \"A]]do do  do  os[[-\"\n                  }\n                }\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_1: 2\n                    expression: 2\n                    message: \"]]goto t i[[\"\n                  }\n                }\n                struct_declaration_list {\n      do              static_assertion {\n                    static_assert_1: 2\n                    expression: 3\n               do  os[      message: \"]]end  end e0[[\"\n                 [ }\n                }\n              -}\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 2
                    message: "]]goto t i[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 3
                    message: "]]end  end e0[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
