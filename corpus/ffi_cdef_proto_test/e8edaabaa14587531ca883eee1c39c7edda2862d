declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "]]declarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            union_type {\n              struct_declaration_list {\n         .       struct_declaration_list {\n                  static_assertion {\n                    static_assert_2: 3\n                    expression: 0\n                    message: \",]]_declat{[\\242]=\\242,t=it  }\\n  [{[_declat{[\\242]=d,t=it  }\\n  [{[t{[_Aligsb{[\\242]=z,t=it  }\\n  [{c{[\\242]=d,t=it  }\\n  [{[t{[\\242]=lnsb,t=laratat{[h]=lns\\242,turGo=lnsb,t=laratat{[h]=ln,t=lart  ,t=laratat{[h]=lns\\242,turGo=lnsb,t=laratat{[h9]=ln,t=lart  }\"\n 0                 }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
