declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 7
                    expression: 7
                    message: "]]  while[[]] do g[[-"
                  }
                }
                struct_declaration_list {
                  bit_field {
                    name {
                      name: "!"
                      num: 0
                    }
                    width: 0
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 7
                    message: "]]  while[[]] do g[[-"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 7
                    expression: 7
                    message: "]]  while[[]] do g[[-"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 7
                    expression: 7
                    message: "]]  while[[]] do g[[-"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      pointer_declarator {
        declarator {
          declarator_attr {
            name {
              name: "x"
              num: 0
            }
          }
        }
      }
    }
    declarators {
      declarator_attr {
        name {
          name: "x"
          num: 0
        }
      }
    }
  }
}
