declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              attr_spec_seq {
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 3
                    message: "\242[2\rS   ]].k[[[\r[[]]\354\354[[2\rS_Aliglig]].k[[[\r[[]]\354\354[[2\rS_Alig]].k[[1s\354[[2\rSiAl]].k[[N       uniong]].k[[[\rS_Alig]].k[[[\r[[]]\354\354[[2AS_Alig]].k[[1     statlig]].k[[\rs]]\354\354[[sizeof           union_type {\n    g]].k[[[\r[[]]\354\354[[2\rS_Alig]].k[[1_BitInt[2\rS     .k[[[~S_Alig]].k[[[\r[\rSiAlig]].k[[\r       union_type {\n            2\rS     .k[[[~S_Alg]].k[[[\rS_Alig]].k[[[\r[[]]\354\354[[2AS_g]].kgf.g"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              attr_spec_seq {
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 3
                    message: "]_]][99.0000000000\r\r\r\r\r<\r.00000000000050000000\r\r\r\r<\r\r\r\r\r\r\r\r.0000000000005000000000000000\r\r\r\r\r<\r.00000000000000000050000\r\r\r<          (Me.00000000000050000000000000000]]]"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 3
                    message: "\242[2\rS   ]].k[[[\r[[]]\354\354[[2\rS_Aliglig]].k[[[\r[[]]\354\354[[2\rS_Alig]].k[[1s\354[[2\rSiAl]].k[[N       uniong]].k[[[\rS_Alig]].k[[[\r[[]]\354\354[[2AS_Alig]].k[[1     statlig]].k[[\rs]]\354\354[[sizeof           union_type {\n    g]].k[[[\r[[]]\354\354[[2\rS_Alig]].k[[1_BitInt[2\rS     .k[[[~S_Alig]].k[[[\r[\rSiAlig]].k[[\r       union_type {\n            2\rS     .k[[[~S_Alg]].k[[[\rS_Alig]].k[[[\r[[]]\354\354[[2AS_g]].kgf.g"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
