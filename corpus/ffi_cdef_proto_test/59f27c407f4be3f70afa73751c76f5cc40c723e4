declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 6
                    expression: 9
                    message: "?]]    func()        function f() function f() fu[[]?]]    function f()        function f() function f() function f()    fu[[]?]]    function f()        f()    function f()    fu[[]?]]    function f()        function f() function f()    fur[[=3i^ype=n f() (    fur[[=3i^ype=n f() (u"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 9
                    expression: 9
                    message: "]]go=#i>=#i>#i>=##i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#ii>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>i>=#i>#9i>=#i>i>=#i>#i>=#i>[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "U]] \n ffi, ffi, f ,x,ffi, ffi, f ,x,\n ffi, ffi, f ,x,ffi, ffi, f ,m,x,ffi, ffi, f ,x,m,x,mi, f ,x,ffi, ffi, f ,m,x,ffi, ffi, f ,\n ffi, ffi, f ,x,mx.\n ffi,  ffi,\n ffmx.\n ffi, ffi, f ,x,ffi,fi, ffi, f ,i, ffi, f ,Ax,ffi, ffi, f ,x,mx.x,ffi, f ,x,fm,x,f, ffi,  ffi,\n ffmx.\n ffi, ffi, f ,x,ffi, ffi, f ,m,x,ffi, ffi, f ,x,ffi, f=fi, f ,xffi, f ,m,x,ffi, ffi, f ,x,ffi, f=fi, f ,-i"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
