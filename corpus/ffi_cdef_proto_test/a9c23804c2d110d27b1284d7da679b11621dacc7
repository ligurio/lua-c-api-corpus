declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 5
                    message: "?]]    function cdef.Specifieristf()    fu[[]?*\377f(u"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 5
                    message: "?]]    function cdef.Specifieristf()    fu[[]?*\377f(u"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            enum_type {
              enum_name {
                name: ""
                num: 0
              }
              constant {
                name: "\360"
                num: 0
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          alignment_specifier {
            alignment_specifier_Alignas: 0
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 4
                    message: "]]l=L::xyx::::dx::::d"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 35
                    expression: 0
                    message: "]_]][9.900000000000000900900][9.900000000000000000009000][9.9000000000000000000900]"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
