declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2621440
                    expression: 4
                    message: "\242]]\354\354\354\354\354\354s {\n  declarators_and_initializers {\n    declarators {\n      decses {\n        declarator {\n          declarator_parentheses {\n            declarator {\n              deor_parentheses {\n                declarator {\n                  declarator_parentheses {\n                    declarator {\n                      declarator_parentheses {\n                        declarator {\n                          declarator_parentheses {\n                            declarator {S                             \001\001?\000 "
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_atomic: 0
          }
        }
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2621440
                    expression: 4
                    message: "\242]]\354\354\354\354\354\354s {\n  declarators_and_initializers {\n    declarators {\n      decses {\n        declarator {\n          declarator_parentheses {\n            declarator {\n              deor_parentheses {\n                declarator {\n                  declarator_parentheses {\n                    declarator {\n                      declarator_parentheses {\n                        declarator {\n                          declarator_parentheses {\n                            declarator {S                             \001\001?\000 "
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
