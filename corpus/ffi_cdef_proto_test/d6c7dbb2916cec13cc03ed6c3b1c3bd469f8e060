declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "]]l_=not y[[2"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 4
                    message: "]]or"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          storage_class_specifier {
            storage_class_static: 0
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 0
                    message: "\242]]\354\354\354\354\354\354\354\354\354tions {\n{\n 90000001,00000-0x7000.0000000000000000000000000000000000000000000000000000000000000000,00000- \260467\354\354\354\354\354\354\354tions{\n{\n 90000001,090000001,00000-0x7000.0040737090000001,00000-0x7000.0000000000000000000000000000000000000000000000,0000-0x7000.0040737090000001,00000-0x7000.000000000000000000000000000000000001,006744073709000000000000000000000000000000000000000000,0000-0x7000.0040737090000001,00000-0x7000.000000000000000000000000000000000001,0067440737090000001,0440737090000001,0067440737090000001,00000-0x7000.0040737090000001,00000-0x701,0067440737090000001,00000-0x7000000000000000000,0000-0x7000.0040737090000001,00000-0x7000.0000i"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
