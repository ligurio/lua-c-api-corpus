declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 3
                    message: "]]and"
                  }
                }
                struct_declaration_list {
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      function_declarator {
        noptr_declarator {
        }
        attr_spec_seq {
          keyword_fallthrough: 0
        }
      }
    }
    declarators {
      pointer_declarator {
        declarator {
          function_declarator {
            noptr_declarator {
              declarator_parentheses {
                declarator {
                  declarator_parentheses {
                    declarator {
                      pointer_declarator {
                        attr_spec_seq {
                          keyword_noreturn_1: -83886081
                        }
                        declarator {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  attr_spec_seq {
    keyword_fallthrough: -67108864
  }
}
