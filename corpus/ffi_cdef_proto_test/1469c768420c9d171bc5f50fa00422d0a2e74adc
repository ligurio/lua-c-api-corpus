declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 4
                    message: "]]co=_ and[[]]co=_ and[[]]o=__ and[[]]o=__ and[[]]co=_ and[[]]co=_ and[[]]o=__ and[[]]o=__ and[["
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  attr_spec_seq {
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 9
                    message: "]]g=#st>i>st[[]]go=#i>st[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 2304
                    message: "]]g=#st>i>st[[]]go=#i>st[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 9
                    message: "B]]g=#i>st>st[[f]]go=#i>st[[]]o=#i>st[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 20
                    message: "]]g=#st>i>st[[]]go=#i>st[[f"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
