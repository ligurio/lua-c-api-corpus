declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 2
                    message: "]]\354=\354.Wx::x::::de::am[[0["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 0
                    message: "LL]]lame0=p5lW*\3540::xxxxyx::::lara\354::a[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 2
                    message: "\242]]::xx::::decl::::ecl1::amo[[t:"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 4
                    message: "L]]\354onst\354=_Alig\3540::xxxx::::lar\354::amco[[[["
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 3
                    message: "]]\354charXXXX\377\377Name4XXs {\n  declas_attr {\n        name {\n       name: \"\\018\\034\\034\\000\\000L0\377\377\377~:\377wh\377OOOOOOOO\\034\\034xxxxx!\\034<2|024!\\033\\034\\034\\034\\034\\034p534\\034\\034{    }         nam"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
