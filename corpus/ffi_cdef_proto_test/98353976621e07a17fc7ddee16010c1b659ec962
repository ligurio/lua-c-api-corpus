declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 6
                    message: ")]]rddeclarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            union_type {\n              struct_declaration_list {\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_1: 3\n       e{\n \"\"}dar{\"\"\n }[dele{ \"\" }             expression: 0\n                    message: \";]]\\\"\\\\\\\"\\\\u{dd}_s  \\000_Alig\\377\\377>\\000_BitInName0\\000\\000\\000\\000\\000\\000\\000\\000slfae9u{d}_s\\\\u{dd}_s n nCu{dd}_s n^\\\\n\\\\u{d}nL\\\\nn\\\\u{d}s\\\\u{dd}_8\\377\\377\\377\\000_BitInt\\000\\000\\000\\000@\\000\\000\\000\\000\\00{\n \"0\\000\\000slfae9u{d}{d}_s\\\\u{dd}_tInt\\\\n\\\\u{d}n\\\\u{dd}_s \\000\\000\\000\\000!\\000\\000\\000\\000\\000\\000\\000\\000\\000:\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000_\\000\\000long\\000\\000\\0001u{d}_s\\\\u{dd}_s nA\\\\n\\\\u{d}n(\\\\nn\\\\u{d}s\\\\u{dd}_s nCu{dd}_s n\\\\\\\\n\\\\u{d}n[\\\\nn\\\\u{d}s\\\\u{dd}_s\\000_Aligecimal32\\000\\000\\000\\000\\000\\00000000000001844}_s\\\\u{dd} mess     struct_dec2not     {_s\"\n                  }\n          \"       }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
