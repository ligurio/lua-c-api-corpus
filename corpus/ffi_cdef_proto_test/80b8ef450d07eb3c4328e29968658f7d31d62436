declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            enum_type {
              enum_name {
                name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                num: 0
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 4
                    message: "J]]while s[[A"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "]]and[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 4
                    message: "]]or[["
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 3
                    message: "*[[]]o8=1i or \354{}s=2 or wh[[*[[]]o8=1i or \354{}s=2 or wh[[)]]me0W=-ca_B or lx0l {}wntz=a_Bi or Sni[[)]]W=-ca_Bi or lx0l {}wntz=a_Bi or Sini[[f"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
