declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              attr_spec_seq {
                keyword_unsequenced: 16842752
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 3
                    message: "]]e=3i^r[[]]ert[[]]ertyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 3
                    message: "!!]];\354=0-\275a_a,{\n[[!!]];b=0-\275a_a,{\n[[[0E1!!]];\354=0,{\n[[!!]];b=0-\275a_a,{\n[[[0E1!!]];\354=0-\275a_a,{\n[[!)]];\354=0-\275a_a,{\n[[[0E161]161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275[[0955E1\275,{\n[[[0955E161E161]];l=0-\275,{\n-\275a_a,{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275[[0955E161E161]];l=0-\275,{\n[[[05*0ers61]];l=0-\275,{\n[[[0955E!161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers"
                  }
                }
                struct_declaration_list {
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "\242]]\354\354B=rwhie0 or 0 or got or \377\377-\377    or  speCi[[[[[[\242]]N\354\354=rwhile0 or 0 or got  or \377\377-\377    or {}\n   [ff"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
  }
}
