declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: "#"
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 126
                    expression: 0
                    message: "g[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,Jz0=[[ ]]A,j,_=[[g[]]A,z,u=[[]]A,j,u=[[]]A,j,u=[[]]A,z,u=g[[  "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 0
                    message: "g[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,Jz0=[[ ]]A,j,_=[[g[]]A,z,u=[[]]A,j,u=[[]]A,j,u=[[]]A,z,u=g[[  "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 0
                    message: "g[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,Jz0=[[ ]]A,j,_=[[g[]]A,z,u=[[]]A,j,u=[[]]A,j,u=[[]]A,z,u=g[[  "
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      array_declarator {
      }
    }
    declarators {
    }
  }
}
declarations {
  declarators_and_initializers {
    declarators {
      pointer_declarator {
        attr_spec_seq {
          keyword_nodiscard: 0
          keyword_unsequenced: 0
        }
        declarator {
        }
      }
    }
  }
}
