declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 9
                    expression: 9
                    message: "?]]    function f()    fu[[]?]]    function f()        function f() function f() function f()    fu[[]?]]    function f()        function f() function f()    fur[[=3i^ype=n f() (    fur[unction f()    fu[[]?]]    function f()        function f() function f() function f()    fu[[]?]]    function f()        function f() function f()    fur[[=3i^ype=n f() (    fur[[=3i^ype=[=3i^ype=n f() (u"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 9
                    expression: 9
                    message: "?]]    function f()      function f()        function f() function f() function f()    fu[[]?]]    function f()        function f() function f()    fur[[=3i^ype=n f() (    fur[[=3i^ype=n f() (u"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 9
                    message: "]]go=#i>=#i>#i>=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f=#i>#i>=#i>[[f]]go=#i>=#i>#i>=i>#i>=#i>[[f$]>#i>\013#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f"
                  }
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 2
                    message: "?]]    function f(goto)    pe=3i^r[[]]e=3i^i^r[[]]e=3i^r[[]nctin f() (u"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      array_declarator {
        keyword_static: 1
        qualifiers_list {
          qualifiers_list {
            type_qualifier {
              keyword_const: 0
              keyword_volatile: 0
              keyword_restrict: 0
            }
          }
        }
        expression: 0
      }
    }
    declarators {
      array_declarator {
        keyword_static: 1
        qualifiers_list {
          qualifiers_list {
            type_qualifier {
              keyword_const: 0
              keyword_volatile: 0
              keyword_restrict: 0
            }
          }
        }
        expression: 0
      }
    }
  }
}
