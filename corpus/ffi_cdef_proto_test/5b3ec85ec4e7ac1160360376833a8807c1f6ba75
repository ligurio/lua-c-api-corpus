declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            enum_type {
              enum_name {
                name: "OOOOOOOOOOOOOOOOOOO"
                num: 4
              }
              constant {
                name: "\376\377"
                num: 4
              }
              constant {
                name: "Ot {\n                  static_assertion {\n                   i -\\n ffi -\\nfi -\\n ffi -\\n -\\n ffi -\\ni -\\n ffi -\\n i {\\n  v{\\n  ffi -\\n ffi -\\n  ffi -\\n ff-\\n ffi -\\n -\\n ffi -\\ni -\\n ffi -\\n i {\\n  ffi -\\n ffi -\\nfi -\\n ffi -0 -\\n ffi -\\ni -list {-\\n i {\\n  ffi -\\n ffi -\\n -\\n ffi -\\nffi -\\n ffi -\\n -\\n ffi -  fv{\\n  ffi -\\n ffi -\\n  ffi -\\n ff-\\n ffi -\\n -\\n ffi -\\ni -\\n ffi -\\n i {\\n  ffi -\\nfi -\\n ffi -\\n -\\n ffi -\\ni -\\n ffi -\\n i {\\n  v{\\n  ffi -\\n ffi -\\n  ffi -\\n ff-sersi -\\n -\\n ffi -\\ni -\\n ffi -\\n xxxxxxxxxxxx0ffi -\\nfi -\\n ffi -\\n -\\n ffi -\\ni -OOOOOIOOOOOOOOOOOO"
                num: 4
              }
              constant {
                name: "OOOOOOIOOOOOOOOOOOO"
                num: 0
              }
              constant {
                name: "OOOOOOOOOOOOOOOOOOO"
                num: 2
              }
              constant {
                name: "_Decimal3"
                num: 2
              }
              constant {
                name: "\377\377\377\377\377\377\377\377\377\377\377\377\377"
                num: 0
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      declarator_attr {
        name {
          name: ""
          num: 0
        }
        attr_spec_seq {
          keyword_fallthrough: 46
        }
      }
    }
  }
  attr_spec_seq {
  }
}
