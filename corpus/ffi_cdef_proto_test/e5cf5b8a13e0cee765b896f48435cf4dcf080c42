declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 8
                    expression: 8
                    message: "g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[  "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 8
                    message: "g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[  "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 8
                    expression: 8
                    message: "g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[g[[]]A,z,u=[[]]A,j,u=[[]declarations {\n  ]A,j,_=[[ ]]A,J,\354=[[specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_bool_1: 0\n            }\n          }\n        }\n        specifiers_list {\n          function_specifier {\n            keywor d_noralifiers_list {\n      specifiers_list {\n         specifiers_list {\n          type_specifier {\n            arithmetic_"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4128768
                    expression: 8
                    message: "g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[  "
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 8
                    expression: 8
                    message: "g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[  "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 8
                    message: "g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[  "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 8
                    expression: 8
                    message: "g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[g[[]]A,z,u=[[]]A,j,u=[[]declarations {\n  ]A,j,_=[[ ]]A,J,\354=[[specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_bool_1: 0\n            }\n          }\n        }\n        specifiers_list {\n          function_specifier {\n            keywor d_noralifiers_list {\n      specifiers_list {\n         specifiers_list {\n          type_specifier {\n            arithmetic_"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 8
                    expression: 8
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
