declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 4
                    message: "r]] goto\n i1  goto\n _q  goto\n _ goto\n _q  goto\ni0  goto\n al  goto\n i0 goto\n i et[[[[[[[[["
                  }
                }
                struct_declaration_list {
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 20
                    message: "r]] goto\n i1  goto\n _q  goto\n _ goto\n _q  goto\ni0  goto\n al  goto\n i0 goto\n i et[[[[[[[[["
                  }
                }
                struct_declaration_list {
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 4
                    message: "r]] goto\n i1  goto\n _q  goto\n _ goto\n _q  goto\ni0  goto\n al  goto\n i0 goto\n i et[[[[[[[[["
                  }
                }
                struct_declaration_list {
                }
              }
            }
          }
        }
      }
    }
  }
}
