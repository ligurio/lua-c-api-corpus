declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 0
                    message: "]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[R[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3i^r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 0
                    message: "$]]\354=A,not not [[r"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 3
                    message: "]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^i^r[[]]e=3i^r[[]]eertyp=3i^r[[]]e=3i^r[[]]ertype=6i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3i^r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "]]t,t=\354[[]]t,t=\354[[]]t,t=\354[[]]t,t=\354[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 0
                    message: "\242]]\354_4(\354ou0,not l,n_eci4(\354ou0,not l,noti4(\354ou0,not l,u0,not l,noti4(\354ou0,not l,n_eci4(lou0,not l,noti4(\354ou0,not l,not  oDec_eci4(\354ou0,not l,not l,u0,not l,noti4(\354ou0,not l,n_eci4(lou0,not l,noti4(\354ou0,not l,not  oDec_eci4(\354ou0,not l,noti4(\354ou0,not l,n_eci4(\354ou0,not l,noti(\354ou0,not l,u0,not l,noti4(\354ou0,not l,n_eci4(\354ou0,not l,noti4(\354ouoti4(\354ou0,not l,n_eci4(\354ou0,not g,noti(\354ou0,not l,u0,not l,n0,not l,not  oDec_eci4(\354ou0,not l,not l,u0,not l,noti4(\354ou0,not l,n_eci4(lou0,not l,noti4(\354ti4(\354ou0,not l,not  oDec_eci4(\354ou0,not l,not l,u0,not l,noti4(\354ou0,not l,n_eci4(lou0,not l,noti4(\354ou0,not l,not  oDec_eci4(\354ou0,not l,noti4(\354ou0,not l,n_eci4(\354ou0,not l,noti(\354ou0,not l,u0,not l,noti4(\354ou0,not l,n_eci4(\354ou0,not l,noti4(\354ouoti4(\354ou0,not l,n_eci4(\354ou0,not l,noti(\354ou0,not l,u0,not l,n0,not l,not  oDec_eci4(\354ou0,not l,not l,u0,not l,noti4(\354ou0,not l,n_eci4(lou0,not l,noti4(\354ou0,not l,not  oDec_eci4(\354ou0,not l,noti4(\354ou0,not l,n_eci4(\354ou0,l,u0,not l,noti4(\354ou0,oti4(\354ou0,not l,n_eci4(\354ou0,not l,noti4(\354ou0,not l,notou0,not l,not  oDec_eci4(\354ou0,not l,noti4(\354ou0,not l,n_eci4(\354ou0,not l,noti(\354ou0,not l,u0,not l,noti4(\354ou0,not l,n_eci4(\354ou0,not l,noti4(\354ouoti4(\354ou0,not l,n_eci4(\354ou0,not l,noti(\354ou0,not l,u0,not l,noti4(\354ou0,oti4(\354ou0,not l,n_eci4(\354ou0,not l,noti4(\354ou0,not l,not  ot     es"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
