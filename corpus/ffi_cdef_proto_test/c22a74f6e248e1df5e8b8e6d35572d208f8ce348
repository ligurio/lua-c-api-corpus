declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 8
                    expression: 3
                    message: "[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\243\223\220cdelarations {\n  specifiers_and_qualifiers_liswhile   specifit0[[[[[]]local   c    t0[[[[]local   c    t0[[[[]]local   c    t0[[]\\24       specifiers_list {2          type_specifier {\n            typeof_operator {\n            }\n          }\n        }\n                 eage: \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c   t0[[[[]]local   c    t0[[]\\243 specifit0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\\24       }\n        }\n                 expression: 0\n                    message: \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\\243\\223       0 0   "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    expression: 0
                    message: "[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\243\223\220cdelarations {\n  specifiers_and_qualifiers_liswhile   specifit0[[[[[]]local   c    t0[[[[]local   c    t0[[[[]]local   c    t0[[]\\24       specifiers_list {2          type_specifier {\n            typeof_operator {\n            }\n          }\n        }\n                 eage: \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c   t0[[[[]]local   c    t0[[]\\243 specifit0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\\24       }\n        }\n                 expression: 0\n                    message: \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\\243\\223       0 0   "
                  }
                }
                struct_declaration_list {
                  bit_field {
                    name {
                      name: ""
                      num: 0
                    }
                    width: 0
                  }
                }
              }
            }
          }
        }
        specifiers_list {
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 0
                    message: "[]]ll=2,o,nd[[[]]r0=b0,\354,nnd[[[]]lz=\3542,o,nd[[[]]l\354=rs,o,nnd[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
