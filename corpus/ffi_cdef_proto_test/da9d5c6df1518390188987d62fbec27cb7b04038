declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 0
                    message: "J]]while o do while so do while o do while so do s[[A-"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]]end end end end e[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "J]]while o do while so do while o do while so do s[[A-"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]]end end end end e[["
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 9
                    expression: 4
                    message: "\005  pression                           ]]c=not t[[\"\n             tage:c8]]or[[_Decimal12ert_2:   \"]]c=not t[[\"\n           e:c8]]or[[:0   c_assert_2:        ]]c=not t[[\"\n             e:c8]]or[[_Decimal12ert_2:             * atic_astes2_r: 6\n        sio        m ge: \"]]c=not t[[\"\n           tage:c8]]or[[\"0   c_assert_2:                   s"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
