declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "A]]C=\377:A[[[[[o[[[]]\377\n=\377:\377[[[t[[[]]\377\n=\377:\377[[[ti]]\377x4=\377:\377[[[]]\377\n=\377:\377[[[[]]x4=\377:A[[[[[o[[[]]:A[[[[[o[[[]]\377\n=\377:\377[[[t[[[]]\377\n=\377:\377[[[ti]]\377x4=\377:\377[[[]]\377\n=\377:\377[[[[]]x4=\377:\377\377[[[]]x4=\377:\377[[[tiA]]C=\377:A[[[[[o[[[]]\377\n=\377:\377[[[t[[[]]\377\n=\377:\377[[[ti]]\377x4=\377:\377[[[]]\377\n=\377:\377[[[[]]x4=\377:A[[[[[o[[[]]:A[[[[[o[[[]]\377\n=\377:\377[[[t[[[]]\377\n=\377:\377[[[ti]]\377x4=\377:\377[[[]]\377\n=\377:\377[[[[]]x4=\377:\377\377[[[]]x4=\377:\377[[[ti"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          alignment_specifier {
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: ""
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 6
                    expression: 6
                    message: ";]]\"\\\"6                sts\\u{ddddd}{_A8\217\217\217\217\217constp\217pppp\214\\u{ddddd}uOecl{addddd}uOecl{a"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
