declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "K]]\3544=\354-\275a,not [[J4]]\354_Deci4=\354-\275a,not [[aV]]\3544=\354-\275a,not [[J4]]\354_Deci4=\354x9a,not [[at\242]]\3544=\354-za,not [[J4]]\354_Deci4=\354-\275a,not [[aV]]l4=\354-Ka,not [[J4]]\354_Deci4=\354-\275a,not [[ato do des"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "K]]\3544=\354-\275a,not [[J4]]\354_Deci4=\354-\275a,not [[aV]]\3544=\354-\275a,not [[J4]]\354_Deci4=\354x9a,not [[at\242]]\3544=\354-za,not [[J4]]\354_Deci4=\354-\275a,not [[aV]]l4=\354-Ka,not [[J4]]\354_Deci4=\354-\275a,not [[ato do des"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "K]]\3544=\354-Za,not [[J4]]\354_Deci4=\354-\275a,not [[aV]]\3544=\354-\275a,not [[J4]]\354_Deci4=\354x9a,not [[at\242]]\3544=\354-za,not [[J4]]\354_Deci4=\354-\275a,not [[aV]]l4=\354-Ka,not [[J4]]\354_Deci4=\354-\275a,not [[ato do des"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "K]]\3544=\354-Za,not [[J4]]\354_Deci4=\354-\275a,not [[aV]]\3544=\354-\275a,not [[J4]]\354_Deci4=\354x9a,not [[at\242]]\3544=\354-za,not [[J4]]\354_Deci4=\354-\275a,not [[aV]]l4=\354-Ka,not [[J4]]\354_Deci4=\354-\275a,not [[ato do des"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
