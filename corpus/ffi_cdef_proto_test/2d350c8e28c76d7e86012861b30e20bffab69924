declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 0
                    message: "]]go=#i>=#i>#i>=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>i>=#i>=[[f$$]]go=#i>=#ii>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=#i>[[f$]>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 0
                    message: "]]go=#i>=#i>#i>=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>i>=#i>=[[f$$]]go=#i>=#ii>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=#i>[[f$]>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 1
                    message: "\r\377\377\377]]er=3i^3i^r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 0
                    message: "!!]];\354=0-\275a_a,{\n[[!!]];b=bool_a,{\n[[[0E1!!]];\354=0,{\n[[!!]];b=0-\275a\n[[[0E1!!]];\354=0-\275a_a,{\n[[!)-\275,{\n[[[05*0ers[0E161]];l=0-[[];l=0-\275,{\n-\2750955E!161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l={\n            name {\n              name: \"#\n              num: 0\n 0-\275,\n[[[05*0ers"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
