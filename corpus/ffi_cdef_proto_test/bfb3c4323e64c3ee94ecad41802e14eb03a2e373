declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 3
                    message: "]]I=l[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 4
                    message: "]]or 8 and 8 and[[]]or 8 and[[]]or 8 and[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 3
                    message: "!!]];\354=0-\275a_a,{\n[[]];\354=0-\275a_a,{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      array_declarator {
        qualifiers_list {
          qualifiers_list {
            type_qualifier {
              keyword_atomic: 67108864
            }
          }
        }
      }
    }
  }
}
