declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "U]] f ,x,mx.x.\n ffi, ffi, f ,x,ffi, ffi,i, ffi, f ,x,mx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ff ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ff(i,  fName0ffmx.\n ffi, ffi, f ,x,ffi, ffi, f ,mx.\n ffi, ffi, f ,x,mx.\n ffi, f ,x,mx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mxfmx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi, x,mfi, ffi, f ,x,mffi,  ffi,\n ffmx.i,  ffi,\n i ,x,mx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi,  ffi,\n ffmx.\n ffi, ffi, f ,x,ffi, ffi, f ,mx.\n ffi, ffi, f ,x,mx.ffi, f ,x,mx.\n ffi,  ffi,\n ffmx.\n ffi, ffi, f ,x,ffi, ffi, f ,mx.\n ffi, ffi, f ,x,mx.\n ffiffi, f ,x,mfmx.\n ffi, ffi, f ,x,ffi, ffi, f ,mx.Y0ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.ffi, f ,x,ffi, ffi, f ,x,mName3fi, ffi, f ,x,mx.\n ffi, x,mfi, ffi, f ,x,mx.\n ffi,  ffi,\n }}}}}}}}}}}}} -i -i"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
    }
    declarators {
      array_declarator {
        keyword_static: 0
        qualifiers_list {
        }
        expression: 2764964092
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
        qualifiers_list {
        }
        expression: 2764964092
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
        qualifiers_list {
        }
        expression: 2764964092
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
  }
  declarators_and_initializers {
    declarators {
      array_declarator {
        keyword_static: 0
        qualifiers_list {
        }
        expression: 2764964092
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
        qualifiers_list {
        }
        expression: 2764964092
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
        qualifiers_list {
        }
        expression: 2764964092
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
        qualifiers_list {
        }
        expression: 2764964092
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
  }
  declarators_and_initializers {
    declarators {
      array_declarator {
        keyword_static: 0
        qualifiers_list {
        }
        expression: 2764964092
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
        qualifiers_list {
        }
        expression: 2764964092
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
        qualifiers_list {
        }
        expression: 2764964092
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
        qualifiers_list {
        }
        expression: 2764964092
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
  }
  declarators_and_initializers {
    declarators {
      array_declarator {
        keyword_static: 0
        qualifiers_list {
        }
        expression: 2764964092
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
        qualifiers_list {
        }
        expression: 2764964092
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
        qualifiers_list {
        }
        expression: 2764964092
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
        qualifiers_list {
        }
        expression: 2764964092
      }
    }
  }
}
