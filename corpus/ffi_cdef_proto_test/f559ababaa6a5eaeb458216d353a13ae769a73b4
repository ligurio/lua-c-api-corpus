declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 9
                    expression: 9
                    message: "?]]    function f()    fu[[]]e=3i^r[[]]ertyp=3i^r[[=3i^ype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]er=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]nction f()(   function f() (u"
                  }
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 1
                    expression: 9
                    message: "U]] f ,x,mx.\n mx.\n ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.ype {\n              struct_declaration_list {\n                struct_declaration_list {\n                  static_a.\n ffi, ffi, f ,x,mx.\n ffi,  ffi,\n ffmx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi, x,mfi, ffi, f ,x,mx.\n ffi,  ffi,\n ffmx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi, x,mx.\n ffi, ffi, f ,xpe {\n              struct_declaration_list {\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_1: 2\n                    expression: 2\n                    message: \"]]r=l[[\"\n                  }\n                }\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_2: 0\n                    expression: 0\n                    message: \" ]]~=6,l[[i ]]~=6,l[[\"\n                  }\n          ,mx.\n ffi,  ffi,\n i ,x,mx.\n ffi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi,  ffi,\n ffmx.\n ff,i ffi, ffi, f ,x,ffi, ffi, f ,mx.\n ffi, ffi, f ,x,mx.\n ffi, ffi.\n ff ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi,  ffi,\n ffmx.\n ffi, ffi, f ,x,ffi, ffi, f ,mx.\n ffi, ffi, f ,x,mfi, ffi, f ,x,ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,mxfi, f ,x,ffi, ffi, f ,x,mxfi, ffi, f ,x,mx.f ,x,mx.\n ffi, ffi, f ,x,mx.\n ffi, x,mfi, ffi, f ,x,mx.\n ffi,  ffi,\n ffmx.\n ff ffi -i -i"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
