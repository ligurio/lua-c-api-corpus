declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 8
                    expression: 0
                    message: "\242]]\354=rt5516+15-000000000-0x7 z[[rf"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 8
                    expression: 8
                    message: "[]]local    function f()    fu[[]]e=6i^[[]]local    function f()    fu[[]"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 8
                    expression: 0
                    message: "\242]]\354=rt5516+15-000000000-0x7 z[[rf"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 8
                    expression: 8
                    message: "]]end e[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 8
                    expression: 0
                    message: "\242]]\354=rt5516+15-000000000-0x7 z[[rf"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 8
                    expression: 8
                    message: "]]end e[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
