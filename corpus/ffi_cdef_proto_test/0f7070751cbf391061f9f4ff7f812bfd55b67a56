declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_atomic: -6
          }
        }
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 8
                    expression: 8
                    message: "g[[][]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,zz,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[][]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,zz,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J=[[ []]A,j,u=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J=[[  "
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_atomic: -6
          }
        }
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 8
                    expression: 8
                    message: "g[[][]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,zz,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[][]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,zz,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J=[[ []]A,j,u=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J=[[  "
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_atomic: 0
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      pointer_declarator {
        declarator {
          declarator_attr {
            name {
              name: ""
              num: 0
            }
            attr_spec_seq {
              keyword_fallthrough: 0
            }
          }
        }
      }
    }
  }
}
