declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 0
                    message: "c]]\354Name3itia\354\354:lifiers_list {\n   ############\377j\377:\377ier{\n   #############################fier*s_l+ist {\n  }\n      }\n    }\n    speci[[[[[[    }\n           }\na\nF"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "\242]]\354\354\354\354\354\354itia\354\354\354\354\354\354l\354\3541\354\354Name1XXXXX\354\354\354\354:\377iers_and_qualifiers_list {\n   ############\354dl\354\354ifiers_list {\n   ############################\341fier*s_l+ip5 {\n     \365  }\n      }\n    }\n    speci[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[a\nF"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 0
                    message: "c]]\354Name3itia\354\354:lifiers_list {\n   ############\377j\377:\377ier{\n   #############################fier*s_l+ist {\n  }\n      }\n    }\n    speci[[[[[[    }\n           }\na\nF"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n%\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n_Alignas\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndeclarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifier\n\n\n\n\n\n\n\n\n\n\n\n\n&\n\n\n\n\n\n\n\n\n*\n\n\n\n\n\n\n\n\n\n\ngoto0\n\n\n\n\n\n\n\n\n\n\n\n }        spes_list {\n          type_specifier {\n            void_type: 4\n          }\n        }\n        specifiers_list {\n          storage_class_specifier {\n            storage_class_typedef: 0\n          }\n        }\n      }\n    }\n  }\n  declarators_and_initializers {\n    declarators {\n      declarator_attr {\n        name {\n          name: \"\"\n          num: 4\n        }\n      }\n    }\n    declarators {\n      pointer_declarator {\n        qualifiers_list {\n          qualifiers_list {\n            type_qualifier {\n              keyword_acifi\n  tomic: 0\n            }\n          }\n        }\n        declarator {\n          declarator_parentheses {\n            declarator {\n              function_declarator {\n                noptr_declarator {\n                  declarator_at   tr {\n                    name {\n                      name: \"\"\n                         nu m: 4\n                    }\n                  }\n      "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 0
                    message: "c]]\354Name3itia\354\354:lifiers_list {\n   ############\377j\377:\377ier{\n   #############################fier*s_l+ist {\n  }\n      }\n    }\n    speci[[[[[[    }\n           }\na\nF"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
