declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 9
                    message: "\242]]\354\354\354a\354\354=\354c\377<\377exter\377\377\377\377\377 or {}\n>  exxe,\377goog\377J>   spe\377\377<\377\n>   spe,\377<\377er\377\n>   spe\377\377<\377erz\254\377\377\377\377>   spe\377exter\377\377\377\377\377  or {}\n>   spe,\377\377  or {}\n>   spe,\377<\377er\377\n>   spe\377\377<\377er\377\377\377\377\377>   spe,\377<\377er\377\n>   spe/\377<\377or\377,\377.\377er\377\n>   spe\377\377<\377er\377\377\377\377\377  or {}\n>  ex\377\377>   spe,\377<\377e>   spe\377\377<\377er\377\377\377\377\377  or {}\n>  exter\377\377constor {}\n>\377\377\377\377<\377exter\377\377\377\377\377  or {}\n>   s>  exter\377\377const\377\377va\354\354\354\354\377\377\377\377v\377/v\377\377\377\377<x0xt>   spe\377\377<\377er\377\377\377\377\377  or {}\n>  exxe,\377goog\377J>   spe\377\377<\377\n>   spe,\377<\377er\377\n>   spe\377\377<\377erz\254\377\377\377\377>   spe\377exter\377\377\377\377\377  or {}\n>   spe,\377\377  or {}\n>   spe,\377<\377er\377\n>   spe\377\377<\377er\377\377\377\377\377>   spe,\377<\377er\377\n>   spe/\377<\377or\377,\377.\377er\377\n>   spe\377\377<\377er\377\377\377\377\377  or {}\n>  ex\377\377>   spe,\377<\377e>   spe\377\377<\377er\377\377\377\377\377  or {}\n>  exter\377\377constor {}\n>\377\377\377\377<\377exter\377\377\377\377\377  or {}\n>   spe,\377<\377\377>   spe,\377goog\377\n>   spe\377\377<\377er\377else  or {}\n>  exter\377\377const\377\377va\354*s[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    expression: 1
                    message: "BBB]]g\003\000i>t[[]]go=i>s[[f]]go=#i>st[[]]go=#i>=#i>s[[f]st[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 637534208
                    message: "]]e=3i^r[[][[]]e=3i^r[[]r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 3
                    message: "\242]]\354\354\354\354dXXXXXX\354l\354\354\354{\n \354do0z\354\354\354=z\354\354\354\2272,\354\377\377\377s_list {\n      q\354=\354H\354\35421{\n     q\354=\354pecerx0ex,\354\377\377\377s_list {     q\354=\354pecers\35422,\354\377\37721{\n     \n       q\354=\354pecers2\2272,\354\377\377\377s_list {     q\354=\354pecers\354\2272,\354\377\377\377      }\n  \n        }\n      }\n    }\n,L\377Name4l;long{\354z0\354\354=G\344\354\354\2272,\354\377uns_list {\n      q\354=\354.\377\377\3771,\354\377tst {\n      q\354       }\n      }\n  \n      }\n      }\n    }\n[[[\354"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
