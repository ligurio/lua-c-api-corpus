declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 4
                    message: "\242]]nullptr{\n       #qrs_list {false\n        }{\nfalse\n        }{\n  i {false\n     }\n      }\n{false\n        }{\n    ist {false\n        }\n         }{\n  i {fals_list {false\n        }{    declarator {\n             s_list {false,        }{\n  i {false\n     }# {falsei_vol"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_atomic: 0
          }
        }
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 4
                    message: "\242]]nullptr{\n       #qrs_list {false\n        }{\nfalse\n        }{\n  i {false\n     }\n      }\n{false\n        }{\n    ist {false\n        }\n         }{\n  i {fals_list {false\n        }{    declarator {\n             s_list {false,        }{\n  i {false\n     }# {falsei_vol"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      function_declarator {
        noptr_declarator {
          function_declarator {
            noptr_declarator {
              pointer_declarator {
                declarator {
                }
              }
            }
          }
        }
      }
    }
  }
}
