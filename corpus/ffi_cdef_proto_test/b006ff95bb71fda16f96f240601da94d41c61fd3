declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 2
                    message: "]]\"if(i\\z\\zi\\z\\z]i\\z\\z` .fi\\z\\z` \\z\\z\\z\\z`f\\z\\z\\z\\z` "
                  }
                }
                struct_declaration_list {
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 0
                    message: "J]]while o do while so do while o do while so do s[[A-"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]]end end end end e[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 0
                    message: "J]]while o do while so do while o do while so do s[[A-"
                  }
                }
                struct_declaration_list {
                  bit_field {
                    name {
                      name: ""
                      num: 0
                    }
                    width: 0
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 0
                    message: "J]]while o do while o do while so do s[[A-"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]] end end  end e[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
