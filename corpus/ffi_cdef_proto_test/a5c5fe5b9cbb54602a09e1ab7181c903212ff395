declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    expression: 2
                    message: "?]]    function f()    fu[[]?]]    function f()        function f() function f() function f()    fu[[]?]]    function f()        function f() function f()    fuf()    fu[[]?        atomon f() function f() function f()    fu[[]?]]    function f()        function f() function f()    fur[[=3i^ype=n f()?]]    function f()    f() function f()    fu[[]?]]    function f()         function f() function f() function f()    fu[[]?]]    function f()        function f() fr[[=3i^ype=n f()?]]    function f()        function f() function f() function f()         function f() function f() function f()    fu[[]?]]    function f()        function f() function f()    fur[[=3i^ype=n f()?]]    function f()        function f() function f() function f()    fu[[]?]]    function f()        function f() function f()    fur[[=3i^yp function f() function f()    fur[[=3i^ype=n f()?]]    function f()        function f() function f() function f()    fu[[]?]]    function f()        function f() fr[[=3i^ype=n f()?]]    function f()        function f() function f() function f()         function f() function f() function f()    fu[[]?]]    function f()        function f() function f()    fur[[=3i^ype=n f()?]]    function f()        function f() function f() function f()    fu[[]?]]    function f()        function f() function f()    fur[[=3i^yp fu[[]?]    fur[[=3i^ype=[=3i^ype=n f() (u"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 2
                    message: "?]]    function f()    fu[[]?]]    function f()        function f() function f() function f()    fu[[]?]]    function f()        function f() function f()    fuf()    fu[[]?        atomon f() function f() function f()    fu[[]?]]    function f()        function f() function f()    fur[[=3i^ype=n f()?]]    function f()    f() function f()    fu[[]?]]    function f()         function f() function f() function f()    fu[[]?]]    function f()        function f() fr[[=3i^ype=n p()?]]    function f()        function f() function f() function f()         function f() function f() function f()    fu[[]?]]    function f()        function f() function f()    fur[[=3i^ype=n f()?]]    function f()        function f() function f() function f()    fu[[]?]]    function f()        function f() function f()    fur[[=3i^yp function f() function f()    fur[[=3i^ype=n f()?]]    function f()        function f() function f() function f()    fu[[]?]]    function f()        function f() fr[[=3i^ype=n f()?]]    function f()        function f() function f() function f()         function f() function f() function f()    fu[[]?]]    function f()        function f() function ff {\\n  f{\\n   f_type {i {\\n  f {\\n \\()    fur[[=3i^ype=n f()?]]    function f()        function f() function f() function f()    fu[[]?]]    function f()        function f() function f()    fur[[=3i^yp fu[[]?]    fur[[=3i^ype=[=3i^ype=n f() (u"
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
  }
}
