declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          alignment_specifier {
            alignment_specifier_Alignas: 4
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          alignment_specifier {
            alignment_specifier_Alignas: 4
          }
        }
        specifiers_list {
          type_specifier {
            struct_type {
              attr_spec_seq {
                keyword_fallthrough: 0
              }
              struct_declaration_list {
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "A]]C=\377:A[[[[[o[[[]]\377\n=\377:\377[[[t[[[]]\377\n=\377:\377[[[ti]]\377x4=\377:\377[[[]]\377\n=\377:\377[[[[]]x4=\377:A[[[[[o[[[]]:A[[[[]]\377C=\377:\377[[[[]]x4=\377:\377\377[[[]]x4=\377:\377[[[tiA]]C=\377:A[[[[[\377:\377[[[[]]x4=\377:wh[[[]]x4=\377:\377[[[tiA]]C=\377:A[[[\377[[[[]]x4=\377:A[[[[[o:\377[[[tiA]]C=\377:A[[[\377[[[[]]x4=\377:A[[[[[o[[[]]:A[[[[]]\377\n=\377:\377[[[[]]x4=\377:\377\377[[[]]x4=\377:\377[[[tiA]]C=\377:A[[[[[\377:\377[\377[[[]]\377\n=\377:\377[[[[]]x4=\377:\377\377[[[]]x[[[]]:A[[[[]]\377\n=\377:\377[[[[]]x4=\377:\377\377[[[]]x4=\377:\377[[[tiA]]C=\377:A[[[[[\377:\377[[[[]]x4=\377:A[[[[t[[[]]\377\n=\377:\377[[[ti]]\377x4=\377:\377[[[]]\377\n=\377:\377[[[[]]x4=\377:\377\377[[[]]x4=\377:\377[[[ti"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            arithmetic_type {
              type_float_imaginary: 0
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      array_declarator {
        qualifiers_list {
          qualifiers_list {
            type_qualifier {
              keyword_volatile: 0
            }
          }
        }
      }
    }
  }
}
