declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 0
                    message: "J]]   do do   s[[o dAo do[A%]]do do  do do s[[-*J]]   do do   s[[   do do   s[[A%]]do do  do do s[[-"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 6
                    expression: 0
                    message: "#]]zD=\354p5,nil,nil ,nil,nil,nil,nil c0=g,nil,ng,nil,nil ,nil,nl5a,nil,nil \354[[* e@"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 6
                    message: "#]]zD=\354p5,nil,nil ,nil,nil,nil,nil c0=g,nil,ng,nil,nil ,nil,nl5a,nil,nil \354[[* e@"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 7
                    expression: 7
                    message: "]]\354=_R<\377 and[[f`f`]]l=ty<P and[[f]]l=ty<P and[[f"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
