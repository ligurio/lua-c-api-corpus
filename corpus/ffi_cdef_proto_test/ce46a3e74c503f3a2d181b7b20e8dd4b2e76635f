declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "\242]]e5\354con1(\354lz\354\354\354\354\354nd..nnnnnnnliznntiali..nnnnnnnnninitialize..n..ors_nnnnnnne..n..ors_and..nnnnnnnnntializnntiali_and..nnnnnnnnnnnninitialize..n..ors_nnnnnnne..n..ors_and..nnnnnnnnntializnntiali_and..nnnnnnnnne..n..ors_and..nnnnnnnnntializnntiali..nnnnnnnnninitialize..n..ors_and..nnnnnnnnntianitiad..nnnnnnnntianitialize..n..ors_and..nnnnnnnnntialiliznnnitialize..n..ors_and..nnnnnnnnntialiliznnnnnninitininitialize..n..ors_and..nnnnnnnnntializnnnze..n..oss_ad..nnnnnnnnntiali_and.n} "
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "?z]]Name8i4=\354exc,not not [[_]$_Dla]]\354_Deci4=x,not not [[z]]Ai4=\354exc,not not [[_]$_Dla]]\t_Deci4=x,not not [[lexlex]?z]]i4=x,not not [[lexlex]?z]]l_Deci4=#-not not [[_]$_Dlas]]u_Deci4=xo,not not [[lassx]?z]]l_Deci4=#-noto,not not [[lass_spes"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
