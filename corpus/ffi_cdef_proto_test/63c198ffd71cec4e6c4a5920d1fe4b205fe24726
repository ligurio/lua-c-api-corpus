declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 8
                    message: "`]]br\354NN\"\"\"\"\"\"\"\"\"!\"\"\"\"_a0E\"\"_a0E16\"\"\"\"\"\"(\"\"\"\"\"pecers\"0\335z\335\"\"ur\"\"const2\"\"typ8re(\"\"_Dec\"\"\"\"\"\"\"pecers_l\"\"\"\"\"0\335z\335\"\"\"[[ers[ciifiers_and"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 8
                    expression: 9
                    message: "\242]]br\354NN\"\"\"\"\"\"\"\"\"!\"\"\"\"ty\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"\"\"pecers_l\"\"\"\"\"0\335z\335\"\"\"\"\"\"!\"\"\"\"\000Name2\"\"\"\"lbre(\"\"_Dec\"\"\"\"\"\"\"\"\"\"vo\"\"\"\"Nase0\335z\335\"\"\"\"\"\"!\"\"\"\"\000Name2\"\"\"\"lbre(\"\"\"[[\"\"\"\"[[[[ers[cifiers_anpecifiers_and"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 8
                    expression: 0
                    message: "\242]]br\354NN\"\"\"\"\"\"\"\"\"!\"\"\"\"_a0E\"\"_a0E16\"\"\"\"\"\"(\"\"\"\"\"pecers\"0\335z\335\"\"urGo7\"\"\"\"cDec\"\"\"\"\"\"\"pecers_l\"\"\"\"\"0\335z\335\"\"\"[[ers[ciifiers_and"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
