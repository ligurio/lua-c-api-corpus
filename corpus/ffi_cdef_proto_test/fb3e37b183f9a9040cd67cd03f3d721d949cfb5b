declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 8
                    expression: 0
                    message: "/]];t {   }do do s[[("
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 8
                    expression: 0
                    message: "/]];t {   }do do s[[("
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 0
                    message: "`]]\354xx,z=7<n[[*r]]\354x8,z=7<n[[*r"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 0
                    message: "`]]\354xx,z=7<n[[*r]]\354x8,z=7<n[[*r"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 8
                    expression: 0
                    message: "/]];t {   }do do s[[("
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 8
                    expression: 0
                    message: "/]];t {   }do do s[[("
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    initializers {
    }
  }
}
