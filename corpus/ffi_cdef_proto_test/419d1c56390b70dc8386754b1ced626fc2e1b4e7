declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "[[[]]local   c =  t0[[]001"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 1
                    message: "]  struct_declaration_list {\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_1: 4\n                    expression: 8\n                    message: \"\\242]--[[7]]--[[--]]--[[--y  \\2556]]--[[--y ]]--[[--ypc00]]--[[---y ]]--[[--y \\2557]]--[[--]]--[[--y  \\2556]]--[[--y ]]--[[--ypc00]]--[[---y ]]--[[--ypc00]]--[[--yp [[--ypc00]]--[[]]--[[--ypc00]]--[[--yp [[--y]]--[[--y  \\2556]]--[[--y ]]--[[--ypc00]]--[[---y ]]--[[--ypc00]]--[[--yp [[--ypc00]]--[[]]--[[--ypc00]]--[[--yp [[--ypc00]]--[[---y ]]--[[--[--]]--[[--y  -[[--yp 6[--yp 600]]--[[-\\2557]]--[[--]]--[[--y  \\2556]]--[[--y ]]--[[--ypc00]]--[[---y ]]--[[0--[[---[[--y \\2557]]--[[--]]--[[--y  A6]]--[[--y ]]--[[--ypc00]]--[[---y ]]--[[--[--]]--[[--y  -[[--yp 600]]--[[--e00]]--[[--yp \\2556]]--[[--]]--[[--y  -[ [[--yp \\2557]]--[[--]]--[[--y \\2557]]--[[--]]--[[--y  \\2556]]--[[--y ]]--[[--ypc00]]--[[---y ]]--[[--ypc00]]--[[--yp [[--ypc00]]--[[]]--[[--ypc00]]--[[--yp [[--ypc00]]--[[---y ]]--[[--[--]]--[[--y -[[--y \\354]]--[[---y ]]--[[-6]]--[[--y \\354\"\n                  }\n                }\n                struct_declarati]~=z,[[]]~=z,[["
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
