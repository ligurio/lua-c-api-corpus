declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "\242]]\354l\354\354sd {\n       #qrs_list {falseW        }{\n    ist {false\n        }\n      }\n    }l\354\354\354\354st {\n       #qrs_list {false\n        }{  }{\n  i {false\n     }\n      }\n    }\n    spato[[[st {falseJ     l\242]]\354l\354\354st {\n ist {false\n        }{\n    ist {false     }\n      }\n    }l\354\354\354\354st {\n   list {false\n        }{\n  i {false\n     }\n      }\n    }\n    spato[[[st {falsc     "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "\242]]\354l\354\354sd {\n       #qrs_list {falseW        }{\n    ist {false\n        }\n      }\n    }l\354\354\354\354st {\n       #qrs_list {false\n        }{  }{\n  i {false\n     }\n      }\n    }\n    spato[[[st {falseJ     l\242]]\354l\354\354st {\n ist {false\n        }{\n    ist {false     }\n      }\n    }l\354\354\354\354st {\n   list {false\n        }{\n  i {false\n     }\n      }\n    }\n    spato[[[st {falsc     "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "]]\354=\377\377<\377 and[[f`]]l=ty<P and[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 7
                    expression: 2
                    message: "]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]eertyp=3i^r[[]]e=3i^r[[]]ertype=6i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3i^r[["
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 9
                    expression: 9
                    message
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
