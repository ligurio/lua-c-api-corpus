declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 3
                    message: "J]]while o do while so do while o do while so do s[[A-"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 3
                    message: "]]goto l go[["
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 8
                    expression: 0
                    message: "[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[[[[]]local   c    t0[[Alignasa       message: \"[]]local   c    t0[[[[[[20\\234\\23        }\n            \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\\243\\232Name2       message: \"[]]local   c    t0[[[[]              }\n          message: \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[cal   c    t0  t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\\   }\n        0 0   "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]]end end e\222\244[["
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    expression: 0
                    message: "]]end end e\222\244[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]]end end el2ll"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
        }
      }
    }
  }
}
