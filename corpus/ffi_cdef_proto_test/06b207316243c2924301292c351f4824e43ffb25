declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: ")]]\3548[[@s]]\354n[[-s]]\354\354[[2\rS_Aligl]]\354n[[\r\r \r   [[  [[[]]l\354[[\rs]]\354n[[\r\r ]]\354\354[[\rs]]\354\354[[\rs]][[  [[[]_Decimal32n[[#S ]]l\354[[\rs]]\354\354[[2\rS_Alig]]_7[[-s]]\354\354[[yype_  [[[]]\354\354[[\rs]]\354n[[\r\r ]]\354\354[[\r]]\354n[[-s]]\354\354[[2\rS_Aligl]]\354n[[\r\r M   [[  [[[]]l\354[[\rs]]\354n[[\r\r ]]\354\354[[\rs]]\354\354[[\rs]][[S_Aligl]]\354n[[  [[[]]\354\354[[-s]]\354n[[vo0]]\354\354[[\rs]]\354\354[[2\rSOAlig]]\354\354[[\rs]]\354\354[[1ig]]_7[[\rs]]\354\354[[2"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]]go=#i>=#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "[[[]]local   c   t0[[]\243\236\223\337\347 c    t000"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
