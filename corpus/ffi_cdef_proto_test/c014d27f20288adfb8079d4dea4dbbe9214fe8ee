declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
      }
      specifiers_list {
        specifiers_list {
        }
        specifiers_list {
          type_specifier {
            arithmetic_type {
              type_long_double: 0
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
      }
      specifiers_list {
        specifiers_list {
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 0
                    message: "+]]\354tyll\354i_Bits_list {\n   ############\354falsers_liwt {\n   #############################fiers_list {\n       }\n      }\n    }\n [[[[[[fiercla\n ####alifi"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 0
                    message: "[]]ll=2,o,nd[[[]]\354\354=b0,E,nnd\3542,o,nd[[[]]l\354=rs,o,nnd[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "+]]\354tyll\354i_Bits_list {\n   ############\354falsers_liwt {\n   #############################fiers_list {\n       }\n      }\n    }\n [[[[[[fiercla\n ####alifi"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "\n\niOOOOOOOOOOOOOOOOOOOO0[      \n\ndentifiert iers_list                              stat"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
      }
      specifiers_list {
        specifiers_list {
        }
        specifiers_list {
          type_specifier {
            arithmetic_type {
              type_unsigned_long_long_int_1: 0
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
        specifiers_list {
          type_specifier {
            arithmetic_type {
              type_unsigned_long_long_int_1: 0
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
      }
      specifiers_list {
        specifiers_list {
        }
        specifiers_list {
          type_specifier {
            arithmetic_type {
              type_unsigned_long_long_int_1: 0
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
      }
      specifiers_list {
        specifiers_list {
        }
        specifiers_list {
          alignment_specifier {
            alignment_specifier_Alignas: 3
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
      }
      specifiers_list {
        specifiers_list {
        }
        specifiers_list {
          type_specifier {
            arithmetic_type {
              type_unsigned_long_long_int_1: 0
            }
          }
        }
      }
    }
  }
}
