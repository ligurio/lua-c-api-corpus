declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: ""
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]]\354ll=qual  goto\n i   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i \354maledc8ou=\354l  goto\n il  goto\n i0  goto\n i4   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i \354maledwhou=\354l  goto\n i4 inlc000=nd_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i et [[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 3
                    message: "D]]th\354=\354 goto\n i1  goto\n _ui1  goto\n l   goto\n alal  goto\n i0  goto i1  goto\n _ui1  goto\n _alalal  goto\n i0   goto\n i et [[[[[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "r]] goto\n i1  goto\n _q  goto\n _ goto\n _q  goto\ni0  goto\n al  goto\n i0 goto\n i et[[[[[[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]]\354ll=qual  goto\n i   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i \354maledc8ou=\354l  goto\n il  goto\n i0  goto\n i4   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i \354maledwhou=\354l  goto\n i4 inlc000=nd_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i et [[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
