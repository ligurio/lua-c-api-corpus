declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "\242]]\354l\354x1_2tic\354\377\377\377s_list {\n      q\354=\354zzzz0{\ndo\354\354\354z\354\354\354=\354\354\354\2272,\354\377\377\377s_ {\n      q\354=\354\3540\354\3541,q-2,Name0_lis_list {\n      qualifiers_list {\n        qualifiers_list {\n          \354Rst{\n      qd=\354\354loz1fase2\377+s_list {\n        }\n      }\n  \n        }\n      }\n    }\n,\354\377\377\377boolA\377st {\354z\354\354\354=\354\344\354\354z1fase2\377_list   }\n      }\n  }\n    }\n[[[\354"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "U]] f ,x,mx.\n mx.\n ffi, ffi. f ,x,mx.\n ffi, ffi, fffi, ffi. f ,x,mx.\n ffi, ffi ,x, f ,x,mx.\n mx.\n ffi, ffi. f ,x,mx.\n ffi, ffi, fffi, ffi. f ,x,mx.\n ffi, ffi ,x,mx.\n ffi, ffi, fffi, ffi. f ,x, mx.\n ffi,mx.\n ffi, ffi, f ,x,ffi, ffi. f , f ,x,mx.\n ffi,  ffmx.\n mx.\n ffi, ffdeclarators_and_initializers,x,mx.\n mf,x,ffi, ffi. f , f ,x,mx.\n fmx.\n ffi, ffi, f ,x,ffi, ffi. f , f ,x,mx.\n ffi,  ffi,\n ffi ffi -i -i"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
