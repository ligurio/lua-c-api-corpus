declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "AA]]C\377=\377\377:L[[A]]B\377=\377:A[[[[[o[[[]]\377\n=\377:\377[[[t[[[]]\377\n=\377:\377[[[ti]]\377x4=\377:\377[[[]]\377\n=\377:\377[[[[]]x4=\377:\377[[[]]x4=\377:\377[[[ti"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 9
                    message: "BB]]g=#i>t[[[f]]go[[]]o=#i>st[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 6
                    message: "\242]]\354\354\354\354\354\354\354\354\354tions {\n{\n  \240467440737095516000000009551615*0000000000000000000000000000000000000000000000002,00000-0x703709551616446744073709551615-specifiers_0000700000000000184467440446744073709551615-specifiers_0000000009551615*00000,00000-0744073709551615*000073709551615*0000000000009551615*000000000000000000000000000000000000001,00000-0x700000000000184467440446744073709551615-specifiers_000051615*0000000000000000010000000000000000000001,000006-specifiers_000000declarat00095516000000000000001615-spe09500000000arat0009551615*000000i"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
