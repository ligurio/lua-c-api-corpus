declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 9
                    expression: 0
                    message: "1v1]];l=0-\275,{\n[[[09]];l_Deci{\n[[[0955E161E080]];l=0-Gbool{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-[[0E1v1]];l=0-\275,{\n[[[09]];l_Deci{\n[[[0955E161E161]5E1161E161]];l=0-\275,{\n[[[05*0erci{N[[[0955E161E161]];l=0-G,{\n[{\n[[!!]];\354=0-za_a,{\n[[[0E161]];l=0-1,{\n[{\n[[161E161]];l=[[[!!]];N=0-za_a,{\n[[[0E161]];l=0-1,{\n[{\n[[161E161]];l=[[[0955E161E161]];l=[[05*ers"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      pointer_declarator {
        declarator {
          declarator_attr {
            name {
              name: ""
              num: 0
            }
            attr_spec_seq {
            }
          }
        }
      }
    }
    declarators {
      function_declarator {
        noptr_declarator {
        }
        parameters_list {
        }
      }
    }
  }
}
