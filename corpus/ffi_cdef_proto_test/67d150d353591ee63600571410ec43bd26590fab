declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 1
                    message: "\242]]\354\354[[<s]]:\354n[[\r\r ]]\354\354[[\rs]]\354\354[[2\r.\r\r]]\354\354[[\rs]]:\354n[[\r= [[!s]]:n[[\r- ]] [[[]]\354\354[[\rs]]:n[[\r\354\354[[2\r.\r\r]]\354\354[[\rs]]:\354n[[&= [[!s]]:n[[\r- ]] [[[]]\354\354[[\rs]]:n[[M\r ]]\354\354[[\rs]]:\354n[[\r= [[!s]]:n[[*- ]] [[[][]]\354\354[[\rs]]:n[[nst [[[]]\354\354[[\rs]]:n[[\r ]]\354\354[[\rs]]\354\354_Algl   [[  ]]:n[[\r\r ]]\354\354[[\rs]]\354\354[[,s]]const [[[]]\354\354[[\rs]]:n[[\r1 ]]:\354n[[ss "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 3
                    message: "\242]]\354\354[[[]]\354\354[[\rs[\rs]]:n[[\r\r ]]\354\354[[\rs]]:\354n[[\r= [[!s]]:n[[\r- ]] [[[][]]\354\354[[\rs]]:n[[]]:\354n[[\r= [[!s]]:n[[\r- ]] [[[][]]\354\354[[\rs]] [[!s]]:n[[M- ]] [[[][]]\354\354[[Ds]]:n[[nst [[[]]\354\354[[!s]]:n[[\r ]]\354\354[[\rs]]\354\354_Algl   [[  ]]:n[[\r\r ]]s0[[\rs]]\354z[[,s]]co[[\r= [[!s]]:n[[M- ]] [[[][]]\354\354[[Ds]]:n[[nst [[[]]\354\354[[!s]]:n[[\r ]]\354\354[[\rs]]\354\354_Algl   [[  ]]:n[[\r\r ]]s0[[\rs]]\354\354[[,s]]const [[[]]\354\354[[\rs]]:n[[\rM ]]\354\354[[\rss "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 1
                    message: "\242]]\354\354[[<s]]:\354n[[\r\r ]]\354\354[[\rs]]\354\354[[2\r.\r\r]]\354\354[[\rs]]:\354n[[\r= [[!s]]:n[[\r- ]] [[[]]\354\354[[\rs]]:n[[\r\354\354[[2\r.\r\r]]\354\354[[\rs]]:\354n[[&= [[!s]]:n[[\r- ]] [[[]]\354\354[[\rs]]:n[[M\r ]]\354\354[[\rs]]:\354n[[\r= [[!s]]:n[[*- ]] [[[][]]\354\354[[\rs]]:n[[nst [[[]]\354\354[[\rs]]:n[[\r ]]\354\354[[\rs]]\354\354_Algl   [[  ]]:n[[\r\r ]]\354\354[[\rs]]\354\354[[,s]]const [[[]]\354\354[[\rs]]:n[[\r1 ]]:\354n[[ss "
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "Bdeclarations {\n  specifiers_and_qualifiers_nullptr    specifiers_and_q          struct_decl {\n       c_assert_1: 0\n                    expression: 0%                    message}\n           }\n}\n"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
