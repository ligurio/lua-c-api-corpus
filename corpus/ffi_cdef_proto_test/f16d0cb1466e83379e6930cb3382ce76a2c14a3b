declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: ""
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 738197508
                    message: "\242]]onst{[\242]=lnst{[\242]=lisuconst  }\n  [{[econst{[\242]=lnst,[\242]=lisuconst  }\n  [{[\242]=t{[\242]=lisuconst  }\n  [{[econst{[\242]=l\n  [{[econst{[\242]=lnst,[\242]=lisuconstst{[\242]=lnst{[\242]=lisuconst  }\n  [{[econst{[\242]=lnst,[\242]=lisuconst  }\n  [{[\242]=t{[\242]=lisuconst  }\n  [{[econst{[\242]=l\n  [{[econst{[\242]=lnst,[\242]=lisuconst  }\n  [{[\242]=t{[\242]=lisuconst  }\n  [{[\372\372\372\372\372\372\372\372\372\372\372[{[econst{[\242]=lnst,[\242]=lisuconst  }\n  [{[\242]=t{[\242]=lisuconst  }\n  ifi              ers_lie"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: ""
                num: 3
              }
              struct_declaration_list {
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            enum_type {
              enum_name {
                name: ""
                num: 4
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
