declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            arithmetic_type {
              type_short_int_2: 4
            }
          }
        }
        specifiers_list {
          function_specifier {
            keyword_inline: 8224
            keyword_noreturn: 0
          }
        }
      }
    }
  }
  attr_spec_seq {
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "U]] f ,x,mx.\n mName9fi, ffi. f ,x,mx.\n ffi, ffi, fffi, ffi. f ,x,mx.\n ffi, ffi ,x, f ,x,mx.\n mx.\n ffi, ffi. f ,x,mx.\nst {\n      specifiers_list {\n        specifiers_list {\n                      struct_decl, f ,x,ffi, ffi. f , f ,xfi, f ,x,ffi, ffi. f , f ,x,mx.\n fmx.\n ffi, ffi, f ,x,ffi, ffi. f , f ,x,mx.\n ffi,  ffmx.\n mx.\n ffi, ffi.\n fmx.\n ffi, ffi, f ,x,ffi, ffi. f , f , ffi, ffi. f ,x,mx.\n ffi, ffi, fffi, ffi. f ,x,mx.\n ffi, ffi ,i, ffi. f ,x,mx.\n ffi, ffi ,x,mx.\n ffi, ffi, fffi, ffi. f ,x, mx.\n ffi, ffi, f ,x, f ,x,mx.\n ffiffi, fffi, ffi. f ,ffi, f ,x,ffi, ffi. f ,fi, ffi. f ,x,mx.\n ffi, ffi , {\n  specifiers_and_quffi, ffi, ffi, f ,x, f ,x,mx.\n ffiffi, fffi, ffi. f ,ffi, f ,x,ffi, ffi. f , f ,x,mx.\n fmx.\n declarations {\n  specifiers_and_quffi, ffi, f ,x,ffi, ffi. f , f ,x,mx.\n ffi,  ffmxx, f ,x, {\n "
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          function_specifier {
            keyword_noreturn: 0
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
          }
        }
      }
    }
  }
}
