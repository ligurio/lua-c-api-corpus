declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              attr_spec_seq {
                keyword_fallthrough: 0
                keyword_noreturn_1: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    expression: 3
                    message: ":]]\354\354l=qual  goto\n i4  \t\354l=qual  goto\n i4  \t\354rs50=nd_0  goto\n i4  goto\n i \354marati\354\354z=\354l  goto\n i4 inline\354=nd_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i \354ma\354\354z=zl  goto\n i4 inline\354=nd_qual  goto\n i0 oto\n i4  \t\354l=qual  goto\n i4  \t\354rs50=n["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: ""
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 0
                    message: ":]]\354\354l=qual  goto\n i4  \t\354l=qual  goto\n i4  \t\354rs50=nd_0  goto\n i4  goto\n i \354marati\354\354z=\354l  goto\n i4 inline\354=nd_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i \354ma\354\354z=zl  goto\n i4 inline\354=nd_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i et [[["
                  }
                }
              }
            }
          }
        }
        specifiers_list {
        }
      }
    }
  }
}
