declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    expression: 3
                    message: "@]]do s[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "r]]lB\354=\354 goto\n i1  goto\n _qui1  goto\n _ goto\n _qualal  goto\n i0  goto\n as  goto\n i0 goto\n i et [[[[[[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "r]]lB\354=\354 goto\n i1  goto\n _qui1  goto\n _ goto\n _qualal  goto\n i0  goto\n as  goto\n i0 goto\n i et [[[[[[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 0
                    message: "\242]]\354\354\354=\354 goto\n i1  goto\n _qual  got\354\354=nd_qual  goto\n i0  goto\n to\n i\354=nd_qqual  goto\n i \354ma\354\354z=\354 goto\n i1  goto\n \n _qual  got\354\354=nd_qual  goto\n i0  got=nd_qual  goto\n i et [[[[[[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "r]]lB\354=\354 goto\n i1  goto\n _qui1  goto\n _ goto\n _qualal  goto\n i0  goto\n as  goto\n i0 goto\n i et [[[[[[[[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
