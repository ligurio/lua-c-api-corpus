declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "BBB]]g=#i>t[[]]go=#i>s[[f]]go=#i>st[[]]go=#i>st[[B]]g=#i>t[[]declarations {\n  specifiers_and_qualifiers_list {\n  }\n  declarators_and_initializers {\n  }\n  attr_spec_seq {\n  }\n}\ndeclarations {\n  specifiers_and_qualifiers_list {\n  }\n  declarators_and_initializers {\n  }\n  attr_spec_seq {\n  }\n}\ndeclarations {\n  specifiers_and_qualifiers_list {\n  }\n  declarators_and_initializers {\n  }\n  attr_spec_seq {\n  }\n}\ndeclarations {\n  specifiers_and_qualifiers_list {\n  }\n  declarators_and_initializers {\n  }\n  attr_spec_seq {\n  }\n}\ndeclarations {\n  specifiers_and_qualifiers_list {\n  }\n  declarators_and_initializers {\n  }\n  attr_spec_seq {\n  }\n}\ndeclarations {\n  specifiers_and_qualifiers_list {]go=#i>s[[f]]go=#i>\n  }\n  declarators_and_initializers {\n  }\n  attr_spec_seq {\n  }\n}\ndeclarations {\n  specist[[]]gofiers_and_qualifiers_list {\n  }\n  declarators_and_initializers {\n  }\n  attr_spec_seq {\n  }\n}\ndeclarations {\n  specifiers_and_qualifiers_list {\n  }\n  declara=tors_and_initializers {\n  }\n  attr_spec_seq {#i\n>st[[f  }\n}\n"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "BBB]]g=#i>t[[]]go=#i>s[[f]]go=#i>st[[]]go=#i>st[[B]]g=#i>t[[]]go=#i>s[[f]]go=#i>st[[]]go=#i>st[[f"
                  }
                }
                struct_declaration_list {
                  bit_field {
                    name {
                      name: "BBB]]g=#i>t[[]]go=#i>s[[f]]go=#i>st[[]]go=#i>st[[B]]g=#i>t[[]declarations {\n  specifiers_and_qualifiers_list {\n  }\n  declarators_and_initializers {\n  }\n  attr_spec_seq {\n  }\n}\ndeclarations {\n  specifiers_and_qualifiers_list {\n  }\n  declarators_and_initializers {\n  }\n  attr_spec_seq {\n  }\n}\ndeclarations {\n  specifiers_and_qualifiers_list {\n  }\n  declarators_and_initializers {\n  }\n  attr_spec_seq {\n  }\n}\ndeclarations {\n  specifiers_and_qualifiers_list {\n  }\n  declarators_and_initializers {\n  }\n  attr_spec_seq {\n  }\n}\ndeclarations {\n  specifiers_and_qualifiers_list {\n  }\n  declarators_and_initializers {\n  }\n  attr_spec_seq {\n  }\n}\ndeclarations {\n  specifiers_and_qualifiers_list {]go=#i>s[[f]]go=#i>\n  }\n  declarators_and_initializers {\n  }\n  attr_spec_seq {\n  }\n}\ndeclarations {\n  specist[[]]gofiers_and_qualifiers_list {\n  }\n  declarators_and_initializers {\n  }\n  attr_spec_seq {\n  }\n}\ndeclarations {\n  specifiers_and_qualifiers_list {\n  }\n  declara=tors_and_initializers {\n  }\n  attr_spec_seq {#i\n>st[[f  }\n}\n"
                      num: 0
                    }
                    width: 0
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "BBB]]g=#i>t[[]]go=#i>s[[f]]go=#i>st[[]]go=#i>st[[B]]g=#i>t[[]]go=#i>s[[f]]go=#i>st[[]]go=#i>st[[f"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
