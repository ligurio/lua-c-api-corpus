declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_restrict: 256
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_restrict: 256
          }
        }
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
            atomic_type {
              atomic_type: 0
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 2
                    message: "&]]it=zl-l  goto\n l   goto l  go [[i"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 2
                    message: "&]]it=zl-l  goto\n l   goto l  go [[i"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 2
                    message: "&]]it=zl-l  goto\n l   goto l  go [[i"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 2
                    message: "&]]it=zl-l  goto\n l   goto l  go [[i"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 2
                    message: "&]]it=zl-l  goto\n l   goto l  go [[i"
                  }
                }
                struct_declaration_list {
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    initializers {
    }
  }
}
