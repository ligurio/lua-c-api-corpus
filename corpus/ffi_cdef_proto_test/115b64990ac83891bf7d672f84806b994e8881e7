declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 8
                    expression: 8
                    message: "u]]boolig\354u={}\n  or \377Name11 or {}\n    or whu\377  or {}    or \377\377\377me11 or {}\n or gotoe11 or {}\n    or while0 or _Alig  or whil or while0 or {} or Name0  or while0 or 0 or 0 or 0  or 0 or 0 or   speci[[f"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 0
                    message: "\242]]\354\354\354l\354\354\354\354\354tions {\n{\n 90000000001,00000-0x7000.0000000000000000000000000000000000000000000000,00000-0x70000000000000000000000000000000000000000000000,000000000000000,00000-0x70000000000000000000000000000000000000000000000,00000- \24046744073709000000ion000001,00000-0x7000.00000000000000000000,00000-0x70000000000000000000000000000000000000000000000,00000- \24046744073709000000ions {\n{\n 90000001,00000-0x700000000,000000000000,00000-0x70000000000000000000000000000000000000000000000,00000-for67\354{\n 90000001,00000-0x7000.00000000000000000000,00000-0x70000000000000000000000000000000000000000000000,00000- \24046744073709000000ions {\n{\n 90000001,00000-0x7000.00000000000000000000000000000000000000000000,00000- vo67440737090000001,0067440000000000000000000,00000- \240467440737090000001,0067440737090000001,00000-0x7000.0040737090000001,00000-0x7000.00000000000000000000000000000000000,0000.000000000000specifiers_and_qu0"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
