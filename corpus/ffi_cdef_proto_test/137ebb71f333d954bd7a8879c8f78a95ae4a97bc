declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 0
                    message: "\242]]l\354\354\354\354NNNNNNNNNNNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"NNNNNNNNNNNNNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"[[[[ers[cifiers_anpecifiers_and"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 0
                    message: "\242]]W=re{} {de}    os=re{}\n  or r {de}    or e0  peci[[[ci[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 0
                    message: "\242]]l\354\354\354\354NNNNNNNNNNNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"NNNNNNNNNNNNNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"[[[[ers[cifiers_anpe\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"NNNNNNNNNNNNNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"cifiers_and"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "\242]]\354\354\354\374\354\354itia\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354_and_qualifiers_list {\n   #####\n                    message: \"]]s {\\n orsconst    rator {\\n  dece: \\\"/]]ions {\\\\n  s {\\\\n  specifi\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\2\\\\\\2\\\\\\\"\\\\\\\"br\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\6\\\\\\\"\\\\\\\"\\\\\\\"X\\\\036\\\\\\\"\\\\\\\"\\\\extern\\\\005\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\\\\ece: \\\"/]]ions {\\\\\\\\\\\"\\\\\\\"\\\\  #         _Alig              [[[[[[[[[[ors {\\n     rator goog dece: \\ns {f\\n  _Alignasspecifcifi\\\\\\\"\\\\\\\"\\\\\\\"\\\\\\\"\"\\\\\\\"L\\\\\"\\Z\\\"\\@S\"\\\\\\03kkkk\"\\\\L\"]\\\\%\\\\T#\\\\005\\\\\\\"RA\\\"   qualifiers_list {\n          type_qualiffiers_a\n\354"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
