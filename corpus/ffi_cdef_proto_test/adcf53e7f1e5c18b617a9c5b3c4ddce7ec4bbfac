declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: ""
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "\242]]  ff{\n  ffi -\n ffi -\n  ffi -\n ffi -\n   fffi -\n  fi {\n  ffif\n  f-i -\n i {\n  ffi -\n ffi -_ -\n ff_Ali -\n ffi -\n i {\n ffi -\n ffi -\n -\n ffi -\n ffi"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "]_]][9999999999.9000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\r\r\r\r\r\r\r\r\r<\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r9999.900000000500000000000000000000000000000000000000000000\r\r\r\r\r\r<\r\r\r\r\r\r\r\r\r\r-\r\r999999.9000000005000000000\r\r\r\r\r\r\r\r\r\r<\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r999999.9000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\r\r<-\r\r\r\r\r\r\r\r\r\r\r\r\r\r999999.90000000050000000000000000000000000000000000000000000000000000000000\r\r\r\r\r\r\r\r\r\r<\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r999998.90000000050000000000000000000000000000000000000000000000000000000000000\r\r\r\r\r\r\r\r\r\r<\r\r\r\rualifiers_list {\n        qualifiers_list {\n   \r\r\r\r\r\r\r\r\r999999.9000000005\r\r\r\r\r\r\r\r\r<\r\r\r\r\r\r\r\r\r\r\r\r\rA\r999999.9000000005000000000000000000000000\r\r\r-_BitInt\r\rfiers_an0000000000000000000000000\r\r]]]]]]"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
