declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            arithmetic_type {
              type_Decimal64: 262160
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 1834756
                    message: "\316\000]\354\354[[\rs]]\354n[[1s]]\354\354[[2\rS_Aligl_]\354\354l[[2-.\r\r   [\r\r ]]\354l[[Msg]]_\354l[[2ig]]_7[[:s]]\nl[[/2\r.\r]   [[  [[[]]\354\354[[[\rs]]\354n[[\rMs]]l\354[[2\rS_Alig]]\354\354\354[[2\r.\r\r   [[  [[[]]\354\354[[\rs]]\3542[[2\rS_Alig"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      function_declarator {
        noptr_declarator {
          function_declarator {
            noptr_declarator {
              declarator_parentheses {
                declarator {
                }
              }
            }
            parameters_list {
              parameters {
                parameters {
                  name {
                    name: "2"
                    num: 0
                  }
                }
              }
              ellipsis: 0
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 4
                    message: "-]]\354p\354\354Name4s {\n{0B000000001+00009551615*00000,00000-0B000000000000100000000+000000-0B000000000000100000000+0000000000,000000000000000000i"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      function_declarator {
        noptr_declarator {
          function_declarator {
            noptr_declarator {
              declarator_parentheses {
                declarator {
                }
              }
            }
            parameters_list {
              parameters {
                parameters {
                  name {
                    name: "2"
                    num: 0
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
