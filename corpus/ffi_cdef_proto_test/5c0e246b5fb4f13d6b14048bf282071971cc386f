declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            enum_type {
              enum_name {
                name: "OOOOOOOOOOOOOOOOOOOO"
                num: 0
              }
              constant {
                name: "OOOOOOOOOOOOoOOOOOOO"
                num: 0
              }
              constant {
                name: "OOOOOOOOOOOOVOOOOOOO"
                num: 0
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            enum_type {
              enum_name {
                name: "OOOOOOOOOOOOUVOOOOOO"
                num: 0
              }
              constant {
                name: "OOOOOOOOOOOOOVOOOOOO"
                num: 0
              }
              constant {
                name: "OOOOOOOOOOOOOOOOOOOO"
                num: 0
              }
              constant {
                name: "OOOOOOOOOOOOOOOOOOOO"
                num: 0
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              attr_spec_seq {
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 4
                    message: "V]]::xx::::decl::::deccl::::decl1l1::amo[[t:"
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 4
                    message: "]]e=3i^r[[[[]]ertype=3i^ri^r[[]]e=3i^er[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
