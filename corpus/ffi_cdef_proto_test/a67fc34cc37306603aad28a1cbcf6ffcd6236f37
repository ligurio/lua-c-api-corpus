declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 0
                    message: "[[[]]local   c    t0[[[[]]local   c  t0[[]\243\223\220\234\236\223 t000"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 0
                    message: "[[[]]local   c    t0[[]\243\223\220\234\236\223\337\347 c    tdeclarations {\n  specifiers_and_[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[0f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f\"\n                  }                static_assertion {\n                    static_assert_2: 946895220\n                 0   e"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 9
                    expression: 0
                    message: "?]]    function f()    fu[[]]e=3i^r[[]]ertyp=3i^r[[=3i^ype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^i^r[[]]e=3i^r[[]nction f()(   fun?]]    function f()    fu[[]]e=3i^r[[]]ertyp=3i^r[[=d"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 9
                    expression: 4
                    message: "[[[]]local   c    t0[[[[]]local   c  t0[[]\243\223\220\234\236\223 t000"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
