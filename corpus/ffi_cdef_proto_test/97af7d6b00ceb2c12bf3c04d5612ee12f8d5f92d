declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "\242]]\354=ra\3775*0000000000009551615*0000000000000000000000000000000000000000000000002,00000-05-spec0000001615-specifiers_0000000009551615*00000,00000-0744073700000000000000000000000000000000000001,000006-specifiers_000000declarat00095737095516+15-s*00000000000000000000001,00000-0x7000000000001844674404467 or \354[[rlongf"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 3
                    message: "c]]\354\354\354\354\354\354const\354\354\354\354fe:irils_list {\n   ############\377\377\377:voe{\n   #############################fier*s_000st {\n        }\n      }\n    }\n    sp[[[[[[[[[[[[fiers_a\n  c_assert#####}\n    a\nF"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 4
                    message: "c]]\354\354l\354d_0a\354\354\354\354:lifiers_list {\n   #########z{\n   #####  #############################fier*s_l+ist {\n       }\n      }\n    }\n    speci[[[[[[[[[[iers_a\n  rs an  }\n      }\n    }\n  \nF"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 3
                    message: "]]  f,x,mx,\n fffmx,\n ffi,\n ffii,mx,\n ffi,\n ffmx,\n ff,\n ffmx,\n ffi,\n ffii,mx,\n ffi,-i"
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
