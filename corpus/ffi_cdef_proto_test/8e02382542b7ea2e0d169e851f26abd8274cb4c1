declarations {
  attr_spec_seq {
    keyword_reproducible: 858993459
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_restrict: 3866624
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      declarator_attr {
        name {
          name: "\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274,\377\377\377\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274\274"
          num: 0
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 1
                    expression: 1
                    message: "&]]z.oz=e or _F[[fa]]n0.z=er or _F[[&]]z.oz=e or _F[[fa]]n0.z=er or _F[[f1]]n.z=r or _F[[]]n.z=r or _F[[f1]]n.z=r or _F[[]]n.z=r or _F[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 1
                    expression: 1
                    message: "&]]z.oz=e or _F[[fa]]n0.z=er or _F[[&]]z.oz=e or _F[[fa]]n0.z=er or _F[[f1]]n.z=r or _F[[]]n.z=r or _F[[f1]]n.z=r or _F[[]]n.z=r or _F[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
