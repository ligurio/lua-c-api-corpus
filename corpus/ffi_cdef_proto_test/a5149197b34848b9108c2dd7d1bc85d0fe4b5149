declarations {
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 7
                    expression: 7
                    message: "\242]]\354\354[[\rs]]:\354n[[_Decima[[\rs]][[\rs]]:\354n[[\r= [[!s]]:n[[[]]\354\354n[[\r= [[!s]]:n[[\r[[\r=([[![\rs]]:\354n[[\r= [[!s]]:n[[\r[[M= [[!s]]:n[[\r- ]] [[[]]\r\354[[[\rs]]:ln[[\r= [[!s]]:n[[(-[[[]].\354[[c4]]:n[[\r ]]l\354[[\rs]].\354_Algl   [[  ]]:n[[\r\r ]]\354\354[[\rs]]\354\354[[0000000000000000000000000000000000000000"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 7
                    expression: 7
                    message: "\242]]\354\354[[\rs]]:\354n[[`co]]de[[$s]]\354\354[[2Z.\r\r]]\354\354[[\rs]]:\354n[[\r= [[!s]]:n[[\r- ]][[\r- ]] [[[]]\354q[[\rs]]:n[[\r\354\354[[4\r.P\r]]\354\354[[\rs]]:\354n[[\r= [[!s]]:n[[@- ]] [[[s]]:n[[\r\r \354\'[[\rs]]:n[[\r- ]]\354\354[[\rss "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 7
                    expression: 7
                    message: "\005   struct_declaration_list {\n                  static_assertion {\n                    static_assert_2: 0\n                    expression: 0\n                    message: \"]]c=not t[[\"\n                  }\n                }\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_2: 6\n                    expression: 4\n                    message: \"]]or[[\"\n                  }\n                }\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_2: 0\n                    expression: 0\n                    message: \"]]c=not t[[\"\n                  }\n                }\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_2: 6\n                    expression: 4\n                    message: \"]]or[[\"\n                  }\n                }\n              }\n            }\n          }\n        }\n        specifiers_list {\n          type_specifier {\n            union_type {\n              struct_declaration_list {\n                struct_declaration_list {\n                  static_assertion {\n                    static_assert_1: 0\n                    expression: 6\n                    message: \"]]c=not t[[\"\n                  }\n                }\n                struct_declaration_list {\n                  static_assertion {\n                    s"
                  }
                }
                struct_declaration_list {
                }
              }
            }
          }
        }
      }
    }
  }
}
