declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 3
                    message: "]]go=#i>=#i>#i>=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#ideclarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            arithmetic_type {\n              type_float_imaginary: 1\n            }\n          }\n        }\n        specifiers_list {\n          function_specifier {>#i>=#i>[[f]]go=#i>=#i>#i>=[[f$$]]go=#i>=#ii>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#\n     i>=#[[f$]]     go= "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 4
                    message: "]]end \377\013nd[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
