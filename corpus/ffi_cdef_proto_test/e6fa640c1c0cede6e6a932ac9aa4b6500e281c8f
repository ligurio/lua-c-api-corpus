declarations {
  declarators_and_initializers {
    initializers {
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          function_specifier {
          }
        }
        specifiers_list {
        }
        specifiers_list {
          type_specifier {
            struct_type {
              name {
                name: "A"
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    expression: 0
                    message: "A"
                  }
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    expression: 0
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
        specifiers_list {
        }
        specifiers_list {
        }
        specifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
    }
  }
}
declarations {
  declarators_and_initializers {
    declarators {
      function_declarator {
        noptr_declarator {
        }
      }
    }
  }
}
