declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 0
                    message: ";]]ol=O<a  and[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 4
                    message: "]]or 8 and 8 and[[]]or 8 and[[]]or 8 and[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    expression: 4
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          function_specifier {
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 2
                    message: "\242]]ll=ual  g2.\354=2ll  t [[t"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 0
                    message: "!!]];\354=0-\275a_a,{\n[[]];\354=0-\275a_a,{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0E161]];l=0-\275,{\n[[[05*0ers[0E]];l=0-\275,{\n[[=0-\275a_a,{\n[[]];\354=0-\275a_a,{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0E161]];l=0-\275,{\n[[[05*0ers[0E]];l=0-\275,{\n[[[05*0er[05*0ers"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 2
                    message: "!!]];\354=0-\275a_a,{\n[[!!]];b=0-\275a_a,{\n[[[0E1!!]];\354=0,{\n[[!!]];b=0-\275a_a,{\n[[[0E1!!]];\354=0-\275a_a,{\n[[!)]];\354=0-\275a_a,{\n[[[0E161]161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275[[0955E1\275,{\n[[[0955E161E161]];l=0-\275,{\n-\275a_a,{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275[[0955E161E161]];l=0-\275,{\n[[[05*0ers61]];l=0-\275,{\n[[[0955E!161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
  }
}
