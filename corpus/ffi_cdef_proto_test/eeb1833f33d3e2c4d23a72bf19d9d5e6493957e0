declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 0
                    message: "\242]]\354\354\354\354l\354iticonst\354\354\354\354\354\354\354\354tt0\354\354=\354\35400000000000000,00000-0000000000000010000000001,-000000000009551615-specifiers_000009551615-specifiers0000000900000,00000-00000000000000184467440446744073709551615-specifier,s551615*00000,00000-0000000000000010000000000000000000000,00000-0000000000000014044651615-st {\n      qualifiers_list {\n        quali\354\354\354\354\354l{\n        };      }\n    }%\n[[[  }[[[[[[[[[l"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 28672
                    message: "U]] f ,x,mx.\n mx.\n ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,ffi, ffi. f ,x,mx.\n ffi, ffi ,x,mx.\n mx.\n ffi, ffi, f ,x, f ,x,mx.\n ffi, ffi ,x,mx.\n mx.\n ffi, ffi, f ,x,mx.\n ffi, ffi, f ,x,ffi, ffi. f , f ,x,mx.\n fmx.\n ffi, ffi, f ,x,ffi, ffi. f , f ,x,mx.\n ffi,  ffi,\n ffi ffi -i -i"
                  }
                }
                struct_declaration_list {
                }
              }
            }
          }
        }
      }
    }
  }
}
