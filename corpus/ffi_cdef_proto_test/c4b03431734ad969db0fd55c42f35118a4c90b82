declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      function_declarator {
        noptr_declarator {
        }
        parameters_list {
          parameters {
            parameters {
              name {
                name: ""
                num: 0
              }
            }
          }
        }
        attr_spec_seq {
        }
      }
    }
    declarators {
      function_declarator {
        noptr_declarator {
        }
      }
    }
    declarators {
      declarator_attr {
        name {
          name: ""
          num: 0
        }
      }
    }
    declarators {
      function_declarator {
        noptr_declarator {
        }
        parameters_list {
          parameters {
            parameters {
              name {
                name: ""
                num: 0
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 9
                    message: "]] function f()r[[]"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 2
                    message: "U]] ffi, f=ffi"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            enum_type {
              enum_name {
                name: ""
                num: 0
              }
              constant {
                name: "\377\377\377\377\377\377\000\000"
                num: 0
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    initializers {
    }
  }
}
