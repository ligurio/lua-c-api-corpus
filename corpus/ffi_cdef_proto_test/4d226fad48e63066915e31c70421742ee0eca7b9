declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 7
                    expression: 0
                    message: "\242]]\354\354\354\354\354NNNNNNNNNNNNNNNNNNNNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"NNNNNNNNNNNNNNNNNNNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"[[[[[[[[[cifiers_anpecifiers_and_qualifiers_list {\n    specifierss_anpecifiers_and"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 7
                    expression: 7
                    message: "H]]\377=3i^r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 7
                    message: "%]]goo\377\377\377\377\377\377\377\377\377er {\n            arithemticonste {i {\n  f {pe {i { { f {\n  f{\n  ffi {\nAligitic_tyfi{\n  ffi {\n \377\377.\377\377\377\377er {\n   {       arithmet{\n     ffi {\n pe {i_tyfi{\n  ffi {\n  ffi{\n  ffi {     arithmet{\n     themticonste {\n  ffi {\n  ffi{\n  ffitic_tyfi{\n  ffi {\n  ffi{\n    ffi {ticonste {\n  ffi {\n  ffi{\n  ffitic_tyfi{\n  ffi {\n  ffi{\n    fffi {\n         ffi {\n  ffi"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
