declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 5
                    message: "!{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[l=[[[0955E161E15]];l=0-\275,{\n[[[09]];l=0-\275,{\n[[[0955E1615E161E161]];lName5{\n[[BBBB{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[{\n[[!!]];\354=0-\275a_a,{\n[[[0E161]];l=0-\275,{a_a,{\n[[[0E1\2661]];l=0-\275,J0[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[l=[[[0955E161E15]];l=0-\275,{\n[[[09]];l=0-\275,{\n[[[0955E1615E161E10955E161E15]];l=0-y,{m[[[09]];l=0-\275,{\n[[[0955E1615E161E161]];l=0-\275,l=0-\275,{\n[[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E1[[0955E161E161]];l=0-\275,{\n[[[05*0ers[0E161]];l5E161E10-\275,{\n[[[l=[[[0955E161E15]];l=0-\275,{\n[[[09]];l=0-\275,{\n[[[0955E1615E161E10955E161E15]];l=0-y,{m[[[09]];l=0-\275,{\n[[[0955E1E161]];l=0-\275,{\n[[[05*0ers[0E161]];l=0-J,{\n[[[0955E161E161]];l=[[[0955E161E15]];l=0-y,{\n[[[09]];l=0-\275,{\n[[[0955E1615E161E161]];a_a,{\n[[[0E161]];l=0-\275,{\n[[[091]];l=[[[0955E161E15]];l=0-y,{\n[[[09]];l=0-\275,{\n[[[0955E1615E161E161]];a_a,{\n[[[0E161]];l=0-\275,{\n[[[0955E1610955E161E161]];l=[[05*ers"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 4
                    message: "]]0ll"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    initializers {
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 63231
                    expression: 3
                    message: "?]]    function f()    fu[[]]e=3i^r[[]]ertyp=3i^r[[=3i^ype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]    function f()    fu[[]]e=3i^r[[]]ertyp=3i^r[[=3i^ype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^i^r[[]]e=3i^r[[]nctio]]    function f()    fu[[]]e=3i^r[[]]eyp=3i^r[[=i^r[[]]ertyp=3i^r[[]]e=3i^i^r[[n f()(   fun?]]    function f()    fu[[]]e=3i^r[[]]ertyp=3i^r[[=3i^ypee=3i^r[[]]ertyp=3i^r[[]]e=3i^i^r[[]ction f() e=3i^i^r[[]]e=3i^r[[]nctio]]    function f()    fu[[]]e=3i^r[[]]eyp=3i^r[[=3i^ype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^i^r[[n f()(   fun?]]    function f()    fu[[]]e=3i^r[[]]ertyp=3i^r[[=3i^ypee=3i^r[[]]ertyp=3i^r[[]]e=3i^i^r[[]ction f() (u"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "\242]]goiidXXXXXoooo\354\354{\n ttttal2\354=zwh\354\2272,\354\377\377\377s_list {\n      q\354=\354H\354l21{\n  q\354=\354pecerx0ex,\354\377\377\377s_list {  const=x0ecerlon2,\354\377\37721{\n     \n       q\354=\354pecers2\2272,\354\377B\377s_list {          qa=\354pecers\354\2272,l\377  }\n         }\n      }\n    }\n,LtN  }\n[[QQ6"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
