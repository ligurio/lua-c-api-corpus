declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_const: 253
          }
        }
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 1
                    message: "]];l=[[][161]];l=[[[0y55E161E161]];l=[[]];l=[[05*ers1]];l=[[][0955E161E161]];l=[[[0y55E161E161]];l=[[]];l=[[05*ers61]];l=[[[0161E161]];l=[[]];l=[[55E161E161]];l=[[][0955E161E161]61E161]];l=[[]];l=[[05*ers1]];l=[[][0955E161E161]];l=[[[0y55E16ers05*ers"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_const: 253
          }
        }
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 1
                    message: "]];l=[[][161]];l=[[[0y55E161E161]];l=[[]];l=[[05*ers1]];l=[[][0955E161E161]];l=[[[0y55E161E161]];l=[[]];l=[[05*ers61]];l=[[[0161E161]];l=[[]];l=[[55E161E161]];l=[[][0955E161E161]61E161]];l=[[]];l=[[05*ers1]];l=[[][0955E161E161]];l=[[[0y55E16ers05*ers"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
          type_qualifier {
            keyword_const: 253
          }
        }
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: "\t\377\377\377"
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 3
                    message: "]]c[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  attr_spec_seq {
  }
}
