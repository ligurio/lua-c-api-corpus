declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 1
                    message: "[[[]]local  c =   t0[[]]local  c =   tR0[[]00o[]]local  c =   [[]\031]]local  c =   t0[[]]local  c =   t0[[]00o[]]local  clocal  c =   [[ t0[]00"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 8
                    expression: 0
                    message: "[]]local   c    t0[[[[]]local   c    t0[[[[[]aocal   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[] c    t0[[[[]]local   c    t0[[]\\243\\223  ression:\"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[] c    t0[[[[]]local   c    t0[[]\\243\\223     cal   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[] c    t0[[[[]]local   c    t0[[]\\243\\223  ression:\"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[] c    t0[[[[]]local   c    t0[[]\\243\\223       0 0   "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 3
                    message: "[[[]]local  c =   t0[[]]local  c =   t0[[]00o[]]local  c =   [[][]]local  c =   t0[[]]local  c =   t0[[]00o[]]local  c =   [[]0]]local  c =   [[ t0[]000]]local  c =   [[ t0[]00"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
