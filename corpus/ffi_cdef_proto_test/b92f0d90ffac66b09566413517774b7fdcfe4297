declarations {
  declarators_and_initializers {
    declarators {
    }
    declarators {
      array_declarator {
        keyword_static: 2
      }
    }
    declarators {
      array_declarator {
        keyword_static: 255
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
    declarators {
    }
    declarators {
      array_declarator {
        keyword_static: 2
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
  }
}
declarations {
  declarators_and_initializers {
    declarators {
    }
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
    declarators {
    }
    declarators {
      array_declarator {
        keyword_static: 0
        expression: 1
      }
    }
    declarators {
      array_declarator {
        keyword_static: 8
      }
    }
  }
}
declarations {
  declarators_and_initializers {
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
    declarators {
      array_declarator {
        keyword_static: 2
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
  }
}
declarations {
  declarators_and_initializers {
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
    declarators {
    }
    declarators {
      array_declarator {
        keyword_static: 0
        expression: 0
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
    declarators {
      declarator_attr {
        name {
          name: ""
          num: 0
        }
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
    declarators {
      array_declarator {
        keyword_static: 0
      }
    }
  }
}
