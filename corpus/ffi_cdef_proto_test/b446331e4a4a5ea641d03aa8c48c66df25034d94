declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 8
                    expression: 8
                    message: "?]]    function f()    fu[[]]e=3i^r[[]]ertyp=3i^ri^r[[]nction f()(   fun?]]    fuype=3i^r[[]]e=3i^i^\227[[]ct(u"
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 4194828288
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 6
                    expression: 6
                    message: "#]]zD=lli,nil,nil l=e5a,nl ,nill,[[ @"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 8
                    expression: 8
                    message: "?]]    function cdef.SersListf()    fu[[]?z.f()]]    function cdef.Speci:iersListf()    fu[[]?\377\377f()       nctction (0u"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 8
                    expression: 8
                    message: "?]]    function cdef.SersListf()    fu[[]?z.f()]]    function cdef.Speci:iersListf()    fu[[]?\377\377f()       nctcton (0u"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
