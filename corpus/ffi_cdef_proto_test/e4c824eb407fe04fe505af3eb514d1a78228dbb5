declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 7
                    message: "\242]]\354\354\354a\354\354=\354c\377er\377r\354\n>   spe,\377<\377er\377\n>pMe,\377<xt>tor {}\n>\377\377\377\377<\377exter.\377\377\377\377  or {}\n>   spe,\377<\377\377>   spe,\377goog\377\n<\377er\377\n>   spe\377\377<\377eor {}\n>  exter\377r\354\n>   spe,\377<\377er\377\n>pe,\377<xt> {thread_local{}\n,\377<\377erV\n<#_2_Alig0\377>   spe,\377<\377e>\354\n>     spName4og\377\n<\377er\377\n>   spe\377\377<\377eor {}\n>  exter\377r\354\n>   spe,\377<\377eName0e,\377<xt>togouLis\377\377\377\377<#extspe,\377<\377\377>   spe,\377goog\377J<\377er\377\n>   spe\377\377<\377eor {}\n>  enype {\n              struct_declaration_list {\n                str\377\377  or {}\n>   spe,\377<\377er\377\n>   spe\377\377<#_1_Alig0\377>   spe,\377<\377e>   spe\377\377<\377>   spe\377\377  or {}\n>   spe,\377\377\377<#erer\377r\354\n>   spe,\377<\377er\377\n>pe,\377<xt>tor {}\n>\377\377\377\377<\377exte_static: r {}\n>   spe,\377<\377\377>   spe, {}\n>  exter\377r\354\n>   spe,\377<\377eName0e,\377<xt>togouLis\377\377\377\377<#extspe,\377<\377\377>   spe,\377goog\377J<\377er\377\n>   spe\377\377<\377eor {}\n>  enype {\n              struct_declaration_list {\n                str\377\377  or {}\n>   spe,\377<\377er\377\n>   spe\377\377<#_1_Alig0\377>   spe,\377<\377e>   spe\377\377<\377>   spe\377\377  or {}\n>   spe,\377\377\377<#erer\377r\354\n>   spe,\377>\354\n>     spNxt>tor {}\n>\377\377\377\377<\377exte_stat\377\377<\377eor {}\n>  exter\377r\354   specifiers_list {\n          type_specifier er\377r\354\ns[[f"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
  }
}
