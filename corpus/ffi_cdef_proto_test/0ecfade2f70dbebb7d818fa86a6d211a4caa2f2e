declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 3
                    message: "]]go=#i>=#i>#i>=[[f$$]]go=#i>=#i>#i>=#i>[[f$]]go=#i>=#i>#i>=#i>i>=#i>#i>=#i>[[f]]go=#i>=#i>#i>=#ii>#i>=#i>i>=#i>#i>=#i>[[f]]go=#ii>#i>=#i>i>=#i>#i>=#i>[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "]]^r^r^i^z^r^r^r^z[["
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 6
                    expression: 7
                    message: "]]\354=_A<\377 a[[f]]l=ty<Pd[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 7
                    expression: 4
                    message: "\242]]\354\354\354\354B\354\354\354\354tions {\n{\n  \240467440737095516000000009551615*0000000000000000000000000000000000000000000002,00000-0x700000000000184467440446744073709551616-s*0000000000000000000000000000000001,00000-0x700000000000184467440446744073709551615-specifie3709551615-specifiers_0000000009551615-00000,000015*000000000000000000000000000000000000001,00000-0x700000000000184467440446744073709551615-specifiers_000051615*0000000000000000010000000000000000000001,000006-specifiers_000000declarat00095500002,00000-0x700000000000184467440446744073709551615-s*000000i"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
