declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  bit_field {
                    name {
                      name: ""
                      num: 393216
                    }
                    width: 0
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 4
                    message: "\242]]\354\354NNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"s4\"\"_A\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"NNNNNNNNNNNNNNNNNNNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"[[[[[[[iers_anpecifiers_and"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 8
                    message: "g[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[ ]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[  "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "g[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,z,u=g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[ ]]A,j,_OOOOOOO=[[g[[]]A,z,u=[[]]A,j,u=[[]]A,j,_=[[ ]]A,J,\354=[[  "
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
