declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              attr_spec_seq {
                keyword_reproducible: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "?]]    function cef.Spef()function cdef.Spef()    fu[[ti    ?]]    function cef.Spef()function cdef.Spef()    fu[[ti       nctio   nction (u"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "?]]    function cef.Spef()function cdef.Spef()    fu[[ti    ?]]    function cef.Spef()function cdef.Spef()    fu[[ti       nctio   nction (u"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
