declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 0
                    message: "]]e=3i^r[[]]ertyrtype=3i^r[[]]e=3i^r[[]]\270rtyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3i^r[[]]e=3i^r[[=3i^r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 0
                    message: "\242]]\354\354\354\354d_2t\354\354\354\354\354{\n \354\354l\354z\354\354\354=const1,\354\377\3771sWlist {\n      q\354=\354\354\354\354\3541,\354\377\377ex\377\377\377\3772,l\377\377\377s_list {\n      q\354=\354\354st {\n      q\354=\354\354\354\354     }\n  \n        }\n      }\n    }J[[[?"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "[]]ll=0,nd[[[]]N\354=\3542,\354,nd[[[]]l\354=\35422,o,nnd[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      declarator_parentheses {
        declarator {
          pointer_declarator {
            attr_spec_seq {
              keyword_maybe_unused: 2
              keyword_unsequenced: 2
            }
            declarator {
              function_declarator {
                noptr_declarator {
                }
                identifiers_list {
                  identifiers {
                    name: "\'"
                    num: 0
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
