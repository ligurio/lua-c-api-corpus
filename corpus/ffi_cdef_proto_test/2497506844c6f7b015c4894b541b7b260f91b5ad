declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: ""
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "\242]]\354=ra\3775*0000000000009500000009551615*000000000000002,00000-05-spec0000001615-specifi551615*00000,00000-07440737000000000000000000-0x700000000000184467440446744073709551615-specifiers_01,000006-speci000000000000001,00000-0x70000000000018446751615*000000000000002,00000-05-spec0000001615-specifi551615*00000,00000-07440737000000000000000000-0x700000000000184467440446744073709551615-specifiers_01,000006-speci000000000000001,00000-0x7000000000001844674404467 or \354[[rlongf"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: ":]]\354\354l=qual  goto\n i4  \t\354l=qual  goto\n i4  \t\354rs50=nd_0  goto\n i4  goto\n i \354marati\354\354z=\354l  goto\n i4 inline\354=nd_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i \354maled\354\354\354z=\354l  goto\n i4 inline\354=nd_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i et [[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 4
                    message: "]]a=[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 1
                    expression: 1
                    message: "\242]]~=ame9~=l~=\377h~=l~=\377\377~=x0l~=Name9~=e9~=l~=\377h~=l~=\377\377~=x0l~=Name9~=l~=\377h~=\377\377lh~=\377l~=[8,"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
