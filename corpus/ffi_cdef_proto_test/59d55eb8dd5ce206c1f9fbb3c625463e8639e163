declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            enum_type {
              enum_name {
                name: ""
                num: 0
              }
              constant {
                name: "_Decimal3"
                num: 2
              }
              constant {
                name: ""
                num: 8
              }
              constant {
                name: ""
                num: 1
              }
              constant {
                name: ""
                num: 8
              }
              constant {
                name: ""
                num: 1
              }
              constant {
                name: ""
                num: 0
              }
              constant {
                name: ""
                num: 0
              }
              constant {
                name: ""
                num: 0
              }
              constant {
                name: ""
                num: 0
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 32
                    expression: 0
                    message: "[]]local    function f()    fu[[]"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "[]]local    function f()    fu[[]"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 256
                    message: "[]]local    function f()    fu[[]"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
