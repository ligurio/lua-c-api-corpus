declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 2097184
                    message: "\242]]\354=ra000000000000000000000002,00000-05-spec00000000000000000000000000001,00000-0x700000000000184467440400000010000000000000000000001,000006-specifiers_000000declarat00095737095516+15-s*00000000000000000000001,00000-0x7000000000001844674404467 or \354[[rlongf"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 2097184
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 2097184
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 2097184
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 2097184
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 2097184
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 2097184
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
