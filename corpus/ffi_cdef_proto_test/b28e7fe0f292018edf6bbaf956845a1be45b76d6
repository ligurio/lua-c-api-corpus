declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "r]]lB\354=\354 goto\n i1  goto\n _qui1  goto\n _ goto\n _qualal  goto\n i0  goto\n as  goto\n i0 goto\n i et [[[[[[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "r]]lB\354=\354 goto\n i1  goto\n _qui1  goto\n _ goto\n _qualal  goto\n i0  goto\n as  goto\n i0 goto\n i et [[[[[[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 3
                    message: "&]]z.oz=e or _F[[fa]]n0.z=er or _F[[f1]]n0.z=er or _F[[fh]]n0.z=r or _F[["
                  }
                }
                struct_declaration_list {
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "r]]lB\354=\354 goto\n i1  goto\n _qui1  goto\n _ goto\n _qualal  goto\n i0  goto\n as  goto\n i0 goto\n i et [[[[[[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 3
                    message: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 7
                    message: "]]l=ty<f and[[f]]l=ty<P and[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 7
                    expression: 7
                    message: "]]l=ty<f and[[f]]l=ty<P and[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 7
                    message: "]]l=ty<f and[[f]]l=ty<P and[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
