declarations {
  attr_spec_seq {
    keyword_maybe_unused: 175841396
    keyword_noreturn_2: 175841396
    keyword_unsequenced: 0
    keyword_reproducible: 175841396
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 1
                    message: "K]]\3544=brZa,not [[4]]eci4=MO0a,not [[aV]]l4=z0Kza,not [[aV]]l4=z0Kza,not[[aV]]\3544=l-Xa,not [[aV]]l4=z0KzKza,not[[aV]]l4=KzKza,not[[aV]]l4=z0Kza,[[ des"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 1
                    message: "K]]\3544=brZa,not [[4]]eci4=MO0a,not [[aV]]l4=z0Kza,not [[aV]]l4=z0Kza,not[[aV]]\3544=l-Xa,not [[aV]]l4=z0KzKza,not[[aV]]l4=KzKza,not[[aV]]l4=z0Kza,[[ des"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 0
                    message: "+]]\354\354\354v\354\354\354\354\354\354l\354\354goo\354\354\354\354declaraarentheses {                          ame1   or { {\n                me1   or {whe0   or                                ame1   or {\n e0   or {\n     ame0   or {\n     ame1   or { {\n                                ame1   or {\n e0   or {\n       ame0   or {\n                                ame1   or {\n e0   or {\n              ame0   or {\n \n                 ame0   or {\n        e0   or {\n                   ame0   or {\n                                    ame0   or {\n                       ame0   or {\n         }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}]n f()    fu[[]]e=3i^r[[]]ertyp=\n"
                  }
                }
                struct_declaration_list {
                }
              }
            }
          }
        }
      }
    }
  }
}
