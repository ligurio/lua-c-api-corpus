declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 0
                    message: ":]]\354x\354=qual  goto\n i4  \t\354rs50=nd_0  goto\n i4  goto\n i \354ma\354ed\354\354lz=\354l  goto\n i4  goto\n i0  goto\n i4   goto\n_qual  gotoextern [[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 0
                    message: ":]]\354x\354=qual  goto\n i4  \t\354rs50=nd_0  goto\n i4  goto\n i \354ma\354ed\354\354lz=\354l  goto\n i4  goto\n i0  goto\n i4   goto\n_qual  gotoextern [[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            enum_type {
              enum_name {
                name: "OOOOOOOOOOOOOOOOOOO"
                num: 4
              }
              constant {
                name: "OOOOOOOOOOOOOOOOOOOO"
                num: 4
              }
              constant {
                name: "OOOOOOIOOOOOOOOOOOO"
                num: 4
              }
              constant {
                name: "OOOOOOOOOOOOOOOOOOOO"
                num: 0
              }
              constant {
                name: "OOOOOOOOOOOOOOOOOOO"
                num: 4
              }
              constant {
                name: "tttttttttttttttttttt"
                num: 4
              }
            }
          }
        }
        specifiers_list {
          function_specifier {
            keyword_noreturn: 0
          }
        }
      }
    }
  }
}
