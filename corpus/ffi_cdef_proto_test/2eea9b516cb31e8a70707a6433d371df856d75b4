declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 251
                    expression: 0
                    message: ",]]l= not not g l= not not g o[[,]]l= not not g l= not not g o[["
                  }
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 97
                    message: ",]]l= not not g l= not not g o[[,]]l= not not g l= not not g o[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: ",]]l= not not g l= not not g o[[,]]l= not not g l= not not g o[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 3
                    message: ",]]l= not not g l= not not g o[[,]]l= not not g l= not not g o[["
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 3
                    message: "[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\243\223\220cdelarations {\n  specifiers_and_qualifiers_liswhile   specifit0[[[[[]]local   c    t0[[[[]local   c    t0[[[[]]local   c    t0[[]\\24       specifiers_list {2          type_specifier {\n            typeof_operator {\n            }\n          }\n        }\n                 eage: \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c   t0[[[[]]local   c    t0[[]\\243 specifit0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\\24       }\n        }\n                 expression: 0\n                    message: \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\\243\\223       0 0   "
                  }
                }
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 8
                    expression: 0
                    message: "[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\243\223\220cdelarations {\n  specifiers_and_qualifiers_liswhile   specifit0[[[[[]]local   c    t0[[[[]local   c    t0[[[[]]local   c    t0[[]\\24       specifiers_list {2          type_specifier {\n            typeof_operator {\n            }\n          }\n        }\n                 eage: \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c   t0[[[[]]local   c    t0[[]\\243 specifit0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\\24       }\n        }\n                 expression: 0\n                    message: \"[]]local   c    t0[[[[]]local   c    t0[[[[[]]local   c    t0[[[[]]local   c    t0[[]\\243\\223       0 0   "
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
