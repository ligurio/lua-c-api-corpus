declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  bit_field {
                    width: 2359296
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 512
                    expression: 7
                    message: "*[[]]ont8=\ti or \354{}s=2 or wh[[)]]me0W=-ca_Bi or lx0l {}wntz=a_Bi or SintSii[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 7
                    expression: 7
                    message: "*[[]]ont8=\ti or \354{}s=2 or wh[[)]]me0W=-ca_Bi or lx0l {}wntz=a_Bi or SintSii[[f"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 7
                    expression: 7
                    message: "*[[]]ont8=\ti or \354{}s=2 or wh[[)]]me0W=-ca_Bi or lx0l {}wntz=a_Bi or SintSii[[f"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              name {
                name: ""
                num: 0
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: ")]]\354(\354\354XXXXXXXXXXXXXX\'XXX_BitInt\377z\3775\377constXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXonstXXXXXXXXXXXXXXXXXXXXXXXXonstXXXXXXXXXXXXnstXXXXXXXXXXXXXXXXXXXXXXXXonstXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXonstXXXXXXXXXXXXXXXXXXXXXXXXonstXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX+clarations {\n  attXXXXXXXXXXc"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
