declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 2
                    message: "\242]]\354NNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"NNNNNNNNNNNNNNNNNNNNNN\"\"\"\"\"\"\"\"\"\"\"\"i0\"Name61\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"[[[[[[iers_list {\n    specifiers[cifiericifiers_anpecifiers_and"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 3
                    message: "]]er=3i^r[[]]etvtt=3i^r[["
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 2
                    message: "\242]]\354\354e\354d_2ticonst\354\354\354\354\354\354\354\354{\n \354\354\354\354z\354\354\354=\354\354\354\354\2272,false_list {\n      q\354=\354\354\354\354\3541{\n \354\354\354\354z\354\354\354=\354\354\354\354\2272,\354\377\377\377s_list {\n      q\354=\354\354\354\354\354+1,\354\227\377\377s_list {\n    q\354=\354\354\354\354\354+1,\3541,\354\377st{\n      q\354=\354\354\354\354\3541,\354\377t\354\354\354\354\354\377\377s\n      }\n  \n      }\n      }\n    }\n,\354\377\377\377bool\377\377st {\354z\354\354\354=\354\344\354\354\2272,\354\377\377\377s_list {\n      q\354=\354\354\354\354\3541,\354\377t\354\354\354\354\354+\377st {\n        }\n      }\n  \n        }\n      }\n     }\n[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 0
                    message: "\242]]\354\354\354\354\354\354\354\354\354tions {\n{\n  \24046744073709551615*000073709551615*1000000000009551615*0000000000000000000000000000000000000000000000002,00000-0x700-s*000000000000000000000000000000000000001,00000-0x700000000000184467440446744073709551615-specifiers_0000000009500000009551615*00000000000000000000000000000000001,00000-0x700000000000184467440446744073709551615-specifiers_000051615*0000000000000000010000000000000000000001,000006-specifiers_000000declarat000955160000002,00000-0x700000000000184467440446744073709551615-s*000000000000000000000000000000000000001,00000-0x700000000000184467440446744073709551615-specifiers_0000000009500000009551615*000000000000000000000000000000000000001,00000-0x700000000000184467;40446744073709551615-specifiers_0000000009551615*00000,00000-001,000006-specifiers_000000declarat0009551615*000000i"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
