declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          function_specifier {
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 3
                    message: "?]] function f(c,\377)u[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 0
                    message: "AA]]\377=U\377:L[[A][[]][[[]]\377:p5[[]]\377x=u:\377[[[ti]]\377\377=\377:\377[[[[[[]]x4=w:h[[[]]\377\n=\377:\377[[[t[[ti]]\377\377=\377:\377[[[[[[]]x4=w:h[[[]]\377\n=\377:\377[[[ti]]\377x=u:\377[[[ti]]\377\377=\377:z0[[[[[]]x4\377=\377:z0[[[[[]]x4=w:h[[[]]\377\n=\377:\377[[[ti]]\377\377=\377:\377[[[[[[]]x=\377:\377[[[]B\377=\377:A[[[[[o[[[]]\377\n=\377:\377[[[ti]]\377\377=\377:\377[[[[[[]][[[]]\377:\377[[[]]\377x=u:\377[[[ti]=u[[[[[[]]x4=w:h[[[]]\377\n=\377:\377[[[ti]]\377\377=\377:\377[[[[[[]]x=\377:\377[[[titi"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "AA]]\377=U\377:L[[A][[]][[[]]\377:p5[[]]\377x=u:\377[[[ti]]\377\377=\377:\377[[[[[[]]x4=w:h[[[]]\377\n=\377:\377[[[t[[ti]]\377\377=\377:\377[[[[[[]]x4=w:h[[[]]\377\n=\377:\377[[[ti]]\377x=u:\377[[[ti]]\377\377=\377:z0[[[[[]]x4\377=\377:z0[[[[[]]x4=w:h[[[]]\377\n=\377:\377[[[ti]]\377\377=\377:\377[[[[[[]]x=\377:\377[[[]B\377=\377:A[[[[[o[[[]]\377\n=\377:\377[[[ti]]\377\377=\377:\377[[[[[[]][[[]]\377:\377[[[]]\377x=u:\377[[[ti]=u[[[[[[]]x4=w:h[[[]]\377\n=\377:\377[[[ti]]\377\377=\377:\377[[[[[[]]x=\377:\377[[[titi"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  declarators_and_initializers {
    initializers {
    }
  }
}
