declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 5
                    message: "U]] fxa, ffi. f,x,mx.i, ffi. f ,x,mx.\n ffi, ffi ,x,mx.\n i, ffi, f ,x,ffi, ffi. f ,  ffi, f ,x,f ,  ffi, f ,x,ffi, ffi.  ffi,  ffi,goff-i -i"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 5
                    message: "U]] fxa, ffi. f,x,mx.i, ffi. f ,x,mx.\n ffi, ffi ,x,mx.\n i, ffi, f ,x,ffi, ffi. f ,  ffi, f ,x,f ,  ffi, f ,x,ffi, ffi.  ffi,  ffi,goff-i -i"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 5
                    message: "U]] fxa, ffi. f,x,mx.i, ffi. f ,x,mx.\n ffi, ffi ,x,mx.\n i, ffi, f ,x,ffi, ffi. f ,  ffi, f ,x,f ,  ffi, f ,x,ffi, ffi.  ffi,  ffi,goff-i -i"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 5
                    message: "U]] fxa, ffi. f,x,mx.i, ffi. f ,x,mx.\n ffi, ffi ,x,mx.\n i, ffi, f ,x,ffi, ffi. f ,  ffi, f ,x,f ,  ffi, f ,x,ffi, ffi.  ffi,  ffi,goff-i -i"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
