declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 9
                    message: "A]]l=3i^r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 9
                    message: "\242]]\354longNNNNNNNNNNNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"\"\"un\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"NNNNNNNNNNNNNNNNNNNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"[[[[ers[fiers_anpecifiers_and"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 9
                    expression: 4
                    message: "\242]]\354longNNNNNNNNNNNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"\"\"un\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"NNNNNNNNNNNNNNNNNNNNNN\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"x0\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"(\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"[[[[ers[fiers_anpecifiers_and"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 9
                    message: "\242]]on{\354\354\354zc8\354=\354\354\354\354\2272,\354\377\377\377s_list {\n\354\354\354z\3542_Decis_list {\n      q\354=\354\354\354\354l1,\354\377\377\377\377\377\377\377l0st {\354z\354\354\354=\354\354\354\354\2272,\354x0\377s_li }\n    }\n[[[\354"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          function_specifier {
            keyword_noreturn: 538976256
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 4
                    message: "]]a=[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 1
                    expression: 1
                    message: "\242]]~=ame9~=l~=\377h~=l~=\377\377~=x0l~=Name9~=e9~=l~=\377h~=l~=\377\377~=x0l~=Name9~=l~=\377h~=\377\377lh~=\377l~=[8,"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
