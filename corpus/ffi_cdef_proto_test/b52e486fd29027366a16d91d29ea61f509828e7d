declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              attr_spec_seq {
              }
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 2
                    message: "?]]  function f()    fu[[]]e=3i^r[[ (u"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 131072
                    expression: 2
                    message: "U]] f ,x,mx.\n mx.\n ffi, ffi. f ,x,mx.\n ffi, ffi, fffi, ffi. f ,x,mx.\n ffi, ffi ,x, f ,x,mx.\n mx.\n ffi, ffi. f ,x,mx.\nst {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            union_type {\n              struct_declaration_list {\n                struct_declarat, ffi. f , f ,x,mx.\n fmx.\n ffi, ffi, f ,x,ffi, ffi. f , f , ffi, ffi ,x, f ,x,mx.\n mx.\n ffi, ffi. f ,x,mx.\n ffi, ffi, fffi, ffi. f ,x,mx.\n ffi, ffi ,x,mx.\n ffi, ffi, fffi, ffi. f ,x, mx.\n ffi, ffi, f ,x, f ,x,mx.\n ffi, ffi ,x,mx.\n mfi, ffi, f ,x,ffi, ffi. f , f ,x,mx.\n fmx.\n ffi, ffi, f ,x,ffi, ffi. f , f ,x,mx.\n ffi,  ffmx.\n mx.\n ffi, ffi, f ,x, f ,x,mx.\n ffi, ffi ,x,mx.\n mfi, ffi, f . f , f ,x,x.\n fx,mx.\n ffi,  ffmx.\n mx.\n ffi, ffi, f ,fffi, ffi. f ,x,mx.\n ffi, ffi ,x,mx.\n ffi, ffi, fffi, ffi. f ,x, mx.\n ffi, ffi, f ,x, f ,x,mx.\n ffi, ffi ,x,mx.\n mfi, ffi, f ,x,ffis_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            union_type {\n              struct_declaration_list {\n                struct_declarat, ffi. f , f ,x,mx.\n fmx.\n ffi, ffi, f ,x,ffi, ffi. f , f , ffi, ffi ,x, f ,x,mx.\n mx.\n ffi, ffi. f ,x,mx.\n ffi, ffi, fffi, ffi. f ,x,mx.\n ffi, ffi ,x,mx.\n ffi, ffi, fffi, ffi. f ,x, mx.\n ffi, ffi, f ,x, f ,x,mx.\n ffi, ffi ,x,mx.\n mfi, ffi, f ,x,ffi, ffi. f , f ,x,mx.\n fmx.\n declarations {\n  specifiers_and_quffi, ffi, f ,x,ffi, ffi. f , f ,x,mx.\n ffi,  ffmx.\n mx.\n ffi, falifiers_list {\n    specifiers_ax,mx.\n mx.\n ffi, ffi. f ,x,mx.\n ffi, ffi, fffi, ffi. f ,x,mx.\n ffi, ffi ,x, f ,x,mx.\n mx.\n ffi, ffi. f ,x,mx.\nst {\n      specifiers_listfi, ffi, f ,x, f ,x,mx.\n ffi, ffi ,x,mx.\n mfi, ffi, f ,x,ffi, ffi. f , f ,x,mx.\n fmx.\n ffi, ffi, f ,x,ffi, ffi. f , f ,x,mx.\n ffi,  ffmx.\n mx.\n ffi, ffi, f ,x, f ,x,mx.\n ffi, ffi ,x,mx.\n mfi, ffi, f . f , f ,x,mx.\n fx,mx.\n ffi,  ffmx.\n mx.\n ffi, ffi, f ,fffi, ffi. f ,x,mx.\n ffi, ffi ,x,mx.\n ffi, ffi, fffi, ffi. f ,x, mx.\n ffi, ffi, f ,x, f ,x,mx.\n ffi, ffi ,x,mx.\n mfi, ffi, f ,x,ffis_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specclarat, ffi. f , f ,x,mx.\n fmx.\n ffi, ffi, f ,x,ffi, ffi. f , f , ffi, fmx.\n mx.\n ffi, ffi, f ,fffi, ffi. f ,x,mx.\n ffi, ffi ,x,mx.\n ffi, ffi, fffi, ffi. f ,x, mx.\n ffi, ffi, f ,x, f ,x,mx.\n ffi, ffi ,x,mx.\n mfi, ffi, f ,x,ffis_and_qualifiers_list {\n    specifiers_and_quilafiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            ufi ,x, f ,x,mx.\n mx.\n ffi, ffi. f ,x,mx.\n ffi, ffi, fffi, ffi. f ,x,mx.\n ffi, ffi ,x,mx.\n ffi, ffi, fffi, ffi. f ,x, mx.\n ffi, ffi, f ,x, f ,x,mx.\n ffi, ffi ,x,mx.\n mfi, ffi, f ,x,ffi, ffi. f , f ,x,mx.\n fmx.\n declarations {\n  specifiers_and_quffi, ffi, f ,x,ffi, ffi. f , f ,x,mx.\n nd_qualifiers_list {\n      specifiers_list {\n        specifiers_listfi, f ,x, f ,x, {\n "
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
  }
  attr_spec_seq {
  }
}
