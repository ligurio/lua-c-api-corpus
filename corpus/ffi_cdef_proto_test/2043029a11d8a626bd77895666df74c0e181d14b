declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 8
                    message: "]]e=3i^r[[]]ertyp=6i^r[[]]e=3i^r[[]]ertype=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]eertyp=3i^r[[]]e=3i^r[[]]ert=6i^r[[]]e=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]ertype=3i^r[[]]ertyp=3i^r[[]]e=3i^r[[]]rtyp=3i^r[[]]e=3i^r[[]]ertyp=3i^r[[=3i^r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    expression: 0
                    message: ":]]\354\354l=qual  goto\n i4  \t\354l=qual  goto\n i4  \t\354rs50=nd_0  goto\n i4  goto\n i \354marati\354\354z=\354l  goto\n i4 inline\354=nd_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i ers50=nd_0  goto\n i4  goto\n i \354maled\354\354\354z=\354l  goto\n i4 inline\354=nd_qual  goto\n i0  goto\n i4   goto\n_qual  goto\n i et [[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 4
                    message: "(]](C%ty905*00000,00000-0B0000000,005*00000,000,00000-0B0000000,000-000000-0B000-0B00000000i-000000-0B000-0B000000%ty905*00000,00000-\377\377\377\377\377Name000000,000-000000-0B000-0B00000000i-000000-0B000-0B000000%ty905*000009,00000-\377\377\377\377\377Name4\377\377\377\377\357\377\377\377\377\377\377\377\37700000-0B000-0B00000000i-00-0B00000000i-000000-0B000-0B000000%ty905*00000,00000-\377\377\377\377\377Name4\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377+\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377-\377\377\377\377\377\377\3770-0B00000000i-000000-0B000-0B00000000-0B000-0B0000000-0B000-0B00000000i-00-0B00000000i-000000-0B000-0B000000%ty905*00000000000i-000000-0B000-0B000000%ty905*00000,00000-\377\377\377\377\377Name4\377\377\377\377\377\377\377\377\377\377\377\37700-000000-0B000-0B00000000i-000000-0B000-0B000000%ty9-0B000-0B00000000i-00-0B00000000i-0000000i-00-0B00000000i-000000-0B000-0B000000%ty905*00000,00000-\377\377\377\377\377Name4\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377+\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377-\377\377\377\377\377\377\3770-0B00000000i-000000-0B000-0B00000000-0B000-0B0000000-0B000-0B00000000i-00-0B00000000i-000000-0B000-0B000000%ty905*00000000000i-000000-0B000-0B000000%ty905*00000,00000-\377\377\377\377\377Name4\377\377\377\377\377\377\377\377\377\377\377\37700-000000-0B000-0B00000000i-000000-0B000-0B000000%ty9-0B000-\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\37700-0B000-0B00000000000-0B000-0B00000000-0B000-0B00000000i-000000-0B000-0B00000000i"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
