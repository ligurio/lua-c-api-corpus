declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 1
                    message: "K]]\3544=brZa,not [[J4]]\354_Deci4=M-\275a,not [[aV]]\3544=l-Xa,not [[aV]]l4=z0Kza,not [[aV]]l4=z0Kza,not [[J4]]\354_Deci4=l-za,not [[J4]]\354_Deci4=l-\275a,not [[aV]]l4=z0Kza,-c0,not [[aV]do des"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 1
                    message: "K]]\3544=brZa,not [[J4]]\354_Deci4=M-\275a,not [[aV]]\3544=l-Xa,not [[aV]]l4=z0Kza,not [[aV]]l4=z0Kza,not [[J4]]\354_Deci4=l-za,not [[J4]]\354_Deci4=l-\275a,not [[aV]]l4=z0Kza,-c0,not [[aV]do des"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
    }
  }
}
