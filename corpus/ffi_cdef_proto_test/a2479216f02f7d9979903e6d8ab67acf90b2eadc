declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 6
                    expression: 0
                    message: "\005   struct_declaration_list {\n                messafe: \"]]c=not t[[\"\n       \n                }\n     essage: \"]]or[[\"\n       eusassage: \"]]c=not t[[\"\n           tage: ?]]or[[\"\n   c_asse2: 0\n                "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 6
                    message: "\005   struct_declaration_list {\n                messafe: \"]]c=not t[[\"\n       \n                }\n     essage: \"]]or[[\"\n       eusassage: \"]]c=not t[[\"\n           tage: ?]]or[[\"\n   c_asse2: 0\n                "
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 6
                    expression: 0
                    message: "\005   struct_declaration_list {\n                messafe: \"]]c=not t[[\"\n       \n                }\n     essage: \"]]or[[\"\n       eusassage: \"]]c=not t[[\"\n           tage: ?]]or[[\"\n   c_asse2: 0\n                "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 6
                    message: "\005   struct_declaration_list {\n                messafe: \"]]c=not t[[\"\n       \n                }\n     essage: \"]]or[[\"\n       eusassage: \"]]c=not t[[\"\n           tage: ?]]or[[\"\n   c_asse2: 0\n                "
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
