declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "V]]::xx::::decl::::deccl::::decl1l1::amo[[t:"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 3
                    message: "D]]\354\354\354=\354 goto\n i1  goto\n _ui1  goto\n l   goto\n alal  goto\n i0  goto i1  goto\n _ui1  goto\n _qual   goto\n i et [[[[[[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 3
                    message: "D]]\354\354\354=\354 goto\ni1  goto\n _ui1  goto\n l   goto\n alal  goto\n i0  goto i1  goto\n _ui1  goto\n _qual   goto\n i et [[[[[[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 3
                    message: "D]]\354\354\354=\354 goto\n i1  goto\n _ui1  goto\n l   goto\n al_qual   goto\n i et [[extern[[[[[[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 3
                    message: "D]]\354\354\354=\354 goto\n i1  goto\n _ui1  goto\n l   goto\n alal  goto\n i0  goto i1  goto\n _ui1  goto\n _qual   goto\n i et [[[[[[[[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
