declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          function_specifier {
            keyword_noreturn: 0
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 0
                    expression: 0
                    message: "\242]]\354l\354\354sd {\n       #qrs_list {falseW        }{\n    ist {false\n        }\n      }\n    }l\354\354\354\354st {\n       #qrs_list {false\n        }{  }{\n  i {false\n     }\n      }\n    }\n    spato[[[st {falseJ     l\242]]\354l\354\354st {\n ist {false\n        }{\n    ist {false     }\n      }\n    }l\354\354\354\354st {\n   list {false\n        }{\n  i {false\n     }\n      }\n    }\n    spato[[[st {falsc     "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "\242]]\354l\354\354sd {\n       #qrs_list {falseW        }{\n    ist {false\n        }\n      }\n    }l\354\354\354\354st {\n       #qrs_list {false\n        }{  }{\n  i {false\n     }\n      }\n    }\n    spato[[[st {falseJ     l\242]]\354l\354\354st {\n ist {false\n        }{\n    ist {false     }\n      }\n    }l\354\354\354\354st {\n   list {false\n        }{\n  i {false\n     }\n      }\n    }\n    spato[[[st {falsc     "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "]]t,n=io[[]]t,a=\354[["
                  }
                }
                struct_declaration_list {
                  bit_field {
                    width: 0
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            struct_type {
              attr_spec_seq {
              }
              name {
                name: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                num: 0
              }
              struct_declaration_list {
              }
            }
          }
        }
      }
    }
  }
}
