declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "L]]::l::a[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "]]local c t[["
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 5
                    expression: 4
                    message: "]]goto l go[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 4
                    message: "[]]local function f()    f[[0"
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 4
                    message: ";]]\"\\\"\\u{dd}snst;u{n\\u{d}s\\u{dd}_s nOOOOOOOOd}_s\\u{dd}_sconst\\u{d}nf\\nn\\u{d}s\\u{dd}_s nd}_s n\\1n\\u{d}n@nst\\u{d}nT!nn\\u{d}s\\u{dd}_s nst\\u{d}nA^nn\\u{d}s\\u{dd}_s nCXn\\u{d}{d}s\\u{dd}_ nC"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
