declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 0
                    message: ",]]_declat{[\242]=\242,t=it  }\n  [{[_declat{[\242]=d,t=it  }\n  [{[t{[_Aligsb{[\242]=z,t=it  }\n  [{declarations {\n  specifiers_and_qualifiers_list {\n    specifiers_and_qualifiers_list {\n      specifiers_list {\n        specifiers_list {\n          type_specifier {\n            union_type {\n              struct_declaration_list {\n           c{[\242]=d,t=it  }\n  [{[t{[\242]=lnsb,t=laratat     struct_declaration_list {\n                  static_assertion {\n                    static_assert_2: 3\n       {[h]=lns\242,turGo=lnsb,t=laratat{[h]=ln,t=lart  ,t=laratat{[h]=lns             expression: 0\n                    message: \",]]_declat{[\\242]=\\242,t=it  }\\n  [{[_declat{[\\242]=d,t=it  }\\n  [{[t{[_Aligsb{[\\242]=z,t=it  }\\n  [{c{[\\242]=d,t=it  }\\n  [{[t{[\\242]=lnsb,t=laratat{[h]=lns\\242,turGo=lnsb,t=laratat{[h]=ln,t=lart  ,t=laratat{[h]=lns\\242,\242,tuturGrGo=atat{[h]=lno,"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
