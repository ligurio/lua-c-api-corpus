declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 2
                    message: "2]]ions {_ciffi=ers_lst {J  }\n}_Decimas_list {\n i=ers_alignaJ}\nffi=ers_list {H  } {H  }ons {_ciffi=ers_lst {\n  }\n};ffi=erons {_ciffm=ers_lst {\n  }\n}\n s_li{_=ers_aligna\n}\nffi=ers_lis_li{_=ers_aligna\n}\nffi=ers_list {\n  }ions {_ciffi=ers_lst {e  }\n};ffi=erons {_ciffi=ers_lst_lst {T  }}\n s_list {\n  }io"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
        qualifiers_list {
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
        qualifiers_list {
        }
      }
    }
  }
}
