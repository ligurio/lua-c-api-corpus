declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          function_specifier {
            keyword_noreturn: 0
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          function_specifier {
            keyword_inline: 6553600
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      qualifiers_list {
      }
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "]]l,z=7<n[[]]x8,z=7<n[[r]]lh8,z=7<n[[]]x,z=7<n[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "]]l,z=7<n[[]]x8,z=7<n[[r]]lh8,z=7<n[[]]x,z=7<n[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 3
                    message: "a]]c=is[c or r0R][X  or {}>2][[~"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 3
                    message: "a]]c=is[c or r0R][X  or {}>2][[~"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
