declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 3
                    expression: 4
                    message: "]]local  c t[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 9
                    expression: 9
                    message: "]]function f(G)r[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 3
                    expression: 5
                    message: "\005   struct_declaration_list {\nfiers_list {\n        }\n                    stat      messafe: \"]]c=not t[[\"\n                 do0    \"]]or[[\"\n    lifiers_list ge: \"]]c=not t[[\"\n           tage: \"]]or[[\"_Decimal12rt_2: 0\n                    expression: 0\n                    message: \"]]c=not t[[\"\n             tage: \"]]or[[&\n   c_assert_2: 0\n                    ex    messaot t[[wh                      s"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 1
                    expression: 0
                    message: "J]]   do do   s[[o declaratiist {\n        specifiers_lt {\n          type_specifier {\n                         message: \"]] goto o goto i l[[ _a\"]\n                  }\n                }\n              }\n            do do  do do s[[}\n  -        }\n        }\n      }\n    }\n  }\n}\n"
                  }
                }
              }
            }
          }
        }
      }
    }
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            union_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 4
                    expression: 4
                    message: "[]]local    function f()    f[[]0"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 1
                    message: "]]end e[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 1
                    message: "]]end e[["
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      function_declarator {
        noptr_declarator {
        }
        attr_spec_seq {
          keyword_noreturn_2: -10
        }
      }
    }
    initializers {
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            atomic_type {
              atomic_type: 0
            }
          }
        }
      }
    }
  }
}
