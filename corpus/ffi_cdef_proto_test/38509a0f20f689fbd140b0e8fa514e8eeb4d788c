declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 0
                    message: "]]\377=3i^[["
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 0
                    expression: 2
                    message: "\242]]\354lt {\n       #qrs0_list {false\n    }{\n       #qualifiers_list {falsOOOOOOOO  }\n      }\n    }l\354\354E0st {\n       #qrs_list {false\n        }{\n       #qualifiers_list {fal           }\n      }\n    }\n    spato[[[[o[[[     lt"
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_2: 2
                    expression: 0
                    message: "\242]]\354l\354\354st {\n       #qrs_list {fql   }{\n    ist {false\n       }\n      }\n    }l\354\354\354\354st {\n   list {false\n        }{\n  i {false\n     }  }\n    }\n    spato[[[st {false\n     l "
                  }
                }
              }
            }
          }
        }
        specifiers_list {
          type_specifier {
            struct_type {
              struct_declaration_list {
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 2
                    expression: 0
                    message: "\242]]\354l\354\354st {\n       #qrs_list {fq_Alig       }{\n    ist {false\n       }\n      }\n    }l\354\354\354\354st {\n       #qrs_list {false\n        }{\n  i {false\n     }  }\n    }\n    spato[[[st {false\n     l "
                  }
                }
                struct_declaration_list {
                  static_assertion {
                    static_assert_1: 4
                    expression: 2
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    initializers {
    }
  }
}
