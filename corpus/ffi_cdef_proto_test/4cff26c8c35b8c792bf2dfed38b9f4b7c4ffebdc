declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            enum_type {
              enum_name {
                name: ""
                num: 1702063205
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      declarator_parentheses {
        declarator {
          array_declarator {
            keyword_static: 2
          }
        }
      }
    }
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            enum_type {
              enum_name {
                name: ""
                num: 1702063205
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
      declarator_parentheses {
        declarator {
        }
      }
    }
    declarators {
      declarator_attr {
        name {
          name: ""
          num: 0
        }
        attr_spec_seq {
          keyword_reproducible: 131072
        }
      }
    }
    declarators {
    }
    declarators {
      declarator_parentheses {
        declarator {
        }
      }
    }
  }
  attr_spec_seq {
    keyword_deprecated_reason: 25600
  }
}
declarations {
  specifiers_and_qualifiers_list {
    specifiers_and_qualifiers_list {
      specifiers_list {
        specifiers_list {
          type_specifier {
            enum_type {
              enum_name {
                name: ""
                num: 0
              }
            }
          }
        }
      }
    }
  }
  declarators_and_initializers {
    declarators {
    }
    declarators {
      function_declarator {
        noptr_declarator {
        }
      }
    }
  }
  attr_spec_seq {
    keyword_fallthrough: 7565925
    keyword_nodiscard: 8
  }
}
declarations {
  declarators_and_initializers {
    declarators {
      array_declarator {
      }
    }
    declarators {
      function_declarator {
        noptr_declarator {
        }
      }
    }
  }
}
