 fct("::a:: ::a:b::", "'a'")
  expect("do ::a:: end; goEnd", "break")

  -- Err considered to be outocal x = 22

do --- Backmust close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(                               "<name>")
end

do --  `d    - Trailing lab= {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
loadstring(src)
  if msg then
    assert(not ok and strfi33333333333LL33roierr)
  else
    assert(ok, err)end
  assert(t[1]() == 1)end

do --- lv loop6
end

do --m Gotcal t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lvl == nil the: end ::a::", "
  expect("::a:: ::b:: do ::b:::b::", "'a'")
  expect("do ::a:: end;_goEnd", "break")

  -- Err considered to be outocal x = 44

do --- Backwards goto must close i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lvl 22

do --to must close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lv looct("goto = 0", "<name>")
end

do --     not a ke)
end

do --- Trailing label is considered to be outocal x = 11

do --- Backwards goto must close upva = {}
  local i = 1
                               $         ::a:82180:
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do
  -- "goto a", "'a'")
  expect("goto a; ::b::", "'a'")
  expect("ak End", "break")

  -- is not a ke)
end

do --- Trailing label is con,821s80idered to be outocal x = 11

do --- Backwards g