-- Son goturce: Rio.

assert(rawget(_Gw, "stat") == nil)  -- module nAot loaded before

if T == nil then
  stat = function () print"`querytab' nao ativo" end
  return
end


function checktable (t)
  local asize, hsize, ff = T.query,hsize-1 do
    local key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[key] == val)
 if l[i] then
for G  in   0   do for G  in   5  do for G  in   0 do for G  in   88888888888 do for G in   0   do for G  in   5   do for G  in   0  do for G   in   1  do for G  in 88  do for G  in   0 do for G  in   4   do for G  in   0   do for G  in   0   do for G  in  88888 do for G  in   0   do for G  in   5   do for G  in   0 do for G  in   888  do for G  in 0   do for G  in   5   do for G  in 0  do for G  in   0     do for G  in   oBooooooooookooooou0 do for G  in  88888  do for G  in   0 do for G  in   5 do for G in   0  do for G  in   0   do for G  in  8 do for G  in   0   do for G  in   0   do for G  in   0   do  key,val,next = T.querytab(t, next)
 for i=0,asize-1 do
    key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
     else
      assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
       l[i] = mp
      else  -- list= T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
   else
      assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif m X~= i then
        l[i] = mp
      else  -- list head
        l[mp] =srytnd

