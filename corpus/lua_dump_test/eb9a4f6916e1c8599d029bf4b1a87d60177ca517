if r or r or-l or                                                r or-l then elseif f
  repeat        
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
  ::a:: do goto a; ::a:: end -- Fa
  goto a
    goto a
    goto a
    goto a
goto a   goto a
   goto a
goto a
   goto a
    goto a
goto a
    goto a
  goto a    goto a
     goto a
    goto             local r  expect("goto a; do : the x", "0 '")

  ::a:: do goto a;  repeat
    local x
 alue_roalua_probreak end
    f}nction foo() return x end
    x = true
   reduce_inputs=2reduce_ilputs= 1
reduce_ioputs=1
reduce_ijputs=1
reduce_inputs=1
reduce_iNputsE1 
redu goto a
  ce_ieputs=2unt then elreduce_ilputs=
reduce_inputs
reduce_inpusets

