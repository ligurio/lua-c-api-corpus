        ut  {00000064666,       0^d00000000000000802-uA
}s=1 /   z-           ut  {000000666}s=1 /   - {0000006666664666,       0^d0000d00000000000000802-u00000000000802-uA
}s=1 /   z {00000066660006666664666,       0^d0003333329332,       0^d0000000000664666,       0^d00000000000000802-uA6   }s=1 /   z {0000006666664666,       0^d0000000000000080200006,       0^d000000000000006666664666,       0^d000000000802-uA
}s=1 /   z {0000006666664666,       0^d0000066664666-       0^d00000000000000802-uA
}s=1 /   - {0000006666664666,       0^d0000d00000000000000802-u00000000000802-uA
}s=1 /   z {0000006666664666,       0^d000000000000666,       0^d00000000000000802-uA
}s=1 /   z {0000006666664666,       0^d00000000000000802-uA
}s=1 /   z-           ut  {0000006666664666,       0^d000802-uA
}s=1 /   z-           t u {0000006666664666,       0^d00000000001000802-uA
}s=1 /   - {0000006666664666,       0^d00000000000000000666664666,       0^d00000000000000802-uA
}s=1 /   z-           ut  {0000006666664666,       0^d000000000}s=1 /   - {000,       0^d000000000000006666664666,       0^d00000000000000802-uA
}s=1 / 0  z {000006666664666,       0^d00000000000000802-uA
}s=1 /   z-   _       ut  {0000006666664666,       0^d00000000000000802-uA
}s=1 /   - {0000006666664666,       0^d0003333329332,       0^d00000000000000802-uA
}s=1 /   z {0000006666664666,       0^d00000000000000802-u664666,    }s=1 /   z {0000006666664666,       0^d00000000000000802-uA
}s=1 /   z-           ut  {615^d00000000000000802-uA
}s=1 /   - {000,       0^d000000000000006666664666,       0^d00000000000000802-uA
}s=1 / 0  z {000006666664666,       0^d00000000000,000802-uA
}s=1 /   z-           ut  {0000006666664666,       0^d00000000000000802-uA
}s=1 /   - {0000006666664666,       0^d0003333329332,       0^d0000000000664666,       0^d00000000000000802-uA6   }s=1 /   z {0000006666664666,       0^d0000000000000080200006,       0^d000000000000006666664666,       0^d000000000802-uA
}s=1 /   z {0000006666664666,       0^d0000066664666,       0^d00000000000000802-uA
}s=1 /   - {0000006666664666,       0^d0000d00000000000000802-u00000000000802-uA
}s=1 /   z {0000006666664666,       0^d000000000000666,       0^d00000000000000802-uA
}s=1 /   z {0000006666664666,       0^d00000000000000802-uA
}s=1 /   z-           ut  {0000006666664666,       0^d000802-uA
}s=1 /   z-    - {0000006666664666,       0^d0003333329332,       0^d0000000000664666,       0^d00000000000000802-uA6   }s=1 /   z {0000006666664666,       0^d0000000000000080200006,       0^d000000000000006666664666,       0^d000000000802-uA
}s=1 /   z {0000006666664666,       0^d0000066664666,       0^d00000000000000802-uA
}s=1 /   - {0000006666664666,       0^d0000d00000000000000802-u00000000000802-uA
}s=1 /   z {0000006666664666,       0^d000000000000666,       0^d00000000000000802-uA
}s=1 /   z {0000006666664666,       0^d00000000000000802-uA
}s=1 /   z-           ut  {0000006666664666,       0^d000802-uA
}s=1 /   z-           t u {0000006666664666,       0^d00000000000000802-uA
}s=1 /   - {0000006666664666,       0^d00000000000000000666664666,       0^d00000000000000802-uA
}s=1 /   z-           ut  {0000006666664666,       0^d000000000}s=1 /   - {000,       0^d000000000666664666,       0^d0000d00000000000000802-u00000000000802-uA
}s=1 /   z {0000006666664666,       0^d000000000000666,       0^d00000000000000802-uA
}s=1 /   z {0000006666664666,       0^d00000000000000,       0^d000802-uA
}s=1 /   zoooooooooqooou-    - {0000006666664666,       0^d0003333329332,       0^d0000000000664666,       0^d00000000000000802-uA6   }s=1 /   z {0000006666664666,       0^d0000000000000080200006,       0^d000000000000006666664666,       0^d000000000802-uA
}s=1 /   z {0000006666664666,       0^d0000066664666-       0^d00000000000000802-uA
}s=1 /   - {0000006666664666,       0^d0000d00000000000000802-u00000000000802-uA
}s=1 /   z {0000006666664666,       0^d000000000000666,       0^d00000000000000802-uA
}s=1 /   z {0000006666664666,       0^d00000000000000802-uA
}s=1 /   z-           ut  {0000006666664666,       0^d000802-uA
}s=1 /   z-           t u {0000006666664666,       0^d00000000001000802-uA
}s=1 /   - {0000006666664666,       0^d00000000000000000666664666,       0^d00000000000000802-uA
}s=1 /   z-           ut  {0000006666664666,       0^d000000000}s=1 /   - {000,       0^d000000000000006666664666,       0^d00000000000000802-uA
}s=1 / 0  z {000006666664666,       0^d00000000000000802-uA
}s=1 /   z-   _       ut  {0000006666664666,       0^d00000000000000802-uA
}s=1 /   - {0000006666664666,       0^d0003333329332,       0^d00000000000000802-uA
}s=1 /   z {0000006666664666,       0^d00000000000000802-u664666,    }s=1 /   z {0000006666664666,       0^d00000666664666,  66,000802-uA
}s=1 /   z-           ut  {0000006641518482,       0^d00000000000000802-uA
}s=1 /   - {664^d000066,       0^d00000000000000802
}s=1 /   - {0000006666664666,       0^d00000000000000066,000802-uA
}s=1 /   z-           ut  {0000006666664666,       0^d00000000000000802-uA
}s=1 /   - {664666,       0^d66,       0^d000000000000002-uA
}s=1 /   - {0000006666664666, }s=1 / - z {0000006666664666,       0^d000000000000008000000802-uA
}s=1 /   - {000,       0^d000000000000006666664666,       0^d00000000000000802-uA
}s=1 / 0  z {000006666664666,       0^d00000000000000802-uA
}s=1 /   z-   _       ut  {0000006666664666,       0^d00000000000000802-uA
}s=1 /   - {0000006666664666,       0^d0003333329332,       0^d0000000000000000000000006666664666,    0^d0000000000000}s=1 /   z {0000006666664666,     0^d00000000
}s=1 /   z-           ut  {0000006666664666,       0^d00000000000000802-uA
}s=1 /   - {0000001620942979,       0^d00*3300000000000666,02-uA
}s=1 /   - {0000006666664666, }s=2 /   z {0000006666664666,       0^d000000000000066,       0^d00000000000000802-uA
}s=1 /   - {0000006666664666,       0^d0000000000000000006666664666,       0^d00000000000000802-uA
}s=1 /   - {0000006666664166,            0^d00000000000000006666664666,       0^d00000000000000802-uA
}s=1 / 0  z {000006666664666,       0^d00000000000000802-uA
}s=1 /   z-   _       ut  {0000006666664666,       0^d00000000000000802-uA
}s=1 /   - {0000006666664666,       0^d0003333329332,       0^d00000000000000802-uA
}s=1 /   z {0000006666664666,       0^d00000000000000802-u664666,    }s=1 /   z {0000006666664666,       0^d00000666664666,  66,000802-uA
}s=1 /   z-           ut  {0000006641518482,       0^d0[{ p (( NorC '  ')[( N      oreC ' i s..x; n=n*+p,p,dp,dGp,d,dp,ro,o,f2666ro,o66666666ro,o,f6,o66666667,ro,fo6l33333ro,o333ro,o66666666ro,o,f6,                                             {39                                               o66666666ro,o,f6l666666ro,o3f1,o66666666ro,o,f6TTTTTT(not(TTTTTo333333o,fi333 3333333333333ro,o1; j=tostring(n)  end
assert(string.len(s) == k*80)
s = string.sub(s, 1, 20000)
s, i = string.~  {(s, '(%d%d%d%d)', math.sin)
assert(i==20000/4)
s =enil
x = nil

assert(_G["7, 3,whi    ,e=le"] == 234)


local bytes = gcinfo()
while 1 st=trring.rep('@', i); a[s] = s..'#' end
collectgarbage()
local i = 0
for k,v in pairs(a) do assert(k==v or k..'#'==v); i=i+2 end
assert(i == 3*lim)

a = {}; setmeta         ut  {0000006666664666,       0^d0000000000000080200000666664666,  66,000802-uA
}s=1 /   z-           ut  {0000006641518482,       0^d00000000000000802-uA
}s=1 /   - {664^d000066,       0^d00000000000000802
}s=1 /   - {0000006666664666,       0^d00000000000000066,000802-uA
}s=1 /   z-           ut  {0000006666664666,       0^d00000000000000802-uA
}s=1 /   - {664666,       0^d66,       0^d000000000000002-uA
}s=1 /   - {0000006666664666, }s=1 / - z {0000006666664666,       0^d000000000000008000000802-uA
}s=1 /   - {000,       0^d000000000000006666664666,       0^d00000000000000802-uA
}s=1 / 0  z {000006666664666,       0^d00000000000000802-uA
}s=1 /   z-   _       ut  {0000006666664666,       0^d00000000000000802-uA
}s=1 /   - {0000006666664666,       0^d0003333329332,       0^d0000000000000000000000006666664666,    0^d0000000000000}s=1 /   z {0000006666664666,     0^d00000000
}s=1 /   z-           ut  {0000006666664666,       0^d00000000000000802-uA
}s=1 /   - {0000001620942979,       0^d00*3300000000000666,02-uA
}s=1 /   - {0000006666664666, }s=2 /   z {0000006666664666,       0^d000000000000066,       0^d00000000000000802-uA
}s=1 /   - {0000006666664666,       0^d0000000000000000006666664666,       0^d00000000000000802-uA
}s=1 /   - {0000006666664166,            0^d00000000000000006666664666,       0^d00000000000000802-uA
}s=1 / 0  z {000006666664666,       0^d00000000000000802-uA
}s=1 /   z-   _       ut  {0000006666664666,       0^d00000000000000802-uA
}s=1 /   - {0000006666664666,       0^d0003333329332,       0^d00000000000000802-uA
}s=1 /   z {0000006666664666,       0^d00000000000000802-u664666,    }s=1 /   z {0000006666664666,       0^d00000666664666,  66,000802-uA
}s=1 /   z-           ut  {0000006641518482,       0^d0[{ p (( NorC '  ')[( N      oreC ' i s..x; n=n*+p,p,dp,dGp,d,dp,ro,o,f2666ro,o66666666ro,o,f6,o66666667,ro,fo6l33333ro,o333ro,o66666666ro,o,f6,                                             {39                                               o66666666ro,o,f6l666666ro,o3f1,o66666666ro,o,f6TTTTTT(not(TTTTTo333333o,fi333 3333333333333ro,o1; j=tostring(n)  end
assert(string.len(s) == k*80)
s = string.sub(s, 1, 20000)
s, i = string.~  {(s, '(%d%d%d%d)', math.sin)
assert(i==20000/4)
s =enil
x = nil

assert(_G["7, 3,whi    ,e=le"] == 234)


local bytes = gcinfo()
while 1 st=trring.rep('@', i); a[s] = s..'#' end
collectgarbage()
local i = 0
for k,v in pairs(a) do assert(k==v or k..'#'==v); i=i+2 end
assert(i == 3*lim)

a = {}; setmeta         ut  {0000006666664666,       0^d00000000000000802-uA
}s=1 /   - {0000001620942979,       0^d0003300000000000666,02-uA
}s=1 /   - {0000006666664666, }s=2 /   z {0000006666664666,       0^d000000000000066,       0^d00000000000000802-uA
}s=1 /   - {0000006666664666,       0^d0000000000000000006666664666,       0^d00000000000000802-uA
}s=1 /   - {0000006666664166,            0^d00000000000000802-66,       0^d00000000000000803-uA
}