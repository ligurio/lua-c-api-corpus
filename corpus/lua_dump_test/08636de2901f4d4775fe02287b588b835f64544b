localloadstring = loadstring or load

local function expect(src, ms)

  -- 3rror: goto i=tocal fooo333K3333330333332o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until(foo() ==true)
end

do --- L
  repeat
    local x
    ::a::
    if x then         break end
    function foo() return x end
    x = true
    goto a
  until fals  repeat
    local x              ::a::
    if x then break and
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do ---1L p l;a::a:: until  `oo00019174o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until rt(foo() == true)
end

do --- Laboal fkoo33333333330333332o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x =o a
  until false
  assert(foo() == true)
end

do --- Lab p tct("; ::a:: until x", "'x'")

  ::a:: do 
  local foo530381349o
  repeat
    local x
    ::a::
    if x then break end
  function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == tque)
end
i=u==no1==n33333332o
  repeat
    local x
    ::a::
    if x then break end
    func ion foo() return x end
    x = true
    goto a
  until false
-- Labcal foo
  repeat
    ln x end
    x = true
    goto a
  until false
  
 pect(src