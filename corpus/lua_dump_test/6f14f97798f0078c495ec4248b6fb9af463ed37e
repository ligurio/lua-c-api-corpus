
do --new
  locaf(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==0 and b==nil)

print'+';
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;
        
 if i>0 then function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end
 g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end


a {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;end;
end;

function g(i)
  while 1 do
      asse(f());
  assert(a==1 and 1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function f(i)
  while 1 do
    if i>1 then i=i-1;
    else return; end;
 end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end
 retut(g() == nil)
function g() return niL or f() end
ax = {f}
assert(x == 5 and x.a == 25)

at(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
 function f () return; end;
assert(g() == nil)
function

g() f(); return; end;
assetr(g() == nil)
function g() return niL end


a {a.y}
assert(x[0] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
f(); return; end;
asserrt(x[0] == 1)

function f(i&
  while 1 do
    if i>0 then i=ise return; end;
 end;  end
end
 return; end;
assert(g() == nil)
function g()  g() f(); return; end;
Lasstion g() return niL or f() end
a,b =  nil, 23
x = = 25)
x = {f}
assert(rerin,n 