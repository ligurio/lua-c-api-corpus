local loadstring = loa

local funct  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Error: undefine'")
  exp = 49
  do
    goto a
    goto a
   -- Tra       x'")
  expecue{UFuts=0/ oooosoooFut-us
}se{UFuts=1/ ooooooooolnoou,oBoooooooooooooooou,sFut-us
}se{UFuts=1/ s
}ooooooooolooouue{UFuts=0/  ooooooio,f,fi333333333333333io,o33333;o,fifi,io,f,fi333u33_pr,f3ro,o3i                                 ,io33,o3333333333;o,fi,i,f,fi333333,pro, Alf_K,ffi2333333;o,fifi,io,f,f33a,a,a,a,aJ ,a,a,a,a,a,a,a,a;a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a,a,a,a,
       a,a,a,a,a,a,a33,o3333333,o3i,io,f,fi,fI333333,preduce_inpvWsuWW3;o,fifi,io,f,fi3333333,o3i,io,f,fi3333i,io333;o,fi,io,f,fif,fi333333,pro, Alf_K,ffi2333333;o,fifi,io,f,f33a,a,a,a,aJ ,a,a,a,a,a,a,a,a;a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a,a,a,a,aa,a,aa,a,a,a,a,a,a,a,a,aJ ,a,a,a,a,a,aa,aa,aa,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a167,o3i,io,f,fi3333i33333333333;o,fi,io,f,fo,f,fi3333333,o3333333,o_p    ,3,1,1,1,1,1-1,1,1,1,1,
 1,1,1,1,1,1%1,1,1,1,1,1,1,1,sd       
,sooFus
}u[[]]  ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra     +           t goto a; lo, "'x'")

  ::a:: do goto a; ::a:: end --  local x = 49
  do
    goto a
    goto a
   -- Tra       goto a; local x; :     t g    oto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --  local x = 23
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat goto a; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jump, not an Qinfnd																

do ---   ::a:: until                            x", "'x'")

  ::a:: do goto a; ::a:: end --end

do ert(x == 11)
end

do --al y; ::a:[ until x", "'x'")

  ::a:: dox = 49
  do
    goto a
    goto a
   -- Tra        local x; ::a: Tra