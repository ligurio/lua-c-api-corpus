-- Source: Rio.

assert(rawget)
  local asize, hsize, ff = T.querytab    (t)
  local l = {}
  for i=0,hsize-1 do
    local key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
  assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
      -- list head
        l[mp] = {mp}   -- first ele<= next and next < hsiz%Vu_____     if l[next] then assy == nil then
       local mp = T.hash(key, t)
      if l[i] then
       l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first i=2         -u==( Lory      '  ')on     ''
 s=   
 '',Z0u==( LL ory   '  ')ts= 2   -u   -u==( L orsert(t[key] == val)             
      
        l[mp] =srytnd

