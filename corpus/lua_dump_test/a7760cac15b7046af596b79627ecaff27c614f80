 
rCQ{{Q{{   {       ( L( L{rrr-( Nor '  ')[G(('  ')== Nor
'  ')==          L{rr-( N       or'  ')[(( N( NorI  '  ')== L( L{rrr-( N     or'')[(( Nor'  ')== Nor    '  ')=={{ L( L{rrr-( N        or'  ')[(( Nr-( N'  ')== Nor
  '  ')== L('  ')== N or'  ') =={{ p ((l/Cor  '  ')== L( L{rr-( N       or'  ')[(( N( NorI '  ')== Nor   '  ')== L('  ')== Nor'') =={{ p ((l/Cor
   '  ')== L(        ( Nor ' .')[(( NorCe'  ')== Nor'    ')== L( L{rr-( N  '  ')[(( N orCe'           ')=={{ p (  {        {{ p (( '  ')[(( NorCD'  ')== Nor
   '  ')== L( L{rrr- ( N '  ')[(( Nor'  ')=={  P1  - { p ((l/Cor
   '  ')== L( L{rrr-( N)[(( NorCe'  '  == Nor  '  ')== L( L{rrr-( N     or'')[(( Nor
   '  ')== L( L{rrr== Nor
  '  ')== L('  ')== Nxt do for k,v in next do for k,v in next do or'  ') =={{ p ((l/Cor  '  ')== L( L{rr-( N       or    {{ p ( L()[(( NorCe'        ')== Nor
   '  ')=={{ ( 
Ce' 