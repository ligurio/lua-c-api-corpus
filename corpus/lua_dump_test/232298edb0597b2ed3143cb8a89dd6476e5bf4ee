
do --lew
  loca  = {}
  
print "t       hesting syntax"

-- tesle a,b = r==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g(nil)
function g() return niL or f() end
ert(x[1] == 1)

funig(10);

do
  function f () return 0,2,3; end
  local a, b, c = g() return niL or f() end
a,b = g()
assert(a==1 and b==ng() return niL or f() end
a,b = g()[-
assert(a==2