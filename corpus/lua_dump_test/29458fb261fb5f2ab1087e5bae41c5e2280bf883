do
do do::C::::d::end::C::::d::end::C::::d::end ::C::local loadstring = loa

local function  expect(
 S_  )
  if msg then
   assert(jo, "'a'")

  -- Error: undefine'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::areduce_inptWsuWW:: end -- Ford
do
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 05)
end

do --:", "'a': until x", "'x'")

  ::a:: do goto a; ::areduce_inptWsuWW:: end -- Ford
do
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
   

do --- Tra                 t goto a; local x; ::a:: until
local a = ((b or a)+1  and (10 or a)+(b or a	+11 ==(2<3 and 4) and nil)le(-(1 or 20==(2<3 and 4) and nil)le(-(1 or 20 or a)+(b or a)+1== 0  +ii=1
i=0
se{w=Fs }se{F/ udt,sd000000000000046666664666tu=1/  u,suos
}qe{UFu=Gou,s
}se{ts=2/-u,o/us
}qe{uud, x53, x54, x55, x12, x57, x58, x58, x60, o goto a; :t=0/  ko-u,ssos
}se{UFuto=GG:ao