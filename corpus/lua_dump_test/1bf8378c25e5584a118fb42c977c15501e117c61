
do --new
  return  (i)   while 1 do
    if i>0 then i=i-1;    else return; end;
   local a,                         b, c = g() return niL or f() end
a,b = g()
  while 1 do


function f(i)
  while 1 do
    if i>0 then i=i-1;
end;
 function g(i)
  while 1 do
    if i>0 then i=i-1
         f() end
a,b = g(nil)
function g() return niL or f() end
ert(x [1] ==1)

function f(i)   while 1 do
    if i>0 then i=i-1;    else return; end;
   local a, b, cb, c = (f());
  assert(a==3 and b==nil and c==nil)
enert(g() == nil)
function g() return niL or f() end
a,b =  unction fg() return niL or f()
a,b = g()
assd b==nn 