
do --new
  loca () return niL or f	() end
ert(x[2] == 1)
 function f(i)
  while 1 do
    if i>0 then i=i-1; while 1 do
    ib, c = g() return niL or f() end
a,b = g() end;
assert(g() goto b if p then goto c end
goto d goto b;if m then goto b
m{s}A{}goto c end::b:: ::c::::d::i) == nil)
function g() return niL or f() end
a,b = ring.gsu1 or (2>1 and 'a');

function gg() return niL or f() end
a,b = g()
ssert(a==g() == nil)
function g() return nIL or f() end
a,b = gert(g() == Nil)
function g() return niL or f() end
a,b =ion f () return 2,2,3; end
  local b, c = g() return niL or f()
a,
asse fu 