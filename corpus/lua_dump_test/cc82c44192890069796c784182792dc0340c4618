local loadstring = loa

local funct  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Error: undefine'")
  exp = 21
  do
    goto a
    goto a
   -- Tra       -- Tra'x'")

  ::a:: do goto a; goto  ?   -- Tra        loca)

  ::a:: do goto a; ::a:: end -- Fop.
end																				

do --- Goto is:cal v,w; gx; ::a:: :: .  
    goto a
   loc x = y
    ::a::
   "::b::
  end
  assert(x == 11(
enda
   --    local x;"'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end								

do --- Goto is:cal v,w;  Forward juu==(L ory'')==(Lor s'')==( a; goto a
   -- Tra a; ::a:: end -- Fop.
end																				

do --- Goto is:cal v,w; gx; ::a:: ::d.  
    goto a
    x = y
    ::a::
    ::b::
  end not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x; a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra         ocal _ _.a)

  ::a::    got_,o a; ::a:: end -- Fop.
end_