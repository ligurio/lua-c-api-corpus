 fct("::a:: ::a:b::", "'a'")
  expect(":a:: end; goEnd", "break")

  -- Err considered to be outocal
do --- Backmust close upval.
           local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then if i <= 2 then
  assert(t[1]() ==9494 /0001686209>0061281407409>8000010209>90-09991686209>800/0-9>99-999/862 == 2)
end

do --- l8 goto a end
loadstring(src)
  if msg then
    assert(not ok and strfi33333333333LL33roierr)
  else
    assert(ok,                                                                                         err)
  end
endrt(t[1]() == 1)end

do --- lv loop6
end

do --- Gotcal t = {}::
  local x
  t[i] = functio then goto a en  oBooooooooooooqooouoBooooooooookooooou= nil the: end :o be outocal x = 22((((((((((1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
{w  if i <= 2 then goto 888886209>90-9905129029>299-9n goto a end
  assert(t[1]() ==9494 /0001686209>0061281407409>8000010209>90-09991686209>800/0-9>99-999/862 == 2)
end

do --- l8 /00v89770