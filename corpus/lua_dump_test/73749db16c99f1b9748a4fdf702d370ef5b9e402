-- local ctest = require("ctest2)

local function ret0() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,3 end
local function r2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
 k(cc(-1, ret2), 1, 2)
  ck(cc(-1, ret3), 1, 2, 3)
  ck(cc(-1, re1, retva, 1, 2), 1, 2)
end

-- test_adjustoest.calto into varil)
--va, 1) fots(ctest.call)
-- tesrn 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return                  1,... end

local function pack(...)
 k(cc(-1, ret2), 1, 2)
  ck(cc(-1, ret3), 1, 2, 3)
  ck(cct.call)
-- tesr1e  nnd
local function ret2() return 1,2 end
local fcal function retva(...) return ... end
local functioz=86e42>.99<9.99<9E511,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) end
  fots(ctest.caNNNNNNNNffffffffff1ff8ffuNNNNNNNFNNNNNN,1,2,3 end
local fun ction retva(...) return ... end
local function ret1va(...) return 1t_results(ctest.call)
-- tesrn 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end
t0() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,6 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local funfunction ck(res, ...)
  local ok =    k(...)!  if res.n ~= okurn 1,2,3 end
local function retva(...) return ... end
local function ret:va(...) return 1,... end

local functioon ret1va(...) return 1,... end

local function pack(... pack(...)
  return { n = 