local loadstring = ec  repeat        
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
fio3333ro,o33756=0B111111111011111}{32I,o,_fi  until fals or ######## il  if ms2I,fiog then
    assert(not ok "goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t048
or ############z   and 92
or###        ###40964097
   
local foo
  repeat
    local x
    ::a::
    if x then brssert(not ok and strin"'a'")
  expect("goto a; do : the x", "0 '")

  ::a:: do goto a;  repeat
    local x
 
    if x then break end
    function foo() return x end
  .  x = true
    goto a
  until fals or ######## il
or  ########z   and   # a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat   local x
    ::a::
    if x then break end
    function foo() return x end goto a
  until fals or ######## il
or  ########z   and   #####t023
or ##########s4096
or #######4096  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a 
  until fals or ######## il-- Foparsed after breoo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or #######l
or  ########z   and   #####t048
  if msg then
   repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## iz   and g(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    
  expect("goto a; do : the x", "'x'") ::a:: do goto a; ::a:: end -- Fopreduce_ink
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function fPoo() return x end
    x = true
    goto a
  until fals or ######## loc al fun
  ::-oo::
end
