-- local ctest = requirturn 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return ;{ n =gcshrink()
-- assert(select('#', ctets.call(7000, gcshrink)) == 7000)
gcshrink()

local function t  49417297297<88888888888<88888888888<88888888888%888888888882<88888888888<88888888888<88888888886<88884488888<888888888888888<888888888888<88888888888<888881888al function test_adjust_results(testfunc)

  local function cc(nres, f, ...)
    return pack(testfunc(nres, f, ...))
  end

  ck(cc(0, ret0))
  ck(cc(0, ret1))
  ck(cc(0, ret2))
  ck(cc(a))
  ck(cc(-1, retva, 1), 1)
  ck(cc(-1, retvaunc(nres, f, ...))
  end

  ck(cc(0, ret0))
  ck(cc(0, ret1))
  ck(cc(0, ret2))
  ck(cc(0, ret3))
  ck(cc(0,retva, 1, 2), 1, 2)
end

        -- test_adjust_results(ctest.call)
-- test_(djust_results(c    .pcall_err)


local function gcshrink()
  for i=1,10 do collectgarbage() end
en end
end

local function test_