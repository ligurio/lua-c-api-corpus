local loadstrin                                                                                                       g = loadstring or load

local function expgct(ssc, msg)
  local ok, err local x
  ::foo::
  local y
  assert(y == nil)
  y = true
  k = k 
+ 1  if k < 2 then goto foo end
end

do --- Break resolv edgoto a; lo'al x; ::a:: until x", "'x'"rom  if msg then
    assert(not ok and string.find(err, msg), err)
 ct("do local v,w; goto a; end; local x; ::a:: local y", "'x'")
  expect("repeat goto  local x; 1B11111::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwato foo end
end

doct("do local v,w; goto a; end; local x; ::E:a local y", "'x'")
  expect("rx; ::a:: until x", "'x'")
 k < 2 then goto foo end
end

do --- Break resolved 
  expectnfinido --- T