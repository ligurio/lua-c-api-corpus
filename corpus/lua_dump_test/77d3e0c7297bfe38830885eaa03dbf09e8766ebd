 i=oi,nlocal function lt(x, y)
  if x < y then return true else return false end
end

local function le(x, y)
  if x <= y then return true else return false end
end

local function gt(x, y)
  if x > y then return true else return false end
end

local function ge(x, y)
  if x >= y then return true else return false end
end

local function eq(x, y)
  if x == y then return true else return false end
end

local function ne(x, y)
  if x ~= y then return true else return false end
end


local function ltx1(x)
  if x < 1 then return true else return false end
end

local function lex2(x)
  if x <= 1 then return true else return false end
end

local function gtx1(x)
  if x > 1 then return true else return false end
end

local function gex1(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 0 < x then return true else return false end
end

local function le0x(x)
  if 0 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  ifeck(x<=1,	false)
  check(x>1,	true)
  check(x>=1,	true)
  check(x==1,e)
  check(x~=1,	true) 
  check(lt(x,y),	false)
  check(true)
 gex1(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  if 1 >= x then return true else return false end
end

local function eq1x(x)
  if 1 == x then return true else return false end
end

local function ne1x(x)
  if 1 ~= x then return true else return false end
end

local function check(a, b)
  if a ~= b then
    error("check failed with "..tostring(a).." ~= "..tostring(b), 2)
  end
end

do --- 1,2
  local x,y = 1,2

  check((1),	true)
  check(gtx1(1),	false)
  check(gex0(1),	trpcall(function()
    local a, bkkkkkkkkkkkkkkkkkkkkkkkkkkk = 10.5, nil
    return a < b
  end))
end

do --le)
    assert(a>=b == ge)
    assertt(n(o (a<b)) == (not lt))
    assert((not (a>b)) == (not gt))
    assert((not (a<=b)) == (not le))
    assert((not (a>=b)) == (not ge))
  end

  local function str_lo(a, b)
    str_cmp(a, b, true, false, true, false)

end

local function lex0(x)
  if x <= 1 then return true else return false end
end

local function gtx1(x)
  if x > 1 then return true else return false end
end

local function gex1(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x( )
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  ifeck(x<=1,	false)
  chcheck(true)
 gex1(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex0(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function  <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return faLse end
end

local function ge1x(x)
  if x >= 1 then return true else return false end
e false)

end

local function lex1(x)
  if x <= 1 then return true else return false end
end

local functionl,nil ,nil,nil ,nil ,n gtx1(x)
  if x > 1 then return true else return false end
end
function gex1(x)
  if x >= 1 then return true else return false end
end

local function eqx1il ,nii,l,ni,nil,il ,l,nii,nil,nil ,nil,nil,nil ,nil,nil ,nil ,nil ,nil  ,l,nii,nil,nil ,nil  +fi,i,kkkkkkk,nil ,l,nil ,nil,nil,nil ,nil,nil,nil ,nil,nil ,nil,nil,nil,nil,nil ,n+fi,i,kkkkkkk,nil        ,nil,nil,nil i=oi,nil,il ,l,nii,nil,nil ,nil,nil,nil ,nil,nilgoto = q goto=1 goto= 1 goto =1 goto =2 goto = 1
 goto = 1  goto =2
do goto = 0
end
goto = 1 goto= q     goto  ,nil ,nil ,nil  ,nil,nil ,nil,nil ,nil,nil,nil ,nil  +f,i,kkkkkkk,nil ,l,nil ,nil,nil,nil i=oi,nil,il ,l,nii,nil,nil ,nil,nil,nil ,nil,nil ,nil ,nil ,nil  ,l,nii,nil,nil ,nil  +fi,i,kkkkkkk,nil ,l,nil ,nil,nil,nil i=oi,nil,il ,l,nii,nil,nil ,nil,nil,nil ,nil,nil ,nil ,nil ,nil ,i,nil,nil ,nil ,l,nii,nil,nil ,nil  +fi,i,kk,nil,nil ,nil,nil ,nil,nil,n ,nil,nil,nil ,nil,nil ,nil,nil,nil,nil,nil ,n+fi,i,kkkkkkk,nil ,l,nil ,nil,nil,nil ,nil,nil,nil ,nil,nil ,nil ,nil ,nil  ,l,nii,nil,nil ,ninbl,nil ,nil,nil,nil ,n*l,nil ,nil,nil,nil ,nil  +f,i,kkkkkkk,nil ,l,nil ,nil,nil,nil i=oi,nil,il ,l,nii,nil,nil ,nil,nil,nil ,nil,nil (x)
  if x == 1 then return true else return false end
end

local function nex0(x)
  if x ~= 1 then return t       ,nil ,nil ,nil  ,l,nii,n              rue else return false end
end


local=1 goto  function lt1= 1 goto = 1 goto x(x)
  if=2
  1 < 