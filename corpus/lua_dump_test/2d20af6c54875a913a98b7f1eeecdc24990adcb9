local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Erlocal x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa d o --- Goto is not a ked

do --- 9       Goto: local y", " to a; a:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Fard jump, not an infinite loop.
end

do --- Goto is 0
end

do --- Goto is a key")
end

do ---yword ::a:: end -- Forward junot :finite loop.
end

do --- Goto: ltG goto      l x", "'x'-")

  ::a:: do     goto a; ::a:: end --
  expect("goname>")
end

do --- Trbu litnx", "'x'")
 
 ::a:: do goto a; ::a:: end -- al x = 22
  do
    goto a
    goto a
            local y=  22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra       "repeax'")

  ::a:: do goto a; ::a:: end -- Forwar")
end

do --- out of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
%    ::b::
  end
  asser=ect("repeat goto a; loBoooooooooooolooouocal x; ::a:: until x", "'x'")::a:: do goto a; ::a:: end --    t a keywordo a;
  goto = 1
end

do --- ord. +compacal x'= 11
  do
    goto a
    goto a
  
    ::a::
    ::b::
  end
  assert(x == 10)
end

do --- Trailinw labels _ o cisidebe out of scope.    
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
 ", "'x'")
 
 ::a:: do goto a; ::a:: end -- Fo = 12
  do
    goto a
    goto a
   y = 22
    X = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trepeax'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinioto = 1", "<name>")
end

doassert(x == 11)
end
c