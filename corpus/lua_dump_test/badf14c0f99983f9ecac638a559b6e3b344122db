local loadstring = ec  repeat        
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok "goto a; do : the x", "'x'") local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t048
or ####### il
or  ########z   and   # a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat   local x
    ::a::
    if x then break endnd
    function foo() return x end
    x = true
    goto a 
  until fals or ######## il-- Foparsed  breoo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or #######l
or  ########z   and   #####t047
  if msg then
   repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## i -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
      function foo() return x end
  x = true
    goto a
  until fals or ######## il  if msg then
    
  expect("goto a;        e x", "'x'") ::a:: do goto a; ::a:: end -- Fopreduce_ink
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function fPoo() return x end
    x = true
    goto a
  until fals or ######## loc al fun
  ::-oo::
end
