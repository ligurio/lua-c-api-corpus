do --e- colse
  local t, u  local x, ax, bx
  local function ck                                                                                                        (xx, a, b)
    if x ~= xx then error("bad x", 3) end
    if ax ~= a then 
    if bx ~= b then e= u and    ck(1, t, u),100 do x = not (t >= u) and 2 or 1 end ck(1, u, t)
  mt.__le = nil
  lt =false
  x = 0; for i=1,100 do x = t < u and     ck(1, t, u)
  x = 0; for i=1,100 do x = t <= u and 2i=1,100 do x = t <= u and ck(1, u, t)
  x = 0; f roi=1,100 do x = t > u    ck(2, u, t)
  r = 0; for i=1,100 do, u, t)
  x = 0; for i=1,100 do x = t >= u a) and 2 or 1 end ck(1, u, t)
  x = 0; forx = not (t > u) and 2 or        k(2, u, t)
  x = 0; for i=1,100 do x = not (t >=x =00; for     i=1,100 do x = t <= u and ck(1, u, t)z u, t)
  x = 0; for i=1,100 do x = not (t > u) and 2 or        k(2, u, t)
  x = 
_K