local loadstring = loa

local funct  exp:ect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Error: undefine'")
  exp = 98
  do
    goto         a
    goto a
   -- Tra       x'"    )
  expect("repeat goto a; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfnd																

do --- Goto is:cal v,w; goto a;l y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  d    z
    goto a
    --al x; ::a:[ until@}", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra y", "'x''x'"   ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
            end
  assert(x == 11)
end

do --- Tra                 t goto a; :: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfnd							}									

do --- Goto is:cal v,w; goto a;         end; local x; : unt+l x", "'x")

  ::a:: do goto a; ::a:: end --end

do --yword.  d\z
    goto a
    --al x; ::a:[ until@x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 40
  do
    g  oto a
    goto a 
   -- Tra     local loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra         oca)

  ::a:: do goto a; ::a:: end -- Foan ilocal x = 49
  do 11)
end

do --- Tra     +           t goto a; lo, "' elseifx'")

  ::a:: e_pro,32,noWpro,32,o3333}si_al x = 49
  do
    g coto