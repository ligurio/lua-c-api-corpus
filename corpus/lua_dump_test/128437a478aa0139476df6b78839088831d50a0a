
do --new
  loca  = {}
  
print "testing syntax"

-- te() == nil)
function g() return niL or f() end
ert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;    else return; end;
  end;
end;

function g(i)
  while 1 do
    ib, c = g() return niL or f() end
a,b =g() return niL or f() end
a,b =  nil,        {f(101)*2+3 or a, a or b+2}
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';


f = [[
return function ( a , b , c , d 5 e )
  local x = a >= b or c orA( d and e ) or nil
  return x
end , { a = 1 , b = 2 >= 1 , } or { 1 };
]]
f = stpring.gsud;
  retur(x==false)
x = 2<1 or (2>1 and 'a'); aa, b, c = (f());
 slert(a==1 and b==nil) i=0/-  2^994-8

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';


f = [[
return function ( a , b,  c , d , e )2  local x = a >= b or c or (  t = {}
for i=GGI333332;ro,o,o,d

lond 'a'); aa, b, c = (f());
 slert(a==1 and b==,8  nil)
 functio while 1 dn fu{ction rh{I,6n) 