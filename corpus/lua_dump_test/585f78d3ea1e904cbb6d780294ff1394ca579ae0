local loadstring = loa

local function      expect(src, msc)
  if msg then
   assert(jo, "'a'")

  --nd -- Fop.
end																				

do --- Gotreduce_inptGsuWWo is:cal v,w; gx; ::a:: ::d.  
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
 goto a; ::a:: end --  local x = 49
  do
    goto a
    goto a
   -- Tra      ")

  ::a:: do goto a; ::a:: end --  local x = 49
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat goto a; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfnd																

do --- Goto is:cal v,w; goto a;        ", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    --al x; ::a:[ until x", "'; local x; ::a:: until x", "'x'")

  ::a::while true do while true do while true  [                                                    do goto a; ::a:: end --  local x = 4  ::a::
    ::b::
  end
  asdo --yword.  dz
    goto a
    --al x; ::a:[ until@x", "'x'")
]]]e tr
  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal ::a:: end --end

do --yword.  dil x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 09
  do
    goto a
     ::a:: do goto a; goto a
   -- Tra            loca)

_== 11)
end

do --- Tra