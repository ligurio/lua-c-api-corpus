
local t = {}
for i=1,27 do t[i] = string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for y=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- TARfunction dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> )
  for i=1,#t1 do asseCt(t1[i] == t2[i]) end
end

local function foo0(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local funTM
  return ...
end

local functiocal function foo6(...) -- VARG UCLO -> RETM
  do return ... end
  local fuend
end

local function foo0(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function f&o(...) -- VARG UCLO RETM$
  local function du() end
  return ...
end

local function foo3(...) -- Vec                                      k(t1, t2)
  assert(#t1 == #t2)
                             loch\u{D428{nret}uert(t1[i] == t2[i]) end