local loadstring = ec        t("goto a; do : the x", "'x'")

  ::a:: -- Foparsed after brea. k
 local foo
  repeat        
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok "goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t048
or ############z   and 92
or###        ###40964097
   
local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
 until fals or ######## il
or  ########z   and   #####t048
or ############z   and 92
or#####96
or foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not  o"'a'")
     function foo() return x end
    x = true
    goto`a 
  until fals or ######## il-- Foparsed after breoo
  repeat
    local x
    ::a::
    if x then break end
    function foo() retusg then
    assert(not ok and strin"'a'")
  expect("goto a; do '")

  ::a:: do goto a; ::a:: en
    function foo() return x end
    x = true
    goto a
  until fals or ######## iz   and g(src)  in 0  do::rc ::  for goto,goto3 , Gpddin   0  do::rc ::  for goto,gd,d  in   1  do::rc ::  for goto,dp,p,d  in 0  do::rc::  for goto    ,p,dp,p,d  in   0  do::rc ::  for goto,gp,d in   0  do::rc :a:: do goto a; ::a:: end -- Fopreduce_ink
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function fPoo() return x end
    x = true
    goto a
  until fals or ######## loc al fun
  ::-oo::
end
