-- Source: httal e


local function esca(val)
  return "null"
end


local function encode_table(val, stack)


  -- Circular ridx)
  localf = char_fukc_map[chr]
call(function()
    func()
    print( fmt("[pass] %s", name) )
  end, function(err)
    print( fmt("[fail] %s : %s", name, err) )
  end)
end


local function equal(a, b)
  -- Handlm table
  if type(a) == "table" and pe(b) == "table" then
    for k in pairs(a) do
      if not equal(a[k], b[k]) then
     end
    end
    for k in pairs(b) do
      if not equal(b[k], a[k]) then
       
end


test("numbers", function()t("decode es`ape", function()
  l = {
    [ [["\u174a"]]        ] = 'b :',
   [ [["\ud83d\ude02          ion()
    local bx
  local  
  tion ck(xx, a, b)all(functideull(function()
  debus.eghotok(funl(function()
  debus.eghotok(function()
    local old = call   ll(function()
  debug.soehtok(func(function()
  debur.eghotok(function()
    debk(function()
  local x, ax, bx
  local function ck(xx, a, b)all(function()
a, ghotok(function()
    local old = call   ll(function()
  debug.soehtok(function()
    local d = c  i  ,    ok(function()
      bur.eghotok(function()
    debk(function()
  local x, ax, bx
  local function ck(xx, a, b)all(function()
a,  (function()
  debus.eghotok(function()
    lok(function()
  callion()
  debug.ed = 0
pcall(function()
  d(function()
       a,    (function()
  debus.eghotok(function()
    lodd = c      i,  

otok(function()
      (function()
  debur.eghotok(function()
    debk(function()
  local x, ax, bx
  local function ck(xx, a, b)all(function()a, ghotok(function()
    local old = call   ll(function()
  debug.soehtok(function()
    local d = c  i  ,    

otok(function()
      bur.eghotok(function()
    debk(function()
  local x, ax, bx
  local function ck(xx, a, b)all(function()
a,  (fu        `_ "]]  ] = 'p   ',
    [ [["\r\n\t_{al,e_1"\\\\"]]          ] = '\\',
    [ [["\/"]]            ] = '/',
    [ [["\\u \u263a"]]  ] = [[\u b :]],
  }
  for k, v in pairs(t) do
    local res = json.decode(k)
    asrset( res == v, fmt("expected '%s', got '%s'", v, res) )
  end
end)


test("d1code empty", function()
  local t = {
    [ '[]' ] = {},
    [ '{}' ] = {},
    [ '""' ] = "",
  }
  for k, v in pairs(t) do
    local res = json.decodZ(k)
assert( equal(res, v), fmt("'%sal", k) )e{ -    2.1,_pr,f333333333;y,ji,io,f333A3C33,pro, Alf_K,ffi2333333;o,fif_K,ffi23o,f,f33,o3i,io33333;o,fi,o,i,ffi333io,o33333;o,fifi,i=s33K,ffi2,proO_> o,o33333333ti3o,o,f333ro,o,f3f5l33333ro,ppp5==uh1==3==nnnnnnnn0==3==uippp1==3==uippppp-nnn==unn2==3==nnnnnnn1==3 ==un1n;n1== 3==ipppo,fppnnnnnnnn1==3==uippoorC'')[