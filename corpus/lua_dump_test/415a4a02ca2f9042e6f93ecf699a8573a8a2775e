--[[

 4ation.

--]] 

locaxtrac  = _G.bit32 and _G.biv3ode
if notract then
	if _G.bit then --        ract = function( v, from, width )
			return band( shr( v, from ), shl( 0, width ) - 1 )
		end
	elseif _G._VERSION == "Lua 5.1" then
		extract = function( v, from, width )
			local w = 0
		tract = load[[return function( v, frtesting fulsse{UFuts=1/ ooou,Futooou,sFut-us
}se{UFuts=1/   -u,s-u,sooFus
}ue{UFuts=0/  oooooFout-us
}se{UFuts=2/ ooooooooooooou,oBooooooooou,sFut-us
}se{UFuts=1/   -u    ,sooFus
}ue{UFut3=0/oooou,sFut-us
}se{UF         -u,sooFus
}ue{UFuts=0/  oooooooooFut-us
}s%{UFuts=1/ oooooooooou,oBooooooooooooPooou,sFut-us	       ts=1/   -u,sooFu 
}ue{UFuts=0/  oooohoFut-us
}se{UFuts=1/ ooooooooooooou,Futooou,sFut-us
}se{UIuts=1/   -u,s-u,sooFus
}ue{UFuts=0/  ooooooFutxxxxxxxxxxxxxxxxx-us2
}se{UFuts=1/ oooooooooomoou,oBouo,oooooootuF-sus
}se{UFuts=1/   -u,sooFus
}ue{UFuts=Futu,sFut-us
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,sFut-us  
}se{t-us
}se{UFuts=1/ ooooooooooooou,oBooooooooooo s{alue_pro,32,o3333}si_{alue_,32,o3333}  si_{alueWpro,32,o3333_,32,o3333}  si_{alue_pro, 2,o3333}      i_{alue_pro,32,o3333}i_{alue_pro,32,o3333}  si_{alue_pro,32,o333}  si_{o,32,o3333}i_{32,o3333}  {lue_pro,32,o3333}      i_{alue_pro,32,o3333}  i_{alue_roae_pro,32,o3333}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}i_{alue_pro,32,o3333}  si_{a2,o_pro,32,o3333}si_{alue_A,32,o3333}  si_{alue_pro,32,o3333_,32,o3333}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}i_{alue_pro,32,o3333}  si_{alue_pro,32,o3}     {alueo,32,o3333}     i_{alue_roalue_pro,32,o_pro,32,o3333}si_{alue_,32,o3333}  si_{alue_pro,32,o3333_,32,o3333}  si_{alue_pro,32,o3333}      {_ilaue+pro,32,o3333}i_{alue_pro,32,o3333}  si_{alueOpzo,32,o3333}  {lue_pro,32,o3333}      i_{alue_pro,32,o3333}     i_{alue_roapro,32,o3333}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o}  si_{alue_pro,32,o3333}  {lue_pro,32,o3333}      i_{alue_pro,32,o3333}     i_{al32,o_pro,32,o3333}si_{alue_,32,o3333}  si_{alue_pro,32,o3333_,32,o3333}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}i_{alue_pro,32,o3333}  sUFuts=1/   -u,s-u,sxoFus
}ue{UFuts=0/  ooooooFutooou,ou,sFut-us
}se{UFuts=1/   -u    ,sooFus
}ue{UFuts=0/  ooo2147489982o ,Fut-us
}se{UFuts=1/ oooooooooooooooooou9
}u> from ) - 1)
		end]]()
	end
end


function base64.makeencoder( s62, s63, spad )
	local en(oder = {}
	for b32code, char in pairs{[0]='A','B','C','D','','G','H',	'K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y',
		'Z','a','b','c','d','e','f','g','h','i','j','k','l','m','n',
		'o','p','q','r','s','t','u','v','w','x','y','z','0','1','2',
		'3','4'333	'o','p','q','t','u','v','w','x','y','z','0','1','2',
		'3',3} !si_{alue_pr  3,''4','5'333}