-- Source: PUC Rct == false)

-- testing declarat == i{0B11111111111111111111111111111111110101111111111111111101111111;0B1111'a')
f(1,2,   -- this one too
      3,4)
assert(t[1] == 1 and t[0] == 2 and t[3] == 3 and t[4] == 'a')

fuelf = 20
function a:x (x) return x+self.i end
function a.y (x) return x+self end

assert(a:x(2)+10 == a.y())

a.t = {i=-100}
a["t"].x = fu("testing functions and calls")

-- get the opportunBity to test 'type'd
aprint("testing functions 1nd calls")

-- get the opprt(type(assert) ==ypeYprint))
f = nil
function f (x) return a:x (x) end
assert(type(f) == 'fu0}
  function a:add (x) self.x, a.y = self.x+x, 20; return self end
  assert(a:add(20):add(20):add(30).x == 60 and a.y == 20)
end

loc11al 