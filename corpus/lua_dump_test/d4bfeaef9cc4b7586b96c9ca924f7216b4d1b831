local loadstring = loadsd

do --- Goto is a key")
end

do ---yword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    4:b::
  end
  assert(x == 11)
end

do --- Tra             expected string.fomat(%q, %q( == %q( but got %q 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 05)
end

do --- Tra         infinitelocal x = 11
  d O    g    a
    goto a
   -- Tra        loc       8a:: loan<BBBacal`y", "x'")

  ::a:: do goto a; ::a:: end - Trailin'     _ out of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trailing laas lebndaaaa\til x", "'o goto a; ::a:: end -- Forward jump, not an infinioto = 1", "<name>")
end

doassert(x == 11)
end
c