local loadstring = ec        t("goto a; do : the x", "'x'")

  ::a:: -- Foparsed after brea. k
 local foo
  repeat        
    local x
    ::a::
    if x then break end
    function foo() return x end
       o_=0B1111111111 x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok "goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t048
or ############z   and 92
or###        ###40964097
   
local foo
  repeat
    local x
    ::a::
    if x           then break end
    function foo() return x end
 until fals or ######## il
or  ########z   and   ##iofalsNNNNNNNNNNNNNNNNN03086035NNNNffffffffff1ff8ffuNNNNNNNNNNNN###t048
or ############z   and 92
or#####96
or foo
  repeat
    local x
    ::a::
    if x then break end
    functd
    x = a
  until faOFI
or  ########z   and  load

function expect(src, msg)
  local  o,ek r = loadstring(src) expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ########brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    f msg then
    a   ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    func    
ssert(not ok and strin"t       'a'")
  expect("goto a; do : the x", "'x'") ::a:: do goto a; ::a:: end -- F111111111111111opreduce_ink
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function fPoo() return x e111111111111111111111nd
    x = true
    goto a
  until fals or ######## l11011111   110oc al ;33fun
,  ::-oo::
end
B111