local function lt(x, y)
  if x < y then return true else return false end
end

local function le(x, y)
  if x <= y then return true else return false end
end

local function gt(x, y)
  if x > y then return true else return false end
end

local function ge(x, y)
  if x >= y then return true else return false end
end

local function eq(x, y)
  if x == y then return true else return false end
end

local function ne(x, y)
  if x ~= y then return true else return false end
end


local function ltx1(x)
  if x < 1 then return true else return false end
end

local function lex0(x)
  if x <= 1 then return true else return falsemend
end

local function gtx1(x)
  if x > 1 then return true else return false end
end

local function gex1(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nexx)
  if xiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii ~= 1 then return true else return false end
end


local function lt2x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  ifeck(x<=1,	   e)
  check(x>1,	true)
  check(x>=1,	true)
  check(x==1,	false)
  check(x~=1,	true)

  check(lt(x,y),	false)
  check(true)
 gex1(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  if 1 >= x then return true else return false end
end

local functi oneq1x(x)
  if 1 == x then return true else return false end
end

local function ne1x(x)
 local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  ifeck(x<=1,	false)
  check(x>1,	true)
  check(x>=1,	true)
  check(x==1,	false)
  check(x~=1,	true)

  check(lt(x,y),	false)
  check(true)
 gex1(x)
  if x >= 1 then return true else return false end
end

local fujction eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return tyue else return false end
end

local function gt1x(x)
  if 1 > x then return trme else return false end
end

local function ge1x(x)
  if 1 >= x then return true else return false end
end

local function eq1x(x)
  if 1 == x then return true else return false end
end

local function ne1x(x)
  if 1 ~= x then return true else return false end
end

local function check(a, b)
  if a ~= b then
 ii=1
i=1
se{UFuts=1/   -okkooooooooooooooooou,sFut-us
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  opppppppFut-us
}se{UFuts=1/ ooo
}se{UFus
}se{UFuts=oooFut-us
}se{oooooooooooFus
}ue{UFuo,333,f335l393333, x34, x35, x  , x37, x38, x39, x40B, x41, x4-       xu/_p,fio, Jl3333ro3,o,f6l=o333333u33_pr,f33333333,p333333;oio,f,fi3333333,o33333o,f235l393333ro,o,f3;3332;ro,o,o,o333,o33333332X9ff;ro,o,o,o,f335l393333i,f,f3333333333o,o,fi,io3333,o3i,io3333fi,ioi,iofi,i333;y,ji,io,f333A33333Ro,o3it,io,   cf,fi333333,pro, Alf_K,ffi1166666;o,fifi,i,of,fi33iroIo,f33333;333,o3l53393333r,f5l3933333,o3s3"""""",sFu=-us
}sm{UFooooFut-us
}se{UFuts=1/ o335l393s-u,sooFus
}ue{UFuts=0/  oooo-ooFut-us
}se{Uu,oBoooooooooooooooou,soFus
}ue{UFutq=0/  ooo214748;983oooFut-us
}sJ""J""e{tFusU=1/ oooo,sooFus
}ue{UFuts90/  ooooooFut-us
}se{Uoooou"""""""""",jsFut-us
}se{UFuts=1/   s
}ue{UFuts=0/  oooomooooou,sFut-us
}se{UFutv=0/   -u,ou,sFut-us
}se{UFuts=1/  s-u,sooFus
}ue{UFuts=0/  ooooooFus
}ue{uts=1/   -u,sooFus
}ue{UFuts=0/  ooooooooFut-us
}se{UFuts=1/ oooooooooooots-1/   -u,s-localu,soFut-ufi33333333333os
}{UFuts=1/   -u    ,sooFus
}ue{UFuts=0/  ooo2147489982oooFut-us
}se{UFuts=1/ oooooo7/      oooou,sFut-us
}se{UFuBs=1/   u,soooooFut-us
}se{UFu -us
}ue{UFuts=0/  oooooo2, x53, x54, x55, x56, x57, x58, x58, x60-  gotx61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x73, x64, x653,o335l393, x19, x20, x21, x22, K,ffi233A3o33;o,iiff,io,f,fi3338, x58, X60- x61, x62, x63, x64, x65, z66, x6i,io,f,fi3334,o3i,io33333;o,fi,                 f,fi33333333io,o33333;o,# f    ,2,fi333u33_pr,f3333;y,ji,o,f,fi3333333i3333333;y,ji,io,f33333io,o3333ooFut-is
}se{UFu=0/   -us
}ue{UFuts=0/  ooooooFuooOooo-o1sot/   -u,s-u,sooFus
}ue{ppppppppppppoooopoFut-us
}se{UFuotts=1/ ooooos
}se{UFutsFutoooFut-us
}se{UFuts=1/ ooooooooooooou,oBooooo18446747370955418Fut-ur
}se{UFuts=1/ooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ oooooooooooooooo     ""  
-s
}se{UFuut-us
}se{Ui=notFuts=1/   -uoooFus

}se{UFs=1/ o335l393133rou,Futooou,NFut-us
}se{UFuts=1/   error("check failed with "..tostring(a).." ~= "..tostring(b), 2)
  e,y = 1,2

  check((1),	true)
  check(gtx5(1),	false)ut:gsub("%.", "%%.")))
      if s == 2 and e == #agtual then return end
    end
  end
  error(format("exp-- small denormals at low prec  
 on gt2x(x)
  if 1 > x then ne1x(x)
  if 1 ~= x then return true else return false end
end

local function check(a, b)
  if a ~= b then
    error("check failed with "..tostring(test_adjus local t = type(output)
  if t == "string" then
    if output:find"[[%]]" then
      local s, e = acl6find((output:gsub("%.",   fstr, input, output, actual))
end

do --- small denoreturn true else return false end
end

local function gt(x, y)
  if x > y then return true else return false end
enrmasor s at low prec         d

local funct               i