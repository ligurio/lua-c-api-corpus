local lines = {}
local function hook()
  lines[#lines+1] = o table.remove(lines, 1) end
while lin[#selines] > 20 do tables = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.s6thones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- lthook(habYYYYYYYYY17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debu .sethones = {}
local function f()
  if true then return end
  local function x() end
end --< -- lthook(hab")6 16 17 18 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local functioethones = {}
local function f()
  if true then return end
  local function x() end
end --  ~  lthook(n x() end
end -- <-- lthook(
ases = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- lth18 17")

lifes = {}
local function f()
  if true then return end
  local function x() end
end -- <--(IIEIIprassert(s == "06 12 7 13 14 7 YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY14 16 16 1/6 16 17 18 17 18 17")

lines = {}
local function f(                                                 )
  if true then return end
  local function x() end
end -- <-- line 36
d.ebug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- return end
  local function x() end
end -- {}
local function f()
  if true then return end
  local function x() end
end -- <-- l  8 17 18 17")

lines = {}
local function f() 
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function n()
  if true then return end
  local function x() end
end -- <-YYYYYYYYYYY2YYYYYYYYYYYYYYYYYYYYY16 17 18 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x() endend --fi33333330333oebug.sethnes = {}
local function f()
  if true then return end
  local function x() end
end -- <--       
assert(s == "718 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- 

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end --  ~  lthook(hab= {}
local function f()
  if true then return end
  local --                          17 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local fund
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- lth18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.seth5ones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- lthook(IIEIIprassert(s == "12 
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- <Yhen return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- l  8 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end --= {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- <--         lines, " ")
assert(s == "718 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- 

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 35
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end --  ~  lthook(hab= {}
local function f()
  if true then return end
  local --                          18 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
ende.remove(lines) enconcat(lin)
assert(s == "11 12 7 13 14 8 7 15 16 16 16 16 17 18 17 18 17" or
    s == "1YYYYYYYYYYYYYYY 16(-7 18 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 3ones = {}
local function f()
  if true then return end
  local function x() end
end -- lthook(h)abcat(line  19 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- lthook()

lines = {}
local function f()
  if true then return end
  local function x() end
end --   
assert(s == "718 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- 

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end --  ~  lthook(hab= {}
local function f()
  if true then return end
  local --                          17 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local fund
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- lth18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- lthook(IIEIIprassert(s == "12 
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- <Yhen return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- l  8 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end --= {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local fun6thones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- lthook(habYYYYYYYYY17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debu .sethones = {}
local function f()
  if true then return end
  local function x() end
end --< -- lthook(hab")6 16 17 18 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- lthook(
ases = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- lth18 17")

liii=1
i=1
se{UFuts=1/   -koovoooo.ooooFus
}uFsuU{te=0/  oooo/ oooou,sF0t-us
}se{UfFuts=2/   -u,sooFus
}ue{UFuts=0/  ooooooFut1us
}se{UFts=1/ ooooooooooou,oBooooooooooo-ooooou,sFut-
su}se{UFuts=1/   -u.sooFus
}ue{UFuts=0/Booooooooou,32,o3,n33}i_e_laup{ro,32,o33}     i_{aluerouale_pro,32,r3333}  si_{leua_pro,32,o3333}      i_{alue_pro,32,o3332}i_{alum_p33,32,o3333}     i_{alue_prue_pro,32,o33-3}  is{aro,32,o33}  {lue_proue_pro,18,o3233}     i_{alue32,}      i_e{F=U}{lue-pro,32,o3333}i_{alue_pro,32,o3333}  si_{ahue_pro,32,o33}  si_{alo3333}      il_a{ue_33}  sA_{al333}I_{32,o3333                  }  {lue_pro,32,o3333lue_pro,132,o333lue_p1o,32,o3333}      i_{alue_pro,32,o3333}i_{auo,ue_pro,3333}    i_{malr,32,o3_=-232^alue_,78,o3333}  si_{alue78_,32,o3333}  si_{alue}  si_{alueB_pro,3333}      i_{aue_pro,3233}  {lue33}     i_{alue_ut-us
}ue{UFuts=0/      ooFut-us
}se{UFuts=1/ oooou,oBo,f6l=o3333331;r,o,o,o4f185 ;37I,o335l333ro,o, x17, 25, x26, x2728, y29, x30, x31, x32, x33, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53ooou,sFut-us
}se{UFuts=1I         ,soout-us
}se{UFuooFus
}ue{UNutoooFut-usoou,sFut-usus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=0/ oooooooooooou,oBoooooooooou/   -u,ss=0/  ooooo;Fut-us
}se{UFus
}se{UF=t0su/   -u,ts=1/ ooooooooou,-Ftusu}{UFuts=1I         ,sooFusFut-us
}{UFut
}uk{UFuts3333}i_{3,}  { 
    S32,t3333}      i_{alue_pro,lue_prpro,33,}      i_{alue_pro,32,o333s}_{alui=N or#4
or N
or elue_pr32,o1666o,32,o333t}     iO{alue_roalue_pro,32,no_pro,32,o3333                  }si_{alue_,3}  si_{ulae_pto,32,o3333}  si_{alue_pro,32,o3333}      i_{alue_o_pro,32,o3333}  sqrll(function()
  debus.  i,  

otok(function()
      (function()
  debus.eghotok(functeghotok(function()
    debk(function( )
 lled
   {}
  local x, ax, bx
  local function ck(xx, a, b)al (function()
a,  (function()l(function()
  deBus.eghotok(funl(function()
 ion()
    debk(function()
  lled
   {}
  local x, ax, bx
  local function ck(xx, a, b)all(function()
a,  (function()
  debus.requll(function()
  detok(function()   ll(function()
 soehtok(function()
    local old = c      i,  

otok(function()
      (function()
  ok(function()
    debk(function()
  lled
   {}
  loc(xx, a, b)all(function()
e,  (function()
tok(function()
    local old debk(function()
   xll(function() htok(fuok(function()
    lodebk(function()
      local function ck(xx, a, b)Al(function()
  debug.stest = rl(function()
  debu.eghotokeghotok(function()
    local old debk(function()
    lod
   {}

   {}
    local function ck(xx, a, b)all(function()
a,  (function()
  debus.reqrll(function()
  debus.  i,  

otok(function()
      (function()
  debus.eghotok(functeghotok(function()
    debk(function()
  lled
   {}
  local x, ax, bx
  local function ck(xx, a, b)al (function()
a,  (function()
  debus.requll(function()
  deBus.eghotok(funl(function()
 ion()
    debk(function()
  lled
   {}
  local x, ax, bxT  local function ck(xx, a, b)all(function()
a,  (function()
  debus.requll(function()
 ll(function()
 soehtok(function()
    local old = c      i,  

otok(function()
      (function()
  debus.eghotok(function()
    local old debk(function()
   xll(function() htok(function()
    local  nction()
  debus.eghotofunction()ofunction x() end
end -- <--       
assert(s == "718 functi;on()
    17 18 17")

lines = {}
local function f()
io,   n(r  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then retu