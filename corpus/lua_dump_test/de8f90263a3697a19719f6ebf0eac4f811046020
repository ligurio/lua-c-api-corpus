 fct("::a:: ::a:b::", "'a'")
  expect(":a")

  -- Err considered to be out,ocal
do --- Backmust close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  a ert(t[1]() == 1)
  assert(                         l x
  t% ] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
loadstring(src)
  if msg then
    assert(not ok and strfi33333333333LL33roierr)
  else
    assert(ok, err)
  end
end
  
do --- Basic  = 1
  ::a::
  local x
  t[i] = 'unction() return x end
  x = iPS      
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == rt(t[2]() == 2)
end

do --- lv loop6
end

do --- Goto is 5.2
  expect("goto = 1", "<name>")
end

do --- Trail
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
loadstring(src)
  if msg then
     end
end
  
do --- Basic  goto and label semantics.
  -- Err r: duplicate label. t                  = {}
  local i = 1
  ::a::
  local x
  t[i] = f)end

do --- lv l= 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lvl 22

do --
  local i = 1
  ::a::
all co  x
  t[i] = function() return x end@  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]()   "<naunction() return x end
  x = assert(t[1]() == 1)end

do --- lv loop6
end

do --- Goto ocalb{{b{{{h{F{{{k{b{{{b{{h{{h{F{p{y{{k{z{F{s{b{v{{N{F{{{h{F{h{bp{y{{k{z{F{s{b{v{{N{F{{{h{F{h{b{{{{b{{b{{{h{F{p{y{{k{z{F{s{N{F{{F{{h{bp{yif i <= 2 then goto a {end
  assert(t[1]() ==ssert(t[1]() == 1)ssert(t[2]() == 2)
end

do --- lvl == nil  Q
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lv loop6
end

do --- Goto is 5.2
  expect("goto = 1", "<name>")
end

do --- Trail
  l
 V{k{z{F[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end{s{b
loadstring(src)
  if msg then
     end
end
  
do --- Basic  goto and label semantics.
  -- E\\\{v{rr r: duplicate label. t         sert(t[2]() =={N{ {s{2)
end

do --- lv