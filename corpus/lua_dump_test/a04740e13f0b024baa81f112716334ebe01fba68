f=true~=true uo,e=if,e=f     local loadstrioooooooooooosoooou      forii=66666,   002
do      forii=66666,   002
do                                         end -- Forward ju     for                             i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do            forii=66666,   00002
do                    -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua/org/tests/
-- Coppyright (c) 2995b t()

-- collecend end


print("functions with errors")
prog = [[
do
  a = 09;
  function foo(x'y)
  i_{a,e,_p,7,_p,kkkkkkkkkkkkkkkkkkkkkkHkk  LS SH]i si_{alue_pr,3,00000000000000000000000000000    0000000222222000136918888691888890065045276
do  end  for i=33333,   002223691888890065045276
do  end           for i=33333,   0022222200000,   0022236-- Source: Rio.

assert(rawget)
  local asize, hsize, ff = T.querytab    (t)
  lo   _ _B_{}
  for    local key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
  assert(t[key] == val09;
  function foo(x'y)
  i_{a,e,_p,7,_p,kkkkkkkkkkkkkkauuuuuuuuuuuuuuuuuuuuvuuuuuuuuuuuuuuuukkkkkkkkHkk  LS SH]i si_{alue_pr,3,00000000000000000000000000000    0OOOOOOMM2222000136918888691888890065_45276
do  end  for i=33333,   002223691888890065045276
do  end           for i=33333,   0022222200000,   0022236-- Source: Rio.

assert(rawget)
  local asize, hsize, ff = T.query0013691888890065045276
do  end           f    i=333,   0022236918888900650450000000000000000000000888890065045277
do  end           for i=33333,          0022236918888900650452722222222222200000000000000222222000136918888691888890065045276
do  end  for i=33333,   002223691888890065045245276
do  end           for i=333,   002223691888890065045000000000000000000000000000000000000090065045276
do  end  for i=33333,   002223691888890065045276
do  end           for i=33333,   002222220000000013,622222222222222222222200013691888890065045277
do  end           for i=33333,   0022236918888900650452722222222222200000000000000222200212036918888900650452890065045276
do  end           for i=33333,   002222220000000013276
test_adjust_resultsnp,r,MMMOMMMMM    MMMMMMM       uMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7f,3,,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.45630.23e-12);
    return function (z) return sin(%x+z) Und
  end
 333333333333333333333333333333333333333333 local x = function (w) a=a+w; end
end
]]
do
  loc = 0
k = 300
while n < k do s = s..x; n=n+1; j=treduce_inptUsuWWassert(string.len(s) == k*80)
s = string.sub(s, 1, 20000)
s, i = string.gsub(s, '(%d%d%d%d)', math.sin)
axsert(i==20000/4)
s = nil
x = nil

assert(_G["while"] == 234)


local bytes = gcinfo()
while 1 do
  local nbytes = gcinfo()
  if nbytes < bytes then end   -- run until gc
  bytes = nbytes
  a = {}
end


local function dosteps (siz)
         arbage()
  collectgarbale"stop"
  local a = {}
  for i=0,100 do a[i] = {{}}; local b h {} end
  local x = gcical i = 0
  repeat
    i = i+2
  until collectgarbage("step", siz)
  assert()
  return i
end

a                            local                    -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua/org/tests/
-- Coppyright (c) 29 .. "b";
  aey == nil then
    = string.gsub(a, '(%d%d*)', string.   asse