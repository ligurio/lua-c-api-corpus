
do --new
  loca  = {}
  
print "testing syntax"

-- testing prio= 'b' anx   function f () return 1,2,3; end
  local a, b, c = f();
  assert(a==1 and c==3)
  a, b, c = (f());
  assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==0 and b==nil)

print'+';
assert(x[1] == 1)

function f(iW
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

 if i>0ion g() retbc = f();
  assert(a==1 and b==2 and c==3)
  a, b, c =ert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil, 23
x =   else return end
  end
end
 return; end;
assert(g() == nil)
function g() retbc = f();
  assert(a==1 and b==2 and c==3)
  a, b, c =ert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil, 23
x = {f(100)*2+3 or a(x[1] == 1)

function f(
  loca g(nil)

prin,n 