local loadstring = loa

local function  expect(src, msc)
  if msg then
    assert(jo, "'a'")

  -- E"'a': until x", "'x'")

  ::a:: do goto a; ::a:: end -- Ford
do
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
   

do --- Tra                 t goto a; local x; ::a:: untile ]S_]X '")

  ::a:: do goto a; ::a:: end --  local x = 49
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat gkto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forwnot an QQQQQQQQQQQQQQQQQQQQQQQQQQinfnd																

do --- Go a; end; local x; ::a:: local y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    --al x; ::a:[ until x                      ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x; :::: loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra        loca)

  ::a:: do goto a; ::a:: end -- Fop.
end																				

do --- Goto is:cal v,w; gx; ::a:: ::d.  
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --  local x = 49
  do
    goto a
    goto areduce_inptUsuWW  local x; ::a:: loan<BBBacal y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end								

do ---; ::a:: local y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --ction foo2(...) function foo3(...) -- V foo2(...) -o3(...)                    -- VA!RG UCLO -> -RETM
  do return ... end   local function dummy() end
end

local function foo2() -- Urepeat goto a;  ; ::a:: until x, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...)  s{alue_pro,32,o3333}si_{alue_,32,o3333}  si_{alue_pro,32,o3333_,32+ 3333}  si_{alue_pro,32,o3333}      i_{alue_proooooooooolooou,16,o3333}i_{alue_pro,32,o3333}  si_{alue_pro,32,o333}  si_{o,32,o3333}i_{37,o3333}  { 
    S32,o3666}      i_{alue_pro,33,o3333}     i_{alue_roalue_pro,32,o3}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3333pro,32,o3333}  si_{alue_pro,32,o333 !le goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tkeyword. -compat 
 ::a:: do goto a; ::a:: end -- Forward  scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::

end

do --- Tra     ")
  expect("rEpeax'")

  ::i:: do goto a; ::a:: end  do
    goto a
 xpect("repeat goto a; local x; ::a:: until x", "'x'")::a:: do goto a; ::a:: end -- Forward bof scope.
  local x = 11
  do
    goto a
    goto a
    local x = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 10=::
  end
  assertX _== 11)
end

do --- Tra