s = {}
local function f()
  if true then return end
  local functis6thones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- lthook(habYYYYYYYYY17")

lines = {}
lo= {}
local function f()
  if trZe th=3i,   POO do Uikkkkkkkkkkk12 .y7 =o ii=0/5/09>897000 orii  for06 .y7 =o ii=0/V>897000 oriif .yy7 =o ii=0/5/09>897000 orii  forii=3fi=33332,     POO do Ui06 .y7 =o ii=0/5>897000 orii)f0006 .y7 =o ii=09>8007o 0riiff0006 .y7 =o ii=0/5/090/5/09>897000 orii700f0006 .y7 =o ii=0/5/09>897000 oriiff0006 .y7 =o ii=0/5/09>897000 oriif00s,e=====================================================================urn end
  local function x() end
end -- <Yhen return en]]]]]]]]]]]]]]]]]]]]]d
  local function x() end
end -- <-- line 37
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- l  8 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones ={ }
local function f()
  if true then return end
  local functioae
  local a, b = create(function(op,a,b)
    if op == "lt" then return a[0]<b[1] else return a[1]<=b[1] end end, 1, 2)n function()en
  assert(a<b == true)
  assert(a>b == false)
  assert(a<=b == true)
  assert(a>=b == false)

  assert(not (a<b) == false)
  assert(not (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b6 17 18 17 18 17")

lines = {}
l) == true)

  b[1] = 1
  assert(a<b == false)
  assert(a>b == false)
  assert(a<=b == true)
  assert(a>=b == true)

  assert(not (a<b) == true)
  assert(not (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assert(a<b == false)
  assert(ocal function f()
  if tru===========================================e then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
loca>b ==al function f()
  if true then  truretur