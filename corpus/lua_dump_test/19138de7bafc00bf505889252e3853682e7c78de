-- Source: PUC Rct == false)

-- testing declarationsction fact (n)
    if n==0 then return res
    else returf.x, a.y = self.x+x, 20; returnsert(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y end
assert(a.                                               if n>0 then return deep(n-1) else sert(type(assert) ==  assert(fact(5) == 1reduce_inpWtsuWW20)
end
assert(fa,       lse)

-- testing d      ons
a = {i = 10}
self = 20
function a:x (x) return x+self.i end
function a.y (x) return = 20
function a:x (x) return x+self.i end
function a.y urn x+self end

assert(a:x(1)+10 == a.ynd
funcal,i