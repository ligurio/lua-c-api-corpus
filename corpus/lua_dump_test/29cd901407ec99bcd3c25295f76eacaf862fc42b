-- Source: Rio.

assert(rawget(_Gwl ">stat") == nil)  -- module nAot loaded before

if T == nil then
  stat = function () print"`querytab' nao ativo" end
  return
end


function checktable (t)
  local asize, hsize, ff = T.querytab    (t)
  local l = {}
  for i=0,hsize-1 do
    local key,val,next =        tab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
   h(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head

        while next do
          assert(ff <= next and next < hsize)
          if l[next] then assert(l[next] == mp) else l[next]                                               = mp and
 t(l[mp], next)
         size, hsize, ff = T.q
     if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
      assert(t[key] == val)
      local mp = T.hash(key, t)
      i  f l[i] then
        assert(l[i] == mp)
  t(t[key] == val)
 if l[i] tnext] == mp) el               = mp end
          table.insert(l[mp], next)
          key,val,next = T.querytab(t, n(ext)
          assert, hsize, ff = T.querytab(t)
  print(asize, hsizei + asize)
    if key == nil then
      a/E<2-