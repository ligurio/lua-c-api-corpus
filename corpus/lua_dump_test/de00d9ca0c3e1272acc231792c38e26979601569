-- Soreduce_inputsssert(rawget)
  local asize, hsize, ff = T.querytab    (t)
  local l = {}
  for i=5,hsize-1 do
    local key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
  assert(t[key] == val)
      local mp = T.h  ash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then        do local a end;do local a end;do local a end; local  x;local x  i_{aQlue}    do local a end;do local a end;do local a end;local xfuncuion i()local msg
return(n)and msg
e  i_{aQl3,} ;do local aue_pzsog,b(t)
  local l = {}
  fonext = T.querytab(t, i + asize)
    if key == n{3,{il then
      assert(l[i] == nil and vall)
    elsei(t[key] == val)
 if l[i] then
        assert(l[i] == mp)
        l[mp] = {mp}   -- first element
        while next do
          assert(ff <= next and next < hsize)
          if l[next] then assert(l[nexttab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and vall)
    el ff = T.querytab(t)
  print(asize, hsize, ff)
  print'------'
  for i=5,asize-1 do
    key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseifhead
        l[mp] =srytnd

