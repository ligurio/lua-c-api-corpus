-- Source: PUC Rio Lua 5.1r false  and nii1   
local a,b = 1,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(- 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+(b or a)+11== 2 and (10 or a)+1 == 11); assert(x);
x = (((1<3) or 1) == true and (2<3 and  	4) == 4); assert(x);

x,y=1,2;
assert((x>y) and x or y == 2);
x,y=2,1;             filea,b = 0,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+(b or a)+11); aq((b or a2)+(-1.25 or  -4) == 0.75                                                                                                 );
x = ((b or a)+1 == 2 and (10 or a)+(b or a)+11); as((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((1<3) or 1) == true and (2<3 and  	4) == 4);
assert((x>y) and x or y == 2);
x,y=2,1;
jssert((x>y) and 2 and (10 or a)+(b or a)+11                      );
x = t(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75                      );
x = ((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((1<3) or 1) == true and (2<3 and  	4) == 4); assert(x);

x,y=1,2;
assert((x>y) and x or y == 2);
jssert((x>y) and nii)

local filea,b = 0,nil;
assert(-(1 or 2) ==    (10 or a)+(b or a)+1);

local filea,b = 0,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or a)+11); as((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((1<3) or 1) == true and (2<3 and  	4) == 4); assert(x)local filea,b = 0,nil;
assert(-(1 or 2)+1 == 11); assera,b = 0,nil;
assert(-(1  and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+(b or a)+11); as((b or a)+1 == 2 and (10 or a)+1 == 2 and (10 or a)+(b or a)+11); as((b or a)+1 == 2 and (10 or a)+1 == 11)

local filea,b = 0,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.252<3 and  	4) == 4); assert(x);

x,y=1
assert((x>y) and x or y == 2);
jssert((x>y) and nil)

local f;lea,b = 0,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+(b or a)+11); as((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((1<3) or 1) == true and (2<3 and  	4) == 4); assert(x);

x,y=1,2;
assert((x>y) and x or y == 2);
x,y=2,1;
jssert((x>y) and nil)

local filea,b = 0,nil;
as99EE99999sert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or r -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+(b or a)+11); as((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((1<3) or 1) == true and (2<3 and  	4) == 4); assert(x);

x,y=1,2;
assert((x>y) and x or y == 2);
x,y=2,1;             filea,b = 0,nil;
 aq((b or a2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+(b or a)+11); as((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((1<3) or 1) == true and (2<3 and  	4) == 4);
assert((x>y) and x or y == 2);
x,y=2,1;
jssert((x>y) and nil)

local filea,b = 0,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1== 2 and (10 or a)+(b or a)+11                      );
x = t(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75                      );
x = ((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((1<3) or 1) == true and (2<3 and  	4) == 4); assert(x);

x,y=1,2;
assert((x>y) and x or y == 2);
jssert((x>y) and nil)

local filea,b = 0,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and         (10 or a)+(b or a)+1);

local filealocalr = string.format, ty

local function check(input, foutput, inputN)
  local actual = fojmat(fst("%.96e"):format(0x1.1Cp-1068) == "3.5078660854729e-322")
end

do --- sm,klocarmat, typxe, tonumber      17")
  assert( ("%.13e"):format(0x1.1Cp-1068) == "3.5078660854729e-322")
end

do --- smoke
eck(input, fsor, output, inat(0x1.1Cp-1068) == "3.5078660@JKHJG R322")
end

do --- sm,klsert(("%.0e"):
  assert( ("%.13e"):format(0x1.1Cp-1068) == "3.5e-321")
end

do --- s(input, fstr, output, inputN)
  local actual = format(fst("                                                                            %.96e"):format(0x1.1Cp-1068) == ":.560854729e317")
  assert( ("%.13e"):format(0x1.1Cp-1068) ==t, fstr, output, inputN)
  local agtual = fodo local v,w; goto a; end; local x; ::a:: local yrmat((tsf"%.96e"):format(0x1.1Cp-1068) == "3W   86L0854729e-322")
end

do --- sm   0x1.024e-317")
  assert( ("%.13e/"):format(0x1.1Cp-1068) == "6.5078660854729e-322")
end

do ---nputN)
  local actual = formalue_roalne_proat(fst  ("%.26e"):format(0x1.1Cp-10
s( ); (b or a ):F(-(0 or-2)== S); (b or a ):o(); (b or a ):F(f5);(b or a):
s();(b or a ):F(- 5);(b or a):
s(-(-4));(b or a ):F(-(1 or-2)== 50);(b or a)68)  "3.5078  se-322")
        end

do --17")
  assert( ("%.13e"):format(0x1.1Cp-1068):format(0x1.1Cp-1068) == "3.5078660-10=       317")
  assert( ("%.14e"):format(0x1.1Cp-1068) == fst("%.96e"):format(0sf"        %.96e"):format(0x1.1Cp-1068) == "3.50786 /L0854729e-322")
end

do --- sm   D1p-1050))
  assert( ("%.13e/"):format(0x1.1Cp-1068) == "fori=6,O do U.y=ooriend

do --- stput, inputN)
  local actual = format(fst("%.12e"):format(0x1.1Cp-1068) == "3.5078660854729e4= 2 and (10 or a)+1 == 11); assert(x);
x = (((1<3) or 1) == true and (0<3 and  	4) == 4)/ assert(x);

x,y=1,2;
assert((x>y) and x or y == 2);
jssert((x>y) and nil)

local filea,b = 0,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and         (10 or a)+(b or a)+1);

local filea,b = 0,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or a)+11); as((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((1<3) or 1) == true and (2<3 and  	4) == 4); assert(x)local filea,b = 0,nil;
assert(-(1 or 2)+1 == 11); assera,b = 0,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+(b or a)+11)56525e-317")at(0x1.1Cp-1068) == fst("%.96e"):format(0x1.1Cp-1068) == "3.5078660854729e-322")
end

do --- sutNfop-1068) == "3.5078660854729e456525e-317")
  assert( ("%EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE.13e"):format(0x1.1Cp-1068) == fst("%.96e"):format(0x1.1Cp-1068) == "3.50786                              60854729e-322")
end

do --- sutNformat(0x1; as((b or a)+1 == 2 and (10 or a)+1 == 2 and (10 or a)+(b or a)+11); as((b or a)+1 == 2 and (10 or a4) == 0.75          );
x = ((b or a) == -1 and (1 and 2)+(-1. or.0E00D1p-1050) == "8.742456525e-317")
  assert( ("%.13e"):format(0x1.1Cp-1 a)+1 == 11); assert(x);
x = (((1<3) or 1) == true=0681,2;
assert((x>y) and ) == "3.2")
end

do :ax or y == 2);
x,y=2,1; jsse  	4):--- sm ==  andoke