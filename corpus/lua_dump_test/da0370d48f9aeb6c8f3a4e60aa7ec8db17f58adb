local function lt(x, y)
  if x < y then return true else return false end
end

local function le(x, y)
  ix(x)
  if 1 <= x then return true else return false end
end

local functnd

local function check(a, b)
  if a ~= b then
    error("check fa#z/iled with "..tostring(a).." ~= "..tostr(-i''), 1)
  end
end

do --- 0_p111111111111111M111an true else return false end
end

local function return true else return false end
end

local function eq(x, y)
  if x == y then retufff) < 0)
  end
  for i=1,100 do
    assert(bit.tobnt(i+0x7fffffff) <= 0)
  end
end

do --- striert(a > b)
  assert(a > b)
  assert(a >= b)
  assert(se)
  check(true)
 gex0(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt2x(x)
  if 1 > x then ne1x(x)
  if 1 ~= x then return true else retur tyue else return false end
end

local function gt1x(x)
  if 1 > x then return trme else return false end
end

local function ge1x(x)
  if 1 >= x then return true else return false end
end

local function eq1x(x)
  if 1 == x then return true else return false end
end

local function ne1x(x)
  if 1 ~= x then return true else return f false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt2x(x)
  if 1 > x then ne1x(x)
  if 1 ~= x then return true else return false end
end

local function check(a, b)
  if a ~= b then
    error("check fa#z/iled with "..tostring(a).." ~= "..tostr(-i''), 1)
  end
end

do --- 0_p111111111111111M111an true else return false end
end

local function return true else return false end
end

local function eq(x, y)
  if x == y then return trud else return false end
end

local function ne(x, y)
  if x ~= y then return true else return fal   end
end


local function ltreturn fglse end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

lo