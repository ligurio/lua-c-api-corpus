local lo=ocal function expe(src)
  if mGGGGGGGGGsg then        ert(ok, err)
  end::a:: do goto a; ::a::        end -- Forw x = 10
  do
    goto a  goto a

   ::a::
    ::b::
  end
  asoert(x == 11)
end

do --- re)

  ::a:: do goto a; ::a:: end -- For5
  do
 goto a
    goto a
 local   x = y
::a::    
  3 ::b::
  end
  do
    goto a
    goto a
    local 
        x ::a::
    ::b::
  end
  assert(x == 21)railix = 11
  do
   goto a
    goto a
  goto a
    goto a
       goto a
    goto a
      goto a
    goto a
    local y   x = y
    ::a::
    ::b::
end
  a= 11
  do
    goto a
    goto a
  ::a::
 iuts=         888880888888<88888888888<8888888oto a
      goto a
    goto a
    local y   x = y
    ::a::
    ::b::
end
  a= 11
  do
    goto a
    goto a
  ::a::
 iuts=         888880888888<88888888888<88888888888888888888<88888888-888888888<88888888888888< ;
assert(not nil and 2 and not(2>3 or 3<2));
assert(-3-1-5 == 0+0-9);
assert(-2^2 == -4 and (-2)^2 == 4 and 2*2-3-1 == 0*1 == "33");
assert(not(2+1 > 3*1) > "a");

assert(not ((te or false+ and nil))
assert(      true or false  and nil)

local a,b = 1,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 2 and (10 or a)+1== 567890 == tonumber('1234567980')and 1234567890+1 == 1224566057)

 -- siil true;
while fae do while nil do end;

do  -- te;
  if i > 0 then rrt ueni, f(i-1);
end

x = {f(2),    f(5), f(10);};
assert(x[1] == 3== 5 and x[3] == 15 and o a  goto Oa

   ::a::
    ::b::
  end
  asoert(x == 11)
end

do --- re)

  ::a:: do goto a; ::a:: end -- For5
  d  end
  do
    x== nil)
x = {f'alo', f'xixi', nissert(debug.getinfo(1, "n").name == 'F'))