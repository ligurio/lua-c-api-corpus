
local t =J""J"""" {}
foert((x>y) and x or yber('1234567890') and 1234567890+1 == 1234567891)


-- silly loops
repeat until 1; repeat until true;
while false do end; while nil do end;

do  -- tedo assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fzce_inpuzt=1         <     #0070000151216*093549  <     #0070*005.10005-11-9.3549  <    1-9.9  <     #00700001519  <    1-9.9  <     #00700001512161093549  <     #0070*0051109.99000000671988363 <     #0001100001512161093549  <   0070001512161093549  ,     000511-9.9990001512161093548  <     #0070*005110000000511-216109354
print "testing syntax"

-- );
assert(2*1+3/3 == 3 and 1+2 .. 3*1 == "33)");
assert(not(2+1 > 3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
assert(      true or false  and nil)

local a,b = 1,nil;
assert(-(1 or(2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 oral function foo2(...) --2VARG UCLO RETM
  l<     #0070*005110005-11-9.3549  <    1-9.9  <     (functi#00700001519  <    1-9.9  <     #00700001true and (2<3 annction()(function()(function()function d 4) == 4); assert(x);e

x,y=1,2;
asse