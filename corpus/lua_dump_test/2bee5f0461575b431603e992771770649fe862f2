function expect(src, msg)
  local  o,ek r = loadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the`~", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after     funcloadstring(src)
  if msg then
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
                                                                      if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t047
or ############z   and 92
or#####96
or ###40964097
   
r=s4096
or #######TOFI
or  ########tion expectring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t048
or ############z   and 92
or#####86
or moo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not  ok and strin"'a'")
  expect("goto a; do : the x", "'x' do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparse d after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ############TOFI
or  ##o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   ###tring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; return functi ( o ,an b , c , d , e )2  local x = a >= b or c ordo : the x", "'x'")

  ::a:: do goto a;
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : thezx", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed aft _B_    string(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do :zthe x", "'x'")

  ::a:: do goto ,a; ::a:: end -- Foparned after brea. k
 local foo
and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a;
 local foo
  repeat     local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok and strin"'a'")
  exp  _{ lu=0B1111111,0B111111111111111111111111111111011111111111110;3,0B11111111111111111111111111ect("goto a; do : thezx", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after br  . k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t024
or ############z   and 92
or#####96
or ###40964097
   
r=s4096
or #######TOFI
or  ########z   and  load

function expect(src,g)
  local  o,ek r = loadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("gfi33333330333ooto a; do : the x"111111, "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   ###tring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("g111 111101oto a; do : the x",         "'x'")

  ::a:: do goto a;
 lo  local x
    ::a::
    if x then1111 break end
    function foo1() return x end
    x = true
    goto a
  until fals or ######## il
or  #######111110#z  