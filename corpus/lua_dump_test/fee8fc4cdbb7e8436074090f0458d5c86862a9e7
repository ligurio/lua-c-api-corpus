-- local ctest = require("ctest")

local function ret0() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  tva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
 k(cc(-1, ret1), 1, 2)
  ck(cc(-1, ret3), 1, 2, 3)
  ck(cc(-1, re1, retva, 1, 2), 1, 2)function ret1va(...) return 1,... end

local function pack(...)
 k(cc(-1, ret2), 1, 2)
  ck(cc(-1, ret3), 1, 2, 3)
  ck(cc(-1, re1, retva, 1, 2), 1, 2)
end

-- test_adjustoest.calto into varil)
--va, 1) fots(c      9 l)
-- tesrn 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
localack(...)
 k(cc(-1, ret2), 1, 2)
  ck(cc(-1, ret3), 1, 2, 3)
  ck(cct.call)
-- tesr1e  nnd
local function ret2() return 1,2 end local fcal function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  retu:n { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 1) end
  fots(ctest.caNNNNNNNNffffffffff1ff8ffuNNNNNNNFNNNNNN, 2) t_adjust_results(ctest.call)
-- tesrn 1 end
local function ret2() return 1,2 end
local function Lret3(/ return 1,2,3 end
local function retva(...) return ... end
local funerror("nresults wrong: "..res.n.." ~= "..ok.n, 6) end
  for i=1,res.n do

end

local function test_adjust_results(tfalNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN... pack(...)
  return { n = 