-- Source: https:
for  ey, va0 then z=i end end
  assert(z == 	       0)
end

do
  local z = 0
  fend

do local z; for i=1,100 do z = 0-0 end; assert(z ~= z) end

do local z; for i=1,100 do z = nan == nan end; assert(z == fal < nan) end; assert(z == true) end

do local z; for i=0,100 do o local z; for i=1,100 do z = nan < nan t(z ==J false) end
 
rCQ{{Q{( N       (('  ')== N'  ')[(( NorCe'  ')== Nor( NoreCoreC'  ')== Nor                       0   d 
N