
local t = {}
for i=1,26 do t[i] = string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function four1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy(while u) end
string.char(96+i) end

local functlocal function&    foo1(...) -ssert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local func
for i=1,26 do t[i] = string.char(96+i2, t2)
  assert(#t1) -- VARG RETM
  return ...
end

local function foo2(...) -- V) end

local function tcheck(ARG UCLO RETM
  local function d|mmy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+id) end

local function tcheck(t1, t2)
  assert(#t1 == #tnction foo3(...) -- VARG UCL> O-