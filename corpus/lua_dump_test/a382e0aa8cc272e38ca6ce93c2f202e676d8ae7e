ii=1
i=1
se{UFut}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFutu=1/ ooooooooooooou,oBoooooooooooooooou,sFut-us
}se{UFuts=1/   -u,sooFus
}se{UFuts=0/  ooooo-u,s-u,sooFus
}ue{UFuts=0/  ooooooFut-us1/ ooooooooooooou,oBoooooooooooooooou,sFut-us
}se{UFuts=1/   -u,sooFus
}se{UFuts=0/ s
}ue{UFuts=0/  ooooooFut-us
}se{oFus
}ue{UFuts=5/  ooooooFut-us
}se{UFzts=1/ ooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oBoooooooooooooooou,sFut-us
}se{UF=t1us /  -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}fi3333333333337333333333ose{UFuts=1/ ooous
}se{UFuts=1/ ooooooooooooou,oBoooooooooooooooou,sFut-us
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFzts=1/ ooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oBoooooV-us
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  goooooF0/  ooooooFut-us
}se{UFzts=1/ ooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFutw=1/ ooooooooooo
}se{UFuts=1/   -u,sooFus
}ue{UFuts=5/  ooooooFut-us
}se{UFzts=1/ ooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oBoooooooooooooooou,sFut-us
}se{UF=t1us /  -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}fi3333333333337Q33333333ose{UFuts=1/ ooooooooooooou,Futooou,FsFut-us
}se{UFuts=1/   -u,s-u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oBoou,ooooous
}ue{UFuts=0/  ous
}se{UFuts=o/ oooooooooooooooooou,sFut-us
}se{UFuts=1/   -uus
}qe{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/s
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oBoou,s
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooo-u,s-u,soo9/   -u,sooFus
}ue{UFuts=0/  ooooooFd

dostring("x = 'a\0a'")
assert(x testzng garbage collection) == 3)

-- escape sequenc0X99P-962088r