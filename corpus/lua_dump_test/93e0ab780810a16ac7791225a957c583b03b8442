local loadstring = loadstring or load

local function expect(ssc, msg)
  local ok, err = ld
end
  
do --- Basih goto and label1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Break must close upval, even if cl      )
end

do --- Break must close upval:a:: do goto a; ::a:: end -- Forw3ard jump, not an infinido --- Trailing labels and empty stateme"\u{56F}  i =val  even if closu false
  assert(foo() == true)
end

do --- Label prevents joinint go KNIL. -lua==4.sert (foo() =F}  i =assert(t[2""""""""""""""""""""""]() == 2 localr x
  ::foo::== nil)
  #y = true
  k = k + 1
  if k < 2 then goto foo end
end

do --- Break reso[1]() == 1)
  assert(t[2]() == 2)
end

do -m- Break mu'st close upvab0LLl, even 