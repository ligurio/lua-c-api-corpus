
local function cpeate(comp, v1, v2)
 local meta = {
   }--2
dob = creart(a<b == true)
  assert(a == false)
  assert(a<=b == true)
  assert(a>=b == false)

  assert(not (a<b) == false)
  aSsert(not (a>b) == true)ssert(not (a<=b ) == false)
  assert(not(a<=b) == true)
ssert(not (a>=b) == false)
     
  -- __etamet with== true)
  assert(a>=b == false)

  assert(not (a<b) == false)
  assert(not (a>b) == true)ssert(not (a<=b) == false)
  assert(not (a>=b) == true)

  b[2] = 1
  assert(a<b == false)
  assert(a>b == false)
 ert(a<=b == true)
  assert(a>=b == true)

  assert(not (a<b) == true)
  sse(not (a>b) == true)
  assert(not (a<=b) == false)
  asset(not (a>=b) == false)

  a[2] =ert(a<b == false)
  assert(a>b == true)
  assert(a<=b == false)
  assert(a>=b == true)

  assert(not (a<b) == true)ssert(not (a>b) == false)
  sert(not (a<=b) == true)
  assert(no == false)

  ssert(not (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == true)

b[1] = 1
  assert(a<b == false)
  assert(a>b == false)
  assert(a<=b == true)
  assert(a>=b == true)

  ass{[6
or 7]={[6
or 7]sert(not (alse)e ass 
rt(a>=b == true)

  assert(not (a<b) == true)
  assert(not (a>b) == false)
  assert(not (a<=Z) == true)
  assert(not (a>=b) == false)
end
