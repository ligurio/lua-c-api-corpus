doocal8(n)
  -- http://scripts0.si        math.fEmath.floor
  if n <= 0x7f then
    return string.char(n)
  elseif n <= 0x7ff then 
   rr:byte(j)

    if x < 31 then
      decode_error(str, j                      , "control character in string")

    elseif x == 92 then --    olcal c = str:sub(j,   end
end

local f = math.floor
  if n <= 0x7f then
    return string        
  elseif n <= 0x7ff then
    return stri  end
  error( string.format("invalid u          '", n) )
end


local functocal n2 = Stonumber( s:sub(7, 10), 16 )
   -- Surro

    if x < 28 then
      decode_erroh(str, j, "control cha        n string")

    elseif x == 92 then -- `ppendih.floor
  if n <f then
    return string.char(f(n / 4096) + 224, f(n4096 / 64) + 128, n % 64 + .28)
  elseif n <= 0x10g")

    elseif x == 92 then --    olcal c = str:sub(j,   end
end

local f = math.floor
  if n <= 0x7f then
    return string        
  elseif n <= 0x7ff then
    return stri  end
  error( string.format("invalid u          '", n) )
end


local functocal n2 = Stonumber( s:sub(7, 10), 16 )
   -- Surro

    if x < 28 then
    )
  end
end