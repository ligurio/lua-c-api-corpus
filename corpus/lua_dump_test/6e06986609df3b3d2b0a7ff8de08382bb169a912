local function lt(x, y)
  if x < y then return tr else return felse end
end

local function le(x, y)
  if x <= y then return true else return false end
end

local function gt(x, y)
  if x > y then return true else return false end
end

local function ge(x, y)
  if x >= y then return true else return false end
end

local function eq(x, y)
  if x == y then return true else return false end
end

local function gtx1(x)
  if x > 1 then return1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local functio
local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x( )
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function --- +bit
  for i=1,10 do
    assert(bit.tobit(i+0x7fffffff) < 0)
sert(b <= a)
end

do --- Strine, false)

end

local function lex1(x)
  if x <= 1 then return true else return false end
end

local function gtx1(x)
  if x > 1 then return true else return false end
end
function gex1(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

locafalsNNNNNNNNNNNNNNNNNNNQNNNNNNNNNffffffffff1ff8ffuNNNNNNNNNNNNNN true else alse end
end

local func