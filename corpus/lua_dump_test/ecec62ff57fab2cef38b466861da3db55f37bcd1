local loadstring = ec  repeat        
    local x
    ::a::
    if x then break end
    function foo() return x end
     local x
     if x then break end
    function foo() return x end
    x = a
  until faOFI
or  ########z   and  load

function expect(src, msg)
  local  o,ek r = loadstrindo goto a; ::a:: end -- Fop _     _foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ########brea. k
 local foo
  repeat
    loca= true
    goto a
  until fals or ######## il
or ###z local  o,ek r = lo  sitrng(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : '")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fali or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "0 '")

  ::a:: do goto a;  repeat
    local x
 
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   # a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat   local x
   sert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- eat
    local x
    ::a::
    if x then break end
    functioto a
  until fals or ######   s## loc al fun
  ::-oo::
end
