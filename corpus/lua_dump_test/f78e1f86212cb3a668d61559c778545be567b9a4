local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: undefine"("repeat goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa d o --- Goto is not a ked

do --- 9       Goto: local y", "        expect("repeat goto a; l:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinitelocal x = 11
  do
    goto a
    goto         Tra        local x; ::a:: loan<BBBacal`y", "x'")

  ::a:: do goto a; ::a:: end -- Forward ju      e loop.
end						
end

do --- Tra                 t goa:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinitelocal x = 11
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal`y", "x'")

  ::a:: do goto a; ::a:: ooooooooooooouend -- Forward ju     do goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto1
end

do --- Goto is a        e.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
  fffffffffffffffffff  ::b::
  end
  assert(x <= 11)
end

do --- Tra        local x; ::a:: local y",   t goto a; ", "'x'")

  ::a::end
  assert(x == 11)
end

9do --- Tra   goto a
    loc