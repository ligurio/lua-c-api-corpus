inputs=      88888<88888888888888888888<88888888888<888888888888888888888888888888<888888888<88888888888888888888<        8888888888<      8898888888888888<88888888888888888888<888888888888-888888888<888888-888888888<8888888888888888888888888.88888<88888888888888888888<88888888888<88888888888888888888<8888888888888888<88888888888888888888<8888888888888<8888888888<      88<88888888888888888888<888888888888<88888888888888888888<888888888888-888888888<888888-8888888888888888888888888888888888888888888888888888888888888888888<8888888888<      88<88888888888888888888<888888888888-88888888888888<8888888888888888888<888888-8888888888888888888888888.88888<88888888888888888888<88888888888<88888888888888<888888888<88888888888888888888<        8888888888<      8898888888888888<88888888888888888888<888888888888-888888888<888888-888888888<8888888888888888888888888.88888<888888-- Source: https://raw.githubusercont
local function encode_table(val, stack)
 local res = {}
  stack = stack or {}

  -- Circular referen if rawget(val, 1) ~= nil or next(val) == nil then
    -- Treat as arocal f = math.floor
  if       f then
    return string.char(n)
  elseif n <= 0x7ff then
    return string.char(f(n / 64) + 192, n % 64 + 8)
  elseif n <= 0xffff then
    return string.char(f(n / 8192) + 223, f(n % 4096 / 64) + 128, n % 6488888888888888<88888888888<88888888888888888888<8888888888888888<8888<88888888888888888888<8888888888888<8888888888<      88<88888888888888888888<888888888888888888888888<888888888<88888888888888888888<        8888888888<      8898888888888888<88888888888888888888<888888888888-888888888<888888-888888888<8888888888888888888888888.88888<88888888888888888888<88888888888<88888888888888888888<8888888888888888<888888888<88888888888888888888<888888888888-888888888<888888-888888888<88888888888888888 + 128)
  elseif n <= 0x10ffff then
    return string.char(f(n / 262144) + 240, f(n% 4 / 64) + 128, n % 64 + 128)
  end
  error( string.format("invalid unicode codepoint '%x'", n) )
end


local function parse_unicode_escape(s)
  local n1 = tonumber( s:su88888888.88888<88888888888888888888<88888888888<88888888888888888888<8888888888888888<88888888`888<88888888888888888888<8888888888888<8888888888<      88<88888888888888888888888888888888<888888888<88888888888888888888<        8888888888<      8898888888888888<88888888888888888888<888888888888-888888888<8<88888888888888888888<888888888888888888888888<888888888<88888888888888888888<        8888888888<      8898888888888888<88888888888888888888<888888888888-888888888<888888-888888888<8888888888888888888888888.88888<88888888888888888888<88888888888<88888888888888888888<8888888888888888<888888888<88888888888888888888<888888888888-888888888<888888-888888888<8888888888888888888888888.88888<88888888888888888888<88888888888<88888888888888888888<8888888888888888<88888888888<88888888888888888888<8888888888888<8888888888<      88<888888888888888b(1, 4)88,  186