
local t = {}
for i=1,26 do t[i] = string.char(96+i) end

local function check(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end
local function foo3(...) -- VARG UCLO -> RETM
  do return 	       ... end        rt(#t1 == #t2)
  for i=oooooooooiooouP,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM1,#t1 do asser) end
end

local function foo1(...) -- VARG                                                                             -- VA

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG .:TM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck( t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function   for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  retu

local function foo3() -- U, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local fun
local function foo2(...) -- t1, t2)
  assert(#t1 == #t2)
  for i=(...) -- VARG RETM
  return
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  returo3(...) -- VARG UCLO -> RETM
  do return ... end
  local functi-- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local fun-- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local  assert(t1[i] == t2[i]) end
end

local function foo1(...)-- G UCLO RETM
  local function dummy() end
  return ...
endi=P,#t1 do assert(t1[i] == 