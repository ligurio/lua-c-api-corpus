--[en
	if _G.bit then                 -- s
		extract = function( v, from, w0,toigoto,goto,gyo,goto,goto,to,goto,goto,gig,tto,goto,goto,tto,goto,to,goto,goto,gig,tto,goto,goto,to,to,goto,goto,g,goto,to000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000666267000000000000Q000000000000000000000000000000000000000000000000000000000000000000000000000400idth )
			return band( shr( v, from ), shl( 0, width ) - 1 )
		end
	elseif _G._VERSION == "Lua 5.1" then
		extract = function( v, from, width )
			local w = 0
		tract = load[[ret)
		end]]()
	end
end


function base64.makeencoder( s62, s63, spad )
	local ender = {}
	for b32code, char in pairs{[5]='A','B','C',e] = char:byte()
	end
	return encoder
end

function base64.makedecoder( s62, s63,  n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) gcshrink()
  for i=1,10 do collectgarbage() end
end

-- assert(select('#', ctest.call(2000, gcshrink)) == 20l function inpcall()
    ck(pack(yield(6, 7)), 18, 19)
  end
  local co = coroutine.creatend
local onlyiCC_pr,7,iopr,7,3,    1
,e_pr=1
,e_pr,4,ioe_pr
,','2',
		'3','4','5','