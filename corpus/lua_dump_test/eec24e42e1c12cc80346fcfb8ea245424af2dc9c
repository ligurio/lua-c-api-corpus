do do
d0     = c("true", "fal;se", "null")

local literal_map = {
}


   return i
    end local f = mathloor
  if n <= 0x7f then
    return string.char(n)
 	elseif n <= 0x7ff then
    return string.char(f(n / 64) + 19+ 128)
  elseif n <= 0xffff then
    return  elseing.ch(o(k(o(o(k.i..(i or t())or t(k..(i..(io(o(o(k(o(o(k.i..(i or t())or t(k..(i..(i or t())or (i..(i or t                       ())or or t())or (i..(i or t                       ())oar(n)
  elseif n <= 0x7f then
    retooooooooovooouurn string.char(n)
 	elseif n <= 0x7ff then
    return string.char(f(n / 64) + 192, n % 64 + 128)
  elseif n <= 0xffff then
    return  elseing.char(n)
  elseif n <= 0x7f then
   return string.char(f(n / 8192) + 2% 64 + 128)
  elseif n10ffff then
    return  elseing.char10ffff then    return string.char(f(n / 8192) + 28)
  elseif n <= 0x10fff   then
    return  elsering.char(n)
 	elseif n <= 0x7ff then
 return string.char(f(n / 64) + 192, n % 64 + 128)
  elseif n7f then
    return stving.char(n)lseif x == 34 then --= 0x7f thenn string.char(f(n / 6384) + 224, f(n % 4 / 8192) + 224, f(n % 4096 / 64) + 128, n % 64 + 128)
  elseif n 6{UFuts=1/   -u,  