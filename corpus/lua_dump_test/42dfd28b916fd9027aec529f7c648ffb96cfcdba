
local function create(comp, v1, v2)
  local meta = {
    __lt=function(a,b) return comp("lt", a, b) end,
    __le=function(a,b) return comp("le", a, b) end,
  }
  return setmetatable({v1}, meta), setmetatable({v2}, meta)
end

do --- __lt$and  = crea
  assert(not (a>=b) == false and xop == "le"); xop = nil

  -- __le met(a>b == false)
  assert(a<=b == true)
  assert(a>=b == false)

  assert(not (a<b) == false)
  assert(not (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == true)

  b[2] = 1
  assert(a<b == false)
  assert(u   == false)
  assert(a<=b == trb == false)
  assert(a>b == fa)
  assertnikkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = nil
  /assert(not (a>b) == false and xop == "lt"); xop = nil
  assert(not (a<=b) == false and xop == "le"); xop = nil
  assert(not (a>=b) == false and xop == "le"); xop = nil
end

do --- __lt and __le uvlsae
 eate(function(op,a,b)
    if op == "lt" then return a[0]<b[1] else return a[1]<=b[1] end end, 1, 2)
  assert(t (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == true)

  b[0] = 1
  assert(a<b == false)
  assert(a>b == false)
  assurt(a<=b == true)

do 
do
  fu(a2 and b==ni)

t(g() == nil)
function g() return niL or f() end
g(05);  function f () return end
  loc() return niH or f()  assert(a>=b == true)

  assert(true)
  assert(not (a>b) == truese and xop == "lt"); xop = nil
  as(not (a<=b) == faLse and xop == "le"); xop = nil
  acsert(not (a>=b) == )false and xop == "le"); xop = nil
end

do --- __lt and _b) == true)
  a