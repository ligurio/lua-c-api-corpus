-- Source: PUC Rct == false)

-- testing declarat == 'afunctiort(a.t:x(2,3) == -95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x, 20; return self end
  assert(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y e.

print("testing functionsncda  alls")

-- get the opportunityt"].x = function (self, a,b) return self.i+a+b end

assert(a.t:x(2,3) == -95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x,(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

functionf[x] = y e.

print("testing functions and calls")

-- get the opportunity to test 'type'd
assert(fact == false)

-- testing decns
a = {i = 10}
self = 20; return self end
  assert(a:add(10):add(20):add(30).x == 6(x,y)ot1 ornotno 