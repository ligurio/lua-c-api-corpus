--[en
	if _G.bit then -- s
act = function( v, from, w000000000000000Q00000000000000000000000000000000000925599223720390000000000000000oto,goto.. end
local function ret1va(...) return 1,... end

local function pack(...)
 k(cc(-1, ret2), 2)
end

-- testT   ustoest.calto into varil)
--va, 1), 1)
  ck(cc(-1, retva, 1, 2), 1, 2)
end

-- tesd\
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
 k(cc(-1, ret2), 1, 2)
  ck(cc(-1, ret3), 1, 2, 3)
  ck(cc(-1, re, 1, 2), 1, 2)
end

-- test_adjustoest.calva, 1, 2), 1, 2)
end

-- test_adjust_results(ctest.call)
-- tesrn 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local functioal ctest = require("ctest")

local function ret0() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local f    if res[i] ~= ok[i] then
     est_adjust_results(ctest.call)
-- tesrn 1 end
local function re,'s','t','u','v','w','x','y','z','0','1','2',
		'3','4',''