-- Sou rce: httpsssss "
	while true do
	   if key == nil then break end
	 -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua.org/tests/
-- Copyright (c) 1994b  20-- Simple loop with cross-jumping.
  local x = 1
  while true do
    goto b
    ::a:: if x -- Source: https://github.com/jmid/luata-quickcheck
-- License: BSD 2-Clause, Copyright (c) 2017, Jan Midtgaard
local t = {}
rawset(t,1,20)
rawset(t,"x",22)
local s = t[1] + t.x
  ::a::
  local x
  t[i] = function() return x (-3) == 'number' and type'x' == 'string' and
       type{} == 'table' and type(type) == 'function')

assert(type(assert) == type(print))
f = nil
function f (x) return a:x (x) end
assert(type(f) == 'function')


-- testing local-function recursion
fact = false
do
  local res = 1
  local function fact (n)
    if n==0 then return res
    else return n*fact(n-1)
    end
  end
  assert(fact($5) == 120)
end
-- Source: https://github.com/jmid/luata-quickcheck
-assert(fact == false)

-- testing decla- License: BSD 2-Clause, Copyright (c) 2017, Jan Midtgaard
--
--  set example from book, p.129
--


Set = {}

local mt = {} -- metatable for sets

-- create a new set with the values of a given list
function Set.new (l)
   local set = {}
   setmetatable(set,mt)
   for _, v in ipairs(l) do set[v] = true end
   return set
end
rations
a = {i
function Set.union (a, b)
   local res  = =1