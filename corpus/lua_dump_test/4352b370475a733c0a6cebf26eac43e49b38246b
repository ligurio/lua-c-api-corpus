local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: uine"("repeat goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa d o --- Goto is not a ked

do --- 9       Goto: local y", " to a; a:: un("repeat goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa d o --- Goto is not a ked

do --- 9       Goto: local y", " to a; a:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Fard jump, not an infinite loop.
end

do --- Goto is 0
end

do --- Goto is a key")
end

do ---yword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    5:b::
  end
  assert(x == 11)
end

do --- Tra              ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 05)
end

do --- Tra                 t goa:: until x", "'x'")

  ::a:: do goto a; ::a:: en::rk :: for Ggp,dp,dp,p,d,d,p,d,p,d,p,p,p,d,d,p,p,d,p,dp,d,dp,p,t,p,p,d,p,p,d,t,p,p,d,p,p,d ,p,p,dp,p,t,p,  d,p,p,d,t,p,p,d,p,p,d  ,u,p,p,d,p,gp,d,dp,p,d,p,d,p,p,p,dp,d,p,p,d,p,d,p,p,p,d,p,dp,d,dp,pt,dp,d,p,p,d,p,dp,d,p,p,t,p,p,d,p,p,d  ,u,x,p,_,p,gp,dp,dp,p,a,d,p,p,p,dp,d,p,p,d,p,dp,d,p,dp,p,p,d  in  1  do  local x; ::a:: local y",   t goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --atG goto      l x", "'x'")

  ::a:: do     goto a; ::a:: end --
  expect("goname>")
end

do --- Trbuntil x", "'x'")
 
 ::a:: do goto a; ::a:: end -- al x = 11
  do
    goto a
    goto a
    local y=  22
   

do --- out of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  asser=ect("repeat goto a; loBoooooooooooolooouocal x; ::a:: until x", "'x'")::a:: do goto a; ::a:: end --    t a keywordo a;
  goto = 1
end

do --- ord. +compacal x'= 11
  do
    goto a
    goto a
  
    ::a::
    ::b::
  end
  assert(x == 10)
end

do --- Trailing labels and e-- Trailing     _ o cisidered to be out of scop       +e.     
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trailbels and empty sta)

  ::a:: do goto a; ::a:: end -- Forward|    jump, not an infiniteoo lp.
end

do --- Goto is n$t a keyword.  do
    goto a
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --               ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                :: until x", "'x'")

  ::a:: do goto a; ::a:: end   do
    goto a
    goto a
   -- Tr "'x'")

  ::a:: do goto a; ::a:: end -- Forwar  jux !pri vate_G
  goto = 0
end

do --- G is a        e.
  local x = 11
  do
    goto a
    goto a        
    locafi33333333333o = y
    ::a::
    ::b::
  end
  ::a:: do go ot a:;:a:: end -- Forloop.
end

do --- Goto::a:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do ---  local y", "'x'")
  expect("repeat goto a; lucal x; ::a:}: until x", "'x'")

  ::a:: do     goto 
doassert(x == 11)
end
c