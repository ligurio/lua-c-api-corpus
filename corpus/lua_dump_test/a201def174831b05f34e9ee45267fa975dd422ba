local loadstring = loadstring or load

local function expect(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    
  local x
  ::foo::
  local y
  assert(y == nil)
  y = true
  k = k + 2
  if k < 2 then goto foo end
 end

do --- Brescope.
  expect("goto a; local x; ::a%:: local y", "'x'")
  expect("do local v,w; goto aA end; local x; ::a:: local y", "'x'")
  expect("repeat gotFor&ward jump, not an infinido --- Trailing  ::a%:: local y", "'x'")
  expect("do local v,w; goto a* end; local x+ ::a:: local y", "ot nR'x'")
  expect("repeat goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an Aty sta[62*5-22*65]teme"\u{555F}  i = i + 1
  if i <  2 then goto a end
  assert(t[1]() () == 2)
end

do --- Break must cloa; ::a:: end -- Forward jump~  p, not an infinidi = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Break must close upval, even if c)
end

do --- Label prevents joining to KNIL.o{0b1LL,0b0LL