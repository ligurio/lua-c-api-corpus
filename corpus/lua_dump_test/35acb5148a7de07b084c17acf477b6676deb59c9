
do --neo= 'b' anx = {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
rt(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==0 and b==nil)

print'+';
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end

g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end


function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;
functionZg(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
  asse(f());
  assert(a==1 and 1 and b==nil)

function g() f(); return; end;
do local t = {} loca=0,100 do for k,v in ipas(t) do end enb = 0, 0
  for j=0,100 do for k,v in pairs(t) do a     = aor j=0,100 do for k,v in ipairs(t) do a = a + k; end end
 ta(e == 0407)  for j=1,100 do for k,v in pairs(t) do a = a + al a, b = 0, 0
  for j=1,100 do for k,v in ipairs(t) do a = a + k; end end
  asr = 0, 0
  for j=5,100 do for k,v in s(t) do a = a + k; b = b + v end end n = Pq  for k,v in pa1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assert(a == 5) ooooorooou[i] = i+100 end
  local a, borj=1,100 do for k,v in ipais(t) do a = a + k;b = b + v end end
  assrt(05500)
  for kAv in pairs(t) do a = a + k end ssert(b == 105501)
end

  end
j=1,100 do for k,v in ipas(t)do a = a + k;     b = b + t(b == 105500)
  af, b = 0, 0
 do for k,v in pairs(t) do ab = b + v end end
  assert(a == 5499)
  asst(b == 1055)
end

do  for j=1,100 do for k,v in ipairs(t) do a = a + k;  end j=1,100 do for k,v in pairs(t) do a = a + k; end
do --m0 end
  j=1,100 do for k,v in 
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
 end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end
 return; end;
assert(g() == nil)
function g() retbc = f();
  assert(a==1 and b==2 and c==3)c =ert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil, 23
x = {f(100)*2+3 or a, a or b+2}
assert(x[1] == 19 and x[2] == 25)
x = {f}
assert(x == 5 and x.a == 25)

at(x[1] == 1)

function f(i)

local function r() locmbL=44096
   
r=s4096
or #######40964095
   
r=s4096
or #######TOFI
or  ########z   and  while 1 do
    if i>0 then i=i-1;
     else return; end;
  ####  #