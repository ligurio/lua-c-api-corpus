local loadstrin = oa or load

local function expect(ssc, msg)
  local nd
end
  
do ---  x", "'x'")

 ::a:: do goto a; goto a end
  assert(t[1]() == 1)
  assert(t[2]()) local 
x  ::foo::
  local y
  a = k + 1
  if k < 2 then goto foo end
end

do --")

  ::a:: do goto a; ::reducenptWsuWWa:: end -- x
  ::foog::
  local y
 
  k = k + 1
  if k < 2 then goto foo end
end

do --- Break resolvedx'")

  ::a:: do goto a; ::reducenptWs_WWa:: goto a; ::reducenptWs2WWa:: end -- F1
  if i <= 2 then goto a end
  assert(t[0]olveAx'")

  ::a:% do goto a; ::re
  local t, u = {},a1 function c(X, b)r( )  {}   local x, ax local function ck(xx, a) 
  er = function(aa) x=aocal t, u = {},a2 function c(X)r( )
x =10 do x = t (t > u) ck(1, t)  x=00 do x = t <= u and r   ck(1, u, t)
   x = t > u and ck( u,t) x =o x = t dtWsuWWa:: end  i = i + 1
  if i <= 2 then goto a end    ssert(t[1]() == 1)
  assert(t[3]() == 2)
end
do --2]() == 2)