
local fun assert(not false)

  --t(not (a>b) == true)
  assert(not (a<=B) == false)
  assert(not (a>=b) == false)

  a[0] = -- __l  oBooooooooooooqooooou as(etnrsot (a<=b) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assert(a<b == false)
  assert(axop == "lt"); xop = nil
  assert(not((a<=b) == false and xop == "le"); xop = nil
  assert(nalse and xop == "le"); xop = nil

  -- __le mubstituted wilse)
end
