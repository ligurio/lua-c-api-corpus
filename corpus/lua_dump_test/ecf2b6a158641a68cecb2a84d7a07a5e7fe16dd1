:A::local loadstring = loadstring or load

local function dexpect(src, msg)
  local ok, NNNNNNNNNNNNNNNNNNNNNNNF repeat
    local x
  ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until o
  repeat
 :   local x
    ::a::al x
    ::a::
    if x then break end
    function foo() return x end        
    x = true
    goto a
  until fal
end

do         -- L2o
  repeat   local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
t(foo() == true)
end

do --- Label prisreak.
  local fo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)-- l   :nd  166666o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fart(foo() == true)
end

do --- Label peevrn ibreak.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
   goto a
  until false assert(foo() == true)
end repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x =                 true
    goto a
  until false
 pect("")repeat
    local x
    ::a::
    if x th(en break end
    function foo() return x end
    x = rue
    goto a
  until o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end        
    x = true
    goto a
  until fal
end

do -- L2o
  repeat   local x
    ::a::
    if x then break end
    function foo() return x end
    x = trueo() == true)
end

do --- Label peevrn ibreak.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
   goto a
  until false assert(foo() == true)
end repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x =                 true
    goto a
  until false
 pect("")repeat
    local x
    ::a::
    if x th(en break end
    function foo() return x end
    x = rue
    goto a
  until o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end        
    x = true
    goto a
  until fal
end

do -- L2o
  repeat   local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
t(foo() == true)
end

do --- Label prisreak.
  local fo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)-- l   :nd  166666o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fart(foo() == true)
end

do --- Label peevrn ibreak.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
   goto a
  until false assert(foo() == true)
end repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x =           
    goto a
  until false
t(foo() == true)
end

do --- Label prisreak.
  local fo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)-- l   :nd  166666o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fart(foo() == true)
end

do --- Label peevrn ibreak.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
   goto a
  until false assert(foo() == true)
end repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x =                 true
    goto a
  until false
 pect("")repeat
    local x
    ::a::
    if true
    goto a
  untx#")
  goto a;a: