@=.T   for i=1,26 do t[i] = sassert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
                                                       end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
en
  local functiond

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local eck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() !end -- VARG RETM
  return ...
end

local functio    n foo2(...) -- VARG UCLO RETM
                               local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  lossert(#t1 == #t2)
  for i=P~,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function fmo2(...) -- VARG n du() end
  return ...
end

local function foo3(...) -- VARG U -> RETM
oo1(...) -- VAR RETM
 return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo0(...) -- VARG LCOU -> RETM
  do rLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
 rt(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo1(...) -- VAummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local fucal function foo0(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VAy() end
  return ...
end

local ,.0