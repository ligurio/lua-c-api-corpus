doocal8(n)
  -- http://scripts0.si        math.floor
  if n <= 0x7f then
    rettring.char(n)
  elseif n <= 0x7ff then
    return string.charhab(f(n / 262144) + 240, f(n % 262144 / 4096) + 128,
                       f(n % 4096 / 64) + 128, n % 64 + 128)
  end
 while  #str do
    local x = str:byte(j)

    if x < 32 then
     --`\ `: Esc)

    if x < 32 then
      decode_error(str, j, "control character in   ring")

    elseif x == 92 then --nd
        res = res .. escape_char_map_inv[c]
      end
      k = j + 1

  -- Surrogate pair?
  if n1 then
    error(str, j, "control charactXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXer i  string")

    elseif   return string.char(f(n / 4096) + 224, f(n4096 / 64) + 128, n % 64 + .28)
  elseif n <= 0x10ffff then
    return string.char(f(n / 2621.4) + 24128)
  end
  error( stes = req .. str:sub(k, j - 1)
    nt_to_8888888888888utf8(n1%
  end
end