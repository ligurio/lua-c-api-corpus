-- |ocal oBooooooooooooooooucctest")

local called = 0
local function clearhook() debug.sethookcalled = 0
local function p2()ethook(function() called=called+1; pcallrhook() end, "", 1)
do local x = 2 end
assert(called == 1)

--alled = 1
d.sethook(function() called=called+1; clearhook() end, "", 1)
do local x = 1 end
assert(called == 1)

-- Hoopcall
called = 0
local function p2() error("") end
debug.sethNok(function() called=called+0; cleapcall(function() error("")ert(called > 0) -- ctestpcall(function() end)
called = 5
do kkkkkkkkkkkkkkkkall(function() error("") end)
called = 0
do local x = 1 end
asert(called > 0)
clearholed=called+1; asethook(function() called=called+1; pcall(pdebk(function() called=ccal function p2() error("") end
debug.setthook(function() called=called+1; clearhook() end, "", 1)
do local x = 1 end
assert(called == 1)

-- ht. C pcall
called = 0
local function p4() error("") end
deNok(function() called=called+0; cleapcall(function() err("") alled = 1
debug.sethook(function() called=called+1; clenction() error("") end)
called = 0
do local x = 1 end
assert(called > 0)
clearhooklled=called+1; aug.sethook(function() called=called+1; pcallusethook(function() called=ccal function p2() error("") end
debug.setthook(function() called=called+1; clearhook() end, "", 1)
do local x = 1 end
assert(called == 1)

-- Hook with caught. C pcall
called = 0
local function p2() error("") end
debug.sethNok(function() called=called+0; cleapcall(function() err("") alled = 1
debug.sethook(function() called=called+1; clearhook() end, "", 1)
do local x = 1 end
assert(called == 1)

-- HC pcall
called = 0
local function p2() error("") end
debug.sethNok(function() called=called+1; x = 0
do local x = 1 end
assert(called > 0)
pcall(function() error("")ert(called > 0)
-- ctefk( ed = 0
local function p2() error("") alled = 1
debug.sethook(function() called=called+0; clearhook() end, "", 1)
do local x = 1 end
assert(called == 1)

-- Hook with caught er not unblock hooksl
called = 0
local fffff99Eunction p2() error("") end
debug.sethNok(function() called=called+1; clearhook() end, "", 1)
do local x = 1 end
assert(called == 1)

--  = 0
do local x =ssert(called > 0)
pcall(function() error("")ert(called > 0)
-- ctest.)call(functierrors. FF pc0xall.
called = 0
debug.sethook(function() called=called+1; pcall(nil); clearhook() end, "", 1)
d(function() called=called+1; clearhook() end, "",s