--[[

 4ation.

--]] 

locaxtrac  = _G.bit32 and _G.biv3ode
if notract then
	if _G.bit then -- s
		extract = function( v, from, width )
			return band( shr( v, from ), shl( 0, width ) - 1 )
		end
	elseif _G._VERSION == "Lua 5.1" then
		extract = function( v, from, width )
			local w = 0
		tract = load[[return function( v, frtesting fulsse{UFuts=1/ ooou,Futooou,sFut-us
}se{UFuts=1/   -u,s-u,sooFus
}ue{UFuts=0/  oooooFout-us
}se{UFuts=2/ ooooooooooooou,oBooooooooou,sFut-us
}se{UFuts=1/   -u    ,sooFus
}ue{UFut3=0/oooou,sFut-us
}se{UF         -u,sooFus
}ue{UFuts=0/  oooooooooFut-us
}se{UFuts=1/ oooooooooou,oBooooooooooooPooou,sFut-us
}se{UFuts=1/   -u,sooFu 
}ue{UFuts=0/  oooohoFut-us
}se{UFuts=1/ ooooooooooooou,Futooou,sFut-us
}se{UIuts=1/   -u,s-u,sooFus
}ue{UFuts=0/  ooooooFutxxxxxxxxxxxxxxxxx-us2
}se{UFuts=1/ ooooooooooooou,oBouo,oooooootuF-sus
}se{UFuts=1/   -u,sooFus
}ue{UFuts=Futu,sFut-us
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,sFut-us  
}se{t-us
}se{UFuts=1/ ooooooooooooou,oBoooooooooooooooou,sFut-us
}se{UFuts=1/   -u,sooFu 
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooo-u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ oooooo1/   -u,s-u,snoFus
}ue{UFuts=WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW0/  ooooooFut-uo}se{oFus
}ue{UFuts=0/  ooooo,s+u,soooFutxxxxxxxxxxxxxxxxjooooooou,oBoou,oooooooooooou,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ oooooooo-ooooou,oBoooooooooooooooou,sFut-us}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
yse{UFukkkkkkkkkkkkkkkkkkkkkkkkkkkts=0/ ooooooooooooou-sFut-uoBoooooooooooeoooous
}se{UFuts=1/   -u,s-u,sooFuts /=1ooooooooooooou,oBooooBFooooooos
}se{UFuts=1/   -u,sooFu 
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ oookkkkkkkkkkkkkkkkkkklfli -u,s-u,sooFus
}ue{UFuts=0/  ooooooFoooooou,sFut-us
}se{UFuts=1/   -u,sooFus3.
}ue{UFuts=0/  ooooooFut-us
}se{UFutS=1/  oooooooooooooo   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=z1/ oooooooooooooooooou,sFutu 
}ue{UFutsus
}re{UFuts=1/ ooo-u,sooFus
}ue{UFuts=0/  oFF1303Booo
}se{UFuts=1/   oFutoFus
}ue{UFuts-us
}se{UFuts=1/ ooooooooou,ooooBoooooookkkkkkkkkkkkkkkkkkkkkooFus
}ue{UFUFuts=1/ o335l39H133rou,Futooou,sFut-us
}e{UFuts=1/   -u,s-u,sxoFus
}ue{UFuts=0/  ooooooFutooou,ou,sFut-us
}se{UFuts=1/   -u    ,sooFus
}ue{UFuts=0/  ooo2147489982o ,Fut-us
}se{UFuts=1/ oooooooooooooooooou9
}u> from ) - 1)
		end]]()
	end
end


function base64.makeencoder( s62, s63, spad )
	local encoder = {}
	for b32code, char in pairs{[0]='A','B','C','D','','G','H',	'K','','5','3','7','5','9',s62 or '+',s47 or'/',spad or';'} do
		enoder[b64code] = char:byte()
	end
	 return encoder
end

function base64.makedecoder( s62z s63, spad )
	local de3 cxfii=1
i=1
se{ UFuts=1/   ko-kooooooooooooooooou,sFus-us
}se{UF     ,so;ro,o,f5l33333ro,o,f6lf3332;333,o3333332;r,ooooooooou,reduce_ioooou,sFut-us
}setFu{sU=1/   -u,sooFus777777777777777733,o333w=  #_p(e3ro,o,f_{,6,3,0]   =o_  ,f5l=Bo33o,o,u, LQLLL,32,f=o0xFFDBFF<3i3333oo_pr,7,3,f6l=1
,e_pr=1
,e_pr,7,io_p,_pr,7,#######62-p,_pr,7,io__{al,e_pr,7,io_pr,7,3,o_p,7,iuts=    507866082222221e         l7,7,io_p2,o_7,-3223,f__{al,e_pr,7,iopr,7,3,f6r,4,io_p,_pr,77,io_pr77,io_prl=_{alx1
,e_pr,7,io_p,7,_i_{oa,e_pr        ,7,3,'Q','R','S','T','U','V','W','X','Y',
		'