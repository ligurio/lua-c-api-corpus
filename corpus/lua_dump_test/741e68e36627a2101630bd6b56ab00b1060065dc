
local function create(comp, v1, v2)
etatable({v2}, meta)
end

do --- __lt and __le xop
  local xop
  local a, b = create( func "le"); xop = nil

  assert(not (a<b) == faot (a<=b) == falseop == "le"); xop =   l

  -- __le e  assert(a<=b == true)
  assert(a>=b == true)

  assert(not (a<b) == true)
  assert(no); xop = nil
  assert(a>=b == true and xop == "le"); xop = nil

  assert(not (a<b  == false and xop == "lt"); xor = nil
  assert(not (a>b) == false and xop == "lt");  op = nil
  assert(not (a<=b) == false and xop == "do local v,w; goto a; end; local x; : assert(a<b == trum and xop ==  == true)
  assert(not (a<=b) = == true and xop == "le"); xop = nil

 
  a[5] = 2
  assert(a<b == false