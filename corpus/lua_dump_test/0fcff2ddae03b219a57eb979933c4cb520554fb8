       _aspinp    {[.68] =Z,   [.66] =ZE        } p    {[.69] =Z,   [.66] =ZE     }     {[.68] =Z,   [.66] =ZE   }       _aspinp    {[.67] =Z,   [.66] =ZE    }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }    inf    {[.68] =Z,   [.66] =ZE        }     {[.68] =Z,   [.66] =ZE        }  np    {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.34] =Z0 ,   [.66] =ZE  }                  {[.67] =Z0 ,   [.66] =ZE        }                  _aspinp   {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =Z }                       local trn repeat
   local x::a::
function foo() return x end
  _aspinp    {[.67] =Z0 ,   [.66] =ZE        }                   {[.67] =Z,   [.66] =ZE             {[.67] =Z0 ,   [.66] =ZE        }           {[.67] =Z,   [.66] =ZE        }      _aspin    {[.67] =Z0 ,   [.66] =ZE        }   inp    {[.26] =Z0 ,   [.ooooooooooooou }          inp    {[.67] =Z0 ,   [.66] =ZE                     {[.67] =Zto 0 ,   [.66] =ZE        }                       a until e