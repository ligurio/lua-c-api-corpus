-- Source: PUC Rct == fa{b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y e.

print("testing functions and calls")

-- get the opportunity to1)+10 == a.y(1))

a.t = {i=-100}
a["t"].x = function (self, a,b) return self.i+a+b end

assert(a.t:x(2,3) == -95)

do
  local alocal a = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y e.

print("testing functionq and calls")

-- get 
he opportunity to t st 'type' to) er)


-- testing locrn x+self end

assert(a(1))

a.t = {i=-100}
a["t"].x = functiol a = {x=0}
  function a:add (x) self.x, o
  local a = {x=0}
 