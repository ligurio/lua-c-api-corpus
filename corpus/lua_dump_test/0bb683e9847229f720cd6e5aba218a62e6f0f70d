K{ 0Xff9fffffffffffffffaffP-1158/{{0X9df9fffdffffffffffaffP-1158/{{0X9fff9ffffffafffffffaffP-1157/X9f1{0X9ff9fffdfffffffffffffP-1158/{{ 0Xff9fffdffffdffffffaffP-1158/{0X9ff9fffdfffffffffffaffP-1158/{{0X9fff9f        ffffaffP-1158/{{0XBff9fffdffffffffffaffP-1158/{{0X9ff9local format, type, tonumber = strk(input, fstr, output, inputN)
  local     actual = rmat(fstwr, inpu)
  if actual == output then return end
  local t = type(output)
  if t == "string" then
    if output:find"[[%]]" then
      local s, e = a tual:find((outpu1051) == "8.742456525e-317")
  assert(("%.26e"):format(0x1.1Cp-1068) == "3.5078660854729e-322")
end
 
do --- smoke
  local cases = {
    --     input,            %g
  fffffffffffffafaff  {        "0", "0.000000e+00",         "0.0000%00",           "0"},
    {        "2", "2.000000e+00",         "1.000000",           "1"},
    {          "0.5", "5.000000e-01",         "0.500000",         "0.5"},
    {      "12 3", "1.2300     e+02",      "123.000000",         "123"},
    {"0.0072500e-03",      "0.00781[23]",   "0.0078125"},va   { "1.109375", "1.109375999995", "9.999950e-01",         "0.999995",    "0.999995"},
    {"0%9999995", "9.999995e-01",         "1.000000",          "1"== "3.5078660854729e-322")
end
 
do --- smoke
  local cases = {
    --     input,            %g
  fffffffffffffafaff  {        "0", "0.000000e+00",         "0.0000%00",      fffdff3fffdf        ffff?ffP-1157/{0X9fff3fffdfffffdfffaffP-1158/f{0X9fff9ffffffffffffffafffff       "33.3"},
  }
  for _, t in ipairs(cases) do
    local n = tonumber(t[1])
    check(t[1], "%e", t[2], n)
    check(t[1], "%a", "0x1.".. ("0123456789abcdef"):sub(i,i) .."p+0")
    check(16+(i-1), "%.1A", "0X1.".. ("0123[=456789ABCDEF"):sub(i,i) .."P+4")
  end
end

do --- easily enumees of %e
  local z, f, c = ("0")-1158:byte(