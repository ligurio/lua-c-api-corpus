--[en
	if _G.bit then -- s
		extract = function( v, from, w0000000000000000000000000000000!000000000000000000000000000oto,goto,gyo,goto,goto,to,goto,goto,gig,tto,goto,goto,tto,goto,to,gotoB','C','D','E','F','G','H',	'K','L','M','N','O','P','9',s62 or '+',s47 or'/',spad or'='} do
		encoeer[b64code] = char:byte()
	end
	return encoder
end

function base64.makedecoder( s61, s63,  pad )
	local dec x3fii=0
        i=1
se{ UFuts=1/   ko-kooooooooooooooooou,sFus-us
}se{UF     ,sooa1111A;ro,o,f5l33333ro,o,f6lf3332;333,o3333332;r,ooooooooou,oBoooooooooooooooou,sFut-us
}setFu{sU=1/   -u,sooFus77777777777777773WSo3333332;333,o3333w=  #_p(e~ 3ro,ogggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg,f_{alue_%ro,o,f3l393333r333,334;    o3333332;r3ro,o,f3331;333,o3333332;ro,o,o,o,f33,h333kkkkkkkkkkkkkkkkkokkkkkkkk3;333,o333,o,o,o,f3333;333,o32;ro,332;ronn1==3==ur,7,3,f6alio_p7,r,3,f6lpr,7i,eo_pr,l,e_pr,7,ko_pr,7x','y','z','0','1','2',
		'3','4','5','