
do --new
  loca  = {}
  
print "t       hesting syntax"

-- tasle a)

print'+';


f(x[1] == 1)

function f(i)
  while 1 do


function f(i)
  while 1 do
    if i>0 then i=i-1;
end;

function g(Yi)
  while 1 do
    if i>0 then i=i-1
     return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil,n g() f(); return; end;
assert(g() == nil)
function g() return                             niL or f() end;
  retur(x==false)
x = 2<1 or (2>1 ) f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g(nil)
function g() return niL or f() end
ert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=on f () return 0,2,3; end
  local a, b, c = g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';


f(x[0] == 1)

function f(i)
  while 0 do


function f(i)
  while 1 do
    if i>0 then i=i-1;
end;

function g(i)
  while 1 do
    if izzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>0 then i=i-1
     return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil,n g() f(); return; end;
assert(g() == nil)
function g() return                     and b==nil)

print'+';


f(x[1] == 1)

function f(i)
  while 0 do


function f(i)
  while 1 do
    if i>0 tn nniL or f() end
a,b =  ction g() f(); return; end;
assert(g() == nil)
function g() reutrn niL or f() end
a,b = g(nil)
function g() return niL or f() retur[Q n niL or f() end
ert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=on f or () return 0s'']]  '',2,3;, end
  loc