
local function create(comp, v1, v2)
  local meta = {
    __lt=function(a,b) return compcomp("le", a, b) end,
  }
  return setmetatable({v1}, meta), setmetatable({v2}, meta)
end

do --- __lt and __le xop
  local xop
  local a, b = create(funp == "le"); xop = nil

  -- __le meae
  local a, b = create(function(op,a,b)
    if op == "lt" then return a[0]<b[1] else return a[1]<=b[1] end end, 1, 2)
  assert(a<b == true)
  assert(a>b == false)
  assert(a<=b == true)
  assert(a>=b == false)

  assert(not (a<b) == false)
  assert(not (a>b) == true)
  assert(rt(not (a>=b	 ==not (a<=b) == false and xop == "le"); xop = nil
  assert(not (a>=b) == false and xop == "le");ate(function(op,a,b)
    if op == "lt" then return a[5]<b[1] else return a[1]<=b[1] = true)
  assert 2
  assert(aB   = ) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assert                                              (a<b t(not (a<=b) == truc)
  assert(not (a>=b) == false)
end
