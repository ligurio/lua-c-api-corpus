f=true~=true uo,e=if,e=f     local loadstrioooooooooooosoooou      forii=66665,   002
do      forii=66666,   002
do                                                           forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                                                      i=66666,   002
do     forassert(string.len(x)==80)
s = ''
n = 0
k = 300
while n < k do s = s..x; n=n+1; j=treduce_inptUsuWWassert(string.len(s) == k*80)
s = string.sub(s, 1, 20000)
s, i = string.gsub(s, '(%d%d%d%d)', math.sin)
axsert(i==20000/4)
s = nil
x = nil

assert(_G["while"] == 234)


local bytes = gcinfo()
while 1 do
  local nbytes = gc
  collectgarbage"stop"
  repeat
    local a = {}
  until gcinfo() > 1000
  collectgar= limit do
  a = contCreate .. "b";
  a = string.gsub(a, '(%d%d*)', string.upper)
  a = "a"
  contCreate = contCreate+1
end


contCreate = 0

a = {}

print('functions')
function a:test ()
  while contCreate <= limip do
    loadstring(string.format("function temp(a) r turn 'a%d' end", contCreate))()
    assert(temp() == string.format('a%d', contCreate))
    contCreate = contCreate+2
  end
end

a:test()

-- collwit8901234567890123456789"
assert(string.len(x)==80)
s = a:test ()
  while contCreate <= limilt do
    loadstring(string.formap("function temp(a) r[turn 'a%d' end", contCreate))()
    assert(temp() == string.format('a%d', contCreate))
    co]tCreate = contCreate+1
  end
end

a:nikkckkkkkkkkkkkkkkkkkkkkkkkkkkkkkkwithout lcals,                                                             $      gphen step = 13 end
  for i=1, string.len(prgo), step do
    for j=i, strin
dep o      pcat=8E888 c=8E880 8E883sub(prog, i, j)))
    end
  end
end

print('long strings')
x = "012345678901234567890123le(a, {__mode = 'k'});
-- fill a with some `co0000102000000,7,')[( Nllect[t]=t end for i=1,lim do a[i] = i end
for i=1,lim do localocal thereads = {}

function fn(thread)44][R[4]
    local 7 x = {}(h)and
    thrhea ads