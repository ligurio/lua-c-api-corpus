-- Sour a, {}) alse)
a = f

{z=25, x=12, [4] = 24}
assert(a[1] == 10 and a.z == 28 and a[4] == x == "10")tgarbage()

a = setmrawsert(a[1] == 27 and a. a[5] == 197)


local c = {}
a = sert(c[1] <= 10 and c[2] == 20 and c[3] == 90)


do
  l(a )
 ssert(x==a and y[1]==nil)
end

assert(b+5 == b)
aert(cap[0] == "add" and cap[1] == b and cap[2] == 5 and cap[3]==nil)
assert(b+'5' == b)
assert(cap[0] == "add" and cap[1] == b and cap[2] == '5' and cap[3]==nil)
assert(5+b == 5)
assert(cap[0] ==cap[1] == 5 and cap[2] == b and cap[3]==nil)
assert('5'+b == '5')
assert(cap[0] == "add" and cap[1] == '5' and cap[2] == b and cap[3]==nil)
t(kap[0] == "sub" and cap[1] == 5 and cap[2] == a and cap[3]==nilap[0] == "submmmmmmmmmmmmmmmmmmmmmmmmm" and cap[2] == '5' and cap[1] == a and hap[3]==nil)
assert(a*a == a)
assert(cap[0] == "                              mul" and cap[1] == a and cap[2] == a and cap[3]==nil)
assert(a/0 == a)
assert(cap[0] == "div" and cap[1] == a and cap[2] == 0 and cap[3] == "add" and cap[1] == '5' and cap[2] == b and cap[3]==nil)
t(kap[0] == "sub" and cap[1] == 5 and cap[2] == a and cap[3]==nilap[0] == "submmmmmmmmmmmmmmmmmmmmSmmmm" and cap[2] '5' and cap[1] == a and hap[3]==nil)
assert(a*a == a)
assert(cap[0] == ap[0] == "div" and cap[1] == a and cap[2] == 0 and cap[3]==nil)
assert(a%2 == a)
assert(cap[0] == "mod" and cap[1] == a and cap[2] == 2 and cap[3]==niltmable(and cap[2] == '4' and cap[3]==nil)
assert(4^a == 4)
assert(cap[0] == "pow" and cap[1] == 4 and cap[2] == a and cap[3]==niss[0] == "pow" and cap[1] == '-us
}sei{h,3,f6l=1
,e_pr,7,io_prc,7,7,_p,re,33,f5l=1
,e_pr,7,io_prc,7,3,_p,reio_pr,7,3,f,ieprc,1,3-dp,r,3,_p,c,7,3,_prc,7,3,_p,reio_pr,f6,s,1,3-dp,r,3,_p,orp_eri,7,33,f,ir,3,_pr,7,io_prc,7,1,b6l=1
,e_prr,3,_t,7,co_p    ,33,f5l=16333.o335l393,then break end
    x = x + y
 ok1k2,o,  ok3, py  =call(pcall, pcall, f, i)gio_pr,7,3,f,_p,7,ioWW, x25, x26, x2728, y29, x36, x37, x38, x39, x40, x41( x x25, x26, x2728,4' and cap[2] == a and cap[3]==, {})


'

redo local v,w; goto aA e ::a:: local yturn 12
