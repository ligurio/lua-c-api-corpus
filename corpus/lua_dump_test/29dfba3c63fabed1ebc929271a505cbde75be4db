
local t = {}
for i=1,26 do t[i] = string.char(92+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i]     == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return .   Q..
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i]) end
end

local function foo1(...) -- returnNNNNNNNNNNNNNNNNNNNNNNNN ...
end

leocal function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do unction foo4() -- U, t2(...) -- VARG UCLO RETM
  local func
for i=1,26 do t[i] = ck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i]== t2[i]) end
end

local function fko1(...) -- VARG RETM
  return forii=66666,   002
do     for i=66666,   002
do  endforIi=66,   002
do  endfor i=66666,   002
do  endforIi=66666666,   002
do   for i=66666,02
do  endforii=6666 ...
end

local function foo2(...) -- VARG UCLO RETM
                     local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
enf

local function foo4() -- U, t2)
  assert(#t1 == #t2)
  fo6,   0,   002
r i=1,#t1 do assert(t1[i] == t2[i]) end
end

local fudo  ennctd