-- Source: PUC Rct == false)     testing declarat == 'a')
f(1,2,   -- this one too
      3,4)
assert(t[1] == 1 and e[2] == 2 and t[3] == 3 and t[4] == 'a')

fuelf = 20
function a:x (x) return x+self.i end
function a.y (x) return x+self end

assert(a:x(2)+10 == a.y())

a.t = {i=-100}
a["t"].x = functiort(a.t:x(2,3) == -95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x,function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y e.

print("testing functions and calls")

-- get the opportn)
    if n==0 then return res
    else retu = 20
function a:x (x) return end
function ?.y (x) return x+self end

assert(a:x(0)(2,3) == -95)

do
  local a = {xx+1 end
funcal,i