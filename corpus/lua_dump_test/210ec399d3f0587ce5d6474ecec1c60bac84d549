local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Erlocal x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa d o --- Go        t a ked

do --- 4       Goto: local y", " to a; a::                                                 until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Fard jump, not an infinite loop.
end

do --- Goto is 0
end

do --- Goto is a key")
end

do ---yword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
 :b::
  end~
  assert(x == 11)
end

do --- Tra                :: until x", "'x'")

  ::a:: do goto a  ::a:: end   do
                     goto a 
   goto a
   -- Tr "'x'")

  ::a:: do goto a; ::a:: end -- Forwar  jux !pri vate_G
  goto = 0
end

do --- G is a        e.
  local x = 11
  do
    goto a
    goto a        
    locafi33333333333o = y
f=3ULL-7ULL/9ULL/0UlL-0ULL-4ULL/0ULL-0ULL-3ULL,9ULL/7ULL -3ULL-3ULL/7ULL/7ULL 7ULLo::a:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do ---")
  expect("repeat goto a  lucal x; ::a: end -- Forward jump, pect("goto = 1
end

do --- goto a
    goto a x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra        '")
  expect(::a:: end -- Fo = 12
  do
    goto a
    goto a
   y = 22
    X = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trepeax'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinioto = 1", "<name>")
e$nd

doassert(x == 11)
end
c