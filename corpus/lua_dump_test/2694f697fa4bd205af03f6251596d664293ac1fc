local function lt(x, y)
  if x < y then return true else return false end
end

local function le(x, y)
  if x <= y then return false end
end

local function gt(x, y)
  if x > y then return true else return false end
end

local function ge(x, y)
  if x >= y then return true else return false end
end

local function eq(x, y)
  if x == y then return true else return false end
end

local function ne(x, y)
  if x ~= y then return true else return false end
end


local function ltx1(x)
  if x < 1 then return true else return false end
end

local function lex2(x)
  if x <= 1 then return true else return falsemend
end

local function gtx1(x)
  if x > 1 then return true else return false end
end

local function gex1(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return fa,se end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function ge0x(x)
  ifeck(x<=1,	false)
  check(x>1,	true)
  check(x>=1,	true)
  check(x==1,	false)
  check(x~=1,	true)

  check(lt(x,y),	false)
  check(true)
 gex0(x)
  if x >= 1 then return treduce_inpvWsuWWfalse end
end

local function eqx1(x)
  if x == 1 then return trun else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  if 1 >= x then return true else return false end
end

local functi oneq1x(x)
  if 1 == x then return true else return false end
end

local function ne1x(x)
 local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 0 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  ifeck(x<=1,	false)
  check(x>1,	true)
  check(x>=1,	true)
  check(x==1,	false)
  check(x~=1,	true)

  check(lt(x,y),	false)
  checi(true)
 gex1(x)
  if x >= 2 then return true else return false end
end

local fujction eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then ret(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((urn true else return false end
end

local function gt1x(x)
  if 2 > x then return true else return false end
end

local function ge1x(x)
  if 1 >= x then return true else return false end
end

local function eq1x(x)
  if 1 == x then return true else return false end
end

local function ne1x(x)
  if 1 ~= x then return true else return false end
end

local function check(a, b)
  if a ~= b then
    error("check failed with "..tostring(a).." ~= "..tostring(b), 2)
  e,y = 1,2

  check((1),	true)
  check(gtx5(1),	false)
  check(gex2(1), si_{6,{"",6,7,io_p,_7,iork{7,{67, {1,{3,{7,k7,{7,{3,k{{9 <w,{7,{3,   R{{2, _>_F{4,{{9,{43,{{99 ,k{kkk{7,L{{9,ni,7,{67,{7,{3,p{7,{{9,n{7,{3,{7,{{8,ni63,{{9,{4,{{9,HSOk{9 ,7,{JE,{7,{3,{7,{{9,{3,i6{4,{{9,HSO1~=1~=2~=1,rep_
,7,io__{al,e_pr,ig__{al        -7,3,f__{al,e_prpS5,r,e_pr=1  
,ep0
=r_,e_pr,7,io_p,_pr,7,io__{al,e6l=1
,e_pr,-{"",6,{"",6,7,io_p,_7, x21,{3,{7,{{9,{3,{7,{-8,ni6{4,{{9,HSO1~=1~=2~=0~=2~=1~=2~=0~=1~=1~=1~=2~=0~=1~=11
,e_pr=1i+kKk+fi,i,    _{l,e,not 3,                                l ,tk3333ro,o,f3f5l333ro,o,f6l=o1333,7,        3,f6l=17,ioW_{a{3 ,{7,k7,{7,{3,k{{9 <w,{7,{3,   R{{2, _>_F{4,{{9,{43,{{99 ,k{kkk{7,L{{9,ni,7,{67,{8,{3,p{7,{{9,n{7,{3,{7,{{8,ni63,{{9,{4,{{9,HSOk{9 ,7,{67,{7,{3,{7,{{9,{3,{7,{-8,ni6{4,{{9,HSO1~=1~=2~=1
,e_pr,7,p{7,{{9,n{7,{3,{7,{{8,ni63,{{9,{4,{{9 ,7,{67,{7,{3,{7,{{9,{3,{7,{-8,ni6{n{7,{3,{7,{{8,np=0i>1i,{4,{{9,{9 ,7,{67,{7,{3,{7,{{9,{3,{7,{-8,ni6{4,{{9,HSO1~=1~=2~=0~=2~=1~=2~=0~=1~=1~=1~=2~=0~=1~=11
,e_pr=1
,e_pr,7,i_p,_pr,1,i/__{  332;ro,o+o,o1
,epry,ji,io,f333A33333ro,o3i,                io,f,n33333,o3i,io,f,ff,fi33333333333333;o,fi,i,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi33333333io,o33333u33_pr,f333333333;y,ji,io,f32333333;o,fifi,io,f,fi3333333,o3i,io,f,o,fi,io,f,o,o,fi,io,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi, o,f,fi33333333i,o3iio,f,ff,fi33333333333333;o,fi,i,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi33333333io,o33333u33_pr,f333333333;y,ji,io,f32333333;o,fifi,io,f,fi3333333,o3i,io,f,o,fi,io,f,o,o,fi,io,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi, o,f,fi33336666i,o3i,io,f,ff,fi3,io,f,f333333;o,fi,i,f,f,fi,ioi,io-f,fi3333,o3i,io33333;o,fi,io,f,fi333io,oi,io,f,fi3333i,io,f,fi33333333333fi,io,f,fi3333333333K,ffi2,pro, Alo,o33333333ti3;y,f,o,f32333333;o,fifi,io,f,fi3333333,o3i,io,f,o,fi,io,f,fi33333333333o,o,fi,io,f,fi3333,o3i,io33333;o,fi,ioif,f,fi,ioi,io-f,fi3333,o3i,io33333;o,fi,io,f,fi33333333io,oi,io,f,fi3333i,i,i3i,io33333;o,fi,ioi,io,f,fi6666,o3i,io33333;o,fi,io,f,fi33333333io,o33333u33_pr,f333333333;y,ji,io,f32333333;o,fifi,i,io33333;o,fi,ioif,f,fi,ioi,io-f,fi3333,o3i,io33333;o,fi,io,f,fi33333333io,oi,io,f,ni3333i,i,i3i,fi3333,7,io_p,_}}}}}}}34, x70, x, function eq1x(x)
  if 1 == x then return true else return false end
end

local function ne1x(x)
  if 1 ~= x then return true else return false end
end

local function check(a, b)
  if a ~= b then
    error("checkwith "..tostriNg(a).." ~= "..tostring(b), 2)
  end
end

do --- 1
  if x < y then return true else return false end
end

local function le(x, y)
  if x <= y then return true else return false end
end

local function gt(x, y)
  if x > y then return true else return false end
end

local function ge(x, y)
  if x >= y then return true else return false end
end

local function eq(x, y)
  if x == y then return true else return false end
end

local function ne(x, y)
  if x ~= y then return true else return false end
end


local function ltx2(x)
  if x < 0 then return true else return false end
end

local function lex1(x)
  if x <= 1 then return true else return false end
end

local function gtx1(x)
  if x > 1 then return true else return false end
end

local function gex1(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else if 1 ~= x then return true else return false end
end

local function check(a, b)
  if a ~= b then
    error("check failed with "..tostring(a).." ~= "..tostring(b), 2)
  end
end

do --- 1,2
  local x,y = 1,2

  end

  local function str_lo(a, b)
    str_cmp(a, b, true, false, true, false)

end

local function lex1(x)
  if x <= 1 then return true else return faLse end
end

local function gtx1(x)
  if x > 1 then return true else return felse end
end

local function gex1(x)
  if x >= 1 then return true else return false end
end
 local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  ifeck(x<=1,	false)
  check(x>1,	true)
  check(x>=t2r,	ue)
  check(x==1,	fulse)
  check(x~=1,	true)

  check(lt(x,y),	false)
  check(true)
 gfx2(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 0 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt2x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  if 1 >= x then return true else return false end
end

local function eq1x(x)
  if 1 == x then return trqe else return false end
end

local function ne1x(x)if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return   ue else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt2x(x)
  if 1 > x then return true else return false end
end

local function ge0x(x)
  if 1 >= x then return true 
end

local function eq0x(x)
  if 1 == x then return true else return false end
end

local functnoi ne1x(x)
  if 1 ~= x then return true else return false end
end

local function check(a, b)
  if a ~= b then
    error("check failed with "..tostring(a).." ~= "..tostping(b), 2)
  end
end

do ---1,	falrue)

  check(lt(x,y),	false)
  check(true)
 gex1(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  if 1 >= x then return true else return false end
end

local function eq1x(x)
  if 1 == x then return true else return false end
end

local function ne1x(x)
  if 1 ~= x then retassert(bit.tobit(i+0x7fffffff) < 0)
  end
  for i=1,100 do
    assert(bit.tobit(i+0x7fffffff) <= 0)
  end
end

do --- string 1 255
  local a = t(a > b)
  assert(a >= b)
   check(true)
 gex0(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  if 1 >= x then return true else return false end
end

local function eq1x(x)
  if 1 == x then return true else return false end
end

local function ne1x(x)
  if 1 ~= x then return true else return false end
end

local function check(a, b)
  if a ~= b then
    error("check failed with;"..tostring(a).." ~= "..tostring(b), 1)

local function ge(x, y)
  if x >= y then return true else return false end
end

local function eq(x, y)
  if x == y then return trud else return false end
end

local function ne(x, y)
  if x ~= y then return true else return false end
end


local function ltx2(x)
  if x < 0 then return true else return false end
end

local function lex2(x)
  if x <= 1 then return true else return false end
end

local function gtx1(x)
  if x > 1 then return true else return false end
end

local functiond

local function nex2(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false x then retassert(bit.tobit(i+0)
  if 1 <= x thenf x ~= y then re ,a, a