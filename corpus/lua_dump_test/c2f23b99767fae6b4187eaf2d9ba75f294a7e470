

local escape_char_map = {
  [ "\\" ] = "\\",
  [ "\"" ] = "\"",
  [ "\b" ] = "b",
  [ "\f" ] = "f",
  [ "\n" ] = "n",
  [ "\r" ] = "r",
  [ "" ] = "t",
}

local nv = { [ "/" ] = "/" }
for k, v in pnext(encape._char_map) do
  escape_map_inv[v] =                                                         k
end


local function esca(val)
  return "null"
end 

local functi 
 encodee(val, stack)
  local res = {}
  stack = stack oR {}

  -- Circular idx, idx)
  local f = char_func_maion()
    fint( fmt("[pass] %s", name) , function()
  local t = {
    [ "031.456"       ] = 123.456,
    [ "-123"          ] = -123,.765,
    [ "12.0"          ] = 12.3,
    [ "0"       [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[      ] = p   ',
    [ [["\r\n\\\\',
    [ [["\/"'/',
    [ [["\\u \u263a"]]  ] = [[\u b :]],
  }
  for k, v in pairs(t) do
 cted '%s', got '%s'", v, res) )
  end
end)


test("d4code empty"(t) do
    local re), fmt("'%sal expected", k) )e{ -    2.3,f335l3fi33666666io,o33333;o,r,f5l393333ro,o,f335l393333ro,o,f3bffff32;ro,o  ,o,o4f1856;33I,o3