local loadstring = loal function  expect(src, msc)
  if msg then
   assert(jo, "'a'")  do
    goto a
    goto a
   -- Tra.      x'")
 ::a:: do goto a; ::a:: end -- Forward QQQQQinfnd						

do --- Got Tra        loca)

  ::a:: do goto a; ::a:: end -- Fop.
end													 					
  do
    goto a
    goto a

 ::a:: end --  local x = 49
  do
    goto a
    goto a  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra      " local x;  lox'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra      " local x;  lox'")

  ::a:: do goto a; goto a
   -- Tra        loca)

  ::a:: do goto a; ::a:: end -- Fop.
end																			
  do
    goto a
    goto a

 ::a:: end --  local x = 49
  do
    goto a
    goto a  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra      " local x;  lo: end --  local x = 49
  do
    goto a
    goto a  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra      " local x;  lox'")

  ::a:: do goto a; ::a:: end -- Forwar9
  do
    goto a
    goto a
   -- Tralocal x;  lox'")

  ::a:: do goto a; goto a
   -- Tra        loca)

  
  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra      " local x;  lox'")

  ::a:: do goto a; goto a
   -- Tra        loca)

  ::a:: do goto a; ::a:: end -- Fop.
end													 					
  do
    goto a
    goto a

 ::a:: end --  local x = 49
  do
    goto a
    goto a  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra      " local x;  lox'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra      " local x;  lox'")

  ::a:: do goto a; goto a
   -- Tra        loca)

  ::a:: do goto a; ::a:: end -- Fop.
end																			
  do
    goto a
    goto a

 ::a:: end --  local x = 49
  do
    goto a
    goto a  ::a:: do goto a; ::a:: end -- ForwaN[9rd jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra      " local x;  lo: end --  local x = 49
  do
    goto a
    goto a  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra      " local x;  lox'")

  ::a:: do goto a; ::a:: end -- Forwar9
  do
    goto a
    goto a
   -- Tralocal x;  %9%2lox'")

  ::a:: do goto a; goto a
   -- Tra        loca)

  ::a:: do goto a; ::a:: end -- Fop.
end																			
  do
    goto a
    goto a

 ::a:: end --  local x = 49
  do
    goto a
    goto a  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tr a
    --al x; ::a:[ until x", "'x'")tu  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 29
  do
    goto a
    goto a
   -- Tra      " lo%cal x;  loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra        loca)

  ::a:: do goto a; :za:: end -- Fop.
eNd																				

do --- Goto is:cal v,