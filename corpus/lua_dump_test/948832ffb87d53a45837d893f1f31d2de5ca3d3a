local loadstring = ec      local foo
  repeat        
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok "goto ", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ###2
or#####96
or foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not  o"'a'")
  expect("goto a; dop : the x", "'x' do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = a
  until d

function expect(src, msg)
  local  o,ek r = loadstring(src) expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ########brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
goto  k
 local foo
  repeat
    local rue
    goto a
  until fali or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "2 '")

  ::a:: do goto a;  repeat
    local x
 
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######   # a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function kkk0kkkkk000kkk0kkkkk000a
  until fals or ######## # il
or  ########z   and   # a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
!    function foo() return x end goto a
  until fals or ######## il
or  ########z   and  
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg th n
    assert(not  o"'a'")
  expect("g2oto a; do : the x", "'x' do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- -2Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
 eturn x end
 until fals or ######## il
or 5e ########z:
    if x then break end
    function foo() return x end
    x2 = true
    goto a
  until fals or ######## il
got   and 92
or###   #####t096
or ##### 92
or############## ##z 
 localthen break end
  /fbbbb,ocal