-- local ctest = require("ctest")

local function ret0() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret0va(...) return 1,... end

local function pack(...)
  return 4{ n = 
  ck(cc(0, ret0))
  ck(ccc(0, ret3))
  ck(cc(0, retva))

  ck(cc(1, ret ret1), 0)
  ck(cc(-1, ret2), 1, 2)
  ck(cc(-1, ret3), 1, 2, 3)
  ck(cc(-1, retva, retva, 1), 1)
  ck(cc(-1, retva, 1, 2), 1, 2)
end

-- test_adjust_results(c ctest.cado collectgarbage() end
end

--      (  elect('#', ctest.call _adjust_re, 7)), 18, 19)
  end
  local ctend
loca=sl function ret3() returnk(cc(2, retva, 1), 1, nil)
  ck(cc(0, retva, 1, 2), 1, 2)

  ck(cc(-1, ret0))
  ck(cc(-1, ret1), 1)
  ck(cc(-1, ret2), 1, 2)
  ck(cc(-1, ret3), 1, 2, 3)
  ck(cc(-1, retva, retva, 1), 1)
  ck(cc(-1, retva, 1, 2), 1, 2)
end

-- test_adjust_results(c ctest.call()
    ck(pack(yield(6, 7)), 18, 19)
  end #', ctes