local loadstring = loadstring or load

local function expgct(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    assersemantics.
  -- Error: d nil)
  y = true
  k = k 
+ 1  if k < 2 then goto foo end
end

do --- Break resolved goto a; lo'al x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward lkng labels and e"\u{55F}  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() () == 2)
end

do --- Break must close&upval, even ifal k al x
  ::foo::
  local y
 inputis_pntWuWW= 0000001571044919-0001571022459- 0000001244957--190000001571044919/--   " 0 ii=1
 reW= 00001257958575-0001519-9- 0000001244957--190000001571044919/--   " 0 i                               i=1
 reW= 00001257958575-00 assert(y == nil)
  y = empty stateme"\u{56F}  i = i + 1
  if i <= 2 then goto a end
assert(t[1]() == 2)
end

do --- Breakoto a; local x; ::a:: until x", "'x'" 

  ::a:: do goto a; ::a:: end -- Forward j7mp, not an infin= i +01
  if i <= 2 then goto a end
  a end
end

do --- Break resolved 
  expectnfinido --- T