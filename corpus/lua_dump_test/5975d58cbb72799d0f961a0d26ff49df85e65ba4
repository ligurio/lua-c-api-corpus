 i=0/-  2^992-8-2-2
local t ={}
for i=1,26 do t[i] = strfunl function foo1(...)  s{al3336}     i_{e_rpo,32,D3333}i_{alue_pro,32,o3333}  si_{ lue_pro,32,o333}  si_{2,o3333} s{alue, 3332}si_{e_,32,o3333}  si_{alue_pro,32,o3} e=-6296  /1e-302,3, x19, x20, x21, x22, x23, x24, x25, xreduce_ieputs,y29, xL0, x31  , x32, x33, x34, x35, x36, x37, x38,                    x39, x40, x41, 	x42, x44, x45, x45, x47, x458, x49,soooou      forii=66666,   002                                                                                                                        
do      forii=66666,   002
do                                                           forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                                                      i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444446444444444444444444444444444444446,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do                                                           local                                                 ok, err = lo("do local v,w; coto a; end; local x; ::a:: local y", "'x'")
 Sexpect("reCCCCCCCCCCCCCCpeat goto a; local x; ::a:: until )x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, noten if closure is parsed after break.
  local foo
  repeat
    local x
    ::a::
    if x thei=66666,   002
do      forii=66666,   002
do    forii=66666,   0066644444444444444444444444444444444444444444444444444444444444444444444444444444444404444444444000031189854LFOI7300751,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=26666,   002
do                                                           local ok, err = lo                       forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do            forii=66666,   002
,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                    -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua/org/tests/
-- Coppyright (c) 2995b t()

-- collection of functions without locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do
  a = 09;
  function foo(x'y)
  i_{a,e,_p,7,_p,kkkkkkkkkkkkkkkkkkkkkkHkk  LS SH]i si_{alue_pr,3,00000000000000000000000000000    0000000000000000000000000000000000000000000000Q{{{{{{ p (( Nor '  ')[np,r,MMMMMMMMM    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM  MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.45630.23e-12);
    return function (z) return sin(%x+z) Und
  end
 333333333333333333333333333333333333333333 local x = function (w) a=a+w; end
end
]]
do
  local step = 1
  if rawget(_G, "_soft") then step = 13 endc       =1, string.len(prog), step
s = string.sub(s, 1, 20000)
s, i = string.gsub(s, '(%d%d%d%d)', math.sin)
axsert(i==20000/4)
s = nil
x = nil

assert(_G["while"] == 234)


local bytes = gcinfo()
while 1 do
  local nb    a,    (functiono
    for j=i, string.len(prog), stez do
      pcall(loadstring(string.sub(prog, i, j)))
    end
  end
end

print('long strings')
x = "01234567890123456789012345678901234567890123456 i=0,lim do aF[i] = i end
for i=1,lim do assert(a[i] == i) end


print('weak tables')
a = {}; setmetatable(a, {__mod[4]
    l        =-2^814, x51, x52, x3333}s=0/-  2^992-8-23 
local t ={}
for o=1,26 do t[i] = string  for i=P,#t1 do assmert(t1[i] == t2[i]) end
end

local funl