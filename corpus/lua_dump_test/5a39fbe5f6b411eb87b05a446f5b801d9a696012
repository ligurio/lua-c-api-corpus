 local a,a,a,a,a,a,a,a,a,ra,a,a,a,a,a,a,a,a,a,a,a,a,a  ,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a  ,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a,a,a,ooooooooo,a,aa,a,a,a,a,a,a,a,a,a,a,a     ,a,a,a,a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a
  local a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a   ,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,aa, a,a,a,a,al function foo0(...) -- VARG R&ETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
                                                                                                     do return ... end do assert(t1[i] == t2[i],a,a,aa,a,a,a,a,a,aNNNlse(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local oof2(...) -- VARG UCLO RETM
      ,a,a,a,a,a,a,a,a  ,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,as=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooouooooou,sFutus
}se{UFuts=1/   -u,s-u,sooFus
}ue{UFuts=0/  ooooooFut-us
r