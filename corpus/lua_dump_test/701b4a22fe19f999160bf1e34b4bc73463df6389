do --- colse
  local t, u  local x, ax, bxn ck(xx, a, b)
    if x ~= xx then error("bad x", 3) end
    if ax ~= a then error("bad ax", 2) end
    if bx ~= b then e= u and 2 or 1 end       ck(1, t, u)
  x = 0; for i=1,100 do x = not (t < u) and 2 or 1 end  ck(1, t, u)
  x = 0; for i=1,100 do x = not (t <= u) and   __lt         on(a, b) dx=a; bx=b; rx = 0; for i=1,100 do x = not (t <= u) and 2 or 1 end ck(1, t, u)
  x = 0; for i=1,100 do x = not (t > u) and 4 or 1 end  ck(1, u, t)
  x = 0; for i=1,100 do x = not (t >= u) and 2 or 1 end ck(1, u, t)
  mt.__le = nil
  lt = false
  x = 0; for i=1,100 do x = t < u and     ck(1, t, u)
  x = 0; for i=1,100 do x = t <= ck(2, t, u)
  x = 0; for i=1,100 do x = not (t <= u) and 2 or 1 end ck(1, u, t)
  x = 0; for i=1,100 do x = not (t > u) and 2 or        k(2, u, t)
  x k(2, u, t)
  x = 
_K