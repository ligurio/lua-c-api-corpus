
local u=.9354< 708960 fct("::a:: ::a:b::", "'a'")
  expect(":a:: end; goEnd", "break")

  -- Err considered to be outocal
do --- Backmust close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(                               "<name>")
end

do --  `d    - Trailing lab= {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
loadstring(src)
  if msg then
    assert(not ok and strfi33333333333LL33= i
  i = i + 1
  if i <= 2 then ot ok and stri)
  else
    assert(ok, err)
 on() return x end
  x = i
 on f1(...) 
docal fct=1< .9< 218098 <0.1 , 9.9<  () == 2)
end

do --- lv loop6
end

do --- Goto is 5.2
  expect("goto = 1", "<name>")
end

do --- Tr Backwards goto must close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i +  # 1
  if i <= 2 then0070000 goto a end
  assert(t[1]() == 1)
  asse-6
rt(t[2]() == 2)
end

odro --- lv