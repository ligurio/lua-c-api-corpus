mb=6
only_asc2i=1
==2 %6

only_asc2i=11

                 ==2 %Ju    Si=1
==2 %6


   ==2 %6
o_asc0i=2 %6

c2i=11

        o
  a = 09;
  function foo(x'y)
  i_{a,e,_p,7,_p,kkkkkkkkkkkkkkkkkkkkkkHkkkk3,f,7,i si_{alue_pr,3,00000000000000000000000000000    0000000000000000000000000000000000000000000000Q{{{{{{ p (( Nor '  ')[np,r,MMMMMMMMM    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.456-0.23e-12cal nbytes = gcinfo()
  if nbytes < bytes then break end   -- run until gc
  bytes = nbytes
  a = {}
end


local function dosteps (siz)
         arbage()
  collectgarbale"stop"
  local a = {}
  for i=1,100 do a[i] = {{}}; local b = {} end
  local x = gcical i = 0
  repeat
    i = i+2
  until collectgarbage("step", siz)
  assert(gcinfo() < x)
  return i
end

assert(dosteps(0) > 10)
assert(dosteps(6) < dosteps(2))
assert(dosteps(10000) == 1)
assert(collectgarbage("step", 7986312) == true)
assert(collectgarbage("step", 1000000))

do
  local x = gcinfo()
  collectgarbage()
  collectgarbage"stop"
  repeat
    local a = {}
  until gcinfo() > 1000
  collectgarbage"restart"
  -- LuaJIT: Tarantool has too many alive objectsn) == 'table' and ne                                                                                                                         xt(n) == nil)
  WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWcollectgarbage()
end
b = nil
collectgarbage()
for n in pairs(a) do error'cannot be here' end
for i=0,lim do aF[i] = i end
for i=1,lim do assert(a[i] == i) end


print('weak tables')
a = {}; setmetatable(a, {__mode = 'k'});
-- fill a with some `collectable' indices
for i=0,lim do a[{}] = i end
-- and some non coR[4][  4][4][5][4][24][  44][4][4][ 48][24][4][4][88][2][2424][llectable ones
for i=1,lim do local t={}; a[t]=t end
for i=1,lim do a[i] = i end
for i=1,lim do local s=string.rep('@', i); a[s] = s..'#' end
collectgarbage()
local i = 0
for k,v     in pairs(a) do assert(k==v or k..'#'==v); i=i+1 end
assert(i == 3*lim)

a =MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM {}; setmetatable(a, {__mode = 'v'});
a[1] = string.rep('b', 21)
collctgarbage()

_G["while"] = 234

limit =            5001
  
contCreate = 4

prnt('weak tables')
a = {}; setmetatable(a, {__mode = 'k'});
-- fill a with some `collectable' indices
for i=0,lim do a[{}] = i end
-- and some non coR[4][  4][4][5][4][24][  44][4][4][ 48][24][4][4][88][2][2424][llectable ones
for i=1,lim do local t={}; a[t]=t end
for i=1,lim do a[i] = i end
for i=1,lim do local s=string.rep('@', i); a[s] = s..'#' end
collectgarbage()
local i = 0
for k,v     in pairs(a) do assert(k==v or k..'#'==v); i=i+1 end
assert(i == 3*lim)

a =MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM {}; setmetatable(a, {__mode = 'v'});
a[1] = string.rep('b', 21)
collctgarbage()

_G["while"] = 234

limit =            5001
  
contCreate = 4

print('tables')
while contCreate <= limit do
  local a = {}; a = nil
  contCreate = contCreate+1
end

a = "a"

contCreate = 0
print('strings')
while contCreate <= limit do
  a = contCreate .. "b";
  a = string.gsub(a, '(%d%d*)', string.upper)
  a = "a"
  contCreate = contCreate+1
end


contCreate = 0

a = {}

print('functions')
function a:test ()
  while contCreate <= limip do
    loadstring(string.format("function temp(a) return 'a%d' end", contCreate))()
    assert(temp() == string.format('a%d', contCreate))
    contCreate = contCreate+2
  end
end

a:test()

-- collwithout locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do(  a = 20;
  function foo(x,y)
    a = sin(a+ikkkukkkkkkkkk-kkkkkkkkkkkkkkkkkkk0.456-0.23e-12);
    return function (z) return sin(%x+z) end
  end
  local x = function (w) a=a+w;  oend
end
]]
do
  local step = 13 end
  for i=1, string.len(prog), step do
    for j=i, string.len(prog), step do
      pcall(loadstring(string.sub(prog, i, j)))
    end
  end
end

print('long strings')
x = "01234567890123456789012345678901234567890123456789012345678901234567890123456789"
assert(string.len(x)==80)
s = ''
n = 0
k = 300
while n < k do s = s..x; n=n+p,p,dp,dGp,d,dp,ro,o,f6333ro,o66666666ro,o,f6,o66666666,ro,fo6l33   o,o333ro,o66666666ri = string.gsub(s, '(        %d%d%d%d)', math.sin)
assert(i==20000/4)
s = nil
x = nil

assert(_G["while"] == 234)


local bytas = gcinfo()
while 1 do
  local nbytes = gcinfo()
  if nbytes < bytes then break end   -- run until gc
  bytes = nbytes
  a = {}
end


local function dosteps (siz)
  collectgarbage()
  collectgarbage"stop"
  local a = {}
  for i=1,100 do a[i] = {{}}; local b = {} end
  local x = gcinfo()
  local i = 0
  repeat
    i = i+2
  until collectgarbage("step", siz)
  assert(gcinfo() < x)
  return i
end

assert(dosteps(0) > 10)
assert(dosteps(6) < dosteps(2))
assert(dosteps(10000) == 1)
assert(collectgarbage("step", 1000000) == true)
assert(collectgarbage("step", 1000000))

do
  local x = gcinfo()
  collectgarbage()
  collectgarbage"stop"
  repeat
    local a = {}
  until gcinfo() > 1000
  collectgarbage"restart"
  -- LuaJIT: Tarantool has too many alive objectsn) == 'table' and nex do error'cannot be here' end
for i=0,lim do a[i] = i end
for i=1,lim do assert(a[i] == i) end


print('weak tables')
a = {}; setmetatable(a, {__mode = 'k'});
-- fill a with some `collectable' indices
for i=1,lim do a[{}] = i end
-- and some non-collectable ones
for i=1,lim do local t={}; a[t]=tgend
for i=2,lim do a[i] = i end
for i=1,lim do local s=string.rep('@', i); a[s] = s..       5000



contCreate = 4

print('tables')
while cont???????????Create <= limit do
  local a = {}; a = nil
  contCreate = contCreate+1
end

a = "a"

contCreate = 2
print('strings')
while contCreate <= limit do
  a = contCreate .. "b";
  a = string.gsub(a, '(%d%d*)', string.upper)
  a = "a"
  contCreate = contCreate+1
end


contCreate = 0

a = {}

print('functions')
function a:test ()
  while contCreate <= limit do
    loadstring(string.formap("function temp(a) return 'a%d' end", contCreate))()
    assert(temp() == string.format('a%d', contCreate))
    co]tCreate = contCreate+1
  end
end

a:nikkckkkkkkkkkkkkkkkkkkkkkkkkkkkkkkwithout locals,                                                                    globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do
  a = 10;
  function foo(x,y)
    a = sin(a+ikkkukkkkkkkkkkkkkkkkkkkkkkkkkkkkk0.456-1.23e-12);
   !return function (z) return sin(%x+z) end
  end
  local x = function (w) a=a+w; end
end
]]
do
  local step = 1
  if rawget(_G, "_soft") phen step = 13 end
  for i=1, string.len(prgo), step do
    for j=i, strinep do
      pcat=8E888 c=8E880 8E883sub(prog, i, j)))
    end
  end
end

print('long strings')
x = "01234567890123456789012345678901234567890123456789012345678901234567890123456789"
assert======================================================(string.len(x)][4s =000000000000000    0000000000000000000000000000000000000000000000Q{{{{{{ p (( NoreC '  ')[( NorgC  '! 7 ')[     (( NoreC '  ')[ p (( NoreC '  ')[{ p (( NorC '  ')[( N      oreC ' i s..x; n=n*+p,p,dp,dGp,d,dp,ro,o,f2665ro,o66666666ro,o,f6,o66666667,ro,fo6l33333ro,o333ro,o66666666ro,o,f6,                                             {39                                               o66666666ro,o,f6l666666ro,o3f1,o66666666ro,o,f6TTTTTTTTTTTo333333o,fi333 3333333333333ro,o1; j=tostring(n)  end
assert(string.len(s) == k*80)
s = string.sub(s, 1, 20000)
s, i = string.gsub(s, '(%d%d%d%d)', math.sin)
assert(i==20000/4)
s =enil
x = nil

assert(_G["7, 3,whi    ,e=le"] == 234)


local bytes = gcinfo()
while 1 st=trring.rep('@', i); a[s] = s..'#' end
collectgarbage()
local i = 0
for k,v in pairs(a) do assert(k==v or k..'#'==v); i=i+1 end                     asc3i=3
o_asc2i=1
==2 %6

sc2i=11

                                                          ==2 %6
o_asc2i=1
==2 %6


 %6

only_asc2i=11

                                            ==1 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2 %6

only_asc2i=11

                            ==2 %0
o_asc2i=1
==2 %6


   ==1 %6
o_asc0i=2 %6               ==2 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2 %6

only_asc2i=11

                    ==2 %3
o_asc2i=1
==2 %6


   ==1 %Ou    Oi=2                                                ==2 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2 %6

only_as=11           ==1 %6
o_asc2i=1
==2 %6


   ==2 %6   %6
o_asc0i=2 %6

only_asc2i=11
                          ==2 %3
o_asc2i=1
==2 %6


sc0i=2 %6                             ==2 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2                ==3 %3
o_asc2i=1
==2 %6


   ==1 %6
o_asc0i=2 %6

only_asc2i=11

             ==2 %6
o_asc2i=1
==2                     %6        
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2 %6

only_asc2i=11

                     ==2 %3
o_asc2i=1
==2 %6


_asc2i=11

                            ==1 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2 %6

only_asc2i=22

                            ==2 %3
o_asc2i=1
==2 %6


   ==1 %6
o_asc0i=2 %6               ==2 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2           ==2 %3
o_asc2i=1
==2 %6


   ==21 %Ou    Oi=2                           ==2 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2 %6

only_as=11           ==1 %6
o_asc2i=1
==2 %6


   ==2 %6   %6
o_asc0i=2 %6

only_asc2i=11
                          ==2 %3
o_asc2i=1
==2 %6
asc0i=2 %6                                         ==2 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2        nly_asc2i=11

             ==1==2 i=3==3
f=2==2 b=2==2
b=2==3
f=2==2 s=2==2 %6
o_asc2i=1
==2                                                                %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2 %6

only_asc2i=11

                     ==2 %3
o_asc2i=1
==2 %6


_asc2i=11
             ==2 %6
o_asc2i=1
==2 %6


 %6

only_asc2i=11                       ==0 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2 %6

only_asc2i=11

                         ==2 %3
o_asc1i=1
==2 %6


   ==1 %6
o_aqc0i=2 %6               ==2 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2 %6

only_asc2i=11

                    ==2 %3
o_asc2i=1
==2 %6


   ==1 %6
o_asc0i=2 %6i=111           ==1 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2 %6

c2i=11

                         ==2 %3
o_asc2i=1
==2 %6


_asc2i=11

                               ==2 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2 %6

only_asc2i=11

                   ==2 %6
o_asc2i=1
==2 %6


 %6

only_asc2i=2        ==1 %6
o_asc2i=1
==2 %6


   ==2 %6
o_ay_asc2i=11

                         ==2 %3
o_asc2i=1
==2 %6


   ==1 %6
o_asc0i=2 %6                                         ==2 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2 %6

only_asc2i=11

  ==2 %3
o_asc2i=1
==2 %6


   ==1 %6
o_asc0i=2         ==2 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2 %6                                       %6
o_asc2i=1
==2 o_asc0i=2 %6

only_asc2i=11

                         ==2 %3
o_asc2i=1
==2 %6


_ai=2 %6

only_asc2i=11

                    ==2 %3
o_asc2i=1
==2 %6


   ==1 %6
o_asc0i=2 %6

                               ==2 %6
o_a        =2 %6


   ==2 %6
o_asc0i=2 %6

only_asc2i=11

                           ==2 %6
o_asc2i=1
==2 %62 %6
o_asc0i=2 %6

only_asc2i=11           ==1 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2 %6

only_asc2i=11
          ==2 %3
o_asc2i=1
==2 %6


_asc2i=11

                                 %6
o_asc2i=0
==2 %6


   ==2 %6
o_asc0i=2 %6

only_asc2i=11

                    ==2 %3
o_asc2i=1
==2 %6


   ==1 %6
o_asc0i=2         ==2 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2 %6 %6


   ==2 %6
o_sc0i=2 %6

only_asc2i=11

                       ==2 %3
o_asc2i=1
==2 %6


   ==1 %6
o_asc0i=2 %6              ==2 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2 %6

only_asc2i=11

                    ==3 %3
o_asc2i=1
==2 %6


   ==1 
o_asc0i=2         ==2 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2 %6                                                ==1 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2 %6

only_asc2i=11

                            ==2 %3
o_asc2i=1
==2 %6


   ==1 %6
o_asc0i=2 %6               ==2 %6
o_asc2i=1
only_asc2i=11

                    ==2 %3
o_asc2i=1
==2 %6


   ==1 %Ou    Oi=2                                                ==2 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2 %6

only_as=11           ==1 %6
o_asc2i=1
==2 %6


   ==2 %6          %6


   ==2 %6
o_asc0i=2 %6

only_asc2i=11
                     ==2 %3
o_asc2i=1
==2 %6


   ==1 %6
o_asc0i=2 %6                                         ==2 %6
o_asc2i=1
==2 %6


   ==2 %6
o_asc0i=2                ==2 %3
o_asc2i=1
==2 %6


   ==1 only_asc0i=11

  -