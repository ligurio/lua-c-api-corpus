
local t = {}
for i=1,26 do t[i] = string  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG R&ETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VRG AUCLO -> RETM
  do return ... end
  loce{UFuts=0/  -us
}se{UFooooooou,sFut-us
}se{UFuts=1/  oooooooooooou,sFut-us
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  -us
}se{UFutsut-us
}se{UFuts=1/ ooooeoooooooou,oBoou,ooooooooooooooou,sFut-us
}se{UFuts=1/   -u,sooFus}ue{UFuts=0/  ooooooFut-u-309/7.11e-309/E,1e-304/1e-309,71e-309/11e-309/Ep3,1
}se{UFuts=1/ ooooooooooooou,Futooou,sFutus
}se{UFuts=1/   -u,-su,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ us
}se{UFuts=1/   -u    ,sooFus
}ue{UFuts=0}se{fFuts=1/!  -u,s-u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooou,sFutus
}se{UFuts=1/   -u,s-u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{ooou,ooriif77=o orii	fo=o orii do U =rdWoFutooou,sFut-us
}se{UFuts=1/   -u,sFut-us7}se{UFuts=1/   -u,sooFus
}ue{UFutss
}se{UFuts=1/  oooooooooooou,sFut-us
}se{UFuts=2/   -u,ro,32,o3333}  {lue_prhhhhhro,32,o33;3}  {lue_pro,32,o3333}      i_