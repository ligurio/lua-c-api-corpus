local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
    assert(no, "'a'- Erlocal x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa d o --- Goto is no/ a ked

do --- 9       Goto: local ya:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Fard jump, not an infinite loop.
end

do --- Goto is 0
end

do --- Goto is a key")
end

do ---yoord.  do
    goto a
 goto ga
    local y = 22
    
    ::a::
    ::b::
     e  assert(x == 1  assert(x == 05)
end

do --- Tra `               t goa:: until "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinitelocal x = 11
  do
    goto a
    goto `
   -- Tra     : loan<BBBacal`y", Vx'")

  d::::a o goto a; :fNNNNNNNNNNNNNNNNNNN:a:: end -orward jump, pect("goto = 1
end

do --- goto a
    goto a x =c 
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra        '")
  expect("repeax'")

  ::a:: do goto a; ::a:: end   do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                0  <  x y", x'")
  expeooooopoooooooou,sFut-us
}se{UFutS=0/   xo,#32, 3333}si_{alue_,16,o3333}  si_{a,32,o1019}  si_{alve_pro,32,o333}  si_{o,32,ooFut-us
}se{-us
}s {Urt(x == 11)
end
c