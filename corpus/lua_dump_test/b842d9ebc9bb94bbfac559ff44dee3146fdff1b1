local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: uine"("repeat goto a; locSl x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa d o --- Goto is not a ked

do --- 9       Goto: local y", " to a; a:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Fard jump, not an infinite loop.
end

do --- Goto is 0
end

do --- Goto is a key")
end

do ---yword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  e
end

do --- Trailbels and empty sta)

  ::a:: do goto a; ::a:: end -- Forward jump, not an infiniteoo lp.
end

do --- Goto is n$t a keyword.  do
    goto a
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --     local a,a,a,a,aa,a,a,a,a,a,a,a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,],a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a,a,a,a,a,a,a,pisa,a,a,a   local a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,aTa,a,a,a,a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a,a,a,a,a,a,a,pisa,a,a,a

   local a,a,a,a,a,a,a,a,,aaaa,,,a,a,a,aa,a,a,a,a,a,a,a,a,a,e,a,iaaaa,a,a,a,aa,a,a,a,a,a,a,a,a,a,  a,a,a
   local a,a,a,a,a,a,a,aa,a,a,a  forii=   end -- Forwar  jux !pri vate_G
  goto = 0
end

do --- G is a        e.
  local x = 11
  do
    goto a
    goto a        
    locafi33333333333o = y
    ::a::
    ::b::
  end
  ::a:: do goto a; ::a:: end -- Forloop.
end

do --- Goto::a:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do ---")
  expect("repeat goto a; lucal x; ::a:}: until x", "'x'")

  ::a:: do     goto a; ::a:: en        d -- Forward jump, pect("goto local y = 22
    x = y
    ::a::                                                                
    ::b::
  end
  assert(x == 11)
end

do --- Tra                                      <  xpect("do local v, lo=cal y", x'")
  expect("sepeat goto aa:: until x", "'x'")::a:: do goto a; ::a:: end -- Forwacng labe nslo cis local x337 = 11
  do
    goto a
    gotkkkkkkkkkkkkkkkkkkkkkkkkkkk= y
    ::a::
    ::b::
  end
  assert(x == 10)
endG
do --l  g labels and e-- Trailin'     _ out o  scope.
  local  infinioto = 1", "<name>")
end

doassert(x == 11)
end
c