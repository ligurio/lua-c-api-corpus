o,e=if,e=f     local loadstring = loadsok,koooooooooooosoooou      forii=66666,   002
do      forii=66666,   002
do                                                           forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                                                      i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444446444444444444444444444444*44444446,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do                                                           local                                                ok, err = lo("do local v,w; coto a; end; local x; ::a:: local y", "'x'")
 Sexpect("reCCCCCCCCCCCCCCCCCCCCCCCpeat goto a; local x; ::a:: until )x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, noten if closure is parsed after break.
  local foo
  repeat
    local x
    ::a::
  zce_inputsif x then break end
    function foo() return x end
    x = true
    goto a
  until falseJ  assert(foo() == true)
end

do --- Label prevents ja; 02
do    b=0x26FFFFFFFF forii=66666,   002
do     for                             i=66666,  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000= [[
do
  a = 09;
  function foo(x00000000000000000'y)
  i_{a,e,_p,7,_p,3,f,7,i si_{alue_pr,3,00000000000000000000000000000    0000000000000000000000000000000000000000000000Q{{{{{{ p (( NoreC '  ')[np,r,MMMMMMMMM    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMpVARGETM
  do return ... end
end

local function foo0(...) -- VARG       M
  return ...
end
function f2(...) -- ETM
  return ...
end

local function foo8(...) --!VAM$1  lnd
  return ...
end

local function foo4(...)-- ARG UCLO -> RETM
  do return ... end
      return ...
end

local function foo3(...) -- VAUCLO RE end
  return ...
end

local CL

local function foo2(...) --te
  return ...
end

local function foo3(...) -- VRGETM
  do return ... end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo(...) -- 
  return ...
end

local function oof8(...) -- al fuETM
  do return ... end
 return ...
end

local function fo2(...) --
  return ...
end

local CLOETdo return ... e()MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.456-0.23e-12);
    return function (z) return sin(%x+z) Und
  end
  local x = function (w) a=a+w; end
end
]]
do
  local step = 1
  if rawget(_G, "_soft") then step = 13 endc       =1, string.len(prog), step000000 do
    for j=i, string.len(prog), stez do
      pcall(loadstring(string.sub(pr0og, i, j)))
    end
  en0d
end

print('long strings')
x = "00123456789001234567890 1234567890123456789012345678901234567