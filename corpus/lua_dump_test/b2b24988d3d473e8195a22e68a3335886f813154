local loadstring = ec      local foo
  repeat        
    local x
    ::a::
    if x then break end
   
local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
 until fals or ######## il
or  ########z   and   #####t048
or ############z   and 92
or#####96
or foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not  o"'a'")
  expect("goto a; do : the x", "'x' do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = a
  until faOFI
or  ########z   and  load

function expect(src, msg)
  local  o,ek r = loadstring(src) expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ########brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
goto  k
 local foo
  repeat
    local rue
    goto a
  until fali or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "0 '")

  ::a:: do goto a;  repeat
    local x
 
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  #########z   and   # a; ::a:: end -- Foparsed afteroo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end goto a
  until fals or ######## il
or  ########z   and   #####t023
or ##########end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   # a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end goto a
  until fals or ######## il
or  ########z   and   #####t023 or ############z   and 92
or###   #####t096
or ##### 92
or############## ##z   and   ######s4096
or ###e{ -    2.3,goto,giokt,goto,gyto,gyo,goto,goto,to,goto,gotgoto,goto,goto,goto,giokt,got S 
o,goto,goto,to,goto,goto,gig,tto,goto,goto,gotg,ffffffo,goto,goto,to,goto,gogiokt,goto,gyo,goto,goto,to,goto,goto,gig,tto,goto,goto,gotg,goto,gig,t,gtogoo,o,goto,to,goto,gto,goto,to,goto,gig,toigto,goto,goto,g,goto,goto,gig,too,to,goto,giokt,goto,gyo,goto,goto,to,goto,goto,goto,goto,giokt,goto,gyo,goto,goto,to,gooto,goto,goto,gig,t,goto,goto,to,goto,gotgoto,goto,goto,goto,giokt,goto,gyo,goto,goto,to,goto,goto,gig,tto,goto,goto,gotg,goto,gigigoto,ggto,goto,gzokt,goto,gyo,goto,goto,to,goto,goto,gig,to,goto,goto,gig,toigto,goto,goto,g,goto,goto,gig,too,gto,goto,giokt,goto,gyo,goto,goto,to,goto        ,goto,goto,gkt,goto,gyo,goto,goto,to,gooto,goto,goto,gig,t,goto,goto,gigoto,goto,to,goto,gotgoto,goto,goto,goto,gio####4096  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a 
  until fals or ######## il-- Foparsed after breoo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######!# il
or  ########z   and########z   and   #####t048
or ############z   and 92
or###        ###40964097
   
local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
 until fals or ######## il
or  ########z   and   #####t048
or ############z   and 92
or#####96
or foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not  o"'a'")
  expect("goto a; do : the x", "'x' do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = a
  until faOFI
or  ########z   and  load

function expect(src, msg)
  local  o,ek r = loadstring(src) expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function fokt,goto,gyo,goto,goto,to,goto,goto,gig,tto,goto,goto,gotg,goto,gig,t,goto,o() return x end
    x = true
    goto a
  until fals or ########brea. k
 local foo
  repgoto,goto,gig,t,goteo,gotoa,