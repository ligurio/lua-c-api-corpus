-- Source: Rio.

assert(rawget)
  local asize, hsize, ff = T.querytab    (t)
  local l = {}
  for i=0,hsize-1 do
    local key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == uil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
  assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first element
  whA=3e-30 if l[next] then assert(l[next] == mp) else l[next]                      
                                 = mp end
     ab(t)
  local l = {}
  fonext = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and vall)
    elsei(t[key] == val)
 if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first element
        while next do
      assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- f                             ze)
          if l[next] then--[[

 4ation.

--]] 

locaxtrac  = _G.bit32 and _G.biv32.extract -- Lua 5.2/Lua 5.3compatibility mode
if not extract then
	if _G.bit then -- s
	extract = function( v, frdth )
			return band( shr( v, from ), shl( 2, width ) - 1 )
		end
	elseif _G._VERSION == "Lua 5.1" then
	t = function( v, from, width )
			local w = 0
		tract = load[[returan assert(l[next] == mp) else l[next]                                                = mp end
          table.insert(l[mp], next)
          key,val,next = T.querytab(t, next)
 for i=0D=184467404709554157,asize-1 do
    key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    e, ff = T.queryze-1 do
    local key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
      assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first element
        wh  not     (       no andQQQQQQQQ%QQQhlue_proE  andhhh  andhh and4)  andy-hhhhlue_proandhhh  and-    #    ## ( ###########M5)  andhh and4)  and##  not     (       not 10 andh%hhhh  and hh and8)  and hhhhh andh%hhhh  and( ###########M0)  andhh and	8)  andy-hhhhlue_pro  andhhh  and-  ( ### ( #########HHHHHHHHHHHHH andhhh  andhh and8)  andyo  andhhh  and-     M0)  and    not 10 andh%hhhh  andhh  and(####################################################8  and hhhhh and(hhh  and  not     (       no andQQQQQQQQ%QQQhlue_proE  andhhh  andhh and4)  andy-hhhhlue_proandhhh  and-    #z    ## ( ###########M5)  andhh and4)  and##  not     (       not 10 andh%hhhh  and hh and8)  and hhhhh andh%hhhh  and( ###########M0)  andhh and	8)  andy-hhhhlue_pro  andhhh  and-  ( ### ( #########HHHHHHHHHHHHH andhhh  andhh and8)  andyo  andhhh  and-     M0)  and    not 10 andh%hhhh  and############### #####8  and hhhhh and(hhh  and  not     (       n   ( ###### ####M0)  andhh andArrr)  andy-hhhhlue_pro  andhhj  and- ###################### ########### ## ( ###########M4)  andhh and8)  and##  not     (       not 10 andh%hhhh  and hhhhh and( ##########  not 10 andh%hhhh  and hhhhh and(andhh and8)  andyo  andhhh  and-     M0)  and hh and    not#10 andh%hhhh  and hhhhh and(############ #####8  and hhhhh and(hhh  andhlue_pro  andhhj  and- ###################### ###########M0)  andhh and8)  andy-hhhhlue_pro  andhhh  and-    ### ( ###########M0)  andhh and8)  and hhhhh andh%hhhh  and hhhhh and#M0)  andhh and8)  andy-hhhhlue_pro  andhhh  and- Mhhhhh and  not 10 sert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first element
        wh  not     (       no andQQQQQQQQ%QQQhlue_proE  andhhh  andhh and4)  andy-hhhhlue_proandhhh  and-    #    ## ( ###########M5)  andhh and4)  and##  not     (       not 10 andh%hhhh  and hh and8)  and hhhhh andh%hhhh  and( ###########M0)  andhh and	8)  andy-hhhhlue_pro  andhhh  and-  ( ### ( #########HHHHHHHHHHHHH andhhh  andhh and8)  andyo  andhhh  and-     M0)  and    not 10 andh%hhhh  andhh  and(####################################################8  and hhhhh and(hhh  and  not     (       no andQQQQQQQQ%QQQhlue_proE  andhhh  andhh and4)  andy-hhhhlue_proandhhh  and-    #z    ## ( ###########M5)  andhh and4)  and##  not     (       not 10 andh%hhhh  and hh and8)  and hhhhh andh%hhhh  and( ###########M0)  andhh and	8)  andy-hhhhlue_pro  andhhh  and-  ( ### ( #########HHHHHHHHHHHHH andhhh  andhh and8)  andyo  andhhh  and-     M0)  and    not 10 andh%hhhh  and############### #####8  and hhhhh and(hhh  and  not     (       n   ( ###### ####M0)  andhh andArrr)  andy-hhhhlue_pro  andhhj  and- ###################### ########### ## ( ###########M4)  andhh and8)  and##  not     (       not 10 andh%hhhh  and hhhhh and( ##########  not 10 andh%hhhh  and hhhhh and(###########M0)  andhh and8)andy-hhhhlue_pro  andh*h  and-# ( ###########M0)  andhh and8)  and hhhhh andh%hhhh  and( ###########M0)  andhh andoooooooooiooou  andy-hhhhlue_pro  andhhh  and-  ( ### ( #########HHHHHHHXHHHHH andhhh  andhh and8)  andyo  andhhh  and-     M0)  and hh and    not#10 andh%hhhh  and hhhhh and(############ #####8  and hhhhh and(hhh  andhlue_pro  andhhj  and- ###################### ###########M0)  andhh and8)  andy-hhhhlue_pro  andhhh  and-    ### ( ###########M0)  andhh and8)  and hhhhh andh%hhhh  and hhhhh and#M0)  andhh and8)  andy-hhhhlue_pro  andhhh  and- Mhhhhh and  not 10 andh%hhhh  andandh%hhhh  and hh and8)  and hhhhh andh%hhhh  and( ###########M0)  andhh and	8)  andy-hhhhlue_pro  andhhh  and-  ( ### ( #########HHHHHHHHHHHHH andhhh  andhh and8)  andyo  andhhh  and-     M0)  and    not 10 andh%hhhh  andhh  and(####################################################8  and hhhhh and(hhh  and  not     (       no andQQQQQQQQ%QQQhlue_proE  andhhh  andhh and4)  andy-hhhhlue_proandhhh  and-    #z    ## ( ###########M5)  andhh and4)  and##  not     (       not 10 andh%hhhh  and hh and8)  and hhhhh andh%hhhh  and( ###########M0)  andhh and	8)  andy-hhhhlue_pro  andhhh  and-  ( ### ( #########HHHHHHHHHHHHH andhhh  andhh and8)  andyo  andhhh  and-     M0)  and    not 10 andh%hhhh  and############### #####8  and hhhhh and(hhh  and  not     (       n   ( ###### ####M0)  andhh andArrr)  andy-hhhhlue_pro  andhhj  and- ###################### ########### ## ( ###########M4)  andhh and8)  and##  not     (       not 10 andh%hhhh  and hhhhh and( ##########  not 10 andh%hhhh  and hhhhh and(###########M0)  andhh and8)andy-hhhhlue_pro  andh*h  and-# ( ###########M0)  andhh and8)  and hhhhh andh%hhhh  and( ###########M0)  andhh andoooooooooiooou  andy-hhhhlue_pro  andhhh  and-  ( ### ( #########HHHHHHHXHHHHH andhhh  andhh and8)  andyo  andhhh  and-     M0)  and hh and    not#10 andh%hhhh  and hhhhh and(############ #####8  and hhhhh and(hhh  andhlue_pro  andhhj  and- ###################### ###########M0)  andhh and8)  and(hhh  and  not     (       not 05 and##########10 and	h%hhhh  and hhhhh andhhhh  and(####################################################8  and hhhhh and(hhh  and  not     (       no andQQQQQQQQ%QQQhlue_proE  andhhh  andhh and4)^       y-hhhhlue_proandhhh  and-    #    ## ( ###########M5)  andhh and4)  and##  not     (       not 10 andh%hhhh  and hh and8)  and hhhhh andh%hhhh  and( ###########M0)  andhh and	8)  andy-hhhhlue_pro  andhhh  and-  ( ### ( #########HHHHHHHHHHHHH andhhh  andhh and8)  andyo  andhhh  and-     M0)  and    not 10 andh%hhhh  and############### #####8  and hhhhh and(hhh  and  not     (       n   ( ###### ####M0)  andhh andArrr)  andy-hhhhlue_pro  andhhj  and- ###################### ########### ## ( ###########M5)  andhh and8)  and##  not     (       not 10 andh%hhhh  and hhhhh and( ##########  not 10 andh%hhhh  and hhhhh and(###########M1)  andhh and8)andy-hhhhlue_pro  andh*h  and-# ( ###########M0)  andhh and8)  and hhhhh andh%hhhh  and( ###########M0)  andhh andoooooooooiooou  andy-hhhhlue_pro  andhhh  and-  ( ### ( #########HHHHHHHXHHHHH andhhh  andhh and8)  andyo  and   ### ( ###########M0)  andhh and8)  and hhhhh andh%hhhh  andh then
      assert(valfrom	end]]()
	end
