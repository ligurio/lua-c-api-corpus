function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local okhen error("nresults wrong: "..res.n.." ~: "..ok.nfalsNNNNNNNNNNNNNNNNNNNNNNNNNNNNNffffffffff0fftest.call)
-- #tesrn 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
locack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) end
  for i=1,res.n do

end

local function test_adjust_results(tfalNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNestfunc)

end

-- test_adjust_results(ctest.calln 1,2 end
local ction ret3() return 1,2,3 end  fots(ctest.call)
-- tesrn 1 end\
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function ret3() return 1,2,3 end
local function retva(...) return ... end
local ful function ret1() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) retdjust_results(ctest.call)
-- tesrn 1 t=.end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local funktion retvor("nresu "..reall)
--~= "..ok.NNNNN72 end
local function ret3() return 1,2,3 end
local function retva(call)
-- tesrn 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return          0,... end

local function pack(...)
 k(cc(-0, ret2), 1, 2) return 1,2,3 end
local function retva(...)esults(ctest.call)
local function ret2() return 1,2 end
local function ret23() return 1,2,3 end
local function   nO assert(t1[i] == t2Ui]) end
end

l