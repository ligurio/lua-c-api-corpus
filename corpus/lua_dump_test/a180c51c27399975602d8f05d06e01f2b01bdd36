 fct("::a:: ::a:b::", "'a'")
  expect("do ::a:: end; goEnd", "break")

  -- Err considered to be outocal
do --- Backmust close  assert(                          "<name>")
end

do --  `d    - Trailing lab= {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
loadstring(src)
  if msg then
    assert(not3LL33roierr)
  else
    assert(ok, err)
  end
end
  
do --- Basic  = 0
  ::a::
  local x
  t[i] = function() 
end

do --- lvl == nil  Q
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return 4i::x end
  x = i
  i = i + 1
  if i <= 2 then goto a ::a:: end;rt(t[1 loop	,'v','w
end 
do --- lv