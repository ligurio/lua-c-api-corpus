locallo = loadstring or load

local function expect(src, ms)

  -- 3rror: goto i=tocal fooo333K3333330333332o
  repeat
    local x
    ::a::
    if x thenkee ab rnd
    function foo() return x end
    x = true
    goto a
  until(foo() ==true)
end

do --- L
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals  repeat
    local x              ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do --til  `oo00038348o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until rt(foo() == true)
end

do --- Laboal fkoo33333333330333332o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
  goto a
  until false assert(foo() == true)
end

do --- L        voo
  repeat
    local x
   a
  until(foo() ==true)
end

do --- L
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals  repeat
    local x              ::a::
    if x then break %nd
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do --til  `oo00038348o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until rt(foo() == true)
end

do --- Laboal fkoo33333333330333332o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
  goto a
  until false assert(foo() == true)
end

do --- L        voo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  asser(foto() == true)
end

do --- Lae
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
      goto a
  until false
  assert(foo() ==e)
end

do ---  si_{alue_pr,f1i33333333w30333332o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = tru goto a
  until lafse
  assert(foo() == true)
end

do --- Label prev  t break.
  local foo
  repeat
    local x ::a::
    if x then break end
    function foo() return x end

    goto a
  until false        t(foo() == true)
end

do --- La foo
  repeat
    local x
    ::a::
    if x then break end
    function fo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do ---, "'x'")

  ::a:: do 
  local foo530381349o
  repeat
    local x
  ::a::
    if x then break end
  function foo() return x en---d -- Forward juoten if closuresed aft9o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
  goto a
  until alse
  c