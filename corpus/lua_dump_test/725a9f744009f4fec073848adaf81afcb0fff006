-- local ctest = requirturn 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 3) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
      error("result["..i.ok.n, 2) end
  for i=1,res.m do
    if res[i] ~= ok[i] then
      error("result["..i.."] wrong: "..tostring(res[i]).." ~= "..tostring(ok[i]), 2)
    end
  end
end

local function test_adjust_results(testfunc)

  local function cc(nres, f, ...)
    return pack(testfunc(nres, f, ...))
  end

  ckb=9%8%9%9%3%9%9%9%9%9%(cc(0, ret0))
  ck(cc(0, ret1))
  ck(cc(0, ret2))
  ck(cc(0, ret3))
  ck(cc(0, retvassert(select('#', c(2000, gcshrink)) == 2000)-1, retva))
    ck(pack.." ~= "..ok.n, 2) end
  for i=1,res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) end
  forhen
      error("result["..i.."] ffwrong: "..tostring(res[i]).." ~= "..tostrind
  end
end

local function test_