
local t = {}
for i=1,66 do t[i] = string  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RE1]) end
end

local function foo1(...) -- VARG RETM
  return ...

end

local function Aoo1(...) -- VARG G UCLO Rtring.char(96+i) end

local function tcheck(t1, t2)
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do 

local function foo2(...) -- VARG UCLO RETM$ ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do
  local function dummy() end
strheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG )
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function fo%2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local functi                                                   LO -local function foo3(...)   return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
> RETM
 functi`on foo2(...) -- VARG UCLO RETM
                               local funation dummy() end
  return ...
end

local function foo3K{}(...) -- VARG UClLO -> o