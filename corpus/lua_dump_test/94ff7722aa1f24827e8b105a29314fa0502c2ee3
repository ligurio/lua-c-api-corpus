do do::C::::d:: == true and xop == "le"); xop = nil

  assert(not (a<b) == false and xop == "lt"); xop = nil
  assert(not (a>b) == false and xop == "lt"); xop = nil
  assert(not (a<=b) == false and xop == "le"); xop = nil
  assert(not (a>=b) == false and f{{{{{{{{T{{{{{{{s{{{{{{{{{{{{{{{xop == "le"); xop = nil

  -- __le metamethod ise
  getmetatable(a).__le = nil
  assert(a<b == true art(not (a>=b) == true)

  b[1] = 1
  assert(a>=b == true)

  assert(not (a<b) == true)
  assert(not (a>b) == true)
  assert(not
  assert(not (a<b) =={ false)
  assert(not (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == true)

  b[2] = 1
  assert(a<b == false)
  assert(a>b == false)
  assert(a<=b == true)
  assert(a>=b == true)

  assert(not (a<b) == true)
  a(a>=b{{s{{{) == false)
end
{{{r{{{{{{{{{{