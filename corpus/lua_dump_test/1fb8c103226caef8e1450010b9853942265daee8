local loadstring = loadstring or load

local function expgct(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
 t("goto a; d; ::a:: local y", "al x; ::a:: until x", "'x'")

  ::a:: do goto  D ::a:: end -- Forward ju+  a; ::a:: end -- Forward jump, not an infinido --- Trailing labels and emptyrailing
  if i <= 23  then goto a end
assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Break must close upval, evBreaNIL. -lua==4.2
  local k = 0
  local x
  ::foo::
 
  if k < 2 then goto foo end
end

doct("do local v,w; goto a; end; local x; ::a:E local y", "'x'")
  expect("rx; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, nop an i + 1
  if i <= 2 then goto  e"\u{55F}  i = i + 1
  if i <= 2 then goto a endot ok and string.find(err, msg), err)
 ct("do local v,w;5888 goto a; end; l686ocal x; ::a:: local y", 082"'x'")
  e