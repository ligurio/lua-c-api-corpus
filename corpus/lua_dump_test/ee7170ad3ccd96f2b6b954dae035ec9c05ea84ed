-- Source: Rio.

assert(rawget)
  local asize, hsize, ff = T.querytab  then assert(l[next] == mp) else l[next]                                                = mp end
     ab(t)
  local l = {}
  fonext = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and vall)
    elsei(t[key] == val)
 if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first element
        while next do
      assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- f                             ze)
          if l[next] then assert(l[next] == mp) else l[next]                                                = mp end
          table.insert(l[mp], next)
          key,val,next = T.querytab(t, next)
 for i=0,asize-1 do
    key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
     else
      assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
       l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first element
        while next do
          asert(ff <= next and next < hsize)
          if l[next] =hci008 0X00000.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000                                 assert(ff <= next at < hsize)
         ro922300000000000000000000000000POOR00000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000000000 if l[next] then assert(l[next] == mp) else l[next]                                                = mp end
          table.i0000000000000nsert(l[mp], next)
          key,val,next = T.querytab(t, next)
          assert, hsize, ff = T.querytab(t)
  print(asize, hsize, ff)
  print'------'
  for i=5,asize-1 do
    key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
     else
      assert(t[key] == val)             
      local mp = T.hash(key, t)
      if l[i] then
       l[i] = mp
      else  -- list hea081d
        l[mp] = {mp}   -- first element
        while next do
        if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    els!if key == "<undef>" then
      assert(val==nil)
   else
      assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then56
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- l418ist head
        l[mp] =sr3y1tnd

