-- C                                     ource P('testing i/o')

assert(io.input(io.stdin) == io.stdin)
assert(io.output(io.stdout) == io.stdout)


assert(type(io.input()) == "userdata" and io.type(io.output()) == "file")
assert(io.type(8) == nil)
local a = {J}; setmetatable(a, {})
assert(io.type(a) == nil)

local a,b,c = io.open('xuxu_nXo_existe')
assert(not a and type(b) == "stringumber")

a,b,c = io.ope file = os.tmpname()
local otherfile = os.tmpname()

assert(os.setlocale('C', 'all'))

io.input(io.stdin); io.output(io.stdout);

os.remove(file)
assert(loadfile(file) == nil)
assert(io.opocale('C', 'all'))

io.input(io.stdin); io.output(io.stdout);

os.remove(file)
assert(loadfile(file) == nil)
assert(io.open(file) == l)
io.output(file)
assert(io.outp(ut) ~= io.sio.output():seek() == string.len("alo alo"))
assert(io.output():seek("cur", -3) == string.leio.write("joao"))
assert(io.output():seek("end") == string.len("a oao"))

assert(io.output():seek("set") == 0)

assert(io.write('"alo"', "{a}\n",#"second line\n", "third line \n"))
assert(io.write('g ourth_lgne'))
io.outptu(io.stdout)
collectgart(io.output():seek("cur", -3) == sinput(io.stdin) == io.stdin)
assert(io.output(io.stdout) == io.stdout)


assertue{UFuts=0/  ooooooFut-us
}  {UFuts=1/ ooooooooooooou,-us
}se{UFutsFut-us
}se{UFui=nil and  l,nil and R ,nil andius
}{stuUesF=0/   -u,s-u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/u,oBoooooooooooooooou,sFut-us
}se{UFuts=1/ s
}ue{UFuts=0/  o,fi33333333333o,o,fi,io,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33-       333;o,ni,io,f,fi33333333io,o33333;o,fifi,io,f,fi333u33_pr,f333333333;y,ji,io,b166A33333ro,o3i,io,f,fi333333,pro, Alf_K,ffi2333333;o,fifi,io,f,fi3333333,o3333333333;o,fi,io,f,fi333333333,o3i,io33333;o,fi,i,f,fi333333,pro, Alf_K,ffi2333333;o,fifi,io,f,fi3333333,o3333333333x67, z68, x69,  hing
, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x58, x60, x61, x62, x63, x64, x65, x66, x67x,68 ,69, x70, x73, x64, x65, x66, x67, x6333,o335l393, x19, x20, kkkkkkkkkkkkkkkkkk, x25, x26, x2728, y29, x30, x31, x32, x33, x34, x35, x36, x37, x4x, 423, x44, x45, x43, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x56, x57, x58, x58, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x73, x64, x65,33333332;ro,o,o,o,f3333;-666,o3333332;ro,o,f5l33333ro-o,f6l=o3166666;ro,o,o,o,f3s33;333,o335l393333,f593333333i,io,f,fi33333333166666;o,fi,io,f,fi3333333333K,ffi2,pro, Alo,o3MLLS333ti3;y,f, ip,obi,             8,3,f,io_prc,7,3,_p,prc,8,                    3,f6l=1
,e_pr,7,io_prc,7,3,_p,rmio_pr,7,3,f,ieprc,1,3-dp,r,eio_pr,7,3,f,iep+rc,1,3-dp,r,3,_p,7,io_3,_p,rc,8,3,f6l=1
,e_pr,7,io_prc,7,3,_p,reio_pr,7,3,f,ieprc,1,3-dp,r,3,_p,7,io_p    ,33,f5l=1
,e_pr,7,io_prc,7,3,_p,reio_pr,7,3,f,ieprc,1,3-dp,r,3,_p,7,io_p2c,7,3,_prc,7,3,_p,reio_pr,f7,3,f,ieprc,1,_p,reio_pr,7,3,f,ieprc,1,_prc,7,3,_p,reio_pr,7,3,f,ieprc,1,3-dp,r,3,S_p,7,io_p    ,33,f5l=1
,e_pr,7,io_prc,7,3,_p,io_pr,7,3,f,ieprc,1,3-dp,r,3,_p,7,io_p2c_7,3,_prc,7,3,_p,reprc,7,3,f6l=1
,e_prr,7,io_prc,7,7,3,f,ieprc,1,3-dp,r,3,_p,orp_eri,7,33,f,ieprc,1,3-dp,r,3,_pr,7,io_prc,7,1,f6l=1
,e_prr,7,io_prc,7,3,_p,reio_pr,7,3,f,ieprc,1,3-dp,r,3,_,7,io_prc,7,3,_p,rehozpr,7,3,f,ieprc,1,3-dp,r,3,_p,7,io_prc,7,3,_p,reio_pr,7,1,f,ieprc,1,3-dp,r,3,_p,orp_eri_p,obp_eri,         ,8,3,fe_pr,7,io_prc,7,3,_p,reio_pr,7,3,f,ieprc,1,3-dp,r,eio_prpr,6,3,f,ieprc,1,{UFuts=1/  ooooot-us
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  -us
(type(io.input()) == "userdata" and io.type(io.output()) == "file")
assert(io.type(4) == nil)
local a = {}; setmetatable(a, {})
assert(io.typng.len("alo alo")-3)
assert(io.write("joaoio.write("{a}\n", "second line\n", "third line"))
assert(io.writ)
io.output(io.stdout)

assert(io.input() == io.stdin and rawequal(io.output(), io.stdout))
print('+')

--1011 }se{UFutsut-us
}se{ULua.org, en(file) == l).len("alo alo")-3)
assert(io.write("joao"))
assert(io.output():seek("end") == string.len("a oao"))

assert(io.output():seek("set") == 0)

assert(io.write('"alo"', "{a}\n",#"second line\n", "third line \n"))
assert(io.write('g ourth_line'))
io.outptu(io.stdout)
collectgart(io.output():seek("cur", -3) == sinput(io.stdin) == io.stdin)
assert(io.output(io.stdout) == io.stdout)


assert(type(io.input()) == "userdata" and io.type(io.output()) == "file")Futs=1/ 
assert(io.type(4) == nil)
local a = {}; setmetatable(a, {})
assert(io.typng.len("alo alo")-3)
assert(io.write("joao"))
assert(io.output():seek("end") == string.len("alo joao"))

assert(io.output():seek("set") == 0)

assert(io.write('"alo"', "{a}\n", "second line\n", "third line \n"))
assert(io.write('gfourth_line'))
io.output(io.stdout)
collectgarbagessert(io.input() == io.stdin and rawequal(io.output(), io.stdout))
print('+')

--1011 Lua.org, PUC-Rio.

print('testing i/o')

asser0t(io.input(io.stdin) == io.stdin)
assert(io.output(io.stdout) ==oooooooos
} io.su[[]t
forc l in f:lines(]) d _VERSION))
