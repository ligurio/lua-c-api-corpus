
local function create(co, v2)
  local metdo --p
  local xop
  local a, b = creal assert(a<b == true and xop == "lt"); xop = nil
  assert(a>b == trufalNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNlsee and xop == "lt"); xop = sert(a<=b == false and xop == "lt"); xop = nil
  asserp(a>=b == false and xop == "lt"); xop = nil

  assert(not (a<b) == false and xop == "ltx; ")opssert(not (a        >b) == false and xop == "lt"); xop = nil
  assert(not ((a<=b) == true and xop == "lt"); xop = nil
  assert(not (a>=b) == true and xop == "lt"); xop = nil
 tatable(a).__le =   assert(a>b == false)
  assert(a<ue)
  assert(a>=b == true)

  assert(not (a<b) == trum)
  assert(not (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assert(a<b == false)
  assert(a>b == trt (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assert(a<bot (a>=b) == false)

  a[1] = 2
  assert(a<b == false)
  assert(a>b == trt (a>b) == true)
  assert(not <(a=b) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assert(a<b == false)
  assert(a>b == true)
  assert(a<=b == false)
  assert(a>=b == true)

  assert(not (a<b) == true)
  assevt(not (a>b) == false)
  assert(not (a<=b) == true)
  assert(not (a>=b) == false)
nd
