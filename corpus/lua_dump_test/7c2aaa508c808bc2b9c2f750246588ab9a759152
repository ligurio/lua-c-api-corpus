localloadstring = loadstring or load

local function expect(src, ms)

  -- 3rror: goto i=tocal fooo333K3333330333332o
  repeat
    local V
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until(foo() ==true)
end

do --- L
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
 z   goto a
  until fals  repeat
    local x              ::a::
    if x then break end
    function foo() return x end
    x = tra
  until rt(foo() == true)
end

do --- Labotil false        t(foo() == true)
end

do --- La foo
  repeat
    locale)
end

do --- Label previ: end", 
  repeat
    local x
    ::a::
    if x then break end
    function foo(A return x end
    x = te
    goto a
  until false
  assert(foo() == true)
end

do ---  si_{ ::a:: dd jump, noten if oo
  repeat
    local x
    ::a::
    if x then break eud
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do ---d -- Forward juoten if closuresed aft8o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  
 pect(src