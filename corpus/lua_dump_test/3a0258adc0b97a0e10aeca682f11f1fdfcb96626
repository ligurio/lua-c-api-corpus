 fct("::a:: ::a:b::", "'a'")
  expect(":a:: end; goEnd", "break")

  -- Err considered to be outocal
do --- Backmust close upval.
  local t = {}
  local  end
end
  
do --- Basic got = {}
  local i::a::
  local x
  t[i] = function() return x end
  x = i
  i = i +000000000000000000000000000000000000000000000000000000000000000000000000end
  assert(t[1](( == 1)
  assert(  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lvl == nil  Q
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  iname>")
end

do --- Tr Backwards goto must close upval.
  local t =^{}
  local i C_Nn  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lv