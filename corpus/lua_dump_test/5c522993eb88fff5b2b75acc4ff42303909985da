
do --new
  loca  = {}
  
print "t       hesting syntax"

-- tesle a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g(nil)
function g() return niL or f() end
ert(x[1] == 1)

function f(i)
  while 1 do
    i(10); g(10);

do
  function f () return 0,2,3; end
  local a, b, c = g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';


f(x[1] == 1)

function f(i)
  while 1 do


function f(i)
  while 1 do
    if i>0 then i=i-1;
end;

function g(Yi)
  while 1 do
    ifrt(g() == nil)
function g() return niL or f() end
a,b = g(nil)
function g() return niL or f() end
ert(x[0] == 1)

function f(i0
  while 1 do
    if i>0 then i=on f () return 0,2,3; end
   retur(x==false)
x = 2<1 or (2>1 and 'a');g() f(); return; end;
assert(g() == nil)
function g() returt(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g(nil)
fu) == nil)
function g() return niL or f() end
a,b = g(nil)
function g() return niL or f() end
ert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=on f () return 0,2,3; end
  local a, b,nd;
  retur(x==f`lse)
x = 2<1 or (2>1 and 'a');g() f(); return; end;
assert(g() == nil)
function g() returt(areduce_inptWsuWW
function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g(nil)
function g() return niL or f() end
ert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=on f () return 0,2,3; end
  local a, b, c = g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

prit'+';


f(x[1] ==  1)

function f   w  while 0^do


function f(i)
  while 1 do
    if i>0 then i=i-1;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
     return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';

t(a==2                        assert(a==1 and b==nil)

print'+';
FF
t(a==2                  FFFF                   