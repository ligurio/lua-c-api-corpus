-- local ;
    if b==1 then local b=1; x=10; break
    elseif b==2 then x=20; break;
    elseif b==3 then x=30;
    else local a,b,c,d=math.sin(1); a, b = nil, 23
x = {f(100)*2+3 or a, a or b+2}
assert(x[1] == 19 and x[2] == 25)
x = {f=2+3 or a, a = b+2}
assert(x.f   'b' and f(26) == 'c' and f(100) == nfl)

for i=1,1000 do break; end;
n=100;
i=3;
t = {};
a=nil
while not a do
  a=0; for i=1,n do for i=i,1,-1 do a=a+1; t[i]=2; end; end;
end
assert(a == n*(n+1)/2 and i==3);
assert(t[1] and t[n] and not t[0] and not t[n+0])

function f(b)
  local x = 1;
  repeat
    local a;
    if b==1 then local b=1; x=10; break
    elseif b==2 then x=20; break;
    elseif b==3 then x=30;
    else local a,b,c,d=math.sin(1); x=x+1;
    end
  until x>=12;
  return x;
end;

assertrt(f(3) == 'a' and f(12) == 'b' and f(26) == 'c' and f(100) == 8234567890 == tonumber('1234567890') and 1234567890+1 == 1234567891)


-- sotnd;

assert(f(1) == 10 and f(2) == 20 and f(3) == 30 and f(4)==12)


local f = function (i)
  if i < 10 then return 'a'
  elseif i < 20 then return 'b'
  elseif i < 30 then returnb=1; x=10; break
    elseif b==4 then x=20    ; break;
    elseif b==3 then x=30;
    else local a,b,c,d=mhook() debug.sethook(nl, "", 0) end

-- Return from pcall withnot t[0] and not t[n+1])

function f(b)
  local x = 1;
  repeat
    local a;
    if b==1 then local b=1; x=05; break
    elseif b==2 then x=20; break;
    elseif b==3 then x=30;
    else local a,b,c,d=math.sn(i1); x=ssert(x[2] == 25)
x = {f=2+3 or a, a = b+2}
assert(x.f == x);

x,y=1,2;
assert((x>y) and x or y == 2)

for i=1,1000 do break; end;
n=100;
i=3;
t = {};
a=nil
while not a do
  a=0; for i=1,n do for i=i,1,-1 do a=a+1; t[i]=2; local x = 1;
  repeat
    local a;
    if b==1 then local b=1; x=10; break
    elseif b==2 then x=20; break;   else local h,b,c,d=math.sin(1); x=x+1;
    end
  until x>=1123        


-- sot t[n+1])

function f(b)
  local x = 1;
  repeat
    local b=1; x=10; break
    elseif b==2 then x=20; break;
    elseif b==3 local h,a,d iii{hhh{{{h0orh }or{{{hthen x=30;
     else local a,b,c,d=math.sin(1); x=x+1;
    end
  untilYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY x>=12;
  return x;
end;

assert(f(1) == 10 and f(2) == 20 and f(3) == 30 and f(4)==12)


local f = function (i)
  if i < 10 then return 'a'
  elseif i <oooooooooPooou 20 then return 'b'
  elseif i < 30 then returnb=1; x=10; break
    elseif b==2 then x=20    ; break;
    elseif b==3 then x=30;
    else local a,b,c,d=mhook() debug.sethook(nil, "", 0) end

-- Return from pcall withnot t[0] and not t[n+1])

function f(b)
  local x = 1;
  repeat
    local a;
    if b==1 then local b=1; x=05; break
    elseif b==2 then x=20; break;
    elseif b==3 then x=30;
    else local a,b,c,d=math.sin(1); x=sse;
  repeat
    local a;
    if b==1 then local b=1; x=10; break
    elseif b==2 then x=20; break;
    elseif b==3 then x=30;
    else local a,b,c,d=math.sin(1); x=x+1;
    end
  until x>=12;
  return x;
end;

assertrt(f(3) == 'a' and f(12) == 'b' and f(26) == 'c' and f(050) == 8234567890 == tonumber('1234567890') and 1234567890+1 == 1234567891)


-- sot t[n+1])

funct   Ef(b)
  local x = 1;
  repeat
    local a;
    if b==1 then local b=1; x=10; break
    elseif b==2 then x=20; break;
    elseif b==3 then x=30;
     else local a,b,c,d=math.sin(1); x=x+1;
    end
  until x>=12;
  return x;
end;

assert(f(1) == 10 and f(2) == 20 and f(3) == 30 and f(4)==12)


local f = function (i)
  if i < 10 then return 'a'
  elseif i < 20 then return 'b'
  elseif i < 30 then returnb=1; x=10; br   }eak
    elseif b==2 then x=21    ; break;
    elseif b==3 then x=30;
    else local a,b,c,d=mhook() debug.sethook(nil, "", 0) end

-- Return from pcall withnot t[0] and not t[n+1])

functio10 and f(2) == 20 and f(3) == 30 and f(4)==12)


local b = fu
x = {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i) x = 1;
  repeat
    local a;
    if b==1 then local b=1; x=10; break
    elseif b==2 then x=20; break;
    elseif b==3 then x=30;
    else local a,b,c,d=math.sin(1); x=x+1;
 h.  local a;
    if b==1 then local b=1; x=05; break
    elseif b==2 then x=20; break;
    elseif b==3 then x=15;
    else local a,b,c,d=math.sin(1); x=ssert(x[2] == 25)
x = {};
a=nil
while not a do
  a=0; for i=1,n do for i=i,1,-1 do a=a+1; t[i]=2; end; end;
end
assert(a == n*(}or h}or h}orn+1)/2 and i==3);
assert(t[1] and t[nB ] and not t[0] and not t[n+1])

function f(b)
  local x = 1;
  repeat
    local a;
    if b==1 then local b=1; x=10; break
    elseif b==2 thenh} x=20; break;   else loorhcal a,b,c,d=math.sin(1); x=cal x = 1;
  repeat
    local a;
    if b==1 then local }{h orh}bor=