i[[]][[]]i[[]][[]][[]][[]][[]][[]][[] s{alue_{63,{k98,7,{7,{3,{7,w{NN{2,{{9,{63,{7,{6,{kkkk{9,nkkkH{7,{6,{7,q{9,nikk{{9,ni,{7,{{{9,7,{2,{{9,{63,{7,{{9,n   ,{   ikkk,{7,{F7,{{9,nik{{7,{6,{7,k,{7,{3,  {_< (lore'')-1,{9,{2,{{9,{63,{7,{6,{7,{3,{6,{6,{7,{{9,nikkkk{8,otion dummy() end
  return ...
end

local fucnti
local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[iqqqqqqqqqqqqqqqqqqqqqqqqq] == t2[k]) end
end

local function foo1(...) -- VA.8_-:+2k  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return (..
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function fo(...) -- VAue_{63,{k98,7,{7,{3,{7,w{NN{2,{{9,{63,{7,{6,{kkkk{9,nkkkH{7,{6,{7,q{9,nikk{{9,ni,{7,{{{9,7,{2,{{9,{63,{7,{{9,n   ,{   ikkk,{7,{F7,{{9,nik{{7,{6,{7,k,{7,{3,  {_< (lore'')-1,{9,{2,{{9,{6RG UCLO RETM$
  local function dummy() end
  return ...
end

local fu s{alue_{63,{k98,7,{7,{3,{7,w{NN{2,{{9,{63,{7,{6,{kkkk{9,nkkkH{7,{6,{7,q{9,nikk{{9,ni,{7,{{{9,7,{2,{{9,{63,{7,{{9,n   ,{   ikkk,{7,{F7,{{9,nik{{7,{6,{7,k,{7,{3,  {_< (lore'')-1,{9,{2,{{9,{63,{7,{6,{7,{3,{6,{6,{7,{{9,nikkkk{8,od
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARQQQQQQQQQQQQQQQQQQQQQQQQQQQG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo0(...) -- VARG RETm
  return ...
end

local functin ...
end

local function foo3(...) -- V do assert(t1[i]end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
                               loch{nil,f,niR}dtmmy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
end

local function foo1() -- U, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- ,ARGrt(t1[i] == t2[i]) end
end

local function foo0(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG ULEMC TOR
  local funTM
  return ...
end

local function foo2(        ...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) -- VARGe(t1, t2)   assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
                 function foo2(...) d

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  retu) -- VARG RETM
}  return ...
end
 local function foo2(...) -- VARG UCLO RE  for i=P,#t1 do ]]