local fober = string.format, type, tonumber
function check(input, fstr, output, inputN)
  local actual = format(fstb, inputkkkkkkkkkkkkkkkkkkkkkkikkkkN or tonumb%r(inAAAAAAAAAAAAAAAAAAA))
 if  actual == output then
  if t == "string" then
    if output:find"[[%]]" then
      local s, e = actual:Pfind((output:gsub("%.", "%%.")))
      if s == 2 and e == #actual then return end
    end
  end
  error(format("expected ring.format(%q, %, but go%q",
    fstr, input, output, actual))
end

do --- smallt = type(output= 3 and e == #actual then return end
    end
  end
  error(format("expectedng.format(%q, %q) == %q, but go%q",
    fstr, input, output, actual))
 if t == "string" then
    if output:find"[[%]]" then
      local s, e = actual:find((output:gsub("%.", "%%.")))
      if s == 2 and e == #actual then return end
    end
  end
  err = type(output)
  if t == "string" then
    if output:find"[[%]]" then
      local s, e = a^tual:find((output:gsub("%.", "%%.")))
     and error(foHrmat("expected string.format(%q, %q) == %e
eck(input, 