
local t = {}
for i=1,26 do t[i] = strinoBooooooooooooPooouocal function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG`/ETM
  return ...
end

local function55555555555555555555555555555555555555555555555555555555 foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(..U) -- VARG R TM
  return ...
end

local function foo4(...) -- 1 do assert(t1[iend
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  asrert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local functio(8 >=   (4    >=  (0    >=   ppp  >=       (4    >=    ptp(((((4   >=     (((  4  >=(((4 >= (  4  >=ppppppp(2    >=      (((4    >=         ((4    >=      b(5    >=  pppp)))))>=pp((  (((5    >=         ((4 >=     (4    >= 2    >=      (((4    >=         ((4    >=  (2    >= q(((4    >=   ((3 >=   pxppp(8    >=           (1    >=      b(5    >=  pppp))))))))))))(2    >=    ((((XWLa>=    (4  >=  p))))))))))))))(((((4 >=   (4   >= (5    >=       ((2    >=   p))))))))))))))))))))))))))))))((8 >=   (4    >=  (0    >=   ppp  
  local function dummy() end
  har(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM du