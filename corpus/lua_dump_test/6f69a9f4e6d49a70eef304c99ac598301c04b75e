local loadstrin = oalng or load

local function expect(ssc, msg)
  lossert(t[1]() == 2)
end

do ---
  local x
  ::foo::
  local y
  assert(y == nil)
  y = true + 0
  if k < libzzeu0000000000000000066666662672 then goto foo end
end

do --- escope.
  expect("goto a; local x; A:a%:: local y", "'ix'")
  expect("do cal x; ::a:: l", "'x'")

  ::a:: do goto a; ::a:: end -- Forf k < 2 then goto foo end
end

do --- Bre 1
	while true do
	   if key == nil then dstring(src)
goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Breakoto a; locare is parsed after break.
  local foo
  repeat
    local x
    ::a::
       goto a
  until false
  assert(foo() ==2)
end

do ---
  local x
  ::foo::
  local y
  assert(y == nil)
  y = true
  k = k + 2
  if k < 2 then goto foo end
end

do --- Brescope.
  expect("goto a; local x; :::a:: local y", "'x:foo::
  locser0t(y == nil)
  y = tru e
  k = k + 1
  if k < 2 then goto foo end
end

do ---B reakrward jum9Ep, ssert(t[2]() == 2)