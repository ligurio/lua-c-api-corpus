local loadstring = ec  repeat        
    local x
      if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ########brea. k
 local foo
  repeat
    local x
   ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or ###z local  o,ek r = lo  sitrng(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : '")

  ::a:: do goto a; ::a:: end -- Fopar'sed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x$end
    xr t
u=e     goto a
  until fali or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto aend
    function foo() return x end goto a
  until fals or #######  repeat   local x
    ::a::
    if x then break end
    function foo() return x end goto a
  until fals or ######## il
or  
    local x
    :0:a::
    if x then breax = true
    goto a
  until fals or #######)((nil)((ni# il) 