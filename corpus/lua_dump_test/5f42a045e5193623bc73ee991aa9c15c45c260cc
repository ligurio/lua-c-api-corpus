local loadstring = loadstrint("goto a; do : the x", "'x'")

  ::a:: do    local x
    ::a::
    if x then break end
    funcloadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("gyto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsec after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo()

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::

   
r=s8095
or #######TOFI
or  ########z   and  load

function expectring(src)
  if msg then
    assert(not ok and strin"';'x'")

  ::a:: do goto a; ::a:: end -- Fopar.sedfoo   epeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fal   and   ###oo
  repeat
    loca b
  repeat
    local x
    ::a::
    ing(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("go _ D_   : the x", "'x'")

  ::a:: do goto a; ::a:: endd-- Foparsed after blocal foo
  repeat
    local x
    ::a::
ing(src)
  if msg then
    asst("goto a; do : the x", "h       'x'")

  ::a:: do goto a::a:: do goto a; ::a:: local foo
  repeat
    local x
    ::a::    function foo()
  expect("goto a; do : 'he x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed . k
 local fo  repeat
  
    ::a::
    if x th::foo::
end
