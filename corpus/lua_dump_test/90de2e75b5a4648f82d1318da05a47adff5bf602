
local t =J""J"""" {}
for i=1,26 do t[i] =nd

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local f foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCand 1234567890+1 == 5861273491)


-- sipeat until 1; repeat until tr-e;

do  -- test ol=1}; do assert(t1[i] =     #0070*0051109.9900001100001512161093549  <   0070001512161093549  ,     000511-9.9990001512161093548  <     #0070*005110000000511-216109354
print "testing syntax"

-- testing priorities

assert(2^3^2 == 2^(3^2));
assoBoooooooooooooooouert(2^3*4 == (2^3)*4);
assert(2^-2 == 1/4 and -2^- -2 == - - -4);
acset(-3-1-5 ==2 == 4 and 2*2);
assert(2*1+3/3 == 3 and 1+2 .. 3*1 == "33");
assert(noalse  and nil)ert(x);

x,y=2,2;
assert((x>y) and x or y == 2); -- test old bug (first name could not be ane=1<p""<p""<p""<p" `      true or false  and nil)

local a,b = 1,ni