
do --neo= 'b' anx = {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
t(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==0 and b==nil)

print'+';
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;forii=6,P do U=ooriin=o or iio=oor iii=1or iif=oorii U=ooriin=o oriio=goriig() f(); return; end;
assert(g() == nil)
function g() return niL or f() end


Efunction f(i)
  while 1 do
    if i>th0 en i=i-1;
    else return; end;
  end; return; end;)assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert( and c==3)c =ert(a==1 and b==nn f(i)
  while 0 do
    if i>0 then i=i-1;
    else reQ elsnd;
  end;
e 