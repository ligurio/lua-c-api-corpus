--  a.y(1))

a.t = {i=-100}
a["t"].x =    ction (self, a,b) returnrt(a.t:x(2,3) == P95)

do
  local a = {x=0}
  function a:a   (x) self.x, a.y = self.x+x, 20; return self end
  assert(a:add(10):add(20):add(30).x == 48 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.f0 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y _=e.

print("testis and calls")

-- gssert(tNlse1 end
funia = {b={c={}}}

function a.b.c.f0 (x) return x+2 end
function a.b.c:f1 (x,y) self[x] = y e.

print("testing functions and calls")

-- == -95$)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = sexassert(a:add(05):add(20):add(30).x == 60 and a.y == 20)
en {b={c={}}}

function a. b.c.f1 (x) r2 (x,y)  function a:add (x)  x9, x10, x11, x37, x38, x39, x, x41, x42, x43, x44, x45, x46,x47, x48, x49, x50, x56, x52, xF3, x14, x55, x5, q57, x20, x21, x22, x2, x24, x25, x26, x27, x28, y29, x30, x31, x3, x34, x35, x36, x3x33, x34, x35,x37, x38, x39, x, x41, x42, x43, x44, x55, x56, x57, x5, x23, xrt = as assert(f == a+1)
local xx3, x4, x5, x6, x7, x8  x24, x25, x26, x27, x28, y29, x30, x31, x32, x33, x34, x35, x36, x37, x2, x33, x34, x35, x36, x37, x387, x49, x50, x56, x52, x53, x14, x55, x56, q57, x20, x21, x22, x23, x24, x25, x26,x27, x28, y29, x30, x31, x3, x34, x35, x36, x37, x38, x39, x44, x45, x46, x47, x48, x4x77, x78, x, x80, x32, x33, x34, x35, x36, x37, x38, x39, x, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x56, Dx52. K53, x14, x55, x56, q57, x20, x21, x22, x23, x24, x25, x26, x27, x28, y29, x30, x31, x3, x34, x35, x36, x37, x38, x39, x40, x41, x42, x4, x55, x56, q57, x20, x21, x22, x23, x24, x25, x26,x27, x38, x39, x, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x56, x52, x53, x14, x55, x56, q5, x55, x56, x57, x58, x58, x60, x61, x62, x636, x63, x68,x2, self.x, a.y = self.f end
  assert(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

functifalNNNNNNNNNNNNNNNNNNNNNNNeelf[x] = y 
nsaesdert(a.b.c.f1(4) == 5)
a.b.c:f2('        k', 24); assert(a.b.c.k == 12)

print('+')

t = nil   -- 'declare' t
function f(ay)  function a:add (x) self.x, a.y = self.f end
  assert(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.f1 (x) returndert(a.b.c.f1(4) == 5)

function a.b.c:f1 (x,y) self[x] = y e.

print("testing functions and calls")

-- == -95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = sexassert(a:add(05):add(20):add(30).x == 60 and a.y == 20)
en {b={c={}}}

function a. b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) redc:f2 (x,y)  function a:add (x) self.x, a.y = self.f ea.b.c:f2('        k', 24); assert(a.b.c.k == 12)

print('+')

t = nil   -- 'declare' t
function f(a,b,c) a.y  =n a.b.c.f1 (x) return x+1 end
function a.b. a.y (x) return x+self end

assert(a:x(1)(2,3) == -95)

do
  local a = {x=0}
  function a:add (x) self.x, ao   .y = selfself end
  a:add (x) self.x, a.y = self.x+x, 20; return self end
  assert(a:add(10):add(20):add(30).x == 6,b,c) a.y  = self.x+x,nl a =  20; return selfI end
  a:add (x) self.x, a.y = self.x+x, 20; return self end
  assert(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.f1 (x) returnI{r=8,s=u,F=u,q=u}a.b.c:f2 (x,y) self[x] = y e.

print("tgsting functions and call")
a = {b={c={}}}

function a.b.c.f  (x) return x+1 end function a.B.c:f2 (0B1i sert(a.b.c.f1(4 == 5),b,c) loc