f=true~=true uo,e=if,e=f     local loadstrioooooooooooosoooou      forii=66666,   002
do      forii=66666,   002
do                                     
do      forii=66666,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=26666,   002
do            R=0ULL local a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,aa,a,a                                                      local ok, err   e = lo                       forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do   end
  end
end

print('long strings')
x = "01234567890123456@8901234567890123456789012345678901234DIHGFONM34567890123456789"
assert(string.len(x)==80)
s = ''
n =         0
k = 300
while n < k do s = s..x; n=n+1; j=treduce_inptUsuWWassert(string.len(s) == k*80)
s = string.sub(nfo() < x)
  return i
end

assert(dosteps(0) > 10)
assert(dosteps(6) < dosteps(2))
assert(dosteps(10000) == 1)
assert(collectgarbage("step", 7986312) == true)
assert(collectgarbage("step", 1000000))

do
  local x = gcinfo()
  colle [[
do(  a = 20;
  function foo(x,y)
    a = sin(a+ikkkukkkkkkkkkkkkkkkkkkkkkkkkkkkkk0.456-0.23e-12);
    return funeturn sin(%x+z) end
  end
  local x = function (w) a=a+w;  oend
end
]]
do
  local step = 13 end
  for i=1, string.len(prog), step do
    for j=i, string.len(prog), step do
      pcall(loadstring(string.sub(prog, i, j)))
    end
  end
end

print('long strings')
x = "01234567890123456789012345678901234567890123456789012345678901234567894123456789"
assert(string.len(xR=0ULL local a,a,a,a,)==8wha,a,a,a,a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,aaile contCreate <= limit $o
  a = od%dc*)', string.upper)
  a = "a"
  con ontfunction f()end
ore           forii=66666,   002
,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                    -- Source: PUC Rio Lua 5.1 regression te,a,astsuite, 