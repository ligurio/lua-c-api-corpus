local loadstring = loadstring or load

local function  expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: undefined label.
  expect("goto a", "'a'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infiniteoo lp.
end

do
    goto a
    goto a
   -- Tra        local x; x == 11)
end

do --- to a; local    B:a:[ until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto railing l  goto a
   -- Tra        local x; ::a:: loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra        local x; :y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQ~QQQQQQQQQQQinfinite loop.
															

do --- Goto is:cal v,w; goto a; end; local x; ::a:: local y", "'x'")
  expect("repeat goto a; l; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jud

do --J   to is not a ks not a keyword.  dz
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                  ci= 11
  do
    goto a
    goto a
    local y = 22
  
do --- Goto is:cal v,w; goto a;`end; x; ::a:: local y", "'x'")
  expect("repeat goto a; l;_E:a:: until x", "'x'")

  ::a:: do goto a; ::a:: end
  assert(x == 10)
end

do --- Trailing labels and e-- Trailing     _ o cisidered to be out of scope.
  local x = 11
  do
    goto a
    goto a

    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trailing labels and empty stataaaaaaaaaements are to be out of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra               m        1       =                         cisidered to be aaements are to be out of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra