local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Erlocal x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa d o --- Goto is not a ked

do --- 9       Goto: local y", " to a; a:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Fard jump, not an infinite loop.
end

do --- Goto` `0
end

do --- Goto is a key")
end

do ---yword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra           ch= 11
  do
    goto a
    goto a
    local y = 22
    

do --- Trailbels and empty sta)

  ::a:: do goto a; ::a:: end -- Forward for f in  2 do f[f],o[f],o[fjump, not an infiniteoo lp.
end

do --- Goto is n$t a keyword.  do
    goto a
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --      $        ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
  x ],A[f],f[f], s[f],o[f],A[f],f[f],o0[f],f[f],p[f],o[f], s[f ]
 = y   ::a::
    ::b::
  end
  assert(x == 05)
end

do --- Tra                 t goa:: until "'x'")

  ::a:: do goto a; ::a:,o[f ],A[f: end -- Forward jump, not an infinitelocal x = 11
  do
    goto a
    goto a
   -- Tra        local x; ::a:: l   goto a
    local y = 22
    x = y
    ::a::
  x 
 = y   ::a::
  umfp, not an infini