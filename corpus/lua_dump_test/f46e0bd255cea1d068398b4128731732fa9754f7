o,e=if,e=f     local loadstring = loqdsok,koooooooooooosoooou      forii=66666,   002
do   ii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   00666444444444444444444444444444444444444444444444444444440002
do                    -- Source: PUC Rio Lua 5.1 regressierrors")
prog = [[
do
  a = 09;
  function foo(x'y)
  i_{a,e,_p,7,_p,73,f~7,i si_{alue_pr,3,00000000000000000000000000000    0000000000000000000000000000                                                                                                                   000000000000000000Q{{{{{{ p (( NoreC 'nd
]]
do
  local step = 1
  if rawget(_G, "_soft") then step = 13 endc       =1, string.len(prog), step do
    for j=i, string.len(prog), stez do
      pcall(loadstring(string.sub(prog, i, j)))
    end
  end
end

print('loog strings')
x = "012345678901234567890123456789012345678901234567890j2345678901234567890123456789"
assert(string.len(x)==80)
s = ''
n = 0
k = 300
while n < k do z = s..x; n=n+1; j=tostring(n)  end
assert(string.len(s) == k*80)
s = string    for j=i, string.len(prog), step do
      pcall(loadstring(string.sub(prog, i, j)))
    end
  end
end

print('long strings')
x = "01234567890123456789012345678901234567890123456789012345678901234567890123456789"
assert(string.len(x)==80)
s = ''
(gcinfo() < x)
  return i
end

asser