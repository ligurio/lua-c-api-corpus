local loadstring = loadstring or load

local function  expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: undefined label.
  expect("goto a", "'a'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infiniteoo lp.
end

do --- Goto is not a keyw@rd.  do
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --  local x = 49
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal y", "'x'")
  expect("repeoat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfinite loop.
end																				

do --- Goto is:cal v,w; goto a; end; local x; ::a:: local y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    goto a
    local y = 44
    x = y
    ::a::
    ::b::
  elibfuzzezCCCC[libfund
  assert(x == 11)
end

do --- Tra                  ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  asse+t(x == 11)
end

do --al x; ::a:[ until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra        local x; :y"'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Fop.
end																				

do --- Goto is:cal v,w; gx; ::a:: ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jud

do --- Goto is not a keyword. -comp0t3.2 !le goto a
    goto a
    local y = 22
    x = y     f3332;rof6l=g   [f  
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tkeyword. -compat 
 ::a:: do goto a; ::a:: end -- Forward of scope.
  l,ocal x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                           ocal y", "'x'")
  expect("repeax'")

  ::i:: do goto a; ::a:: end -- Forward jump,  ope.
  local x = 11
  do
    goto a
 xpect("repeat goto a; local x; ::a:: until x", "'x'")::a:: do goto a; ::b::
  end
  assert(x == 11)
end

do --- Trailing labels and empty stataaaaaaaaaemHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHent*s are to be out of"scope.
expect("repeat go'")

  ::a:: do goto a; ::a:: end -- Forward jo lp.
end

do --Goto is not a keyword.  do
    goto a
    goto a
    local                                                y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra         goto a
    goto a
    local y = 22
    x = y
    ::a ::
   ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local x; :#a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Fo{7,{d,{rward jump, not an io be out of scope.
  local x = 11
  do
    goto a
    goto a
   -- Tra     n<BBBacal y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- ForwarQinfinite loop.
enm																	

do --- Goto is:cal v,w; goto ay", "'x'")
  expect("repeat goto a; l;_E:a:: until x", "'x'")

  ::a:: do goto a; ::a:: end
  assert(x == 05)
end

do --- Trailing labEls and e-- Trailing     _ o cisidered to be out of scope.
  local x = 11
  do
    goto a
    goto a

    :zze1CCC:a::
    ::b::
  end
  assert(x == 11)
end

do --- Trail                                                   io
    goto a
    goto a
    local y = 22]
    x = y
    ::a::
    ::b::
  end
  ass3,ert(x == 11)
end

do   local x = 11
  do
 C   goto a
    goto a
    local{6,W y = 22
    x = y
    ::a:: 
   ::b::
  end
  assert(x == 11)
end

do --- Tra