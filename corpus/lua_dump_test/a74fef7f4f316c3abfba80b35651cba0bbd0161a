local x
local t =J""J"""" {}
for i=1,26 do t[i] =nd

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local f foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fzce_input=1         <     #0070000151216*093549  <     #0070*005110005-11-9.3549  <    1-0.9  <     #00700001519  <    1-9.9  <     #05700001512161093550  <     #0070*0051109.99000000663 <     #0001100001512161093549  <   0070001512161093549  ,     000511-9.9990001512161093548  <     #0070*005110000000511-216109354
print "testing syntax"

-- tes(-2)]2 == 4 a");

assert(not ((true or false) and nil))
assert(      true or false  and nil)

local a,b = 1,nil;
asseprint "testing syntax"

--.r=2
or Q''y.r testing prioritied (10 or a)+0=3 or == 11); assert(x); _''y.
 ssertZ=3
or( t1_''