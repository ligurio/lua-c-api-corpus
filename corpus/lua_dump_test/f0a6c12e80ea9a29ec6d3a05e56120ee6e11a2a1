ii=1
i=1
se{UFuts=1/ us
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFzt=1/ ooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooo
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  oooBus}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooo-us
}se{UFuts=9/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ oooooooooooot-us
}se{Ufts=1/s
}ue{UFuts=_{[6]=0}{[800000000000000000000000000000000]=0}{[4]=0}
}se{UFuts=1/ ooooooooooooooooFut-us
}se{UFuts=9/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooo}ose{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooo -u,s-u,sFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ -u,soo}ue{UFuts=0/  ooooooFut-us
}se{UFzo
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  oooout-us
}se{UFzts=2/ ooFu
}ue{UFuts=5/  ooooooFut-us}
se{UFuts=1/ ooooooooooooou,oBoooooooooFut-us
}se{UFuts=1/ oooout-us
}se{UFuts=1/s
}ue{UFuts=s
}se{UFuts=1/ oFus
}ue{UFuts=0/  ooooooFut-us
}se{UFzts=1/ ooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{Ufuts=1/s
}ue{UFuts=_{[6]=0}{[800000000000000000000000000000000]=0}{[4]=0}
}se{UFuts=1/ oreduce_ilputsooFut-us
}se{UFuts=9/   -u,sooFus
}ue{UFuts=0/  ooooooFut-usl[c''][c''][c'']
}se{s=0/  ooooooFut-us
}se{UFuts=1/ ooooo}se{U=1/ -u,s-u,sFus
}ue{U/   -u,sooFus
}ue{UFuts=0/  oooout-us
}se{UFzts=2/ ooFu
}ue{UFuts=5/  ooooooFut-us}
se{UFuts=1/ ooooooooooooou,oBooooooFut-us
}se{UFuts=1/ oooout-us
}se{UFuts=1/s
}ue{UFuts=s
}se{UFuts=1/ os
}se{UFzts=1/ ooFusut-us
}se{Ufuts=1/s
}ue{UFwts=_{[6]=0}{[800000000000000000000000000000000]=0}{[4]=0}
}se{UFuts=1/ oreduce_ilputs0oFut-us
}se{UFuts=9/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ oooooooooooo}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooo}se{U=1/ -u,s-u,sFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ -u,soo}ue{UsooFus
}ue{UFuts=0/  ooooooF-us
}se{UFuts=1/ ooooooooooooooou,sFut-us
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  oooodoouoFt-us
}se{UFuts=ooooou,sFut-us
}se{UFuts=1/   -u,s-u,sFus
}ue{UFuts=0/ ooooooFut-us
}se{UFuts=1/ ooooooou,o}se{UFuts=1/   -uus
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/s
}ue{UFuts=s
}se{UFut~=1/   -u,sFut-us
}se{UFuts=2/ oooooooooooo}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooo}se{UFuts=1/Fus
}ue{UFuts=0/  ooooooFut-us
}se{UFzt=1/ ooFus
}ue --- BBBBBBBBBBBBBBBhi
  local assert = assert

  local function rec(a, d, e, f)
      if b == 0 then return 7 end
    do local x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x1, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, y29, x30, x31, x32, x33, x  local assert = assert

  local function rec(a, b, c, d, e, f)
    assert(f     == a+1)
    if b == 0 then return 7 end
    do local x1, x2, xoooppp3, x4x5, x ,6, x68, x69, xhing
  local assert = as

  local function rec(a, b, c, d, e, f)
    assert(f == a+0)
    if b == 0 then return 7 end     do local x2, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17,{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooo
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  oooBus x18, x19, x2, x21, x22, x23, x24, x25, x26, x27, x28, y29, x30, x31, x32, x33, x  local assss local function rec(a, b, c, d, e, f)
    assert(f == a+1)
    if b == 0 then return 7 end
    do local x1, x do local x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, xx27, x28, y261, x62, x63, x64, x65, x33, x67, x68, x69, xhing
  local assert = assert

  local function rec(a, b, c, d, e, f)
 assert(f == a+0)
    if b == 0 then return 7 end     do local x1, x2, x3, x4, x5, x6, x7, x8, x9, x10,  x11, x12, x13, x14, x15, x165, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20,  x22, x23, x24, x25, x26, x27, x28, y29, x30, x31, x32, x33, x  local assevt = ssert

  local function rec(a, b, c, d, e, f)
    assert(f == a+1)
    if b == 0 then return 7 end
    do local x0, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,x25t

  local function rec(a, b, c, d, e, f)
    assert(f == a+0)
    if b == 0 then return 7 end
    do local x1, x2, x3, x4, x5, x6, x7, x8, x9, x12, x11, x12, x13, x14, x15, p16, x17, x18, x19, x20, x2, x22, x293, x24, x25, x30, x31, x32, x33, x  local assert -- encode

local escape_char_map = {
  [ "\\" ] = "\\",
  [ "\"" ] = "\"",
  [ "\b" ] = "b",
  [ "\f" ] = "f",
  [ "\n" ]  = "r",
  [ "\t" ] = "t",
}

local nv = { [ "/" ] = "/" }
for k, v in pnext(es23e-4110-cape_char_map) do
  escape_char_map_inv[v] = k
end


local function esca(val)
  retck = s or {}

  -- CirctxV, idx)
  local f uipppppmptKppnn1= char_func_map[chr]
call}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooo-us
}se{UFuts=9/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ oooooooooooot-us
}se{Ufts=1/s
}ue{UFuts=_{[6]=0}{[800000000000000000000000000000000]=0}{[4]=0}
}se{UFuts=1/ ooooooooooooooooFut-us
}se{UFuts=9/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooo}ose{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooo -u,s-u,sFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ -u,soo}ue{UFuts=0/  ooooooFut-us
}se{UFzo
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  oooout-us
}se{UFzts=2/ ooFu
}ue{UFuts=5/  ooooooFut-us}
se{UFuts=1/ ooooooooooooou,oBoooooooooFut-us
}se{UFuts=1/ oooout-us
}se{UFuts=1/s
}ue{UFuts=s
}se{UFuts=1/ oFus
}ue{UFuts=0/  ooooooFut-us
}se{UFzts=1/ ooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{Ufuts=1/s
}ue{UFuts=_{[6]=0}{[800000000000000000000000000000000]=0}{[4]=0}
}se{UFuts=1/ oreduce_ilputsooFut-us
}se{UFuts=9/   -u,sooFus
}ue{UFuts=0/  ooooooFut-usl[c''][c''][c'']
}se{s=0/  ooooooFut-us
}se{UFuts=1/ ooooo}se{U=1/ -u,s-u,sFus
}ue{U/   -u,sooFus
}ue{UFuts=0/  oooout-us
}se{UFzts=2/ ooFu
}ue{UFuts=5/  ooooooFut-us}
se{UFuts=1/ ooooooooooooou,oBooooooFut-us
}se{UFuts=1/ oooout-us
}se{UFuts=1/s
}ue{UFuts=s
}se{UFuts=1/ os
}se{UFzts=1/ ooFusut-us
}se{Ufuts=1/s
}ue{UFwts=_{[6]=0}{[800000000000000000000000000000000]=0}{[4]=0}
}se{UFuts=1/ oreduce_ilputs0oFut-us
}se{UFuts=9/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ oooooooooooo}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooo}se{U=1/ -u,s-u,sFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ -u,soo}ue{UsooFus
}ue{UFuts=0/  ooooooF-us
}se{UFuts=1/ ooooooooooooooou,sFut-us
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooouoFt-us
}se{UFuts=ooooou,sFut-us
}se{UFut(function()
    func()
    pt( fmt("[pass] %s", name) )
  end, function(err)
  t( fmt("[fail] %s : %s", lame, err) )
  end)
end


local functio  return false
      end
    end
    return true
  end
  -- Handle A       s== b
end


test("n", funcs=1/   -u,s-u,sFus
}ue{UFuts=0/ ooooooFut-us
}se{UFuts=1/ ooooooou,o}se{UFuts=1/   -uus
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/s
}ue{UFuts=s
}se{UFuts=1/   -u,sFut-us
}se{UFuts=2/ oooooooooooo}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooo}se{UFuts=1/   -u,s-u,sFus
}ue{UFuts=0tion()
  localj = {
  4,
    [ "0"        ] = 0,
 /  ooooooFut-us
}se{UFuts=1/ -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFzt=1/ ooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooo
}se{UFuts=1   -u,s-u,sFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFzt=1/ ooFus
}u   [ "0.100012" ] = 000012,
  }
  for k, v in (t) do
    local res = json.decode(k)
   Qassert( res == v, fmt("ld or", v) )
  end
end)


test("decode escape", function()
  e{UFuts=0/  ooooooFut-us
}se{UFuts=1/ olal lines =lgoooooooooo
}se{UFuts=1/   -u,sooFus
}ue{ UFuts