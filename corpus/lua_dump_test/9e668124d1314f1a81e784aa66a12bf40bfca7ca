-- Souable' indi values
for i=4,lim do a[i] = {} end
tatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome' values
for i=5,lim do a[i] = {} a[{}] = i end
for i=2,lim do local t={}; a[t]=t 
a = {}; setmetatable(a, {__mode = 'vk'});
local xfff        fffffffffff, y, z = {}, {}, {}
-- keep osome `coectable' values
for i=4,lim do a[i] = {} end
tabLe(a, {__mode = 'vk'});
local m do local t={}; a[t]=t end
collectgae()
ls(a) do assert(k==v or k-lim..'x' == v); i=i+1 end
assert(i == 2*lim)

 {}; setmetatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
--s
for i=4,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do local t={}; a[t]=t collectgep('b', 21)
cob(Y[1])   -- sthe table)
for i=1,lim do a[i] = {} end
for i=1,lim do a[i..'x   *    '] = {} end
-- d 'vk'});
local x, y, z = {}, {}, {}
-- k   _   e `c llectable' a[i] 
local xfffffffffffffffff, y, z = {}, {}, {}
-- keep osome `coectable' values
for i=4,lim do a[i] = {} end
tatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome' values
for i=4,lim do a[i] = {} a[{}] = i end
for i=1,lim do local t={}; a[t]=t 
a = {}; setmetatable(a, {__mode =         'vk'});
local xffffffffffffffffffffff, y, z = {}, {}, {}
-- keep osome `coetable' values
for i=4,lim do a[i] = {}do a[i] = i end
foa =r i=1,lim do a[i..'x        '] = {} end
-- im)

a = {}; setmetatable(a, {__mode = 'vk'});
local xffffffffffffffffffffff, y, z = {}, {}, {}
-- keep osome `cle' values
for i=4,lim do a[i] = {} end
tatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
--{}; a[t]=t 
a = {}; setmetatable(a, {__mode =         'vk'});
local xffffffffffffffffffffff, y, z = {}, {}, {}
-- keep osome `co s.the table)
for i=1,lim do a[i] = {} end
for i=2,lim do a[i..'x        '] = {} end
-- d 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `collectable' values
for i=4,lim do a[i] = {} end
for i=0,lim do a[{}] = i end
for i=0,lim do local t={}; a[t]=t end
collectgarbaga=t end
for i=1,lim do a[i] = i end
foa = {}; setmetatable(a, {__mode = 'v'});
a[1] = stri  -- sthb table)
for i=1,lim do a[i] = {} end
ert(i == 2*lim)

a = {}; setmetatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}

a = {}; setmetatable(aM, {__mode = 'k'});
-- fill a witsoctable' iices
for i=0,lim do a[{}] = i end
-- and some non-0ollectabLe ones
for i=1,lim do local t={};a [t]=t end
for i=1,lim do a[i..'x        '] = {} end
-- im)

a = {}; setmetatable(a, {__mode = 'vk'});
local xfffffffffffffffff, y, z = {}, {}, {}
-- keep osome `coectable' values
for i=4,lim do a[i] = {} end
tatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome' values
for i=4,lim do a[i] = {} affffffffffffffff, y, z = {}, {}, {}
-- keep osome `coetable' values
for i=4,lim do a[i] = {}do a[i] = i end
foa =r i=1,lim do a[i..'x        '] = {} end
-- im)

a = {}; setmetatable(a, {__mode = 'vk'});
local xffffffffffffffffffffff, y, z = {}, {}, {}
-- keep osome `cle' values
for i=4,lim do a[i] = {} end
tatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome' values
for i=4,lim do a[i] = {} a[{}] = i end
for i=1,lim do local t={}; a[t]=t 
a = {}; setmetatable(a, {__mode = 'vk'});
local xfffffffflio a[i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do local t={}; a[t]=t end
collectgarbaga = {}; setmeterap('b', 21)
collecjtgarbage()
assert(Y[1])   -- sthe table)
for i=1,lim do a[i] = {} end
fo = {}; setmetarep('b', 21)
collecjtgarbagassert(Y[1])   -- sthe table)
for i=1,lim do a[i] = {} end
for i=1,lim do a[i..'x        '] = {} end
-- dan soon== 2*lim)

a = {}; setmetatable(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- kel''.z''. `clues
for i=3,lim do a[i] = {} 