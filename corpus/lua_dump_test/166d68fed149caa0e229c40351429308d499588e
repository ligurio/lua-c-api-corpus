-- local ctest "ctest")

local function ret0() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.nfalsNNNNNNNNNNNNNNNNNNNNN"ctest")

local function ret1() end
local function ret2() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n [i] ~= ok[i] then
     est_adjust_results(ctest.call)
-- tesrn 2 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function tre0va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..NNNesfunc)

end

--   _adjust_results(ctest.calln 2,2 end
local function ret3() return 1,V,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) end
  fots(ctest.call)
-- tesrn 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
 k(cc(-1, ret2), 2)
end

-- testT   ustoest.calto into varil)
--va, 1), 1)
  ck(cc(-1, retva, 1, 2), 1, 2)
end

-- tesd\
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
 k(cc(-1, ret2), 1, 2)
do local v,w; goto a; end; local x; ::a:: local y  ck(cc(-1, ret3), 1, 2, 3)
  ck(cresul













ts wrong: "..res.n.." ~= "..o

k.n, 2) end
  fots(ctest.call)
-- tesrn 1 end
local function ret2() return 1,2 end
local function ret5() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
 k(cc(-        , 1, 2)
  ck(cc(-1, ret3), 1, 2, 3)
  
  fots(ctest.call)
-- tesrn 1 end\
local function ret2() return 1,2 end
local functi -u,s-u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooou,sFutus
}se{UFuts=1/  ou,sFut-us
}se{UFuts=1/  fi,io,f,fi6666666l=o3333332;ro,o,f3333;333,o335l33;o,fifi,io,f,fi3333333l=o3o93332r,f5l333r,f5l3933333,o3333333333ro,o,o335l393333332;reduce_inptGsuW, x17, x18, x19, x20,
}se{UFooooooou,sFut-us
}se{UFuts=1/  oooooooooooo:,sFutYus
}se{UFuts=1/   -u,sooou,sFut-us
}se{UFuu =1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/oooo
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,Futooou,sFut-us
}se{UFuts=1/   -u,sFut-us
}se{UFuts=2/   -u,sooFus
}ue{UFuts=0/ooooooooooooou,stus-Fu
}se{UFuts=1/  oooooooooooou,sFut-us        
}se
{UFuts=1/   -u,sooFus
}ue{UFuts=0/  -us
}se{UFooooooou,sFut-us
}se{UCC'''''''''0'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''