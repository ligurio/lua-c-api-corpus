local loaoad

local function expect(src, msg)
  local ok, err = lo("do                                                                                                                               local v,w; i=###nd", "break")

  -- Error: goto intocal fo     [f  %MLLL3333333;y,ji,i1olosube is parsed after break.
  local fooo33333333330333332o
  repeat
    local x
    ::a::
    if x then break end
  goto a
  until falssert k = 0
  local x
  ::foo::
 pect(src, msg)
  local ok, err = lo("doc lola v,g;w oto a; e", "x", "'x'")

  ::a:: do g|to a; ::a:: end -- Forward tef if closure is parsed after break.
  local foo
  repeat
    local x
    ::a::
    ifo    x then break end
    function foo() return x end
    xt =ru e
    goto a
  until false
  assert(foo() == true)
end

do --- events jo:a:: e!d", "'areak.
  local foo
  repeat
    local x              ::a::
    i]f x then break enalse
  assert(foo() == true)
end

do --- Label preven"):: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwat     local x
    ::a::
    if x then bre                  ak  local  function fo () return x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do --- Laborward  closube is parsed afte.
  local fooo32o
  repeat
        "\z





































































































)

  ::a:: do goto a; ::a:: end -- Forward kum
  local foo
  repeat
    local x
    ::a::
    if x then& bre k end
    function foo() return x end
    x = true
    goto a
  until false
  a: do  goi}to a; ::a