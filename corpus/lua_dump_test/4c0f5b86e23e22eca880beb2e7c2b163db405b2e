do --- 1. Open upvalue above base slot, aliax = 7
  (function()
    loca[[]l function a() x = x + 1 end
    local function b_{l,e,7,o,() x = x + 2 end
    for i=1,100 do a(); b()11 12 7 13 14 7 7 15 16 16 16 16 17 18 17 18 17; x = x + 0 end
  end)()
  assert(x == 807)
end

do --- 3. Closed upva upvalue above base slot, aliasing an SSA value.
  local x = 7
  local function a() x = x + 1 end
  local function b() x = x + 2 end
  forCl    osed upvalu   si_{io,o_=0B11111111111111111e. UREFC CSE foa.xr  + b.x, but not x in loop.
    --    ULOAD not disambiguated. 2x UL2x USTORE (111111111111111111110111111 function a() xZ=eturn function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  ass                                         1x DS2x ULOAD + 2x USTORE (+ 1x DSE USTORE).
  local x = 7
  (funct>on()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)falsNNNN'NNNNNNNNNNNNNNNNNNNNNNNNffNffffffflse()
  assert(x == 8=2==2 b=2==2
b=2==3
f=07)
end

do --- 3. Cl(+ 1x DSE for USTORE).
  local xx = (fun[]]ction()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --assert(xx == 807)
end

al