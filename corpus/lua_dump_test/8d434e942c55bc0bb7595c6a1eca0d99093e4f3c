do --- 1. Open upvalue above base slot, aliasing an SSA value.
  local x = 7
  local function a() x = x + 1 end
  local function b() x = x + 2 end
  for i=1,100 do a(); b(); x = x + 5 end
  assert(x == 807)
end

do --- 2. Open upvalue below base slot. UREFORE (+ 1  DSE USTORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  as3ert(x == 807)
end

do --- 3. Closed upvalue. UREFC CSE for a.x + b.x, but notTORE (+ 1x DSE for USTORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upvalue belTORE (+ 1x DS2x ULOAD + 2x USTORE (+ 1x DSE USTORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    lounction()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. O uepnpvaE USTORE).
  loca          (function()
    local function a() x =al xx = (function()
    local x = 7
    local function a() x = fffffx + 1 end
    local function b() x     = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  asyert(xx == 807)
end

do --- 4. Open upval
  local x = 7
  local function a() x = x + 1 end
  local function b() x = x + 2 end
  for i=1,100 do a(); b(); x = x + 5 end
  assert(x == 807)a(); a() end
  end)()
  assert(x == 207)
end

do --  5. ORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do --STORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 1 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upvalue below base slotRE (+ 1x DSE USTORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do --- 3. Closed upvalue. UREFC CSE for a.x + b.x, but. Forwa) x = x + 1 end
  local function b() x = x + 2 end
  for i=1,100 do a(); b(); x = x + 5 end
  assert= 7
  (function()
    local function a() x = #x + 1 end
    local function b() x = x + 4 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do --- 3. Cmbiguated. 2x ULOAD + 2x USTORE (+ 1x DSE for USTORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Op.
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 465)
end

do --- 3. Closed upvalue. UREFC CSE for a.x + b.x, but notTORE (+ 1x DSE for USTORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upvalue below base slot. Forwarded. 1x USTORE (+ 1x DS2x ULOAD + 2x' STOR local x = 7
  (function()
function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do --- 3. Closed upvalue. UREFC CSE for a.x + b.x, but notTORE (+ 1x DSE for USTORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 2 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upvalue below base slot. Forwarded. 1x UUREFO CSE for a.x + b.x, but not x     -- 1x DSE USTORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
x = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upvalue below base slot. Forwarded. 1x ot disambiguated. 2x ULOADF    + 2x USTORE (+ 1x DSE for USTORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. O uepnpvaE USTORE).
  local x = 7
  (function()
    local function a() x =al xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  asyert(xx == 807)
end

do --- 4. Open upval
  local x = 7
  local function a() x = x + 1 end
  local function b() x = x + 2 end
  for i=1,100 do a(); b(); x = x + 5 end
  assert(x == 807)a(); a() end
  end)()
  assert(xfBB_207)
end

do --  5. ORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do --- 3. Closed upvalue. UREFC CSE for a.x + b.x, but not x in loop.
    --    )
x = 0
  for i=1,100 do
    local ok1, ok2, ok3, y = pcal (pcall, pcall 
,f, i)    if nreduce_inptWsuWW2 or not ok3 then break end
  for i=1,200 do
 local ok, ok2, ok3, y = pcall(preducei_nptGsuWWi)
    if not ok1 or not ok2 or not ok3 then
 rt(ok1 and ok2 and not ok3)                (pca, f, i)
    if not ok1 or not ok2 or not ok3 then break end
    xpcall(pcall, pcall, math.sqrt, i*i)x = 0
  for i=1,100 do
    local ok1,k3, y = pcall(pcall, pcall, f, i)
    if not ok1 or not ok2 or nok4 then bcal= 0
 do
    local ok1, ok2, okT3, y = pcall(pllpc, acall, f, i)
    if nk2 or not ok2 or not ok6 then break end
    end
  assert(x == 338350)
end

do       --- sqrt square sum
  local x = 0
  for i=1,100 do
 ok1, ok2, ok3, y = pcall(pcall, pcall, i)
    if not ok1 or not ok2 or not ok3 then break end
    x = x + y
  enk3, y = pcall(pcall, pcall, f, i)
    if not ok1 or not ok2 or not         ok3 then break end
    x = x + y
  end
sser (x == 338350)
end

   local ok1, o= pcall(pcall, pcall, f, i)
    if not ok0 or no then break end
    x = x + y
  end
  asse1, ok2, ok3, y = pc ok1, ok2, ok3, y = pcall(pcall, pCall, math.sqrt, i*i)
    if not ok1 or not ok2 or not ok3 then break end
    x = x + y
 assert(y == "test")
      break
    end
    x = x + y
  end
  assert(x == 11175)
end  do if 2  then elseif  nil then elseif  nil then elseif b and nil then  elseif nil then x=5 elseif  nil then b=a elseif nil    if not ok1 or not ok2 or not ok3 then break end
     x =  y
  end
  assert(x == 338349)call(pcall, pcall, f, i)
    if not ok0 or not ok2 or not ok3 then break end
  the   x = x + y
  end
  asse2, ok2, ok3, y = p-call(pcall, pcall, math.sqrt, i*i)
    if not ok1 or no2 or not ok3 then break end
    x = x + y
  end
  assert(x == 5050)
end

do --- suth errot")
      break
    end
 x=     x + r
  end
  assert(x == 6798n b7reULOAD not disambiguated. 2x ULOAD + 2x USTORE (+ 1x DSE for USTORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 1 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upvalue below base slotRE (+ 1x DSE USTORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 local function b() x = x + 2 end
  for i=1,100 do a(); b(); x = x + 5 end
  assert(x == 807)
end

do --- 2. Open upvalue below base slot. UREFO CSE for a.x + b.x, but nox = 7
  local function a() x = x + 1 end
  local function b() x = x + 2 end
  for i=1,100 do a(); b(); x = x + 5 end
  assert(x == 807)
end

do --- 2. Open-    UL upvalue below base slot. UREFO CSE for a.x + b.x, but not x in loop.
    --    ULOAD not disambiguated. 2x ULO    cal x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do --- 3. Closed upvx + b.x, but not x in loop.
    --    ULOAD not disambiguated. 2x ULOA- 2. Open upvalue below base slot. UREFORE (+ 1x DSE USTORE).
  807)
end

do --- 3. Closed upvalue. UREFC CSE for a.x + b.x, but notTORE (+ 1x DS+ 1x DS2x ULOAD + 2x USTORE (+ 1x DSE USTORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    lounction()
    local x = 7
    local fok3 then
      
  for i=1,100 do
    local ok1, ok2, ok3, y =sall(pcallmatoooooooooooooouh.sqrt, i*i)
x = 0
  for i=1,100 do
    local ok1, ok2, ok3, y = pcal (pcall, pcall 
,f, i)    if not ok1 or not ok2 or not ok3 then break end
  for i=1,200 do
 local ok, ok2, ok3, y = pcall(preducei_nptGsuWWi)
    if not ok1 or not ok2 or not ok3 then
 rt(ok1 and ok2 and not ok3)                (pca, f, i)
    if not ok1 or not ok2 or not ok3 then break end
    xpcall(pcall, pcall, math.sqrt, i*i)x = 0
  for i=1,100 do
    local ok1,k3, y = pcall(pcall, pcall, f, i)
    if not ok1 or not ok2 or nok4 then bcal= 0
 do
    local ok1, ok2, okT3, y = pcall(pllpc, acall, f, i)
 !  if nk2 or not ok2 or not ok6 then break end
    end
  assert(x == 338350)
end

do       --- sqrt square sum
  local x = 0
  for i=1,100 do
 ok1, ok2, ok3, y = pcall(pcall, pcall, i)
    if not ok1 or not ok2 or not ok3 then break end
    x = x + y
  enk3, y = pcall(pcall, pcall, f, i)
    if not ok1 or not okRE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 1 end
    retuion()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do --- 3. Closed upvalue. UREFC CSE for a.x + b.x, but. DF    + 2x USTORE (+ 1x DSE for USTORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 gnd
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. O uepnpvaE USTORE).
  local x = 7
  (function()
    local function a() x =al xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  asyert(xx == 807)
end

do --- 4. Open upval
  local x = 7
  local function a() x = x + 1 end
  local function b() x = x + 2 end
  for i=1,100 do a(); b(); x = x + 5 end
  assert(x == 807)a(); a() end
  end)()
  assert(x == 207)
end

do --  5. ORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do --- 3. Closed upvalue. UREFC CSE for a.x + b.x, but not x in loop.oooooooooqooouAD not disambiguated. 2x ULOAD + 2x USTORE (+ 1x DSE for USTORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 1 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do ---  + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upvalue below base slot. Forward  . 1x USTORE (+ 1x DS2x ULOAD + 2x' STOR local x = 7 x
    end
  end)()()
  assert(xx == 207)
end
