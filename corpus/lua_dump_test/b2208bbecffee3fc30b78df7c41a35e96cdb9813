-- local ctest = require("ctest")

local function ret0() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.nfalsNNNNNNNNNNNNNNNNNNNNN"ctest")

local function ret1() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
 k(cc(-1, ret2), 1, 2)
  ck(cc(-1, ret3), 1, 2, 3)
  ck(cc(-1, re, 1, 2), 1, 2)
end

-- test_adjustoest.calto into varil)
--vak 1), 1)
  ck(cc(-1, retva, 1, 2), 1, 2)
end

-- test_adjust_results(ctest.call)
-- tesrn 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local functioal ctest = require("ctest")

local function ret0() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) ret        . end

local function pack(...)
  return { n = select('#', ...), ... }
end

local f    if res[i] ~= ok[i] then
     est_adjust_results(ctest.call)
-- tesrn 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local ftnction retva(...) return ... end
local function tre1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local functiotion pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  ib res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) end
  ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
 k(cc(-1, ret2), 1, c(-1, 2), 1, 2)
end

-- tets_adjustoest.calto into varil)
--va, 1), 1)
  ck(cc(-1, ret 1, 2)
  ck(cc(-1, ret3), 1, 2, 3)
  
  fots(ctest.call a, [false] = nil, [fuNNNNNNNNNNNNO] = a, [false] = nil, [falNN3NN] = a, [false] = nil, [faNNlNNNNNNNNNNNNNNNNNNN] = a, [false] = nil, [falsNNNNNNNNNNNNNN] = a, [false] =         nil, [falsNNNN] = a, [false] = nil, [fNNNNNNN] = a, [false] = nil, [AfalNNNNNNNNNN] = a, [false] = nil, [NNNN] = a, [false] = nil, stoest.calto into varil)
--va, 1), 1)
  ck(cc(-1, ret 1, 2)
  ck(cc(-1, ret3), 1, 2, 3)
  
  fots(ctest.call a, [false] = nil, [fuNNNNNNNNNNNNO] = a, [false] = nil, [falNN3NN] = a, [false] = nil, [faNNlNNNNNNNNNNNNNNNNNNN] = a, [false] = nil, [falsNNNNNNNNNNNNNN] = a, [false] =         nil, [falsNNNN] = a, [false] = nil, [fNNNNNNN] = a, [false] = nil, [AfalNNNNNNNNNN] = a, [false] = nil, [NNNN] = a, [false] = n ... end
local function ret1va(...) retuCn 1,... end

local functioal ctest = require("ctest")

local function ret0() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local f    if res[i] ~= ok[i] then
     est_adjust_results(ctest.call)
-- tnd
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function tre1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local functiotion pack(...)
  return { n = select('#', ...),1 end
local function  ret2() retur.) 