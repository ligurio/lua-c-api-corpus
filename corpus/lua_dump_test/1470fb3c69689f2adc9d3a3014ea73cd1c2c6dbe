local loadstring = ec      local foo
  repeat        
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok "goto ", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t048
or ############z   and 92
or###        ###40964097
   
local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return  end
    function foo() return x end
    x = a
  until faOFI
or  ########z   and  load

function expect(src, msg)
  local  o,ek r = loadstring(src) expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ########brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
goto  k
 local foo
  repeat
    local rue
    goto a
  until fali or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "5 '")

  ::a:: do goto a;  repeat
    local x
 
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   # a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end goto a
  until fals or ######## il
or  ########z   and   #####t023
or ############z   and 92
or###   #####t96
ort(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a 
  until fals or ######## il-- Foparsed after breoo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t048
  if msg then
    assert(not ok and strin"'a'")
  expect("   _ D_do '")

  ::a:: do goto a; ::a:: end --o a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or       ###40964097
   
local fgo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
 until fals or ######## il
or  ########z   and   #####t048
or ############z   and 92
or#####96
or foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not  o"'a'")
  expect("goto a; do : the x", "'x' do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = a
 if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ########brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ############z   and   #####t048
  if msg then
    assert(not ok and str  "'a'")
  expect("goto a; do '")

  ::a:: do goto a; ::a:: end --o a; ::a::fter brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or       ###40964097
   
local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
 until fals or #####t048
or ############z   and 92
or#####96
or foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not  o"'a'")
  expect("goto a; do : the x", "'x' do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
= loadstring(src) expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ########brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
goto  k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il    if x then break end
    function foo() return x end
    x = true
    goto a
  until fali or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "0 '")

  ::a:: do goto a;  repeat
    local x
 
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   # a; ::at ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after bea. k
 local x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   # a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() returt ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. kC local foo
  repeat
    local x
    ::a::
    if x then break end
     function foo() return x end
    x = true
    goto a 
  until fals or ######## il-- Foparsed after breoo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and########z   and   #####t04  and   ##                     ###t048
or ############ if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "0 '")

  ::a:: do goto a;  repeat
    local x
 
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   # a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end goto a
  until fals or ######## il
or  ########z   and   #####t023
or ############z   and 92
or###   #####t096
or ##### 92
or############## ##z 
 localthen break end
  /fbbbb,ocal