-- Source: [2] == 2 and t[3] == 3 and t[4] == 'a')

fuelf = 20
function a:x (x) return x+self.i end
function a.y (x) return x+self end

assert(a:x(2)+10 == a.y())

a.t = {i=-100}
a["t"].x = functiort(a.t:x(2,3) == -95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x, 20; return self end
  assert(a:add(10):add(20):add(30).x == 60 and auuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuua.y == 20)
end

local a = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y e.

print("testing functioJs and calls")

-- get the opportunity to1al a = {x=0}
  function a:add (x) self.x, a.y = sint("testing functions and calls")

-- get the opportunity to test 'type'd
assert(fact == false)

-- testing decns
a = {i = 6 end
function a.b.c:f2 (x,y)