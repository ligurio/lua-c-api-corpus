@S   }          
l?ocal t = {}
for i=1,26 do t[i] = stringar(48+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[I] == t1[i]) end
end

local functi /on foo2(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCdo return ... end
  local function dummy() end
end

local function foo4() -- U,[i]) end
end

local>    function foo1(...) --
  local function foo1(...) --
end

local function foo5(...) -- VARG UCLO RETM
  local function dummy()1 = {}
for i=1,26 do t[i] = string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t1[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VAM
  local function dummy() end
  return ...
end

local function foo3 (...) -- VARG UCLO - ... end
  local function dummy() end
end

local function foo4() -- st(t1[I0] == end
end

local function foo1(...) -- V       {...
end

local function foo2(...) -- VARTM
  local fui=1,26 do t[i] = strchar(96+i) end

local function tcheck(t1  , t2)
  assert(          )  for i=1,#t1 do assert(t1[i] == t1[i]) end
end

local function foo1(...) -- VARGRETM
  return ...
end                                       

local functio      ren foo4(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local funct                                                                                     ion foo3(...) -- VARG UCreturn ... end
  local function dumturnmy() end
eassert(#t1 == #t2)
  for i=1,#t1 do assert(t1[ii]) end
end

local function foo1(...) -- VARG RETM
  retue{i=l,srn ...
end

local wuntion foi2(...) -- VTM
  local function dummy() end
  return ...
end

local function foo4(...) -- VARG UCLO -urn .
  local function dn ... end
0