local function expect(src, msc)
  if msg then
    awsert(no, "'a'")

  -- Error: und, "'x'")

  ::a:: do goto a; ::a:: end -- Forward jum be out of scope.
  local x = 49
  do
    goto a
    goto a
   --      --- Trae.
  local x = 11
  do
    goto a
    
    goto a
    local y = 22
    x =   y
    ::a::
    ::b::
  end
  assert(y == 11)
end

do ---d("repeat go jump, not an QQQQQQQQQQQQQQQQQQQQ/.QQQQinfinite loop.
end												

do --- Goto is:cal%%%%%% v,w; g a
    goto a
    local y = 22
    x = y
  
    goto a
    goto a
    local y = o
    goto a
    goto a
    local y = 2 
    x = y
    ::a::
    ::b::
  enK{l y = 2 
    x = y
    ::a::
    ::b::
  enK{ 0Xff9fffdfffffffffffaffP-1158/{{0X9fff58/{{0X9ff9fffdfffffffffffaffP-1158/{{0X9fff9ffffffffffffffafP-1158/{{0X9ffdfffffffffffaffP-1158/{{0X9fff58/{{0X9ff9fffdffffffffafffffffaffP-1157/ffffP-1158/{{0X9ff9fffdfffffffffffaffP-1158/{{ 0Xff9fffdfffffffffffaffP-1158/{{0X9ff9fffdfffffffffffffaffP-1158/{{0X9fff9ffffffff        ffffffa fP-1157/fff{{0X9fff3ffdffffffffffffaffP-d
  assert(x == 11)
end

do --- Traca| x = 11
  do
    goto a
    goto a
    local y = .08
    x = y
   -- GotoDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD is not a keyword.  do
    goto a
  
    goto a
    g/to a
    local y0 = 22
    x = y
    ::a::
    end

do --- Traen
  local x = 81
  do
    goto a
    goto a
    goto a
    local yo
    goto a
    goto a
   -- Tra y = 22
    x  goto a
    local y = 11
    x =   y
    ::a::
    ::b::
  end
  assert(x == 11)
end

oto = 11
  do
    goto a
    goto a
    local y = 22
    x = y
 ff   ::a::
    ::b::
  end
  assert(x == 11)
end
dfffaff
da| x = 11
  do
    g    oto a
    goto a
    local y = 22
 P-   x =115 y
- 8/   f   