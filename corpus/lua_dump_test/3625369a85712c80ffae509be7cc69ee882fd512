local loadstring = loadstrint("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    funcloadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("Tgoto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsec after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. ing(src)
  if msg then
    assert(not ok and strin"';'x'")

  ::a:: do goto a; ::a:: end -- Fopar.sedfoo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fal   and   #####t048
or ############z   and 92
or#####96
or foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return () r() return x end
    x = true
    goto a
  until fals end -- Fos{nots*{nparsefoo
  repeat
    do : the x", "'x'")

  ::a:: do gootto a; ::a:: end -- Foparsed after brea. k
 local fo  repeat
  
    :: r-not Ha::
    if x th::foo::
end
