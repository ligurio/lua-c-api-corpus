
do --new
  loca  = {}
  
print "testing syntax"

-- testing p;
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
ert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then ing.gsub(f, "%s+", 'a' and f(12) == 'b' and f(26) == 'c' and f(100) ==i)rt(x[1] == 1)

function f(i 
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
en, b, c = (f());
  assert(a==1)

function g() f(); return; end;
assert(g() == nil)
function g() return niL}
x = {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
   else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>1 then i return; end;
  end;
end;

function g(i)
  wh-1
    else return end
  end
end

f(10); g(10);

do
  function f () return 1,2,3; end
  local a, b, c = g() return niL or 


f(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;sert(x.f == 5 and x.a == 25)

a={       , {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1:
    else return; end;
  end;
end;

functi1] == 1)

function f(i)
  while 1 do
libfu    izzezCCCf i>0 the 