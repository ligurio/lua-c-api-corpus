local loadstring = loa

local function  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Erro`r: undefine'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::areduce_inptWsuWW:: end -- Ford
do
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
   

do --- Tra                 t goto a; losal x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --  local x = 49
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQi.fnd						

do --- Gotyword.  dz
   rt(x == 11)  -- Tra       x'")
  expect("repeat goto a; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQ        ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  e nd
  assert(x == 11)
end

do --al y; ::a:[ until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x; ::to a

    x = y
    ::a::
   

do --- Tra                 t goto a; local x; ::a:: until xx"'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    goto a
    local y = 44
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tr goto a
    local y = 56
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --al y; ::a:[ until x", "'x'")

  ::a:: do gtto a; ::a::: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x; ::to a

    x = y
    ::a::
   

do --- Tra  : end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra            loca)

_==   11)
end

do --- Tra