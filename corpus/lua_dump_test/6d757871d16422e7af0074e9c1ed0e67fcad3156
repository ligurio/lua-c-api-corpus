itOmb=40/( LorM '  ')/( LorM '  ')/( LorM'')/( LorM '  ')/( LorM '  ')/(LorM '  ')/( LorM '  ')/( LorM '  ')/( LorM '  ')/( L/( LorM '  ')/( L/( L orM '  ')/( LorM '  ')/( LorM '  ')/( Lor.0078125 /( Lor                                                                  M '  ')/( LorM '  ')orM '  ')/( LorM '  ')/(L  orM '  ')/( M '  ')/( LorM '  ')/( Lor.0078125 /( LorM '  ')/( LorM '  ')orM '  ')/( LorM '  ')/(LorM '  ')/( LorM '  ')/( LorM '  ')/( LorM '  ')/( LorM '  ')/( L/( LorM '  ')/( L/( LorM '  ')/( LorM '  ')/( LorM '  ')O Rt2[i]) end
end

olcal function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
                               local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RET-
  do return ... end
  local function dummy() end
end

local function foo4() -- U, t2)
  assert(#t1 == #t4)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARGr i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
e f)(j)function g(j)funct -- VARG UCLO RET
  local function dummy() end
  returnion  ...
endg
