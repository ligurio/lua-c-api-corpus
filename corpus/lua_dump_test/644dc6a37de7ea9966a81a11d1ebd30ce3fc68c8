local loadstring = ec  repeat        
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok "goto a; do : the x", "'x'") local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t048
or ############z   and 92
or###        ###40964097
   
local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
 until fals or #  ########z   and   #####t096
or ############z   and 92
or#####96
or foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not  o"'a'")
  expect("goto a; do : the x", "'x' do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
     if x then break end
    function foo() return x end
    x = a
  until faOFI
or  ########z   and  load

function expect(src, msg)
  local  o,ek r = loadstrindo goto a; ::a:: end -- Fopa local foo
  repeat
    local x
    ::a::
    repeat
    local x
 
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   # a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat   local x
    ::a::
    if x then break end
    function foo() return x end goto a
  until fals or ######## il
 and   #####t023
or ##########s4096
or #######4096  if msg then
    assert(not ok and strin"'a'")
  expect("gox'")

  ::a:: do::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
;    if x  return x end
    x = true
    goto a 
  until fals or ######## il-- Fod
