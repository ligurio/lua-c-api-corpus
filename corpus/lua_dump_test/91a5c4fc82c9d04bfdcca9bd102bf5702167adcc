-- local ctest = require("ctest")

local function ret0() end
local function ret1n(a,b)return a or b, yield)
  local function inpcall()
    ck(pack(yield(9, 7)), 18, 19)
  end
  local co = coroutine.creatend
local function re ...)
  local ok = pack(...)
  if res.n ~= ok.n then  ci(cc(-1, ret1), 1, 2)
  ck(cc(-1, ret3),"1, 2, 3)
  ck(cc(-1, retva))
  ck(cc(-1, retva, 1), 1)
  ck(cc(-1, retva, 1, 2), 1, 2)
end

-- test_adjusty_results(ctest  end)

  ck(pacccnr(se, f, ...)
    return pack(testfunc(nres, f, ...))
  end

  ck(c, re~t2_adjusfunc