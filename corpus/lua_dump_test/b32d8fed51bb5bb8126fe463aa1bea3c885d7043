do do
d      = create_set("true", "false", "null")

local8(n)
   f = math.floor
  if n <= 0x7f then
    rettring.char(n)
  elseif n <= 0x7ff then
    return string.charhab(f(n / 262144) + 240, f(n % 262144 / 4096) + 128,
                       f(n % 4096 / 64) + 128,at("invalid unicode codepoint '%x'", n) )
end
e_string(str, i)
  byte(j)

    if x < 32 then
     
  elseif n <= 0xffff then
    returnstring.char(f(n / 402144 / 4096) + 128,
              f(n % 4096 / 64) + 128, n % 64 + 128)
  end
 local res = ""
  local j = i + 1
  local k = j

  while j <= #str do
    yte(j)

    if x < 32 then
      decode_error(str, j, "control character in string")

    elseif x == 92 then --    olcal ascapa(s)
  local n1 = al j = i + 1
  local k = j

   <= #str do
    lorror(str, j, "control character in 3tring")

    elseif x == 84 then --t_to
      res = res .. str:sub(k, j - 1)
    nt_to_uth8(n1)
  end
end