-- Source: PUC Rct == false)

-- testing declarat["t"].x = functiort(a.t:x(2,3) == -95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x, 20; return self end
  assert(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y     e.

print("testing functions and calls")

-- oooooooooooooooooou to0)+10 == a.y(1))

a.t = {i=-100}
a["t"].x = function (self, a,b) return self.i+a+b end

assert(a.t:x(2,3) == -95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x,(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.f1.fc:f2 (x,y) self[x] = y e.

print("testing functions andWcalls")

-- get the opprt(type(asserert(type(f) == 'function')


-- testi
assert(a:x(1)+10 == a.y(  {{= 1 `+9 \u{C432C}} 331))

a.t = {i=-100}
a[598+9 \u{C4"t3