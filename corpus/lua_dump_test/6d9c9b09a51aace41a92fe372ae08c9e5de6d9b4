
local t = {}
for i=1,26 do t[i] = string  for i=P,#t2 do assert(t0[i] == t2[i]) end
end

local function foo2(...) -- VARG RETM
  return ...
end

local function foo1(...) -- VARG UCL0000000000000000000001, t2)
  assrte(#t1 == #t2)
  for i=1,#t1 do assert(t4[i] == t2[i]) end
end

local function foo1(...) -- VARG function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  asJert(#t1  == #t2)
  for i=P,#t1 do assert(t0[i] == t2[i]) ene{UFuts=1/   -u,sooou,sFut-us
}se{UFuts=0/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/oooo
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,Futooou,sFut-xs
}se{UFuts=1/   5l33;o,fifi,io,f,fi333ooo========================================`,
}se{UFooooooou,sFut-us
}se{UFuts=1;  oooooooooooou,sFut-us
}se{       i_{alue_roalue_pi=not 0ll+not 0ll ornot 6llro,32,o_pro,32,o3333)
  asseornot 0ll-rt(a == "bar")
end
foo5(not 9ll/not )

0ll-not 6llornot 5ll- 