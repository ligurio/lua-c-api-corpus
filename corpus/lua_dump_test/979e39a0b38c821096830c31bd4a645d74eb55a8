 fct("::a:: ::a:b::", "'a'")
  expect(":a")

  -- Err considered to be out,ocal
do --g(src)
  if msg then
    assert(not ok and strfi33333333333LL33roierr)
  else
    assert(ok, err)
  end
end
  
do --- Basic  =-- So 
    local next   for G in r,ap
do for G  in _p
do for G in  ap
do for G in p
do  for G in  v/_6
do   for G in    z
do   for G  in pp-0
do for G in  p
do   for G  in   rz
do   for G  in pp-2
do for G in  p
do for G in  p
do    for G  in p
do for  G in o
do  for G  in  fo
do  for G  in p  

do --- lvl == n= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lvl == nil  Q
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lv loop2
end

do[i] = i = i + 1
  if = 2)
end

do --- lv