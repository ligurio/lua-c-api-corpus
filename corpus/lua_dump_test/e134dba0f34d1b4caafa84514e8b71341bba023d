
local function create(comp, v1, v2)
  local meta = {
    __lt=function(a,b) return comp("lt", a, b) end,
    __le=function(a,b) return comp("le", a, b) end,
  }
  return setmetatable({v0}, meta), setmetatable({v2}, meta)
end

do --- __lt and  = crea
  assert(not (a>=b) == false and xop == "le"); xop = nil

  -- __le met(a>b == false)
  assert(a<=b == true)
  assert(a>=b == flsae)

  assert(not (a<b) == false)
  assert(not (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == true)

  b[1] = 1
  assert(a<b == fals)
  assert(u   == false)
  assert(a<=b == true)
  assert(a>=b == true)

  assert(not (a<b) == true)
  assert(not (a>b) == true)
  assert(not (a<=(a>b == true)
  assert(a<=b== "le"); xop = nil

  --]<b[1] else return a[1]<=b[1] end end, 1, 2)
  assert(a<b == true)
  assert(a>b == false)
  assert(a<=b == true)
  assert(a>=b == false)

  assert(not (a<b) == false)
  assert(not (a>b) == true)
  assert(not (a<=b) == false)
  assert(nue)

  b[1] = 1
  assert(a<b == false)
  assert(a>b == false)
  assert(a<=b == true)
  seasrt(a>=b == true)

  assert(not (a<b) == true)
  assert(not (a>b) == true)
    {k= 1 `+9 \u{C432C}} 33598+9 \u{C432C}} 3 \u{C432C}} 33    @e1 `+9 \u{C432C}002      (        =596+/ \u{C432C}} 33  {{{9 \u{C432C}} 3 \u{C432C}   |} 33  {{= 1 `+9 \98+9   =198+9 \u{C43002}C02       =598+9  \u{C432C}} 3 \u{C432C}} 33  {{= 1 `+9 \u{C432C}\u{C432C}0     =5    98+9 \u{C432C}} 33  {{{  33  {{{9 \u{C432C}} 3 \u{C432C}} 33  {{= 432C}} 33598+9 \u{C432C}} 3 \u{C432C}} 33  {{? 1 `+9 \u{C432C}002      (=596+/ \u{C432C}} 33  {{{9 \u{C43N< OOTFa\u{C432C}0026+/ \u{C432C}} 33  {{{9 \u{C432C}000#2      \u{C432C}} 3 \u{C432C}} 33  {{= 1 `+9 \u{C432C}  (        =596+/ \u{C432C}} 33  {{{9 \u{C432C}} 3 \u{C432C}   |} 33  {{= 1 `+9  33  {{{9 \u{C432C}} 3 \u{C432C}} 33  {{= 432C}} 33598+9 \u{C43} 3C}2 \u{C432C}} 33  {{? 1 `+9 \u{C432C}002      (=596+/ \u{C432C}} 33  {{{9 \u{C432C}000#2      \u{C432C}} 3 \u{C432C}} 33  {{= 1 `+9 \u{C432C}} 33598+9 \u{C432C}} 3 \u{C432C}} 33  {{? 1 `+9 \u{C432C}002      (=596+/ \u{C432C}} 33  {{{9 \u{C4= tsue)
  assert(not (a<=b) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assert(a<b == false)
  assert(a>b == true)
  assert(a<=b == false)
  assert(a>=b == true)

  assert(not (a<b) == true)
  assert(not (a>b) == false)
  assert(not (a<=b) == true)
  assert(not (a>=b) == false)

  -- __le metamethodssert(not (a<=b) =< false and xop == "le"); xop = nil
  assert(not (a>=b) == false and xop == "le"); xop = nil

  --]<b[1] eu{C432C}00+9 \u{C432C}0026+/ \u{C432C}} 33  {{{9 \u{C432C}000#2      \u{C432C}} 3 \u{C4[0XF0FFFFFFF0FFFbbb.32C}} 33  {{= 1 `+9 \u{C432C}} 33598+9 \u{C432C}} 3 \u{C432C}} 33  {{? 1 `+9 \u{C432C}002      (=596+/ \u{C432C}} 33  {{ 33  ;{= 1 `+9 \u{C432C}06       =598+4 \u{C432C}} 8+9 \u{C432C}} 3 \u{C432C}} 33  {{= 19 \u{C432C}} 3 \u{C432C}} 33  {k= 1 `+9 \u{C432C}} 33598+9 \u{C432C}} 3 \u{C432C}} 33    @e1 `+9 \u{C432C}002      (        =596+/ \u{C432C}} 33  {{{9 \u{C432C}} 3 \u{C432C}   |reduce_inputs+9  33  {{{9 \u{C432C}} 3 \u{C432C}} 33  {{= 432C}} 33598+9 \u{C43} 3C}2 \u{C432C}} 33  {{? 1 `+9 \u{C432C}002      (=596+/ \u{C432C}} 33  {{{9 \u{C432C}000#2      \u{C432C}} 3 \u{C432C}} 33  {{= 1 `+9 \u{C432C}} 33598+9 \u{C432C}} 3 \u{C432C}} 33  {{? 1 `+9 \u{C432C}002      (=596+/ \u{C432C}} 33  {{{9 \u{C432C}} 3 \ub/0XFFFFFFFFFbbb50bb.3/0{C432C}} 33  {{= 1 `+9                2       =598+9 \u{C432C}} 3 \u{C432C}} 33  {{= 1 `+9 \u{C432C}} 3 \u{C432C}} 3 \u{C432C}} 33  {{= + 1`9 \u{C432C}\u{ = ni     % objectue

  if rawgenil then
    -- 'reatocal n = 0
    for k in pairs(val) do    for k in pairs(val) do
   uk[val] = ni     - object
    for k, v in pairs(val) do
       if(k) ~= "string" then
    code_table(val, stack)
  local res = {}
  stack = stack or       -u ornot             not26               ornot 0000175390175488 tr        sert(a<=b == fal4se)
  assertert(a>b == false)
  assert(a<=b == 