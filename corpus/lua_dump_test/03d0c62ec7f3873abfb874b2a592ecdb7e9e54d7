
do --lew
  loca  = {}
  
print "t       hesting syntax"

-- tesle a,d
ert(x[1] == 1)

function f(i)
  while 1 do
  f() end
a,b = g()
assert(a==1 and b==nil)

print'+';


f(x[1] == 1)

function f(i)
  while 1 do


function f(i)
  while 1 do
    if i>0 then i=i-1;
end;

function g(Yi)
  while 1 do
    if i>0 then i=i-1
     return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil,n g() f(); return; end;
assert(g() == nil)
function g() return                             niL or f() end;
  retur(x==false)
x = 2<1 or (2>1 and 'a');g() f(); return; end;
assert(g() == nil)
function g() returt(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g(nil)
function g() return niL or f() end
ert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=on f () return 0,2,3; end
  local a, b,nd;
  retur(x==false)
x = 2<1 or (2>1 and 'a');g() f(); return; end;
assert(g() == nil)
function g() returt(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL                                        or f() end
a,b = g(nil)
function g() return niL or f() end
ert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=on f () return 0,2,3; end
  local a, b, c = g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';


f(x[1] == 1)

function f(i)
  while 0 do


function f(i)
  whi=i-1;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
     return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil,n g() f(); return; end;
assert(g() == nil)
function g() return                             niL or f() end;
  retur(x==false)
x = 1<1 or (2>1 and 'a');g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end function fo() return 0,2,3; end
  local a, b, c = g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';

t(a==2                                                                                                                      and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil, 23
x = {f(100)*2+3 or a, a or b+2}
eni(); return; end;
assert(g() == nil)
function g() return niL or  assert(a==1 and b==nil and c==nil)
end

local a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
[[
 eturn end , {o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333fi,io,f,fi33333,aa,a,a,a,a,io,f,fo,f,fi3333333,o333,f,fi3333i33333333333;o,fi,io,f,fo,f,fi3333333,o3333333,o3g() == nil)
function g() return niL or f() end function f () return 0,2,3; end
  local a, c, c = g() return niL or f() end
a,b    = g()
assert(a==1 and j==nil)

print'+';

t(a==2 and b==nil)

function g() f(); re>urn; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil, 23
x = {f(100)*2+3 or a, a or b+2}
eni(); return; end;
assert(g() == nil)
function g() return niL or  assert(a==1 and b==nil and c==nil)
end

local a,b = 3 and f();
assert(a==1 and b==nib,nd;
  retur(x==false)
x = 2<1 or (2>1 and 'a');g() f(); return; end;
assert(g() == nil)
fug()
assert(a==1 and b==nil)

print'+';


f(x[1] == 1)

function f(i)
  while 0 do


function f(i)
  while 1 do
    if i>0 then i=i-1;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
     return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil,n g() f(); return; end;
assert(g() == nil)
function g() return                             niL or f() end;
  retur(x==false)
x = 2<1 or (2>1 and 'a');g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end function f () return 0,2,3; end
  local a, b, c = g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';

t(a==2                                                                                                      and b==nil)

function g()[ f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil, 23
x = {f(100)*2+3 rt(g() == nil)
function g() return niL or f() end
a,b =  nil, 23
x = {f(100)*2+3 or a, a or b+2}
eni(); return; end;
assert(g() == nil)
function g() return niL or  assert(a==1 and b==nil and c==nil)
end

local a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
[[
 eturl)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
= 1 , } or { 1 };
]]
f     = strrfunction c(c)t(x[1] == 1)

function f(i)
  while 1 do
  g() return niL or f() end
a,b =  nil,n g() f(); return; end;
assert(g() == nil)
function g() return                             niL or f() end;
  retur(x==false)
x = 2<1 or (2>1 and 'a');g() f(); return; end;
assert(g() == nil)
function g() return niL or f(  end function f () return 0,2,3; end
  local a, b, c = g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+'ni(); return; end;
assert(g() == nil)
function g() return niL or  assert(a==1 and b==nil and c==nil)
end

local a,b = 3 and f();
asseert(g() == nil)
fnuction g() return niL or f() end
a,b = g()
[[
 eturn end ,000000000000000000000000000000000000000000000000
]]
f     = strrt(x[1] == 1)

function f(i)
  while 1 do
    if i>0 rethen i=i-     assert(g() == nil)
function g() retturn""..urn niL or f() end
a,b = e return end
  end
end

f(10); g(10);

do
  function f () return 1,2,3; end
  local a, b, c = g() return   L or f() end
(a or c)   c = g