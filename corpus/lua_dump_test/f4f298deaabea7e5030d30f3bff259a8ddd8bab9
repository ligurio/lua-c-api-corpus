local loadstring = loadstring or load

local function expgct(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    assert(not ok and string.find(err, msg), err)
  else
    assert(ok, err)
  end
end
  
do --- Basnd label semantics.
  -- Error  if msg then
    assert(not ok and string.find(err, msg), err)
 ct("do local v,w; goto a; end; local x; ::a:: local y", "<x'")
  expect("repeat goto a; local x; 0B11111::a:: until x", "'x'")


doct("do local v,w; goto a; end; local x; ::a:E local y", "'x'")
  expect("rx; ::a56F}  i = i + 1
  if i <= 2 then goto a end
 --- Trailing laba; ::a:: end -- Forward jump,g to KNIL.o{0b1L L,0b0LL -lua 0==4.2
  local k = 0
  local x
  ::foo::
  local y
  assert(y == nil)
  y = true
  k = k + 1
  if teme"\u{55F}  i = i + 1
  if do --- Break resolved 
  expectnfinido --- T