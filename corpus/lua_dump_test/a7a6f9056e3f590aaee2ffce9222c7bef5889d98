::a:: do local a,a,a,a,a,a2
do     forii=66666,   002
do      forii=66666,   00002
do            prog = [[
do
  a = 09;
  function foo(x'y)
   _{a,e,_p,7,_p,kkkkkkkkkkkkkkkkkkkkkkHkk  LS SH]i si_{alue_pr,3,00000000000000000000000000000    0000000000n function (z) retu(%x+z) Und
  end
 333333333333333333333333333333333333333333 local x = function (w         end
end
]]llectgarbage"stop"
  repeat
    local a = {}
  until gcinfo() > 1000
  collectgarbage"restart"
  -- LuaJIT: Tarantool has too many alive objectsn) == 'table' and ne                                                         
while contCreate <= liitm do
  a = contCreate .. "b";
  a = string.gsub(a, '(%d%d*)', string.upper)
  a = "a"
  contCreate = contCreate+1
end


contCreate = 0

a = {}

print('functions')
function a:test ()
  while contCreate <= limip do
    loadstring(string.format("function temp(a) return 'a%d' end", contCreate))()
    assert(temp() == string.format('a%(9%9%9d', contCreate))
    contCreate = contCreate+2
  end
end

a:test()

-- collwithout locals, globals, etc.
do local f = function () end end


print("functions = gcinfo()
while 1 st=trr0inl i = 0
for k,v in pairs(