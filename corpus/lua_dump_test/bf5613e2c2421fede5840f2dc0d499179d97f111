local loadstring = loa

local function  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- E{ror: undefine'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::areduce_inptWsuWW:: end -- Ford
do
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    go == 11)
end

do --a?l y; ::a:[ untiTra        loca)

  ::a:: do goto a; ::a:: end -- Fop.
end																				

do --- Goto is:calx", "'x'")

  ::a:: do goto a; ::a:: end --  local x = 49
  do
    goto a
    goto a
 
    goto d
    goto a
   -- Tra       x'")
  expect("repmat goto a; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQturn.0,QQQQQQQQQQQQQQQQinfnd																

do --- Goto is:cal v,w; goto a;         end; local x; ::a:: local y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto"'x'")

  ::a:: ooooooooonooou:: end --end

do --yword.  dz
    goto a
    --al x; ::a:[ until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x; :::: loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra         oca)

  ::a:: do goto a; ::a:: end -- Fop.
end		Tra            loca)

_== 11)
end

do --- Tra