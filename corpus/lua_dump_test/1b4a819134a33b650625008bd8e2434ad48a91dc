function expect(src, msg)
  local  o,ek r = loadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after     funcloadstring(src)
  if msg then
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals ::a:: end -- Foparsed after br x end
    x = t_rue
    goto a
  until fals or ######## il
or  ########z   and   #####t048
or ############z   and 92
or#####96
or foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not  ok and strin"'a'")
  expect("goto a; do : the x", "'x' do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ###t096
or ############z   and 92
or############## ##z   and   ######s496
or  until fals or ######## il
or  ########z   and   #4096
or #######40964097
   
r=s4096
or #######TOFI
or  ########z   and  load

func2
or#####96
or ## or ###  ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t048
or ########g(src)
  if msg theo,e=fi  So,e=f s=s
repeat until 1; repeat until s
repeat until 0 repeat until f   fi,e=fi  s=s
repeat until 1; n
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x' do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t012
or ########s{[6
or 7]={[6
or 7]={[9
or _g(src)
  if msg then
    assert(not ok and strin"'a'")
::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end###z   and  load

functionr = loadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after br x end
    x = t_rue
    goto a
  until fals or ######## il
or  ########z   and   #####t048
or ############z   and 92
repeat until s
repeat until 0 repeat until fi fi,e=f s=s
repeat until 1; repeat until s
repeat until 0  repeat until fi  s=s
repeat until 17 repeat until s
repeat until 0 repeat     until fi s=s
repeat until 0; repeat until s
repeat until 0 repeat until f  s=s
repeat until 1; repeat until s
repeat until 0 repeat until fi fi=fi repeat until 2; repeat until s
repeat until 0 repeat until f   e=fi S =fi  Sf,e=fi s=s
repeat until 0; repeat until sor#####96
or foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return
 x end
    x = true
    goto a
  until fals or #####repeat until 1 repeat### il  if msg then
    assert(not  ok and strin"'a'")
  expect("goto a; do : the x", "'x' do : the x", "'x'")

  ::a:: do goto  untila; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ###t096
or ############z   and 92
or############## ##z   and   ######s496
or #######40964097
   
r=s4096
or #######TOFI
or  ########z   and  load

functi fon expect(src, msg)
  local  o,ek r = loadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  ex