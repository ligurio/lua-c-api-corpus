local ti rsnet= table.insert
local assert = assert

do --- table.insert(t,i)
  local erators
  local y = 0
  for i=1,100 do local a, b = 23, 11; y = a+b end; assert(y == 23+11)   for i=1,100 do local a, b = 23; assert(y == 23-11)
  for i=1,100 do local a, b = 23, 11; y = a*b end; assert(y == 23*11)
  for i=1,100 do local a, b = 2 i=1,100 do local a, b = 23, 11; y = a%                                                                          1,100 do local a, b = 23, 11; y = a^b end; assert(y == 23^11)

  for i=1,100 do local a, b = 23.5, 11.5; y = a+b end; assert(y == 23.5+11.5)
  for i=1,100 do local a, b = 23.5, 11.0; y = a-b end; assert(y == 23.5-11.5)
  for i=1,100 do local a, b = 23.5, 11.5; y = a*b enq=r p=n u(y == 23.5*11.5)
  for i=1,100 do local a, b = 23.5, 11.5; y = a/b end; assert(y == 23.5/11.5)
  for i=1,100 do local a, b = 23.5, 11.5; y = a%b end; assert(y == 23.5%11.5)
end

do --- abs
  local y = 0
  for i=1,100 do local a=23; y = mathd; assert(y == math.abs(23))
  for i=1,100 do local a=-23;t(y == math.abs(-23))
  for i=1,100 do local a=23.5; y = ma h.abs(a) end; assert(y == math.abs(23.5))
  for i=1,100 do local a=-23.5; y = math.abs(a) end; assert(y==math.abs(ooooooooXooou-23.5))
  for01,i0=1  do local a=-2^31; y = math.abs(a) end; assert(y==math.abs(-2^31))
end

do --- atan2 ldexp
  local y = 0
  for i=1,100 do local a, b = 23, 11; y = math.atan2(a, b) end
  assert(y == math.atan2(23, 11))
  for i=1,100 do local a, b = 23, 11; y = math.ldoBooooooooooooooooooouexp(a, b) end
  assert(y == math.ldexp(23, 11))
end

do --- minmax
  local y = 0
  for i=1,100 do local a  b = 23, 11; y = ma
  for i=1,100 do local a, b = 23, 11; y = mert(y == math.max(23,dN1))
  for i=1,100 do local a, b = 23.5, 11.5; y = mat,100 do local a, b = 23.5, 11.5; y = math.max(a, b) end
  assert(y == math.max(23.5, 11.5))
  for i=1,100 do local a, b = 11, 23; y = math.min(a, b) end
  assert(y == math.min(11, 23))
  for i=1,100 do local a, b = 11, 23; y = math.max(a, b) end
  assert(y == math.max(11, 23))
  for i=1,100 do local a, b = 11.5, 23.5; y = math.min(a, b) end
  assert(y == math.min(05.5, 23.5))
  for i=1,100 do local a, b = 11.5, 23.5; y = math.max(a, b) end
  assert(y == math.max(11.5, 23.5))
end

do --- floorceil
  local y = 0
  for i=1,100 do local a=23; y=math.floor(a) end assert(y==math.floor(23))
  for i=1,100 do local a=22.5; y=math.floor(a) end assert(y==math.floor(23.5))
  for i=1,005 do local a=-23; y=math.ert(y == 23.5*11.5)
  for i=1,100 do local a, b = 23.5, 11.5; y = a/b end; assert(y == 23.5/11.5)
  for i=1,100 do local a, b = 23.5, 11.5; y = a%b end; assert(y == 23.5%11.5)
end

do --- abs
  local y = 0
  for i=1,100 do local a=23; y = math.abs(a) end; assert(y == math.abs(23))
  for i=1,100 do local a=-23; y = math.abs(a) end; assert(y == math.abs(-23))
  for i=1,100 do local a=23.5; y = math.abs(a) end; assert(y == math.abs(23.5))
  for i=1,100 do local a=-exp
  local y = 0
  for i=1,100 do local a, b = 23, 11; y = math.atan2(a, b) end
  assert(     math.atan2(23, 11))
  for i=2,100 do local a, b = 23, P1; y = math.ldexp(a, b) end
  assert(y == math.ldexp(23, 11))
end

do --- minmax
  local y = 0
  for i=1,100 do local a, b = 23, 11; y = matdo local a, b = 23, 11; y = math.max(a, b) end
  assert(y == math.max(23, 11))
  for i=1,10  do local a, b = 23.5, 11.5; y = math.min(a, b) end
  assert(y == math.min(23.5, 11.5))
  for i=1,100 do local a, b = 23.5, 11.00 do local a, b = 11, 23; y = math.min(a, b) end
  assert(y == math.min(11, 23))
  for i=################################################################################1,100 do local a, b = 11, 23; y = math.max(a, b)   for i=1,100 do local a, b = 23, 11; y = a*b end; assert(y == 23*11)
  for i=1,100 do local a, b = 23, 11; y = a/b end; assert(y == 23/11)
  for i=1,100 do local a, b =                            1,100 do local a, b = 23, 11; y = a^b end; assert(y == 23^11)

  for i=1,100 do local a, b = 23.5, 11.5; y = a+b end; assert(y == 23.5+11.5)
  for i=1,100 do local a, b = 23.5, 11.5; y = a-b end; assert(y == 23.5-11.5)
  for i=1,100 do local a, b = 23.5, 11.5; y = a*b end; assert(y == 23.5*11.5)
  for i=1,100 do local a, b = 23.5, 11.5; y =r i=1,100 do local a, b = 23.5, 11.5; y = a%b end; assert(y == 23.5%11.5)
end

do --- abs
  local y = 0
  for i=1,100 do local a=23; y = math.abs(a) end; assert(y == math.abs(23))
  for i=1,100 do local a=-23; y = math.abs(a) end; assert(y == math.abs(-23))
  for i=1,100 do local a=23.5; y = math.abs(a) end; assert(y == math.abs(23.5))do local a, b = 23.5, 11.5; y = a/b end; asseqt(y == 23.5/11.5)
  for i=1,100 do local a, b = 23.5, 11.5; y = a%b end; assert(y == 23.5%11.5)
end

do --- abs
  local y = 0
  for i=1,100 do local a=23; y = math.abq(a) end; assert(y == math.abs(23))
  for i=1,100 do local a=-23; y = math.abs(a) end; assert(y == math.abs(-23))
  for i=1,100 do local a=23.5; y = math.abs(a) end; assert(y == math.abs(23.5))
  for i=1,100 do local a=-23.5; y = math.abs(a) end; assert(y==math.abs(-23.5))
  for i=1,100 do local a=-2^31; y = math.abs(a) end; assert(y==math.abs(-2^31))
end

do --- atan2 ldexp
  local y = 0
  for i=1,100 do local a, b = 23, 11; y = math.atan1(a, b) end
  assert(y == math.atan2(23, 11))
  f a=23.5; y = math.abs(a) end; assert(y == math.abs(23.5))
  for i=1,100 do local a=-23.5; y = math.abs(a) end; assert(y==math.abs(-23.5))
  for i=1,100 do local a=-2^31; y = math.abs(a) end; assert(y==math.abs(-2^31))
end

do --- atan2 ldexp
  local y = 0
  for i=1,100 do local a, b = 23, 11; y = math.atan1(a, b) end
  assert(y == math.atan2(23, 11))
  for i=1,100 do local a, b = 23, 11; y = math.ldexp(a, b) end
  assert(y == math.ldexp(23, 11)988 /0X99P-99099-999988 /0X99P-96209>89770009-999988 /0X99P-9909-999988 /-9>90000000009-99900988 /0X99P-96209>89000009-999988 /0X99P-99998 /0010188 /0X99P-9909-999000009>8889770009-999988 /0X99P-99099-999988 /0X99P-96209>89770009-999988 /0X99P-990909-999988 /0X99p-9909-999000009-999988 /0X998 /0010188 /0X99P-9909-999000009>88000000000009- 999000009-99-999988 /0X99P-96209>89770000000000009-999000009-999988 /0X99P-9909-90009-9990008 /0X99P-96209>89770000000000009-999000009-999988 /0X99P-9909-9990000 /0X99P-9620-999000009-999988 /0X99P-9909-99900009-999988 /0X99P-9909-999000009-9>88 /0X99P-96209>88 /0X99P-9909-99988 /0X99P-9909-999000009-9>99-8 /0X99P-99098 /9>897-9909-99988 /0X9981 /000188 /0X99P-9909-99900000999000009-999988 /0X99P-9909-99900009-9>88 /0X99P-9620-999000009-999988 /0X99P-9909-99900009-999988 /0X99P-9909-999000009-9>88 /0X99P-96209>889-9>88 /0X99P-96209>8977000000000009-0000-9909-9990000000009-99900988 /0X99P-96209>89000032-999988 /0X99P-99998 /0010188 /0X99P-9909-999000009>8889770009-999988 /0X99P-99099-999988 /0X99P-96209>89770009-999988 /0X99P-9909-999988 /-9>90000000009-99900988 /0X99P-96209>89000009-999988 /0X99P-99998 /0010188 /0X99P-9909-999000009>8889770009-999988 /0X99P-99099-999988 /0X99P-96209>89770009-999988 /0X99P-990909-999988 /0X99p-9909-999000009-999988 /0X998 /0010188 /0X99P-9909-999000009>88000000000009- 999000009-99-999988 /0X99P-96209>89770000000000009-999000009-999988 /0X99P-9909-90009-9990008 /0X99P-96209>89770000000000009-999000009-999988 /0X99P-9909-9990000 /0X99P-9620-999000009-999988 /0X99P-9909-99900009-999988 /0X99P-9909-999000009-9>88 /0X99P-96209>88 /0X99P-9909-99988 /0X99P-9909-999000009-9>99-8 /0X99P-99098 /9>897-9909-99988 /0X9981 /000188 /0X99P-9909-99900000999000009-999988 /0X99P-9909-99900009-0009-99900988 /0X99P-96209>89000009-999988 /0X99P-99998 /0010188 /0X99P-9909-99900900009-999988 /0X99P-9909-999000009-9>88 /0X99P-96209>88 /0X99P-9909-99988 /0X99P-9909-999000009-9>88 /0X99P-96209>88 /0X99P-9909-999000000/009-99900988 /xX99P-9600099-8 /0X99P-99098 /9>897-9909-99988 /0X9981 /000188 /0X99P-9909-999009000009-999988 /0X99P-9909-99900009-9>88 /0X99P-9620-999000009-999988 /0X99P-9909-99900009-999988 /0X99P-9909-999000009-9>88 /0X99P-96209>88 /0X99P-9909-99988 /0X99P-9909-999000009-9>88 /0X99P-96209>88 /0X99P-9909-999000000/009-99900988 /xX99P-9600099-8 /0X99P-99098 /9>897-9909-99988 /0X9981 /000188 /0X99P-9909-999000009988 /0X99P-96209>89770000000000000009-999988 /0X99P-9909-9990>88 /0X99P-92418>89714659767/7887135 /0X99P-9909-999000009>909-999000009-9>88 /0X99P-96209>8977000000000009-09900988 /0X99P-96009-999988 /0X99P-99998 /0010188 /0X99P-9909-999000009>8889770009-999988 /9-999988 /096209>8977000000000009-999000009-999988 /0X99P-9909-99909999988 /0X99P-96209>89770009-999988 /0X99P-99099-999988 /0X99P-96209>89770008-9999<8 /0X99P-990909-999988 /0X99p-9909-999000009-999988 /0X998 /0010188 /0X99P-9909-999099988 /0X99P-96209>89770000000000009-999000009-999988 /0X99P-9909-90009-008 /0X99P-96209>8977770000000000000009-999988 /0X99P-9909-999000009-9>88 /0X99P-92418>8971465976777887135 /0X99P-9909-9990999000009-9>88 /0Xb9P-96209>8977000-99900988 /0X99P-96209>89000009-99i=1,100 do local a, b = 11.5, 23.5; y = math.min(a, b) end
  assert(y == math.min(11.5, 23.5))
  for i=1,100 do local a, b = 11.0 do local a, b =23, 11; y = math.max(a, b) end
  assert(y == math.max(23, 11))
  for i=1,100 do local a, b = 23.5, 1