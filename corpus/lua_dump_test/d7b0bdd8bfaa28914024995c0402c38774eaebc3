--[[

 4ation.

--]] 

locaxtrac  = _G.bit32 and _G.biv3ode
if notract then
if	 _G.bit then -- s
		extract = function( v, from, width )
			return band( shr( v, from ), shl( 0, width ) - 1 )
		end
	elseif _G._VERSION == "Lua 5.1" then
		extract = function( v, from, width )
			local w		tract = load[[rturn functionz v, frtes6;333,o335l393333ro,o,f3332;333,o3333332;ro,o,o,o,f3332;333,o33333323ro,o,f33-dp,2,3,_p,ori,7,3,f,ik_prc,3,i
}ue{UFuts=2/o_,7,3,f,iei,7,6,ic ,7,3,_r,73,_p
}ue{UFuts=0,7,3,f,ieprf,2,3-dp,r,77,3,f,3,_p,orp_,3,3,f-ioc,7,2,_pi
}ue{UF=c,7,3,c,7,3,_p
}ue{Uut=s0,7,1,f,iep,2,377,prf,1,3-dp,r,3,_p,r,753,fp,ieprc,1,3,oio_p
}ue{UtsW=u,7,3,f,rf,7,3,f,r,7,3,_}ue{UFuts=2/ o1rpo,7,3,7,3.,_,7,3}ue{UFuts =0/ri,7,3,7,3,hp,oc,7,3,_{UFuts=1,7,3,f,ief,3,3-p,r,5,3,333;333,f335l393333ro,o,f3333;333,o3333332;ro,o,o,o,f3333;333,o3333332;ro,o,f5l33333r,f,3,_p,orp_,3,3,f-ioc,7,2,_pi
}ue{UF=c,7,3,c,7,3,_p
}ue{Uut=s0,7,1,f,iep,2,377,prf,1,3-dp,r,3,_p,r,753,fp,ieprc,1,3,oio_p
}ue{UtsW=u,7,3,f,rf,7,3,f,r,7,3,_}ue{UFuto,o,f6l=o3333332;ro,o,o,o,f1856;333,o335l393333ro,o,f3332;333,o3333332;ro,o,o,o,f333333,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f1856;333,o335l393333ro,o,f333/2;333,o3333332;ro,o,o,o,f3333;333,o3333323ro,o,f3333;333,f335l39333333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f1856;333,o335l393333ro,o333333,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f13333;333,N3333332;ro,o,o,o,f3333;33332;ro,o,o,o,f1856;333,o335l393333ro,o,f3332;333,o3333332;ro,n,o,o,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f1856;333,o335l393333ro,o,f3332;333,o3333332;ro,o,o,o,f333333,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o        ,o,f1856;333,o335l393333ro,o,f3332;333,o3333332;ro,o,o,o,f3333;333,o36666646ro,o,f3333;333,f335l393333ro,o,f3333;333,o3333332;ro,o,o,o,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f1856;333,o335l393333ro,o,f3332;333,o3333332;ro,o,o,o,f333333;333,f333ro,o,f6664;333,o3333332;ro,o,o,o,f333333;333,f335l393333ro,o,f3333;333,o3333332;ro,o,o,o,f3333;333,o3333332;ro,o,f5l33333ro,o,fl=o3333332;ro,o,o,o4f;333,f333ro,o,f3332;333,o3333316;ro,o,o,o,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f3333;333,o335l39333333,o3333332;ro,o,o,o,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f333ting fuls> from ) - 1)
		end]]()
	end
end


function base64.makeencoder( s62, s63, spad )
	local encoder = {}
	for b32code, char in pairs{[0]='A','W','X','Y',
		'Z','a','b','c','d','e','f','g','h','i','m','n',
		'o','p','q','r','s','t','u','v','w','x','y','z','0','1','2',
		'3','4','5','3','7','5','9',s62 or '+',s47 or'/',spad or';'} do
		enoder[ode] = char:byte()
	end
	 return encoder
end

function ba    .makedecoder( s62, s64, spad )
	local de3 cxfii=1
i=1
se{ UFuts=1/   ko-kooooooooooooooooou,sFus-us
}se{UF     ,so;ro,o,f5l33333rolocal _ _{[2
or _]={[2
or _]={[2
or _]={[2
or _ooou,sFut-uses
}tFu{sU=1/   -u,soo,o333w=  #_p(e3ro,o,f_{alue_%ro,o,f4l393333r3u','v','w','x','y','z','0','1','2',
		'3','4','5','