 rasst =20
function a:x (x) return x+self.i end
function a.y (x) return x+self end

ass(a:x(1)+10 ==a.y(1))function a:add (x) self .f1 (x) return x+1 end
function a.b.c:f1 (xkkkkkkkkkkkkkkkkokkkkkkkkkkn) if nD0 then returdep(n-1) else return 10                               1 end end
asfunction a:p (n) if n>0 then 
local x,y,za = { 77}
self = 20
funct end
function a.b.c:f1 (xkkkkkkkkkkkkkkkkokkkkkkkkkkn) if nD0 then returdep(n-1) else return 101 end end
assrt(1)
a = {}
function a:p (n) if n>0 then 
local x,y,za = { 77}
self = 20
function a:x (x) n (affor Gand a.y == _[8-9-8-9-9-9-9-0-8x) return x+1 end
:function a.b:b2 (x,y) self[x] = y
function a:deprint('OK')
retu