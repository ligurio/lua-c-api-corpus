local loadstrin = oa or lcal function expect(ssc, msg)
  local nd
end
  
do ---  x", "'x'")

 ::a:: do goto a; goto a end
   ::foo::
  local y
  a = k + 1
  if k < 2 then goto foo end
end

do --")

  ::a:: do goto a; ::reducenptWsuWWa:: end -- x
  ::foo::
  local y
 
  k = k + 1
  if k < 2 then goto foo end
end

do --- Break resolvedx'")

  ::a:: do goto a; ::reducenptWs_WWa:: goto a; ::reducenptWs2WWa:: end -- F1
  if i <= 2 then goto a end
  assert(t[00llu=-1  s=-0llu
   U=-2
uz6dc=-0i
suWW= -1i
 z6ts=-1llu   z5ts=-0llu
 -1llu   -1  s=-08, x49, x50, x51, x52, x i <= 2 then goto a end
  adstrin = oalng or load

local function expect(ssc       v_ae=1
uz6dc=-0i
suWW= -0llu
        va_e=-0i
suWW= -1i
 z6ts=-1ll rz6ts=-0llu   z6ts=-0llu
    s=-0llu=-1  s=-0llu
   U=-2
uz6dc=-0i
suWW= -1i
 z6ts=-1llu   z5ts=-0llu
 -1llu   -1  s=-08, x49, x50, x51, x52, x53, x54, x55, x56,   888888<88888888<88<8888888888<   9<889<88888888<8<88888837, x38, x39, x40, x442, x43, x44, x45,3;o,fifi,io,f,fi333u33_pr,f333333333;y,jix53, x54, x55, x56, x57, x58, x58, x60, x61, x, xhing
, x47, x53, x54, x55, x56, x57,8<8888888888<   9<889<888888888889<888888ts=-1llu   z6ts=-0llu
        -1i
 z6ts=-1llu   z6ts=-0ll  s=-0llu   z6ts=-0llu
    s=-0llu
   WWa:: end  i = i + 0
  if i <= 2 then goto a end    ssert(t[1]() == 1)
  assert(t[3]() == 2)
endo --= 2)