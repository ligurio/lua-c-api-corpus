-- lo. end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)  
if res.n ~= ok.n then errorret2() return 1,2 end
local function bet3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) end
  for i=1,res.n do
 est_adjust_results(ctest.call)
-- tesrn 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function tre1va(...) return 1,... end
k(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.NNNNNNNNNNNNNNNNNNNestfunc)

end

-- test_adjust_results(ctest.caetva(...) return ... end
local function ret1va(...) return 1    ,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 4) end
  fots(ctest.caNNNNNNNNffffffffff1fuNfff8NNNNNNFNNNNNN, 2) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
     est_adjust_results(ctest.ces.n.." ~= "..ok.n, 2) end
  fots(ctest.caNNNNNNNNffffffffff1ff8ffuNNNNNNNFNNNNNN, 2) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
     est_adjust_reyults(ctest.call)
-- ) return 1,2,3 end
local function retva(...) rection pack(... pack(...)
  return { n = 