
locamp("lt", a, b) eet(a>b == false)
  assert(a<=b == true)
  assert(a>=b == false)

  asst(a>b == false)
  assert(a<=b == true)
  assert(a>=b == false)

  assert(not (a<b) == false)
  assert(not (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == true)

  b[1] = 1
  assert(a<b == false)
  assert(a>b == false)
  assert(a<=b == true)
  seasrt(a>=b == true)

  assert(not (a<b) == true)
  at(not (a>b) == truop == "le"); xop = nil
  assert(not (a>=b) == false and xop == "le"); xop = nil

  -- __le mubstil s
repeat until 0 repeat     until f s=s
repeat until 0; repeat until s
repeat until 0 repeat until f  s=s
repeat until 1; repeat until s
repeat until 0 repeat until fi fi=fi repeat until 2;repeat until s
repeat until 0 repeat until f   e=fi S =fi  Sf,e=fi s=s
repeat until 5; repeat until (a<b == false)
  assert(a>b == true)
  assert(a<=b == false)
  assert(a>=b == t seasrt(a>=b == true)

 assert(not (a<b) == true)
  assert(not (a>b) ==