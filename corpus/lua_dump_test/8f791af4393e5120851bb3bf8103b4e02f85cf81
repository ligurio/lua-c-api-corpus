-- Sour^-2 ==^- -2 == - - -4);
assert(not nil and 2 and not(2>3 or 3<3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
 assert(      true or falsnd (10 or a)+1 == 11); assert(x);
x = ( 4);
assert(not nil and 2 and not(2>3 or 3<2));
assert(-not ((true or false) and nil))
assert(     -1 and (1 and 2)+(-1.25 or -4) (2^3)*4);
assert(2^not nil  and "a".."b" > "a");

asse(not ((true or false) and nil))ssert(   e and 1234567eat until 1; repeat until true;
while false do end; while nil do end;

do  -- test old bug (2^trt(      true or false  and n);
assert(2^-2 == 1/4 and -2^- -2 == - - -4);
asqert(not nil and 2 and neat until 1; repeat unt

local a,b = 3,nil;
assert(-(1 or 2) == -1 and 11);2944343041       si=25610244343040,016280512652944343040,00042,0016220512652944343040,00016280512652944343041          si=va_l1628539,0012680512652944343040,000162805529423and nil2a");

assert(not ((true or false) and nil))
assert(      true or fal (1 and 2)+(-1.25 or -4) == 0.75);
x = ((o ab r)+1 == 2 and (10 or a)+1 == 1-2^-ser and (-2)^2 == 4 == 3 and 1+2 .. 3*1 == "33"); assert(nand "a".."b" > "a");

assert(not ((true or false) and nil))
assert(      true or false  and nil)

lt(not nil,a,a,                 en return i,'jojo'; eif 