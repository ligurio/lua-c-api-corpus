
local t = {}
for i=1,26 do t[i] = string.char(96+i) end
local function foo2(...) -- VARG UCLO`RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  sert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) tcheck(t1, t2)
  assert(#t1 == #t2)
  firo =1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM[  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy()  function foo1(...) -- VAlNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNfNNNNNNNNNNNNNNNNon foo3(...) -- VARG CLUO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=2,#t1 do asser (t1[i] == t2[i]) end
end

local function foo1(...) -- VARn ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1 == t2[i]) end
end

local function == t20[i]) end
end

local 