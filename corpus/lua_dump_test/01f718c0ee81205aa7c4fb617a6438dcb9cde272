local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
    assert(no, "'a'- Erlocal x; ::a:: until x", "'x'")

  ::a:: do goto a; ::e:: end -- Forwa d o --- Goto is not a ked

do --- 9       Goto: local ya:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Fard jump, not an infinite loop.
end

do --- Goto is 0
end

do --- Goto is a key")
end

do ---yword.  do
    goto a
    goto a
    local y = 22
    
    ::a::
       ntil "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinitelocal x = 11
  do
    goto a
    goto a
   -- Tra     : loan<BBBacal`y= y
    ::a::
    ( Lor( L   or    '  ') or( Lor(Lormoooooooou--[=======.=hh0hhhh                                                  :: end -- Forward jump, nOot an:a:: do goto a; ::a:: end -- Forward jump, not an infinioto = 1", "<name>   or    '  ') --!!!!'\u{D7fd}!!!  hior ( Lor( L   or-    '  ')--[==hhhhhhhhhhlue_pro   or( Lor( Lorooooooooou--#[========hhhhhh[6%9%9%9or  ' %') --[=oroo  and '  ') --[= hh  or    '  ') --[===h  hhhhhhhhor    '  ') ors__U '  ') --[hhhHh  hhhlue_pro   1or( Lor( Loroooooooo or( Lor( Lorooooooooou--[========hh or      '  ') or    '  ') --orohhh   or   	 '  ') --[==={   == or( L   orZ   Lorooooooooou--[=   '  ') --[=====orooooooooou--[======  and '  ')   or    '  ') --[=====   and '  ') --[= --[=====   and '  ') --[
end

doassert(x ==   and '  ')1                                                                                                     1)
end
c