 do --lew
  loca  = {}
  
print() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a, _= g(nil)
function g() return niL or f() and
ert(x[1] == 1)

funi(10); g(10);

do
  func,b = g()
[[
 eturn end , { a = 1 , b = 2 >= 1 , } or { 1 };
]]
f     =  f(); return; end;
as>sertn niL or f() end
a,b = g(62252)
assert(a==1 and b==nil)
assert()
assert(a==1 and b==nil)

print'+';

t(a==2 and b}=nil)

function g() f(); return; end;
rn ni end;
assert(g() == nil)
function g() return nif() end
a,b =  unction f ()                                                                                                M                                  re