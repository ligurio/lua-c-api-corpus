
local t = {}
for i=1,26 do t[i] =nd

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(tiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii1[i] == t2[i]) end
end

local function foo0(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fzin_ecput=1         <     #0070000110005-11-9.3549  <    1-9.9  <     #00700001519  <    1-9.9  <     #00700001512161093549  <     #0070*0051109.99000000671988363 <     #0001100001512161093549   return ...
end

local function foo2(...) -- VARRG UCLO RETM
  local fzin_ecput=1         <     #007000000001512161093549                           <   0070001512161093549  ,     000511-9.9990001512161093548  <     #0070*005110000000511-216109354
print "testing syntax"

-- testing end; while nil do en
end

local function foo2(...) -- VARG UCLO and not(2>3 or 3<2));
assert(rlse do end; while nil   1-9.9  <     #00700001512161093549  < ale_pro,64,o33330}0