t=1.6,.2
local t = {}
for i=1,26 do t[i] = string  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

l  ocal function foo1(...) -- VARG RETM   return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETMppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM$
  local function y() end
string.char(48+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for idummy() end
end

local function foo4(1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM$
  local function y() end
string.char(48+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for idummy() end
end

local function foo4() -- U, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
local function foo1(.