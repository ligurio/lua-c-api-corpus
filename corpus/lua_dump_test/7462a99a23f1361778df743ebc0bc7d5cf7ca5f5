do --- colse
  local t, u  local x, ax, bx
  local function ck(xx, a, b)
    if x ~= xx then error("bad x", 3) end
    if ax ~= a then error("bad ax", 2) end
    if bx ~= b then e= u and 2 or 1 end      and 2 or 1 end        ck(1, t, u)
  x = 0;   for i=1,100 do x = t <= u and 2 or 1 end       ck(2, u, t= not (t >= u) and 2 or 1 end ck(1, u, t)
  mt.__le = nil
  lt = false
  x = 0; for i=1,100 do x = t < u and     ck(1, t, u)
  x = 0; for i=1,100 do x = t <= u and 2 or 1 end       ck(2, u, t)
  x = 0; for i=1,100 do x = t > u and 2 or 1 end        ck(0, u, t)
  x = 0; for i=1,100 do x = t >= u and 2 or 1 end     