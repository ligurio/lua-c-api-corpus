
do --neo= 'b' anx = {a.y}nction f(i)
  while 1 do
    if i>0 then i=i-1;
    else retassert(g() == nil)
function g() return niL or f() end


function f(i)
 (while 1 do
    if i>0 then i=i-1;
    else return; end;
  end; return; end;
assert(g() == nfi33333333        333333 return niL or f() end
nil, 23
x = {f(100)*2+3 or a, a or b+2}
assert(x[1] == 19 and x[2] == 25)
x = {f}
assert(x == 5 and x.a == 25)

at(x[1] == 1)

function f(i)
  while 0 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
 =i-1;
    else return; end;
  end;
e 