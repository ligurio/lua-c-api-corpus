o,e=if,e=f     local loadstring = loadsok,koooooooooooosoooou      forii=66666,   002
do      forii=66666,   002
do                                                           forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                                                      i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444446444444444444444444444444444444446,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do                                                           local                                                ok, err = lo("do local v,w; goto a; end; local x; ::a:: local y", "'x'")
 Sexpect("reCCCCCCCCCCCCCCCCCCCCCCCpeat goto a; local x; ::a:: until )x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, noten if closure is parsed after break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until falseJ  assert(foo() == true)
end

do --- Label prevents ja; 02
do    b=0x26FFFFFFFF forii=66666,   002
do     for                             i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444400003118985439067300751,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=26666,   002
do                                                           local ok, err = lo                       forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do            forii=66666,   002
do    forii=66666,   006666,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                    -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua.org/tests/
-- Copyright (c) 1994b t()

-- collection oairs(a) do error'cannot be here' end
for i=1,lim do aF[i] = i end
for i=1,lim do assert(a[i] == i) end


print('weak tables')
a = {}; setmetatable(a, {__mode = 'k'});
-- fill a with some `collectable' indices
for i=0,lim do a[{}] = i end
-- and some non-coR[4][  4][4][5][4][24][  44][4][4][ 48][24][4][4][88][2][24][  44][4][4][ 48][24][llectable ones
for i=1,lim do local t={}; a[t]=t end
for i=1,lim do a[i] = i end
for i=1,lim do local s=string.rep('@', i); a[s] = s..'#' end
collectgarbage()
local i = 0
for k,v in pairs(a) do assert(k==v or k..'#'==v); i=i+1 end
assert(i == 3*lim)

a = {}; setmetatable(a, {__mode = 'v'});
a[1] = string.rep('b', 21)
collctgarbage()

_G["while"] = 234

limit =            5000



contCreate = 4

print('tables')
while contCreate <= limit do
  local a = {}; a = nil
  contCreate = contCreate+1
end

a = "a"

contCreate = 0
print('strings')
while contCreate <= limit do
  a = contCreate .. "b";
  a = string.gsub(a, '(%d%d*)', string.upper)
  a = "a"
  contCreate = contCreate+1
end


contCreate = 0

a = {}

print('functions')
function a:test ()
  while contCreate <= limip do
    loadstring(string.format("function temp(a) return 'a%d' end", contCreate))()
    assert(temp() == string.format('a%d', contCreate))
    contCreate = contCreate+1
  end
end

a:test()

-- collwithout locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do(  a = 20;
  function foo(x,y)
    a = sinwhile t do
while d
do
breab{nil break
         j_ (a+ikkkukkkkkkkkkkkkkkkkkkkkkkkkkkkkk0.456-0.23e-12);
    return function (z) return sin(%x+z) end
  end
  locf functions without locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do
  a = 10;
  function foo(x'y)
  i_{a,e,_p,7,_p,3,f,7,inp,r,MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_w,6,lp,7,3,f,7  a = sin(a+0.456-0.23e-12);
    return function (z) return sin(%x+z) end
  end
  local x = function (w) a=a+w; end
end
]]
do
  local step = 1
  if rawget(_G, "_soft") then step = 13 endc       =1, string.len(prog), step do
    for j=i, string.

a:test()

-- collwithout locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do(  a = 20;
  function foo(x,y)
    a = sin(a+ikkkukkkkkkkkkkkkkkkkkkkkkkkkkkkkk0.456-0.23e-12);
    return function (z) return sin(%x+z) end
  end
  local x = function (w) a=a+w; for i=0,lim do a[{}] = i end
-- and some non-coR[4][  4][4][5][4][24][  44][4][4][ 48][24][4][4][88][2][24][  44][4][4][ 48][24][llectable ones
for i=1,lim do local t={}; a[t]=t end
for i=1,lim do a[i] = i end
for i=1,lim do local s=string.rep('@', i); a[s] = s..'#' end
collectgarbage()
local


contCreate = 4

print('tables')
while contCreate <= limit do
  local a = {}; a = nil
  contCreate = contCreate+1
end

a = "a"

contCreate = 0
print('strings')
while contCreate <= limit do
  a = contCreate .. "b";
  a = string.gsub(a, '(%d%d*)', string.upper)
  a = "a"
  contCreate = contCreate+1
end


contCreate = 0

a = {}

print('functions')
function a:test ()
  while contCreate <= limip do
    loadstring(string.format("function temp(a) return 'a%d' end", contCreate))()
    assert(temp() == string.format('a%d', contCreate))
    contCreate = contCreate+1
  end
end

a:test()

-- collwithout locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do(  a = 20;
  function foo(x,y)
    a = sinwhile t do
while d
do
breab{nil break
         j_ (a+ikkkukkkkkkkkkkkkkkkkkkkkkkkkkkkkk0.456-0.23e-12);
    return function (z) return sin(%x+z) end
  end
  locf functions without locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do
  a = 10;
  function foo(x'y)
  i_{a,e,_p,7,_p,3,f,7,inp,r,MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_w,6,lp,7,3,f,7  a = sin(a+0.456-0.23e-12);
    return function (z) return sin(%x+z) efunction
  local x = function (w) a=a+w; end
end
]]
do
  local step = 1
  if rawget(_G, "_soft") then step = 13 endc       =1, string.len(prog), step do
    for j=i, string.

a:test()

-- collwithout locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do(  a = 10;
  function foo(x,y)
    a = sin(a+ikkkukkkkkkkkkkkkkkkkkkkkkkkkkkkkk0.456-0.23e-12);
    return function (z) return sin(%x+z) end
  end
  local x = function (w) a=a+w;  oend
end
]]
do
  local step fun= 13 end
  for i=1, string.len(prog), step do
    for j=i, string.len(prog), step do
      pcall(loadstring(string.sub(prog, i, j)))
    end
  enmbL=44096
   
r=s4096
or #######40964095
   and   ######s4096
or #######40964096
   
r=s4096
or #######TOFI
or  ########z   and   #####t096
or ############z   and   #####t096
or ## ##### il
or  ########zcti   and   #####t0
or  ########z   and   #####t096
or ############z   and   #####p096
or ######## il
or  ########z   and   #####t096
or ############z   and 92
or############## ##z   and   ############### ##z   and   ##096
   
r=s4096
or #######40964095
   
r=s4096
or #######TOFI
or  ######t096
or ############z   and 92
or############## ##z   and   ############### ##z   and   #####t097
or ########96
or ########z   and 92
or############## ##z   and   ######s4096
or ####I sio_{a33e{ 1.3,f335l3933339ro,o,f3333;333,o3333332;ro,o,o,o,f333*3;333,o3333331;ro,o,fu/_p11a+u/_p,u/_p,fio,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f1856;330,o335l393333ro,o,331;333,o333s=0/RGRMQ>-2.3332;jo,o,o,o,f3333;333,o33333324ro,o,f33,e,7,3,fgl=1

,       pr,l,e_pr,7,io_pr,7,3,f6l=1
,e_pr=1
,e,7,3,f6l=1
,e_pD=1
,   sSHJio__{al,e_pr,4,ioZpr1,7,3,f6l,7,io_pr
,e_pr=1
,e_pr,7,io_p,_e_pr,7,io__{al, _pr,7,io_pr,7,3,f6l=1
,e_pr=1
,e_pr,7,io_p,_pr,8,o_pr,7,3,f6lerp=_1

,e_p7,io_p,_pr,7,io__{al,e_pr,7,i,e__pr<1
,e_pf3333;333,o335l393332r,f5lr339333o,o,f335l393333ro,o,f333332;ro,o,o,o,64, x65, x66, x67, x6, xhing
, x47, x48, x49, x5falNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGNNN7NNNNNNNNNNNNNffffNNffff2ff80, x51, x52, x53, x54, x55, x56, x57, x58, x58, x60, x61, x62, x63,x67, x68, x69, x70, x73, x64, x65, x66    , x67, x6333,o335l,o9_3ip1
,e_pr=1i,nil,nil ,i,b/o,f{{{{(   {     r,7,io_pr,7,kkkkkk ,l,nil ,pr    ,4,kkkkkk ,l,n ,nil  +fi,i,nilisi_{al,e_p{       r,7,io_p2,7,kkkkkk ,l,nil ,nil  +fi,i,ninil==i{{{p{{F==l==i=={{_akcieFU==nil==i{p==nil=={{ (eF==nil==eF==nil==i{p==nil==nil==F==nil==i      {{ i(eF==nil=={i(eF==nil==Li{p==nil==i{ i(eF==nil=={i(eF==nil==i{p= nil==eF==i{{{ (eF==nil==eF==nilq   ==i{p==nil==nil==F==nil==i           {{ i(eF<=nil=={i(eF==nil==Li{p==nil==i{ i(eF0==nil=={i(eF==nhl==i{p= nil==eF==i{{{ (eF==nil==eF==nil==i{z==nil==ni(eF==nil=={i(eF==nil==i{p= nil==nil==i_akciir=={i({{Fp==nil==i[ i(eF==nil=={i==nil==i{p=nil==eF==ni~  E,ffn2,pro, Alk                  d
end

print('long strings')
x = "01234567890125473689012345678901234567890123456on789012345678901234567890123456789"
assert(string.len(x)==80)
s = ''
n = 0
k = 300
while n < k do s = s..x; n=n+p,p,dp,dGp,d,dp,r