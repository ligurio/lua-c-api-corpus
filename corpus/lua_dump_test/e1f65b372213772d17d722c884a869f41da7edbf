local loadstrin = oa or lcal function expect(ssc, msg)
  local nd
end
  
do ---  x", "'x'")

 ::a:: do goto a; goto a end
   ::foo::
  local y
  a = k + 1
  if k < 2 then goto foo end
end

do --")

  ::a:: do goto a; ::reducenptWsuWWa:: end -- x
  ::foo::
  local y
 
  k = k + 1  if k < 2 then goto foo end
end

do --- Break resolvedx'")

  ::a:: do goto a; ::reducenptWs_WWa:: goto a; ::reducenptWs2WWa:: end -- F1
  if i <= 2 then goto a end
  assert(t[0]                 == )en
2d

do --
  ::a:: do goto a; ::a::  i = i +1
  if i <= 2 then goto a end i = i + 1
  if i <= 2 then goto a end
  adstrin = oalng or load

local function expect(ssc       v_ae=1
uz6dc=-0i
suWW= -0llu
        va_e=-0i
suWW= -1i
 z6ts=-1ll rz6ts=-0llu   z6ts=-0llu
    s=-0llu
   U=-4
uz6dc=-0i
suWW= -1i
 z6ts=-1llu   z6ts=-0llu
        va_euea=-1llu   z6s=-0llu
        va_eueas=-0llu
--1i
 z6ts=-1llu   z6ts=-0llu
    s=-0llu
       U=lu   z6ts=-0llu
   va_1ealU=-2
uz66s=-0llu
   s=-0llu
    s=-1
uz6ds=-lu   z6ts=-0llu---1iz6dc=-0i
suWW= -1i
 z6ts=-1ll z6ts=-0llu   z6ts=-0llu
    s=-0llu
  kkkkkkkkkkkkkkkkkkkkkkkkkkkz6ts=-1llu   z7tsa=-1llu   zuue_pruz6dsuz6ds=-lu   z6ts=-0llu---1i
 z6ts=-1llu   z6ts=-0llu
    s=-0lfalNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNlselu
        v_aeuealU=-1
uz6dc=-0i
suWW= -1i
 z6ts=-1ll z6ts=-0llu   z6ts=-0llu
    s=-0llu
   U=-4
u6ts=-1llu   z6ts=-0llu
        va_euea=-0llu   z6s=-0llu
     _eueas=-0llu
--2i
 z6ts=-1llu   z6ts=-0llu
    s=-0llu
       U=-1
uz6dc=-3E0i
suWW= -1i
 z6ts=-1  s=-0llu
 -1llu   z6ts=-0llu
        va_euea=-1llu   z6s=-0llu
        va_eu=-0llu
--1i
 z6ts=-1llu   z3ts=-0llu
    s=-0llu
    -1i
 z6ts=-1llu   z=-0llu
   uz6dc=-0i
suWW= -0llu
 va_e=-00llu   z6ts=-0llu
    s=-0llu
    U=-1 uz6dc=-3E0i
suWW= -1i
 z6ts=-1  s=-0llu
   U=-2
uz6dc=-0i
suWW= -1i
 z6ts=-1llu   z5ts=-0llu
 -1llu   -1  s=-0llu
   U=-2
uz6dc=-0i
suWW= -1i
 z6ts=-1llu   z5ts=-0llu
 -1llu   z6s=-0llu
        va_eu=-0llu
--1i
 z6ts=-1llu   z6uWW= -1i
 z6ts=-1llu   z7ts=-0llu
        va_euea=-1llu   zuue_pruz6ds=-1
uz6ds=-lu   z6ts=-0llu---1i
 z6ts=-1llu   z6ts=-0llu
    s=-0llu
 U=-1
uz6dc=-0i
suWW= -1i
 z6ts=-1ll z6ts=-0llu   z6ts=-0llu
  -lu  -0llu
        eauu=-1
dsts=-1llu   z6ts=-0llu
   va_e1ealU=-2
uz66s=-0llu
   s=-0llu
        v_ae=1
uz6dWW= -1i
 z6ts=-1llu   z6ts=-0llu
        -1i
 z6ts=-1llu   z6ts=-0ll  s=-0llu   z6ts=-0llu
    s=-0llu
   U=-1
uz6dc=-0i
suWW= -1i
 z6t3=-1llu   z7ts=-0llu
       _euea=-1llu   zuue_puzds=-1
uz6ds=-lu   z6ts=-0llu---1iz6dc=-0i
suWW= -1i
 z6ts=-1ll z6ts=-0llu   z6ts=-0llu
    s=-0llu
   U=-1
uz6dc=-0i
suWW= -1i
 z6ts=-1llu   z7tsa=-1llu   zuue_6_suz6ds=-lu   z6ts=-0llu---1i
 zuWW=, msg)
   ::a:: do goto a; goto a end
  goto a end
  assert(t) local x
  ::foo::
 
  if k < 2 then goto foo end
end

do --- Break resolveAx'")

  ::a:: do goto a; ::redtWsu                                                                                    WWa:: end  i = i + 0
  if i <= 2 then goto a end    ssert(t[1]() == 1)
  assert(t[3]() == 2)
endo --= 2)