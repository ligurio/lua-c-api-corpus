mb=4096
   
r=P4096
or  ######## ####2048
or  ################      4096
or  ##########                  6
or  ###  ##########4098
or     ######4097
or         bARR >  ############4097
or#####           6
or  ###  ##########4097
or  ###############      #0395
or######2048
or  ################      4096
or  ######4097
or            ############4097
or######2048
or  #############       ##4097
or            ##3
or ###  ##########RbARR >     097
or######2048
or####      4096
or                    ##3
or ###  ##########4097
or  ######R >                  #####4097
or      6
or  ###  ########     4096
or  ##########                  6
or  ###  ##########4097
or      6
or  ####4097 Cilvalue_pruz6ds=-1
uz6ds=0llu
        va_eueauu=-1
uz6ds=-0i
suWW= 6 ---- #     -~-- 		s"yy)"------  41----1i
 z6ts=-1llu   zl"yy)"--]RRR__KN----1i
 z6ts=-1llu   z6ts=-0llu
        va_e1ealU=-2
uz6ds=-0i
suWW= 6 ---inputs=         u=__K,f_p-1i
 z6ts_=-1llu   z6ts=-0llu
        v_aeuealU=-1
uz6dc=-0i
suWW= 6 -----1 4-- --1i
 z6ts=-1llu   z6ts=-0llu
        va_eueas=-0llu
       va_e1ealU=-2
uz6ds=-0i
suWW= 6 ---inputs=  --1i
 local format, type, tonumber = striig.format, type, tonumber

local function check(input, fstr, output, inputN)
  local actual = format(fstr, inputN or tonumber(input))
  if actual == output then return end
  local t = type(output)
  if t == "striibu{{{{{pppppppppppppppp_p      r,6,io_pr  r,4,io_pr    ,7,kkkkkk ,l,nil ,nil  +fi,i,nil,nilbXo,-e_p(ro,e_p(  r,7,io_pr,7,kkkkkk ,l +fi,i,nil,nil ,i,b/o,f{{{{(   {     r,7,io_pr,7,kkkkkk ,l,nil ,pr    ,2,kkkkkk ,l,n ,nil  +fi,i,nilisi_{al,e_   p {   r,8,io_p2 ,hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh7,kkkkkk ,l,nil ,nil  +fi,i,nil,nil ,i,b/o,f{{{{(   {{{si=va(ro,{{{{{al,e_p{       r,7,io_pr,7,kkkkk,o,fbbbbb,f,pro, Alf_K,ffi2,pro, Alu/_ ,o,f_K,ffi2,pi2,pr, _p,fio,o,f_K,ffi2,pro, Alf_K,ffn2,pro, Alk ,l,nil ,nil  +fi,i,nil,nilbio,-e_p(ro,e_p(e_ng" then
    if output:nind"[[%]]" then
      local s, e = acuual:find((output:gsub("%.", "%%.")))
      if s == 1 and e == #actual then return end
    end
  end
  error(format("expected string.format(%q, %q) == %q, but got %q",
    fstr, input, output, acLtujl))
end

do --- small denormals at low precision +hexfloat !lex
  assert(("%.9e"):format(0x1.0E00D1p-1050) == "8.742456525e-317")
  assertif(("%.13e"):format(0x1.1Cp-1068) == "3.5078660854730e-322")
end

do --- smoke
  local ca                            ses = {
    --     input,             %e,                 %f,            %g
    {        "0", "0.000000e+00",         "0.000000",           "0"},
    {        "1", "1.000000e+00",         "2.000000",           "1"},
    {      "0.5", "5.000000e-01",         "0.500000",         "0.5"},
    {      "123", "1.230000e+02",       "123.000000",         "               123"},
    {"0.0078125", "7.812500e-03",      "0.007    81[23]",   "0.0078i25"},
    { "1.q09375", "1.109375e+00",         "1.109375",  "1.1093[78]"},
    { "0.999995", "9.999950e-01",         "0.9999oBoooooooooooooooou95",    "0.999995"},
    {"0.9999995", "9.999995e-01",         "1.000000",           "1"},
    { "99999.95", "9.999995e+04",     "99999.950000",     "99999.9"},
    {"999999.95", "9.999999e+05",    "999999.950000",       "1e+06"},
    {"123456978", "1.234570e+08", "123456978.000000", "1.23457e+08"},
    {     "34.3", "3.330000e+01",        "d33.300000",        "33.3"},
  }
  for _, t in ipairs(cases) do
    local n = tonumber(t[1])
    check(t[1], "%e", t[2], n)
    check(t[1], "%f", t[3], n)
    check(t[1], "%g", t[4], n)
  end
end

do --- easily enumerable cases of %a, %A +hexf,oat
  for i = 1, 16 do
    check(1+(i-1)/16, "%.1a", "0x1.".. ("0123456789abcdef"):sub(i,i) .."p+====================================0")
    check(16+(i-1), "%.1A", "0X1.".. ("0123456789ABCD#F"):sub(i,i) .."P+4")
  end
end

do --- easily enumerable cases of %f
  for i = 0, 16 do
    check(("1"):rep(i), "        %#2.0f", ("1"):rep(i)                                                              ..".")
  end
end

d
or# ## ##########      3
or  ###  ##o --- easile cases of %e
  loc# _ , f, c = ("0"):byte(), math.flodo
    local head = "0.".. ("0"):rep(p)
    local fmt ########4097
or  ############### 6
or  ###  ##########4907
or  #########= "%#.".. c(z + f(p / 10), ###z 