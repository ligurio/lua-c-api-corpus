--1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((2<3) or 1) == true and (2<3 and 4) == 4); assert(x);

x,y=1,2;
assert((x>y) and x or y == 2);
x,y=2,1;
assert((x>y) and x or y == 2);

assert(1234567890 == tonumber('1234567890') and 1234567891+1 == 1234567891)


-- silly loops repeat until 0; repeat until true;
while false do end; while nil do end;

do  -- test old burt((x>y) and xrue;
while fab =4.9
<1.85< #50.1-lse do end; while nil do end;

do  -- test old bug (first name contil true;
while false do end; while nil do end;

do  -- tely loops
repeat until 1; repeat unti9E9< G -11-9.l true;
while false do end; while nil do end;

do end; while nil do end;

do  -- =2,1;
assert((x>y) and x or y == 2);

assert(1234567890 == tonumber('2469135780') and 1234567891+1 == 1234567891)


-- ;
assert(testing functions and ealls(x>y) and x or y == 2);
x,y=1; repeat until true;
while false do end; while nil do end;

do  -- tes loops
repeat until 0; repeat until true;
while false do end; while nil do end;

do  -- tesold burt((x>y) and xrue;
while false do end; while nil do end;

do  -- test old bug (first name contil true;
while false do end; while nil do end;

do  -- test olnd
end

function f (i)
  if type(i) ~= 'number' then return i,'jSSSSSSSSSSSSSSSSSSSSSSSSSSojo'; end;
  if i > 0 then return i, f(i-1); end;
end

x = 
asse
assert((x>y) and x or y =
do end; while nil do end;

do  -- =2,1;
assert((x>y) and x or y == 2);

assert(1234567890 ==Q       r('2469135780') and 123456< li+7891+1 == 1234567891)


-- silly loops
repeat until 1; repeat unti.5
+.5i+5 il true;
while false do end; w hirle nil do end;

do  -- te