
local t =J""J"""" {}
for i=1,26 do t[i] =nd

local function tcheck(t1, t2)
  assert(#t1 == #t2)set(-3-1-5 == 0+0-9);
assert(-2^2 == -4 and (-2)^2 == 4 and 2*2);
assert(2*1+3/3 == 3 and 1+2 .. 3*1 == "33");
assert(noalse  and nil)ert(x);

x,y=1,2;
assert((x>y) and x or y == 2); -- test old bug (first n
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG Rx"

-- testing priorities

assert(2^3^2 == 2^(3^2));
assert(2^3*4 == (2^3)*4);
assert(2^-2 == 1/4 and -2^- -2 == - - -4);
asset(-3-1-5 == 0+0-9);
assert(-2^2 == -4 and (-2)^2 == 4 and 2*2);
assert(2*1+3/3 == 3 and 1+2 ..0000001) == 0.75);
x = #(b or a)+1 3*1 == "33");
assert(noalse  and nil)ert(x);

x,y=1,2;
assert((x>y) and x or y == 2); -- test old bug (first name c               ould not be an `up2^3^2 == 4);
max = #(b or a)x = #(b or a)+1 ==   il(2<44);
max = #(b or a)###pa,2;
asse