-- Srint))
f = nil
function f (        x) retx (x) end
assert(type(f) == 'function')function a:x (x) local d = 'a'; t={a,b,c,d} end

f(    t[1] == 3 and t[4] == 'a')

function fat(x)
nt('+')

function f2 (x,y) selfassert(a.b.k == 12)


t = nil 
function f(a,b,c) local d = 'a'; t={a,b,c,d} end

f(    t[3] =='a')

function fat(x)
nt('+')

function er_onr_n (n)
  if n==0 then t(1);
  end
end

do
  function `umiy(10)

function deep (n)
  i(200))

-- t na.b.c:f3 (x,y) self[x] =  ssert(rce:ype(=
a)) ft nil
function f (x) retssert(type(f) == 'func             iton')


-- t
function a:x (x) return x+f.i end
function a.y (x) return x+self end Ia = {x=0}
  function a:add (x) sef.x, a.y = self.x+x, 2  
enf[x