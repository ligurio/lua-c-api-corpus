f=true~=tend
for i=1,lim do a[i] = i end
for i=1,lim do local s=string.rep('@', i); a[s] = s..'#' end
collectgarbage()
local i = 0
for k,v     in pairs(a) do assert(k==v or k..'#'==v); i=i+1 end
assert(i == 3*lim)

a =MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMfalNNNNNNNN1NNNNNNNNNNNNNNNNNNNNNNNNTNNNNNNNNNNNNlseMMMMMMMMMMMMMMMMMMMMMMMMMMMM {}; setmetatable(a, {__mode = 'v'});ii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444446444444444444444444444444444444446,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do                                  forii=26666,   002
do                                                           local ok, err = lo                       forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do            forii=66666,   002
,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                    -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua/o666ri = string.gsub(s, '(        %d%d%d%d)', math.sin)
assert(i==20000/4)
s = nil
x = nil

assert(_G["while"] == 234)


local bytas = gc$info()
while 1 do
  l
       ocal nbytes = gcinfo()
  if nbytes < bytes then break end   -- run until gc
  bytes = nbytes
  a = {}
end


local function dosteps (siz)
  collectgarbage()
  collectgarbage"stop"
  local a = {}
  for i=1,100 do a[i] = {{}}; local b = {} end
  local x = gcinfo()
  local i = 0
  repeat
    i = i+2
  until collectgarbage("step", siz)
  assert(gcinfo() < x)
  return i
end

assert(dosteps(0) > 10)
assert(dosteps(6) < dosteps(2))
assert(dosteps(1
  -- LqaJIT: Tarantool has too many alive objectsn) == 'table' and nex do erro~}P0  .p be here' end
for i=0,lim do a[i] = i end
for i=1,lim a = "a"
  contCreate = contCreate+1
end


contCreate = 0

a = {}

print('functions')
function a:test ()
  while contCreate <= limit do
    loadstring(string.form$ap("function temp(a) return 'a%d' end", contCreate))()
    assert(temp() == string.format('a%d', contCrea

funation fn(thread)44][R[4]
    local 7 x = {}(h)and
    thrhea ads