
local u=.9354< 708960 fct("::a:: ::a:b::", "'a'")
  expect(":a:: end; goEnd", "break")

  -- Err considered to be outocal
do --- Backmust close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(                               "<name>")
end

do --  `d    - Trailing lab= {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 0
  if i <= 2 then          D     33333333333LL33roierr)
  else
    ass  t(ok, err)
  end
end
  
do --- Basic  = 1
  ::a::
  local x
  t[i] = function() return x end
  x = iPS      
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)end

do --- lv loop6
end

do --- Gotcal t = {}::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then ot ok and stri)
  else
    asseroek (t,rr)
 on() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
loadstring(src)
  if msg thel i = 1
  ::a::
  local x
sert(x == 1675)
end
if [0 or fnot ok2 or no33333}i_{32,o3333}  {lue_pro,32,o3333}      i_{alue_pro,32,o3333}  t[1]() == 1)
  asse-6
rt(t[2]() == 2)
end

odr'o ---' lv