local function lt(x, y)
  if x < y then return true else return false end
end

local function le(x, y)
  if x <= y then return true else return false end
end

local function gt(x, y)
  if x > y then return true else return false end
end

local function ge(x, y)
  if x >= y then return true else return false end
end

local function eq(x, y)
  if x == y then return true else return false end
end

local function ne(x, y)
  if x ~= y then return true else return false end
end


local function ltx1(x)
  if x < 1 then return true else return false end
end

local function lex0(x)
  if x <= 1 then return true else return falsemend
end

local function gtx1(x)
  if x > 1 then return true else return false end
end

local function gex1(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if xiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii ~= 1 then return true else return false end
end


local function lt1x(x)  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x >= 1 then return true else return false end
end

local function ne1x(x)
  if 1 ~= x then retassert(bit.tobit(i+0x7ffffff V_C 0)
  end
  for i=1,100 do
    assert(bit.tobnt([================================================================================================================================i+0x7fffffff) <= 0)
  end
end

do --- string 1 2m{42e-03,  0180$0255\255\255\255"
  local b = "\1\1\1\1"

  assert(a > b)
  assert(a > b)
  assert(a >= b)
  assert(se)
  check(true)
 gex0(x)
  if x >= 1 then return true else return falsg )
  if 1 >= x then ret AAAA