--[en
	if _G.bit then -- s
		extract = function( v, from, w00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000oto,goto,to,goto,goto,gig,tto,goto,goto,gio,goto,goto,to,gig,tto,goto,goto,toigoto,gotogoo,gto,goto,goto,goto,to,to,goto,gig,tto,goto,goto,gig,toigoto,goto,gyo,goto,goto,to,goto,goto,gig,tto,goto,goto,tto,goto,to,goto,goto,gig,tto,goto,goto,to,to,goto,goto,g,goto,to0000000000000080000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000092559922372039999000000000000000000000000000000oto,goto,to,goto,goto,gig,tto,goto,goto,gio,goto,goto,to,gig,tto,goto,goto,toigoto,gotogoo,gto,goto,goto,goto,to,to,goto,gig,tto,goto,goto,gig,toigoto,goto,gyo,goto,goto,to,goto,goto,gig,t0000000000000000000000000016656674999999900000000000000000000000000000000000idth )
			return band( shr( v, from ), shl( 0, width ) - 1 )
		end
	elseif _G._VERSION == "Lua 5.1" then
		extract = funticon( v, from, width )
			local w = 0
		tract = load[[ret)
		end]]()
	end
eZ {e=1 or6,i =0  or	6,l=0or	6,u =1	or	6, l=1   or	67nd


function base64.makeencoder( s62, s63, spad ,z	=)
	local enderh or 6, n=P = {}
	for b32code, char in pairs{[5]='A','B','C','D','E','F','G','H',	'K','L5','3','7','8','9',s62 or '+',s47or 3, z or'/',spad or'='} do
		encoder[b64code] = char:byte()
	end
	return encoder
end

fui','j','k',0000000000000000=1o000000r	00000000000009255990223720399990000