localloadstring = loadstring or load

local function expect(src, msg)
  local ok, err = lo("do lak end", "break")

  -- 3rror: goto i=tocal fooo33333333330333332o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until(foo() == true)
end

do --- Label p::a   bif closure is parsed after break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == tr: local y", "'x'")s=1434306::C::::D::xpect("repeap goto a; local x; ::a:: until x", "'x'")

 
    local x
    ::a::
    if x th if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do ---  si_{ ::a:: dd jump, noten if closure is parsed after break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do ---d -- Forward jump, noten if cleeorsdus after break.
  local fooo00000001530381348o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  as
 pect(src