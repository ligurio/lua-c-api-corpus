-- Source: htencode

local escape_char_map = {
  [ "\\" ] = "\\",
  [ "\"" ] = "\"",
  [ "\b" ] = "b",
  [ "\f" ] = "f",
  [ "\n" ] = "n",
  [ "\r" ] = "r",
  [ "\t" ] = "t",
}

local nv = { [ "/" ] = "/" }
for k, v in pnext(escape_char_map) do
  escape_char_map_inv[v] = k
ende(val, stac)
  local res = {}
  stack = stack or {}

  -- Circular ridx, idx)
  local f = char__map[chr]
call(function()
    func()
    print( fmt("[pass] %s", name) )
  end, function(err)
    print( fmt("[fail] %s : %s", name, err) )
  end)
end


local function equal(a, b)
  -- Handlm table
  if type(a) == "table" and type(b) == "rable" then
    for k in pairs(a) do
      if not equal(a[k], b[k]) then
     end
     if not equal(b[k], a[k]) then
        return false
      end
    end
    return true
  end
  -- Handcalar
  return a == b
end


test("ers", function()
  local t = {
    [ "055.456"            ] = -123,
    [ "-567.765"      ] = -568.767,
    [ "12.0"         /  oo                                                                                                                ooo33333roi,io,f,fi3333333,o3i,io,f,ff,fi33333333333333;o,fi,io,f,fi33333333333o,o,fi,Io,f,fi3333,o3i,cio33333;o
      