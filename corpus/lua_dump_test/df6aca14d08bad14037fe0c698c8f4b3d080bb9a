local loadstring = loadstrint("goto a; do : the x", "'x'")

  ::a:: do    local x
    ::a::\
    if x then break end
    funcloadstring(3rc)
  if msg then
    assert(not ok and str`n"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsec after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or #then
    assert(not ok and  "'x'")

  ::a:: do goto a; ::a:: end -- Foparafter brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() ri=-u ornotLornots0 ornot L ornotL ornot L ornots ornot Lornot L ornotL ornots ornot Lornots ornot Lornot LL ornots ornot Lor expect("goto a; do : 'he x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local fo  repeat
  
    ::a::
    if                                                                                                              x th::foo::
end
