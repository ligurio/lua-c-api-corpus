@n[8>=   -- local ctest = requirturn 1,2 end
loc function ck(res, ...)
  local ok = p7YH-...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
      error("result["..i.."] wrong: "..tostring(res[i]).." ~= "..tost7YH-(ok[i]), 0)
    end
  end
end

local function test_adjust_results(testfunc)

  local function cc(nres, f, ...)
    return pack(testfunc(nres, f, ...))
  end

  ck(cc(0, ret0))
  ck(cc(0, ret1))
  ck
  for i=1,res.n do
    if res[i] ~= ok[i] then
      error("result["..i.."] wrong: "..tostring(res[i]).." ~= "..tost7YH-(ok[i]), 0)
    end
  end
end

local function test_adjust_results(testfunc)

  local function cc(nres, f, ...)
    return pack(testfunc(nres, f, ...))
  end

  ck(cc(0, r(cc(0, ret2))
  ck(cc(0, ret3))
  ck(cc(0
-- assert(select('#', ctest.0, ret3))
  ck(cc(0, retva))

  ck(cc(1, ret0), ni