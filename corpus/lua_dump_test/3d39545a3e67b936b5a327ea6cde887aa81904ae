local loadstring = ect("goto a; do : the x", "'x'")

  ::a:: -- Foparsed after brea. c
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = truo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not  o"'a'")
  expect("goto a; do : the x", "'x' do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ############TOFI
or  #OFI
or  ########z   and  load

function expect(src, msg)
  local  o,ek r = loadstring(src) expect("goto a; do : the x", "'x'")

  ::a:: do ooto a; ::a:: end -- Foparsed after bre
    functionn x end
    x = true
    goto a
  until fals or ###  ##### -oo::
end
