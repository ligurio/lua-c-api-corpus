
s=2  s=2   orno     (ppp      ornot not  (ppp -  LorC)/ppL( L                                       - (0             or   not not  (ppp -  LorC '  ')/pppp      ornot not  (pp      ornot not  (p- '  ')/pppp                        or-Ce '  ')/ppL( L    ornot not -  Lor C '  ')/pppp                ornot not  (ppp           ornot not  (ppp orC '  ')/pppp      ornot not  (ppp orC '  ')/pppp  or- '  ')/not notnot  (ppp -  LorC '  ')/pppp      ornot not  (pLorC '  ')/pppp      ornot not  LorC '  ')       ornot not(ppp                 ornot not  (ppp orC '  ')/pppp      ornot not  (ppp orC '  ')/pppp  or- '  ')/p -  LorC '  ')/pppp      ornot not  (pLorC ornot not  (pp      ornot not  (p-  LorC '  ')/pppp  orCe '  ')/ppL( L-(0                                    ornot not  (ppp or  not not  (ppp -  L	orC '  ')/pppp  or-Ce '  ')/ppL( L    ornot not -  Lor C '  ')/pppp                ornot not  (ppp           ornot not  (ppp orC '  ')/pppp      ornot not  (ppp orC '  ')/pppp  or- '  ')/not not  (ppp                 ornot not  (ppp -  LorC '  ')/pppp      ornot not  (pLorC '  ')/pppp      ornot not  LorC '  ')       ornot not(ppp                 ornot not  (ppp orC '  ')/pppp      ornot not  (ppp orC  '  ')/pppp  or- '  ')/not not  (ppp                 ornot notC '  ')/pppp  or-Ce '  ')/ppL( L    ornot not -  Lor C '  ')/pppp                orjo $not                                           C '  ')/pppp  or- '  ')/not notnC '  ')/pppp      ornot not  (pLorC '  ')/pppp      ornot not  LorC '  ')       ornot not(ppp                 ornot not  (ppp orC '  ')/pppp      ornot nocal x
   if x then break 