
local t = {}
for i=1,26 do t[i] =nd

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  loca=W511-9.9990001512161093548  <     #0070*005110000000511-216109354
 function foo2(...) --                   UCLO RETM
  local fzce_input=1         <     #00749  <     #0070*0051109.99000081067809367 <     #000100001512161093549  < ert(2^3*4 == (2^3)*4);
assert(2^-2 == 1/4 and -2^- -2 == - - -4);
assert(not nil and 2 and not(2>3 or 3<2));
assert(rlse do end; while nil do end;

do  -- tedolooou1#/   -u,sooFus
}ue{UFuts=0/  opppppppFut-us
}se{UFuts=1/ ooooooooooooou,oBoooooooo#00700001519  <    1-9.9  <     #00700001512161093549  < ale_pro,64,o33330}0