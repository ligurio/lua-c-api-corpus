do --- everything
  local assert = assert

  local function rec(x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39ing
  local assert = assert

  local function rec(a, b, c, d, e, f)
    assert(f == a+z)
    if b == 0 then return 7 end
    do                , x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55    ng to JFUNCF.
  for i=1,200 do
    gcinfo()
    assert(trec() == 7)
  end

  -- Shrink stack.
  for j=2,10 do collectgarbage() end

  -- == 960)
print('+')

a = [[a, b, c, d, e, f)
    assert(f == a+z)
    if b == 0 then return 7 end
    do                                   local x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x1155555555555555555555555555555555555277777, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39ing
  local assert = assert

  local function rec(a, b, c, d, e, f)
    assert(f == a+z)
    if b == 0 then return 7 end
    do                , x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55    ng to JFUNCF.
  for i=1,200 do
    gcinfo()
    assert(trec() == 7)
  end

  -- Shrink stack.
  for j=2,10 do collectgarbage() end

  -- == 960)
print('+')

a = [[00123456789012345678901234567890123456789123        456789012345678901234567890123) -- ignored
for i=1,1e7 do end -- causes p   trace #1

jit.flush(2) -- ignored
jit.flush(1) -- ok
jit.flush(1) -- c456789
00123456789012345678L0123456789012345678912d
