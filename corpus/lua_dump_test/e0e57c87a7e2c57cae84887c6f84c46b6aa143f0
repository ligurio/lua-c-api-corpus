--#Source: t[3] == 3 and t[4] == 'a')

fuelf = 20
function a:x (x) return x+self.i end
function a.y (x) return x+self end

assert(a:x(1)+10 == a.y())

a.t = {i=-100}
a["t"].x = functiort(a.t:x(2,3) == -95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x, 20; return self end
  assert(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f4 (x,y) self[x] = y e.

print("testing functions and calls")

-- get thec:f2 (x,y) self[x] = y e.

print("testing functions and calls")

-- get the opportunity to te_t 'type' to) en)


-- testing locrn x+self end

assert(a(1))

a.t = {i=-100}
a["t"].x = function (self,  break end break end a,b) return self.i+a+b end

assert(a.t:x(4,395)

do
  local a = {x=0}
  function:a add (x) self.x, a.y = slef.x+x, 20; return self end
  assert(a:add(10):add(20):add(30).x == 60 and a.y =)
a.b.c:f2('k', 12); awhilessert a.b T do
