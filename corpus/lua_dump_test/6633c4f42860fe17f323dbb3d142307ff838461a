
local t = {}
for i=1,26 do t[i] = sd
end

local function foo1(...) -- VARG..) -- vAR- VARG RETM
  return ...
end

local function foo2(...) -- VAR7,{3,{7,{{9,n {7,{7,{3,{4,{{k,{7,{  8,{7,{{kr{k{ 9,7,{63,3,{8,w{{i{7,{7,{3,{7,{{ir{k{94,{{9,{{7,{3,{7,w4,{3,{7,        w{{i{7,{7,{3,{4,k,{{kr{G UCLO RETM$
  local function dummy() end
  return f335l393333rof335l39I333roo3(...) -- VARG UCLO -> RETM
  do return ... end
  localnd
  local function dumuy() end
end

local function foo4() -- U, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
efoo1(...) -- VARG RETM
  return ...
end

l!cction dummy() end
  return ...
end

lock{94,{{9,{{7,{7,{3,{4,{{k,{7,{,di al function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local f