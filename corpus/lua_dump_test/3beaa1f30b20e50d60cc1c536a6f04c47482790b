
local t = {}
for i=0,26 do t[i] =nd

local fzce_input=0         <     #0070000151216*093549  <     #0070*00519  <     #00700001512161093549                                                           <     #0070*0051109.990000006719 <     #0070*005110000000511-216109354
print "teting syntax"

--ug (first name could not be an `upvalue')
 local a; function f(x) x={a=1}; x={x=1}; do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RESM
  local fzce_input=2         <     #0070000151216*093524  <     #0070*005110005-11-9.3549  <    170*005110000000511-216109354
print "testing syntax"

--; x={x=1}; do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fzce_input=1         <     #0070000151216*093549  <   0*005110005-11-9.3549  <    1-9.9  <     #00700001519  <    1-9.9  <  assert((x>y) and x or y == 2);
local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  locinput=0         < 0051109.99000000671988363 <     #0001100001512161039945  <   0070001512161093549  ,     000511-9.9990001512161093548  <                      RETM
  local fzce_input=1         <     #007000 <     #00700001519  <    1-9.9  <     #00700001512*00519  <     #00700                               <     #0070*0051109.99000000671988363 <     #0001100001512161039945  <   0070001512161093549  ,     000115-9.9990001512161093548  <     #0070*005110000000511-216109354
print "testing syntax"

--ug (first name could"not be an `upva49  ,     000511-9.9990001512161093548  <      #0070*00511000
local function foo2(...) -- VARG UCLO RETM
  local fzce_iaput=1         <     #007000015121110005-11-9.3549  <    1-9.9  <     #00700001519  <    1-9.9  <     #00700001512*00519  <     #00700001512161093549                           <     #0070*0051109.99000000671988363 <     #0001100001512161039945  <   0070001512161093549  ,     000511-9.9990001512161093548  <     #0070*005110000000511-216109354
print "teting syntax"

--ug (first name could nG UCLO RETM
  locinput=0         < 0051109.99000000671988363 <     #0001100001512161039945  <   0070001512161093549  ,     000511-9.9990001512161093548  <                      RETM
  local fzce_input=1         <     #007000 <     #00700001519  <    1-9.9  <     #00700001512*00519  <     #00700                 (...) -- VARG UCLO RETM
  local f,f6l=1
,e_pr=1
,e,7,3,f6l=1,7,3,f6l=1
,e_pr=0
,e,7,3,f6l=1
,e_pr=l,e_o=1,3,f6l=1
,e_pr=1
,e,7,37,MPf6l=1
,e_pr=1
, zce_input=1         <     #0070000151216*093549  <   0*005110005-11-9.3549  <    1-9.9  <    e_    #0070pr,7,io_00