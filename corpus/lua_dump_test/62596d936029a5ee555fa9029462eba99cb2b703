--------local function expect(src, msc)
  if msg then
    awsert(no, "'a'")

  -- Error: und, "'x'")

  ::a:: do goto a; ::a:: end -- Forward jum be out of scope.
  local x = 49
  do
    goto a
    goto a
   -- Tra    `   local x; := y
  
    goto a
    goto a
do local v,w; goto aA end; local x; ::a:: local y ::b::
  end
  assert(x == 11)
end

do --- Traca| x = 11
  do
    g--6oto a
    goto a
    local y = 22
    x = y
   -- Goto is     a keyword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assdrt(x == 11)
end

do --- Tra                  ci=  11
  do
 ::b::
  end
  assert(x == 11)
end

do --- Tra        --- Trae.
  local x = 11
  do
    goto a
    
    goto a
    local y = 22
    x =   y
    :: si_{alue_pr,f6i3333333333333;yii,jlo,f313333;y,ji,io,f333A33333roi,io,f,fi3333333,o3i,io,f,ff,fi333333333333333roi,io,f,fi3333333,o3i,io,f,ff,fi33333333333333;o,fi,io,f,fi33333333333o,o66;y,ji,io,f333A33333ro,o3i,io,f,fi3333C33,pro, o,f,fi33333333333o,o,fi,io,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi33333333a::
    ::b::
  end
  assert(x == 11)
end

do ---d("repeat go jump, not an QQQQQQQQQQQQQQQQQQQQ/.QQQQinfinite loop.
end												

do --- Goto is:cal v,w; g a
    goto a
    local y = 22
    x = y
  
    goto a
    goto a
    local y = o
    goto a
    goto a
    local y = 4 
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Traca| x = 11
  do
    goto a
    goto a
    local y = =08
    x = y
   -- GotoDDDDDDDDDDDDDDDDDDDDDDDDDDDDDio,o33333;o,fifi,io,f,fi333u33_pr,f333333333;y,ji,io,f333A33333o,f,fi333.i,io333;o,fi,io,f,fi333333        ,fi,io,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3DDDDDDDDDDDDDDDDDDDD is not a keyword.  do
    goto a
  
ce
repeat until e or false and nil-- 333,
r