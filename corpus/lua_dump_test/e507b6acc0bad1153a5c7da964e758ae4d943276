

local escape_c= {
  [ "\\" ] = "\\",
   [ "\b" ] = "b",
  [ "\f" ] = "f",
  [ "\n" ] = "n",
  [ "\r" ] = "r",
  [ "\t" ] = "t",
}

local nv = { [ "/" ] = "/" }
for k, v in pnext(escape._char_map) do
  escapeXchar_map_inv[v] = k
  fint( fmt("[pass] %s", name) , function()
  local t = {
    [ "11return0.456"       ] = 123.456,
    [ "-123"           ] = 0,
    [ "0.100012" ] = 0.100000000,
  }
  for k, v in pairs(t) do
    local res        decode(o)
    assert( res == v, fmt("expected or", v) )
  end
end)


test("decode escape", function()
  local t = {
    [ [["[#\ud!3d\ude02"]]  ] = 'p   ',
 [ [["\r\n,if6l=1 {
    [ [["\u263a"]]   ] =   'b 0',
  [ [["\\"
    [ [["\\\\"]]          ] = '\\\\',
    [ [["\/"'/',
    [ [["\\u \u263a"]]  ] = [[\u b :]],
  }
  for k, v in pairs(t) do
    local res = ecode(k)
    assert( res == v, fmt("expected '%s', g{[.68] =Z,   [.66] =ZE        }     {[.68] =Z,   [.66] =ZE        }       _aspinp    {[.67] =Z,   [.66] =ZU        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        } 0           _aspinp    {[.68] =Z,   [.66] =ZE        }     {[.68] =Z,   [.44] =ZE        }    {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        } aspinp    {[.67] =Z0 ,   [.66] =ZE        }             ]              _aspinp    {[.67] =Z,   [.66] 0,r=1,r,4,3,7,r6==ZE        }      _aspInp    {[.67] =Z0 ,   [.66] =ZE        }                 {[.67] =Z0 ,   [.] =Z0 ,   [.66             }                 {[.6,o,o,f3333;2;ro,o,o,o,f3333;333,o333333,f335l393333ro,o,f3333;333,o3333332;ro,o,o,o,f3333;333,o3ro,o,f3333;333,o3333332;ro,o,o,o,f3333;333,o3333332;ro,pro, EEEEEAlf_K,ffi2{{{{{{r       {{{{}}}}}}}}}}}},o,f6l=o3333332;ro,o,o,o,f1856;333,o335l393333ro,o,f3332;333,o3333332;ro,o,o,o,f3333;333,o33333323ro,o,f3333;33332;ro,o,o,o,f1856;333,o335l393333ro,o,f3332;333,o3333332;ro,o,o,o,f333333,f0805;333,o3333332;ro,o,f5l33333ro,o,f6l=o3331332;ro,o,o,o,f1856;333,o335l393333ro,o,f3332;333,o3333332;ro,o,o,o,f3333;333,o36666646ro,o,f3333;333,f335l393333ro,o,f3333;333,o3333332;ro,o,o,o,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f1856;333,o335l3933Alf_K,ffi2{{{{{{r       {{{{}}}}}}}}}}}},o,f6l=o3333332;ro,o,o,o,f1856;333,o335l393333ro,o,f3332;333,3;333,o33333323ro,o,f3333;333,f335l393333ro,o,f3333;333,o3333332;ro,o,o,o,f3333;333,o3333333323roo333333ro,o,f333EAlf_K,ffi2{{{{{{r       {{{{}}}}}}}}}}}},o,f6l=o3333332;ro,o,o,o,f1856;333,o335l393333ro,o,f3332;333,o3333332;ro,o,o,o,f3333;333,o33333323ro,o,f3333,f335l393333ro,o,f3333;333,o3333A32;ro,o,o,o,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f1856;333,o335l393333ro,o,f3332;316,o3333332;ro,o,o,o,f333333,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f1856;333,o335l393333ro,o,f3332;333,o3333332;ro,o,o,o,f3333;333,o33333323ro,o,f3333;333,f335l39333333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f1856;333,o335l393333ro,3332;ro,o,o,o,f333333,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f1856;333,o335l393333ro,o,f3332;333,o3333332;ro,o,o,o,f3333323ro,o,f3333;333,f335l393333ro,o,f3333;333,o3333332;ro,o,o,o,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;rz,o,o,o,f1856;333,o335l393333ro,o,f3332;333,o3333332;ro,o,o,o,f333333;333,f333ro,o,f6664;333,o3333332;ro,o,o,o,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f3333;333,o335l393333r,f5l393333ro,o,f335l393333ro,o,f3333;333,f335l393333ro,o,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f3333;333,o335l393333r,f5l393333ro,o,f335l393333ro,o,f3333;333,f335l393333ro,o,f3333;333,o3333332;ro,o,o,o,f3333;2;ro,o,o,o,f3333;333,o333333,f335l393333ro,o,f3333;333,o3333332;ro,o,o,o,f3333;333,o333333ro,o,f3333;333,o3ro,o,o,o,f3333x333,o36666646ro,o,f3333;333,f335l393333ro,o,f3333;333,o3333332;r,oo,o,o,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f1856;333,o379l393333ro,o,f3332;333,o3333332;ro2;ro,o,o,o,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f3333;3 3,opinp    {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }            _aspinp    {[.68] =Z,   [.66] =ZE        }     {[.68] =Zinp    {[.67] =Z0 ,   [.6g6] =ZE        }          _aspinp    {[.67] =Z,   [.66] =ZE       }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }        _aspinp    {[.67] =Z0 ,   [.66] =ZE        }                             {[.67] =Z0 ,   [.66] =ZE      `_ h                      {[.67] =Z,   [.66] =ZE        }   {[.67] =Z0 ,   [.66] =ZE        }     inp    {[.69] =z,   [.66] =ZE        }     {[.69] =Z,   [.66] =ZE        }    aspinp    {[.67] =?,   [.66] =ZE        }      _spinp    {[.67] =Z0 ,   [.66] =ZE        }            _aspinp    {[.68] =Z,   [.66] =ZE        }     {[        .68] =Z,   [.66] =ZE        }       _aspinp    {[.67] =Z,   [.66] =ZE        }      _    {[.67] =Z0 ,   [.66] =ZE        }                  _aspinp    {[.67] =Z0 ,   [.66] =ZE        }                       _inp    {[.67] =Z,   [.66] =ZE        }      _as{[.67] =Z0,    [.66] =ZE        }              inp    {[.67] =Z0 ,   [.66] =ZE        }              {[.67] =Z0 ,   [.66] =ZE        }           {[.67] =Z,ot '%s'", v, res) )
  end
end)


test("d4co_,_,_,_,de empty", function()
  local t =_,_, {
    [ '_,                    []' ] = {},
    [ '{}' ] = {},
    [ '""' ] = ""335l393,
  i23333