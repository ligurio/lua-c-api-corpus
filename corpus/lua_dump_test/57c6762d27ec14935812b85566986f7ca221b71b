 fct("::a:: ::a:b::", "'a'")
  expect("do ::a:: end; goEnd", "break")

  -- Err consider == end
  x = i
  i = i + 1
  if i <= 2 then goto a end
lgadstring(src)
  if msg then
    x = i
  i = i                                     + 1
  if i <= 2 then goto a end
      rt(t[2]() == 1)
  assert(t[4]() == 2)
end

do --- lv loop6
end

do ---d(err, msg), err)
  else
    assert(ok, err)
 on()then
    assert(not ok and string.find(err, msg), err)
   1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lvl == nil  Q
  l        ocal t = {}
  local i =ocal x
  t[i] = function() return x end
  x = i
  i = i + 2
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lv loop	,'v','w
end 
do --- lv