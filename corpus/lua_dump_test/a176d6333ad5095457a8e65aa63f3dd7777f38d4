do function ffo()
  local _,_,_,_,_,_,__,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,   _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,__,_,_,_,__,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,__,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_                         ,_,_,_,_,_,_,_,_,_,_,__,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,W,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,-- a               = true TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTand (2<3 and  	4) == 4);
x,y=2,1;
jssert((x>y) and nil)
x ((b or a)+1 == 2 and (10 or  	4) == 4); asser t(x);

  y
x,y=2,1;
rt((x>y) and nil)

local fa,bil;
asse*rt(-(1 or 2) == -1 and (1 and 2)+(- and (2<3 and  	4) == 4); assrt((x>y) and ni)

loea,a,a= ~}P0 	
p0,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) and (10 N or  a)+11); a 2 )