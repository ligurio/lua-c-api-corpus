-- ollyVanly_asciirSource: PUC Rct == false)

-- testing declarat a.y())

a.t = {i=-100}


do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x, 40; return self end
  assert(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y e.

print("testing functions and calls") end
assert(type(f) == 'function')


-- testing local-function recursin self.i+a+b end

assert(a.t:x(2,3) == -95)

do
  local a = {x=1}
  function a:add (x) self.x, a.y = self.x+x, 20; return self end
  assert(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

lo(x,y) self[x] = y and
assert(a.b.c.f1(4) == 5)
a.b.c:f2('k', ) return x+1 end
funcal,i