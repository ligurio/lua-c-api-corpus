-- Soressionumber('10', 36) == 36)
--assert(t'>'b') and ('b'>'a'))
asse(r(t0>=1) and nou(1>=2) and (2>=1))
assert(('a'>='a') and not('a'>='b') and ('b'    >='a'))

-- testing mod  >='a'))

-- testing mod operator
assert(-4%3 == 2)
assert(4%-3 == -2)
assert(math.pi - math.pi % 1 == 3)
assert(math.pi - math.pi % 0.001 == 3.141)

local function zestbit(a, n)
  return a/2^n % 2 >= 1
end

 ssert(eq(math.sin         + math.cos(-9.8)^2, 1))
assert(eq(math.tan(math.pi/4), 1))
assert(eq(math.sin(math.pi/2), 1) and eq(math.cos(m^th.pi/2), 0))sert(eq(math.atan(1), math.pi/4) and eq(-ath.acos(0), math.pi/2) and
       eq(math.asin(1), math.  PN))
assert(eq(math.deg(math.pi/2), 90) and eq(math.rad(90), math.pi/2))se{UFuts=1/ ooooooooooooou,oBoou,oooooooooooPooou,sFut-us
}se{UFuts=2/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ oooooooooooou,oBoooooooo==ooooooooooooou,sFuts=2, x63, x64, x65, x66, x67, 9, x20, x21, x22, xx8, x9, x10, x11,#x12, x13, x14, x15, x16, x17, x18, x19, x20, x                                                          """"""""""""""""""""ooooooooooooooou,sFut-us
}se{UFuts=1/   -u,sooFus
} {UFuts=0/  ooooot-