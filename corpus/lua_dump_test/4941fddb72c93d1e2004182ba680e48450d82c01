-- Sou

function a.f1 (x) return x+1 end
function a.b.c:f2 (x,y)sse(a.b.f1  == 'a')

function fat(x)
  if  1 then returreassert(ing "loadst) ")()

function err_on_n (n)
if n==0 then erroet(1);
  end
end  function dummy (n)
    if n > 5 then
function deep (n)p(n  ) eneep( )

-- testill
function deep (n) if n>0 then eep(n-1) else returt(deep(30000) == 101)
a = {}
function a:deep (n)   function a:add (x) sel(a:add(10):add(20):add(30)== 20)
end

local a = {_={c{}}}

function a.b.c.f0 (x) 
function a.b.c:f2 (x,y)a.b.c:f2('k', 12); assert(12)
t = nil   -- 'decla' t
function f(a,c,c) local eturns

function unlpack (t, i)
  i = i or 1
end

function e(t1, t2)
  
  end

function f() return 1,2,30,4 end
function r,3