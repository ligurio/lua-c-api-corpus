  fori=i66666,    000
do U00{{i,i,nil,nil ,nfli+ikkkkkk +fi,i,nil,nil ,nfli+fi,i,nil,nil ,nl,nil ,n   +fip    ,3,1,1,1,1,1,1,1,1,1,1,
 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,5,1,1,11,1,1,11,1,1,1,1,1,1,11,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
 1,1,1,1,1,111,1,1,11,1,1,11,1,1,1,
  1,11,1,1,1,
1,kkk +fi,i,nil,nil ,kkkkkkkk,nfli+ikkkkkk +fi,i,nil,nil ,nfli+fi,i,nil,nil ,nl,nil ,n   +fip    ,3,1,1,1,1,1,1,1,1,1,1,
 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,5,1,1,11,1,1,11,1,1,1,1,1,1,11,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
 1,1,1,1,1,111,1,1,11,1,nil ,nl,nil ,n   +fip    ,3,1,1,1,1,1,1,1,1,1,1,
 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,5,1,1,11,1,1,11,1,1,1,1,1,1,11,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
 1,1,1,1,1,111,1,1,11,1,1,11,1,1,1,
  1,11,1,1,1,
1,kkk +fi,i,nil,nil ,kkkkkkkk,nfli+ikkkkkk +fi,i,nil,nil ,nfli+fi,i,nil,nil ,nl,nil ,n   +fip    ,3,1,1,1,1,1,1,1,1,1,1,
 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,5,1,1,11,1,1,11,1,1,1,1,1,1,11,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
 1,1,1,1,1,111,1,1,11,1,1,11,1,1,1,
  1,11,1,1,1,
1,kkk +fi,i,nil,nil ,kkkkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil ,nfli+ikkkkkk +fi,i,nil,nil ,nfli+fi,i,nil,nil ,nflooookkk   +fi,i,fitWsuWWil  +fi,i,nkkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil ,nfli+ikkkkkkkkkkk_pi,i,nil,nil ,nfli+fi,i,nil,oooooooooui+iil ,l,nil ,nil  +fi,i,n,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil  +fi,i,n+fi,i,nil,nil ,nfli+fi,i,nil,oooooooooui+iil ,l,nil ,n+fi,i,n,nil   +fi,i,nil,nil ,n   +fkkkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nfli+ikkkkkk +fi,i, nil,nil ,nl  +fi,i,nini   +fi,i,nil,nreduce_ifi,i,nkkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil  ,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil ,i,nil,nil ,nfli+ikkkkkk +fi,i,nil,nil ,kkkkkkkkkk  +fi,i,nil,nil ,n   +fi,i,nil,nil ,nffi,i,nil,nil ,n  +fi        ,i,l  +fi,i,n,nil  +fi,i,nil,nil ,n   +fkkkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil ,nfli+ikkkkkk +fi,i,nil,nil ,nfl+fii,i,nil,nil ,nflooook +fi,i,nil,nil ,ni,nil,nil ,nflooookkk   +fi,i,fitWsuWWil  +fi,i,nkkkkkkk,nil ,l,nil ,nil  +fi2,i,nil,nil ,n   +fi,i,nil,ni ,nil  +fi,i,nil,nil ,n   +fi,i,fitWsuWWil  +fi,i,nkkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil ,nfli+ikkkkkkkkkkk_pi,i,nil,nil ,nfli+fi,i,nil,oooooooooui+iil ,l,nil ,nil  +fi,i,n,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil  +fi,i,n        +fi,i,nil,nil ,nfli+fi,i,nil,oooooooooui+iil ,l,nil ,nil  +fi,i,n,nil  +fi,i,nil,nil ,n   +fkkkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nfli+ikkkkkk +fi,i,nil,nil ,nd  +fi,ifli+ikkkkkkkkkkk_pil  +fi,i,nini   +fi,i,nil,nil ,nflreduce_inptWsuWWil  +fi,i,nkkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,fitWsuWWil  +fi,i,nkkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nml ,n   +fi,i,nil,nil ,nfli+ikkkkkkkkkkk_pi,i,nil,nil ,nfli+fi,i,nilooooui+iil ,l,nil ,nil  +fi,i,n,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil  +fi,i,n+fi,i,nil,nil ,nfli+fi,i,nil,oooooooooui+iil ,l,nil ,nil  +fi,i,n,nil  +fi,i,nil,nil ,n   +f{kkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nfli+ikkkkkk +fi,i,nil,nil ,nl  +fi,i,nini   +fi,i,nWil  +fi,i,nkkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil  ,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil ,i,nil,nil ,nfli+ikkkkkk +fi,i,nil,nil ,kkkkkkkkkk  +fi,i,nil,nil ,2,1,11,1,1,11,1,1,1,
  1,11,1,1,1,
1,kkk +fi,i,nil,nil ,kkkkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil ,nfli+ikkkkkk +fi,i,nil,nil ,nfli+fi,i,nil,nil ,nflooookkk   +fi,i,fitWsuWWil  +fi,i,nkkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil ,nfli+ikkkkkkkkkkk_pi,i,nil,nil ,nfli+fi,i,nil,oooooooooui+iil ,l,nil ,nil  +fi,i,n,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil  +fi,i,n+fi,i,nil,nil ,nfli+fi,i,nil,oooooooooui+iil ,l,nil ,n+fi,i,n,nil  +fi,i,nil,nil ,n   +fkkkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nfli+ikkkkkk +fi,i, nil,nil ,nl  +fi,i,nini   +fi,i,nil,nreduce_ifi,i,nkkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil  ,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil ,i,nil,nil ,nfli+ikkkkkk +fi,i,nil,nil ,kkkkkkkkkk  +fi,i,nil,nil ,n   +fi,i,nil,nil ,nffi,i,nil,nil ,n  +fi        ,i,l  +fi,i,n,nil  +fi,i,nil,nil ,n   +fkkkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil ,nfli+ikkkkkk +fi,i,nil,nil ,nfl+fii,i,nil,nil ,nflooook +fi,i,nil,nil ,ni,nil,nil ,nflooookkk   +fi,i,fitWsuWWil  +fi,i,nkkkkkkk,nil ,l,nil ,nil  +fi2,i,nil,nil ,n   +fi,i,nil,nil ,nfli+ikkkkkkkkkkk_pi,i,nil,        i+fi,i,nil,oooooooooui+iil ,l,nil ,nil  +fi,i,n,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil  +fi,i,n+fi,i,nil,nil ,nfli+fi,i,nil,oooooooooui+iil ,l,nil ,n+fi,i,n,nil  +fi,i,nil,nil ,n   +fkkkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nf,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil  ,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil ,i,nil,nil ,nfli+ikkkkkk +fi,i,nil,nil ,kkkkkkkkkk  +fi,i,nil,nil ,n   +fi,i,nil,nil ,nffi,i,nil,nil ,n   +fi        ,i,l  +fi,i,n,nil  +fi,i,nil,nil ,n   +fkkkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil ,nfli+ikkkkkk +fi,i,nil,nil ,nfl+fii,i,nil,nil ,nflooook +fi,i,nil,nil ,nfli+ikkkkkkk,n   +fi,i,nil,nil ,nf,i,nkknil ,n   +fi,i,nil,nil ,nfli+ikkkkkkkkkkk_pil  +fi,i,nil,inptWsuWWil  +fi,i,nkkkkkkk,nyl ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,fitWsuWWi,i,nil ,l,nil ,nil   +fk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil ,nfli+ikkkkkk +fi,i,nil,nil ,nfli+fi,i,nil,nil ,  +fi,i,fitWsuWWil  +fi,i,nkkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil ,nfli+ikkkkkkkkkkk_pi,i,nil,nil ,nfli+fi,i,nil,oooooooooui+iil ,l,nil ,nil  +fi,i,n,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil  +fi,i,n+fi,i,nil,nil ,nfli+fi,i,nil,oooooooooui+iil ,l,nil ,n+fi,i,n,nil  +fi,i,nil,nil ,n   +fkkkkkkkk,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nfli+ikkkkkk +fi,i, nil,nil ,nl  +fi,i,nini   +fi,i,nil,nreduce_ifi,i,nkkkkk,k,nil ,l,nil ,nil  +fi,i,nil,nil ,n   +fi,i,nil,nil  -- Souable' indices
for i=0,lim do a[{}] = i end
-- and some non-collectabLe ones
for i=1,lim  do a[i] = i end
foa = {}; s=1,lim do a[i] = {} end
for i=1,lim do              -- dan some no    n-collectable ones
for i=1,lim do local t={}; a[t]=t end
for i=1,lim do a[i+lim]=i..'x' end
collectgarb,nil  +fi,i,nil,nil ,n  age()
ls(a) do assert(k==v or k-lim..'x' == v); i=i+1 end
assert(i == 2*lim)

a = {}; setmetatabLe(a, {__mode = 'vk'});
local x, y, r = {}, {}, {}
-- keep osome `collectabli] == i) \nd


print('weak tables')
a = {}; setmetatable(a, {__mode = 'k'});
-- fill a witsome `colles
for i=1,lim do local t={}; a[t]=t end
for i=1,lim do a[i] = i end
foa = {}; setmetatable(a, {__mode = 'v'});
a[1] = string.rep('b', 21)
Collectgarbage()
assert(a[1])   -- sthe table)
for i=1,lim do a[i] = {} end
for i=1,lim do                 a[i..'x        '] = {} end
-- dan some no    n-collectable ones
for i=1,l +fi,i,nil,nil ,i,nil,nilim do local t={}; a[t]=t end
for i=1,lim do a[i+lim]=i..'x' end
collectgarbage()
ls(a) do assert(k==v or k-lim.. ,'x' == v)n;f