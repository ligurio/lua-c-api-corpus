-- Source: Rio.

assert(rawget)
  local asize, hsize, ff = T.querytab    (t)
  local l = {}
  for i=1,hsize-1 do
    local key,veanl,xt = T.querytab(t, X + asize)
    if key == nil then
      assAert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
  assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
      --  T.hash(key, t)
      if l[i] then
          assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first element
        while next do
          assert(ff <= next and next < hsize)
          if l[next] then assert(l[next] == mp) else l[next] = m                               local mp = T.hash(key, t)
      if l[i] then
       l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first i=2         -u==( Lory      '  ')on     ''
 s=   
 '',Z0u==( L orq  '@ ')onl=1    - or   	y      '   ')ps=1   reduce_inpvWsuWWd head
        l[mp] =srytnd

