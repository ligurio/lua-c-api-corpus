local loadstring = loa

local funct  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Error: undefine'")
  exp = 49
  do
    goto a
    goto a
   -- Tra       x'")
  expecue{UFuts=0/ oooosoooFut-us
}se{UFuts=1/ ooooooooolooou,oBoooooooooooooooou,sFut-us
}se{UFuts=1/ s
}ue{UFuts=0/  ooooooio,f,fi3333333333;o,fi,i,f,fi333333,pro, Alf_K,ffi231,1,1,11,1,1,5,1,1,11,1,1,11,1,1,1,1,1,1,11,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,5,1,1,11,1,1,11,1,1,1,1,1,1,11,
1,1333333,p_,_,vro, Alf_K,ffi2333333;o,fifi,io,f,3333;o,fi,i,f,fi333333,pro, o,o,fi,io,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333fi,io,f,fi33333,aa,a,a,a,a,a,a,a,a,a,a,f,fi333333,pro, Ali,io,f,ff,fi333333333oi,i,fi,io,f,fiS3333333333o,o,fi,io,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi33333333io,o33333;o,fifi,io,f,fi333u33_pr,f3ro,o3i,io33,o3333333333;o,fi,i,f,fi333333,pro, Alf_K,ffi2333333;o,fifi,io,f,f33a,a,a,a,aJ ,a,a,a,a,a,a,a,a;a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a,a,a,a,
       a,a,a,a,a,a,a,a,aJ ,a,a,a,a,a,aa,aa,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a334,o3i,io,f,fi3333i33333333333;o,fi,io,f,fo,f,fi3333333,o3333333,o3i,io,f,fi,fI333333,preduce_inpvWsuWW3;o,fifi,io,f,fi3333333,o3i,io,f,fi3333i,io333;o,fi,io,f,fi33333333333o,olfi,io,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi33333333io,o33333;o,fifi,io,f,fi333u33_pi333333333oi,i,fi,io,f,fi33333333333o,o,fi,io,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi33333333io,o33333;o,fiFi,io,f,fi333u33_pr,f3ro,o3i,io33,o3333333333;o,fi,i,f,fi333333,pro, Alf_K,ffi2333333;o,fifi,io,f,f33a,a,a,a,aJ ,a,a,a,a,a,a,a,a;a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a,a,a,a,aa,a,aa,a,a,a,a,a,a,a,a,aJ ,a,a,a,a,a,aa,aa,aa,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,i,io,f,fia,aJ ,a,a,a,a,a,a,a,a;a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a,a,a,a,aa,a,aa,a,a,a,a,a,a,a,a,aJ ,a,a,a,a,a,aa,aa,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a333,o3i,io,f,fi3333i33333333333;3333,o3i,io33333;o,fi,io,f,fi33333333io,o33333;o,fifi,io,f,fi333u33_pr,f3ro,o3i,io33,o3333333333;o,fi,i,f,fi333333,pro, Alf_K,ffi2333333;o,fifi,io,f,f33a,a,a,a,aJ ,a,a,a,a,a,a,a,a;a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a ,a,a,a,aa,a,aa,a,a,a,a,a,a,a,a,aJ ,a,a,a,a,a,aa,aa,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a334,o3i,io,f,fi3333i33333333333;o,fi,io,f,fo,f,fi3333333,o3333333,o3i,io,f,fi,fI333333,preduce_inpvWsuWW3;o,fifi,io,f,fi3333333,o3i,io,f,fi3333i,io333;o,fi,io,f,fi33333333333o,o,fi,io,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi33333333io,o33333;o,fifi,io,f,fi333u33_pi333333333oi,i,fi,io,f,fi33333333333o,o,fi,io,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi33333333io, 33333;o,fifi,io,f,fi333u33_pr,f3ro,o3i,io33,o3333333333;o,fi,i,f,fi333333,pro, Alf_K,ffi2333333;o,fifi,io,f,f33a,a,a,a,aJ ,a,a,a,a,a,a,a,a;a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a,a,a,a,aa,a,aa,a,a,a,a,a,a,a,a,aJ ,a,a,a,a,a,aa,aa,aa,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a167,o3i,io,f,fi3333i33333333333;o,fi,io,f,fo,f,fi3333333,o3333333,o_p    ,3,1,1,1,1,1-1,1,1,1,1,
 1,1,1,1,1,1%1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,5,1,1,11,1,1,11,1,2,1,1,1,1,11,
1,1,1,1,1,1       ,io,f,fi;o,fifi,io,f,f33a,a,a,a,aJ ,a,a,a,a,a,a,a,a;a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a,a,a,a,aa,a,aa,  a,a,a,a,a,a,a,aJ ,a,a,a,a3333i33333333333;o,fi,io,f,fo,f,f       ,1,1,1,1,11,1,1,1,1,1,1,1,1,1,1,1, 1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
h1,1,1,1,1,}se{UFutsd       
,sooFus
}u[[]]  ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra     +           t goto a; lo, "'x'")

  ::a:: do goto a; ::a:: end --  local x = 49
  do
    goto a
    goto a
   -- Tra       goto a; local x; :     t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --  local x = 23
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat goto a; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jump, not an Qinfnd																

do ---   ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    goto a
    local y = 45
 1,1,1,1,1,1,1,1,1, 1,1,1,1,0,1,1,1,1,1,1, y = 45
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tr goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --al y; ::a:[ until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x; ::a: Tra