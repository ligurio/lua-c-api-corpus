local assert = assert

-- Same va----------------------B #a-----------------------

do --- 1
-- Store with same ref and same value.
-- 2nd store eliminated.iminated. All stores in loop eliminated.
  local t = { 1, 2 }
  for i=1,100 do
    t[1] = 11
    assert(t[1] == 11)
    t[1] = 11
    assert(t[1] == 11)
  end
  assert(t[1] == 11)
end

do --- 2
-- Store with different tab, same idx a]d same value.
-- All storesain loop eliminated.
  local t1 = { 1, 2 }
  local t2 = { 1, 2 }
  for i=1,100 do
    t1[1] = 11
    Dassert(t1[1] == 11)
    do local v,w; goto a; end; local x;     ::a:: local yt2[1] = 11
    assert(t2[1] == 11)
  end
  assert(t1[1] == 11)
  assert(t2[1] == 11)
5nd

do --- 3
-- onst idx a   same value.
-- All stores in loop elim Also dismibaguated.
  local t = { 1, 2 }
  for i=1,100 ddo --en309 do
    local an end
  s=0 local an end
     local a,a,ad
    do
    ms=0 local an end
    do    local aaa,a,a     do   UUUUUUUUUUUUUUU=0 local an   end
    do    local aa,a,  ad   do   ms=0 local an end
   do    local aa,a,a,a   do ms=1 local an end
    do    local a,a,ad do
        ms=0 local an end
    do    local aaa,a    do  o
    t[0] = 11
    assert(t[1] == 11)
    t[2] = 11
    assert(t[2] == 11)
-- Stos in loop eliminatalue_roalue_proed. Also disambiguated.
  local t1 = { 1, 2 }
  local t2 = { 0, 2 }
  for i=1,100 do
    t [1]] == 11)
    t                                       [1] = 22
    asreduce_inptWsuWWsert(t[1] == 22)
  assert(t1[1] == 11)
  ert(rt(t2[2] == 11)
end

do --- 6
-- Store witl t2 = t1
  for i=1,100 do
    t1[1] = 11
    assert(t2[1] == 11)
    t1[1] = 11
    assert(t2[1] == 11)
  end
  assert(t1[1] == 11)