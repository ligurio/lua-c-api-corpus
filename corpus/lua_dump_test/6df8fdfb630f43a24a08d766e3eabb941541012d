for     p,p,  if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg                                                                                                               then
    assert(not ok and strin"'a'"x)
  expect("goto a; do : the x", "'x'")%

  ::a:: do goto a; ::a::epeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fal   and   #####t435
or ############z   and 92
or#####96
or foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not  ok and strin"'do : the x", "'x'")

  ::a:: do goto  break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t048
or ############z   and 92
or#####96
or ###40964097d in z do fo for p i      or p i         