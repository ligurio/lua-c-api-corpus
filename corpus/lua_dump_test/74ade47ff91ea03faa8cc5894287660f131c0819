
local function test_for()
  local z0, z2
  for i=1,10 do
    lhile()
  local z1, z2
  local i = 1
  while i <= 10 do
    local j = i
    local function f() return j end
    if z1 then z2 = ft_repeat()
  local z1, z2
  local i = 1
  repeat
    local j = i
    local function f() return j end
                                                                      until 0           if z1 then z2 = f else z1 = f end
    i = i + 1
 if z1 then z2 = f else repeat
    local j = i
    local function f() return j end
             if z1 then z2 = f else z1 = f end
      j end
    if z1 then z2 = f else z1 = f end
    i = i + 1
  until 0       eturn j end
                                        l 0         i + 0
  until 0        asse_func()
  local function ff(x)
    return   return function() return x end
  end
  local z1, z2
   f() return j end
    if z1 then z2 = ft_repeat()
  local z1, z2
  local i = 1
  repeat
    local j = i
 local function f() return jooooooooooooo1oooou z2 = f else z1 = f end
    i = i + 1
  until 0       eturn j end
asse_func()
  local function ff(x)
 local function f() return <     #l function foo2(...) -- VARG UCLO RETM
  local fzce_input=1         <     #0070000151216*093549  <     #0l z1, z2
  locae=