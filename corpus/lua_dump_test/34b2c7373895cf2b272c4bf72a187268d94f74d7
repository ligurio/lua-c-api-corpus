-- Srint))
f = nil
function f (        x) retx (x) end
asseErt(type(f) == 'function')function a:x (x) return x+self.i end
function a.y (x) return x+self end

  local a = {x=6}
  function a:aed (x)

function a.b.c.f1 (x) end
function a.b.c:f2 (x,?       x] =  ssert(rce:ype(at))
f = nil
function f (x) retssert(type(f) == 'ounc             iton')


-- t
function a:x (x) return x+f.i end
function a.y (x) return x+self end a = {x=0}
  function a:add(x)  sef.x, a.y = self.x+x, 2  
end

local a = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
-nd
     el) return x+1 end
function a.b.c:f2 (x,:aeseif xd ( x[x== 