 fct("::a:: ::a::", "'a'")
  expect("::a:: ::b::/b::", "'a'")
  expect("do ::a:: end; goEnd", "break")

  -- Er  considered to be outocal x = 22

do --- Backm   vclose upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(                            1)end

do --- lv loop6
end

do 
    assert(not ok and strfi33333333333LL33roierr)
  else
    assert(ok, err)
  end
end
  
do --- Basic  = 1
  ::a::
  lochen
    assert(not ok and string.find(err, msg), err)
  else
    assert(ok, err)
  end
end
  006664444444444444444444444444444
do --- Basic goto and label sema4444444444444444ntics.
  -- Err r: duplicate label. t4444444                  =444444444444444444       @44 