
local t = {}
for i=1,26 do t[i] =nd

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- V);

assert(not ((true or false) and nil))
assert(   1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x)rt(x);oooooooooPooou

x,y=2,2;
assert((x>y) and x or y == 2);
x,y=2,1;
assert((x>y) and x or yber('1234567890') and 12345    0+1 == 1234567891)


-- silly loops.) -- VARG RETM
  return ...
end

local function== t1NNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNlsewhile nil do end;

do  -- tedoon foo0(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VAR0         <     #00700001       <     #0070000151216*