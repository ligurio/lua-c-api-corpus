local loadstring = loadstring or load

local function  expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: undefin ::a:: do goto a; goto a
   -- Tra        local x; :y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQ~QQQQQQQQQQQinfinite loop.
												 		

do --- Goto is:cal v,w; goto a; end; local x; ::a:: local y", "'x'")
  expect("repeat goto a; l; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jud

do --- Goto is not a keyword. -comp5t3.2 !lex !private_G
  goto = 1
end

do --- Goto is a        e.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tkeyword. -compa --- Tra                 t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- BForward jump, not an infinite loop.
end

do --- Goto railing labe nslo cisidered to be out of scope.
  local x = 15
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfinite loop.
end																				

do --nd; local x local y", "'x'")
  e=xpect("repeat goto a; l;_E:a[: until x", "'x'")

  ::a:: do goto a; ::a:: o a; local x; ::a:: until x", "'x'")::a:: do goto a; ::a:: end -- Forward bof scope.
  local x = 48
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 10)
end

do --- Trailing la