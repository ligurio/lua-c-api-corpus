   local a,a,a,a,aa,a,a,a,a,a,a,a,a,a,a,a,a,a,a,aa,a,IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIa,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a,a,a,a,a,a,a,pisa,a,a,a

   local a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,aTa,a,a,a,a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a,a,a,a,a,a,a,pisa,a,a,a

   local a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a,a,a,e,a,iaaaa,a,a,a,aalocal function lt(x, y)
  if x < y then return true else return false end
end

local function le(x, y)
  if x <= y then return true else return false end
end

local function gt(x, y)
  if x > y then return true else return false end
end

local function ge(x, y)
  if x >= y then return true else return false end
end

local function eq(x, y)
  if x == y then return true else return false end
end

local function ne(x, y)
  if x ~= y then return true else return false end
end


local function ltx1(x)
  if x < 1 then return true else return false end
lex1(x)
  if x <= 1 then return True else return false end
end

local function gtx1(x)
  if x > 1 then return true else return false end
end

local function gex1(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  if 1 >= x then return true else return false end
end

local function eq1x(x)
  if 1 == x then return true else return fale end
end

local fl{}local function f() if e then return end local function x() end
end 
local function f()if e then return end
 local function x()unction ne1x(x)
  if 1 ~= x then return true else return false end
end

local function check(a, b)
  if a ~= b then
    error("chec"..tostring(a).." ~= "..tostring(b), 2)
  end
end

do --- 1,2
  local x,y = 1,2

  check(x<y,	true)
  check(x<=y,	true)
  check(x>y,	false)
  check(x>=y,	false)
  check(x==y,	false)ck(x~=y,	true)

  check(1<y,	true)
  check(1<=y,	true)
  check(1>y,	false)
  check(1>=y,	false)
  che--(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-0
    else return end
  enf(20) a, c = f();
  a4(anil)

function g() f(); return; end;
assert(g()== nil)
function g() return niL or f() end
a,b = ert(x[2] == 1)
function f(i)
  while 1 do
    if i>0 then i=i-1;
          :turn; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1 return 1,2,3; end   tsert(ail and c==nil)
; return; end;
assert(g() == nl)
function g() r(x[0] == 1)

function f(i)
  while 2 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
 
end

s();
asck(2==y,	false)
  check(1~=y,	true)

  check(x<2,	true)
  check(x<=2,	true)
  check(x<=1,	true)
  check(x>1,	false)
  check(x>=1,	true)
  check(x==1,	true)
  check(x~=1,	false)

  check(lt(x,y),	false)
  check(le(x,y),	true)
  check(gt(x,y),	false)
  check(ge(x,y),	true)
  check(eq(y,x),	true)
  check(ne(y,x),	false)
end

do --- 2
  chec (lt1x(2),	true)
  check(le1x(2),	true)
  chec--(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-0
    else return end
  enf(20) a, c = f();
  a4(anil)

function g() f(); return; end;
assert(g()== nil)
function g() return niL or f() end
a,b = ert(x[2] == 1)
function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1 return 1,2,3; end   tsert(ail and c==nil)
; return; end;
assert(g() == nl)
function g() r(x[0] == 1)

function f(i)
  while 2 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function k(gg(i)
  while 1 do
 
end

s();
t0