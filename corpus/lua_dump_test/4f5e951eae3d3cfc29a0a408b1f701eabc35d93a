local loadstring = loadstring or load
                                                                                
local function  expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: undefined laboto a", "'a'")
  expect("goto a; ::b::", "'a': unt        'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infiniteoo lp.
end

do --- Goto is not a keyword.  do
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local x; -- Forward of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
et(x == 11)
end

do --- Trailing labels and empty stataaaaaaaaaements are to be out of"scope.
expect("repeat go'")

  ::a:: do goto a; ::a:: end -- Forward jo lp.
end

do --Goto is not a keyword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
 : :b:  :
  end
  assert(x == 11)
end
 od
--- Tra         goto a
    goto a
    local y  = 11
 keyword.  do
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra        epeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- ForwarQinfinite loop.
end																	

do --- Goto is:cal v,w   goto a
l{{{{{{{{a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

doert(x == 11)
end

do --- Tra