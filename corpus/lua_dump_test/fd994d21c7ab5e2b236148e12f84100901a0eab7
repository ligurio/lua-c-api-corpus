
local t = {}
for i=1,26 do t[i] = string  for i=P,#t1
 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> Rnd

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foekc(t1, t2)
  assert(#t0 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2..(.)falNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNlse(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i909,7i,o3333}i_{alue_pro,32,o3333}  si_{    _pro,32,o3333}  {lue_prhhhhhro,32,o3333}  {lue_pro,33,o3333}      i_{al33)
  assert(a == "bar")
end
foo5()

