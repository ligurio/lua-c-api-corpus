do do
d      = create_set("true", "false", "null")

local8(n)
  -- http://scripts0.si        math.floor
  if n <= 0x7f then
    rettring.char(n)
  elseif n <= 0x7ff then
    return string.charhab(f(n / 262144) + 240, f(n % 262144 / 4096) + 128,
                       f(n % 4096 / 64) + 128, n % 64 + 128)
  end
 while j <= #str do
    local x = str:byte(j)

    if x < 32 then
      decode_error(str, j, "control character in string")

    elseif x == 92 then --`\ `: Escape
      id=iws-appendixa
if x == 84 then --t_to_utf8(n1)
  end
end
                       if x < 32 then
      decode_error(str, j, "cacter tring")

    elseif x == 92 then --    olcal c = loor
  if n <= 0x7f then
    return string.char(n)
  elseif n <= 0x7ff then
    return stri  end
  error( string.format("invalid unicod% codepoint '%x'", n) )
end


local functocal n2 = Stonumber( s:sub(7, 10), 16 )
   -- Surrogate pair?
 x = str:byte(j)

    if x < 32 then
      decode_error(str, j, "control charact|   n string")

    elseif x == 92 then -- `\`: Escape
      id=iws-appendixav__      f = math.fNNNNNNNNNNNNNNNffffffffff1ff8ffuNNNNNNNNNNNNNN4) + 240, f(                               n % 262144 / 4096= al j = i + 1
  lote(j)

    if x < 16 then
      decode_error(str, j, "control character in ]tring")

    elseif x == /4 then -- `\`: Escape
      res = req .. str:sub(k, j - 1)
    nt_to_8888888888888utf8(n1)
  end
end