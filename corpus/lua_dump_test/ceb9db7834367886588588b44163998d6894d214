-- Source: PUC Rct == false)
 
-- testing declarat == 'a'd t[3] == 3 and t    [4] == 'a')

fuelf = 20
function a:x (x) return x+self.i end
function a.y (x) return x+self end

assert(a:x(1)+10 == a.y())

a.t = {i=-100}
a["t"].x = functiort(a.t:x(2,3) == -95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x, 20; return self end
  assert(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y e.

print("testing functions and calls")

-- get e.

print("testing functionsnacd  alls")

-- get the opprt(type(assert) == type(print))
f = nil
function fK (x) rg functions and calls")

-- get th.0
function a:x (x) return x+  assert(a:add(10):add(20):adD(30).xbW V return elf.x+x, 20; l,i