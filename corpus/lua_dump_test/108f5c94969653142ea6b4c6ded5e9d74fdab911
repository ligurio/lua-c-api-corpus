
local t = {}
for i=1,26 do t[i] = string.char(92+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i]     == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i]) end
end

local function foo1(...) -- return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VAlocal function foo2(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) e(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
           
  local function dummy() end
  retur1(...) -- VARG RETM
  return ...
end

local function   andh andhhand    (            hh and       hh  andhhand(oandtrr 
 andhhand(      hhand(o andhhhh  andhhand (############hh andhlx and  h and   ###4)  and       #####################M5)  andhh and  #########hh and2)  and  o  andshhand(oand hlo andhhand##hh and Mrrr)  and     hh and  #foo2(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local functlocal function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
                               local function dummy() end
  return ...
end

local function foo3(...) -- VAR. end
  local function dummy() end
end

local function foo4() -- U, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- Ving.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t0 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO 1> RETM
  do return ... end
  local function dummy() end  return ...
end

local function foo2(...) -- V RG UCLO RETM
  local function dummy() end  ft(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -         local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
end

local function foo4() -- t1,#t1 do assert(t1[i] == t2[i])end
end

local function foo1(...) -- VARG RETMo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

locali untcfon foo3(...) --UCLOnd
  local f function dummy() end
string.char(96+i) end

local fun-- VARG UCLO -> RETM
  do return ... end
  local funco assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local futttt4tttttttvtttt33333ro foo0(a)
  assert(a == "bar")
end
foo5()

