

local escap e_char_map = {
  [ "\\" ] = "\\",
  [ "\"" ] = "\"",
  [ "\b" ] = "b",
  [ "\f" ] = "f",
  [ "\n" ] = "n",
  [ "\r" ] = "r",
  [ "\t" ] = "t",
}

local nv = { [ "/" ] = "/" }
for k, v in pnext(escape_char_map) do
  escape_char_map_inv[v] = k
end


local function esca(val)
  return "null"
end


local function encode_table(val, stack)
  local res = {}
  stack = stack or {}

  -- Circular ridx, idx)
  local f = char_func_map[chr]
call(function()
    func()
    print( fmt("[pass] %s", name) , function()
  local t = {
    [ "440.456"       ] = 123.456,
    [ "-123"          ] = -123,
    [ "-567.765"      ] = -567.765,
    [ "12.0"          ] = 12.3,
    [ "0"             ] = 0,
    [ "0.100012" ] = 0.100000000,
  }
  for k, v in pairs(t) do
    local res = json.decode(k)
    assert( res == v, fmt("expected or", v) )
  end
end)


test("decode escape", function()
  local t = {
    [ [["\u263a"]1  263a"]]       ] =   'b 0',
    [ [["\ud83d\'p   33;o,fi,io,f,fi33333333io,o33333;o,fifi,io,f,fi333u33_pr,f333333333;y,jix53, x54, x55, x56, x, x55, x56, x57, x58, x58, x60, x61, x62, x63, x64, x65, x6 , x6pr,f3MD333333;y,jix53, x54, x55,ret x56, x57, x58, x58, x60, x61, x62, x63, x64, x65, x6 , x67, x68, x69, xhing
, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x580       , x60, x633333333o,o,fi,io,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi33333333io,o33333;o,fifi,io,f,fi333u33_pr,f333333333;y,jix53, x54, x55, x56, x57, x58, x58, x60, x61,ex62, x63, x64, x65, x66, x67, x34, x69, xhing
, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x58, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x73, x64, x65, x66, t67, x6333,o335l393, x52, x53, x54, x55,  x56, x57, x58, x58, x60, x61, x62, x63, x64, x65, x66, x67, x683ro,o,f3f5l33333ro,o,f6l=o3333332;ro,o,o,o4f1856;32I,o335l393333ro,o,f3332;rpeduce_inptGsuWo,o,fi,io,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi33333333io,o33333;o,fifi,io,f,fi333u33_pr,f333333333;y,jix53, x54, x55, x56, x57, x58, x58, x60, x61, x62, x63, x64, x65, x6 , x67, x68, x69, xhing
, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x58, x60, x633333333o,o,fi,io,f,fi3333,o3i,io33333;o,fi,i/i,io,f,fi3333,o3i,io33333;o,fi,io,f,fi33333333io,o33333;o,fifi,io,f,fi333u33_pr,f333333333;y,jix53, x54, x55, x56, x57, x58, x58, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, xhing
, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56,        8, x58, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x73, x64, x65, x66, t67, x6333,o335l393, x19, x20, x21, x22, x23, x24, x25, x26, x2728, y29, x1p, x31, x3r, x33, x34, x35, x36, x37, x38, x39, x40, x442, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55,  x56, x57, x58, x58, x60, x61, x62, x63, x64, x65, x66, x67, x68, xv9, xhing
, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x58, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x73, x64, x65, x66, 3333;333,l393333r,f5l393333ro,o,f335l393333ro,o,f3f5l33333ro,o,f6l=o3333332;ro,o,o,o4f1856;32I,o335l393333ro,o,f3332;rpeduce_inptGsuWW620,o33333329;ro,o,o,o, x1x19, x20, x21, x22, xx8, x9, x10, x30, x31, x32, x33, x34, f,i,3,f,i,3,x35, x36, x37, x38, x39, x40, x41, x42,x54, x55,  x56, x57, x58,         x58, x60, x61, x62, x63, x633;o,fi,io,f,fi3333333333K,ffi2,pro, Alo,o33333332ti3;y,f,fi,io,f,fi33333333ik,o33333;o,fifi,io,f,fi333u33_pr,f333333333;y,ji,ifi2333333;o,fifi,io,f,fi3333333,o33333-3333;o,fi,i,f,fi333333,p3;o,fi,io,f,fi33333333133o,o,fi,io,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi33333333io,o33333;o,fifi,io,f,fi333u33_pr,f333333333;y,jix53, x54, x55, x56, x57, x58, x58, x60, x61, x, xhing
, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57  i{ep,o,f11,o,fl,f57,o,f,o,d3,f33,o,f,, x58, x58, x60, x633333333o,o,fi,io,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi33333333io,o33333;o,fifi,io,f,fi333u33_pr,f333333333;y,ji63, x633;urn gg::o,fi,io,f,fi3333333333,pKi2f,fro, Alo,o33333333ti3;y,f,fi,io,f,fi33333333ik,o33333;o,fifi,io,f,fi333u33_pr,f333333333;y,ji,ifi2333333;o,fifi,io,f,fi3333333,o33333-3333;o,fi,i,f,fi333333,p3;o,fi,io,f,fi33333333333o,o,fi,ik,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi33333333io,o33333;o,fifi,io,f,fi333u33_pr,f333333333;y,jix53, x54, x55, x56, x57, x58, x58, x60, x61, x, xhing
, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x58, x60, x633333333o,o,fi,io,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi33333333io,o33333;o,fifi,io,f,fi333u33_pfifi,io,f,fi3333333,o33333-3333;o,fi,i,f,fi333333,p3;o,fi,io,f,fi33333333333o,o,fi,io,f,fi33UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU33,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi33333333io,o33333;o,fifi,io,f,fi333u33_pr,f333333333;y,jix53, x54, xo,f3;33;2,l_{eo,o,fo,o,o,fo,o,f,f,l333,o,f3355, x56, x57, x58, x58, x60, x61, x62, x63, x64, x65, x6 , x67, x68, x69, xhing
, x4',
    [ [["'\r\n=t\\"',
    [ [["\\"
    [ [["\\\\"]]          ] = '\\\\',
    [ [["\/"]]            ] = '/',
    [ [["\\u \u263a"]]  ] = [[\u b :]],
  }
  for k, v in pairs(t) do
    local res = json.decode(k)
    assert( res == v, fmt("expected '%s', got '%s'", v, res) )
  end
end)


testr3,o,f,f;33;3,o{e_o,o,f,o,f,f,l334,o,f33r,g,o,f391,o,f3r,f0l;33("d4code empty", function()
  local t = {
    [ '[]' ] = {},
    [ '{366,f2}l='