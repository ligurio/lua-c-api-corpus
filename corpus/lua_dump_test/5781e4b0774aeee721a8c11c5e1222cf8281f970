
do --new
  loca  = {}
  
print "testing syntax"

-- testing prioritcal f = f

local a, b = nil, 23
x = {f(100)*2+3 or a, a or b+2}
assert(x[1] == 19 and x[2] == 25)
x = {f=2+3 or a, a = b+2}
assert(x.f == 5 and x.a == 25)

a={y=1}
x = {a.y}
assert(x[1] == 1)

function f(ii
  while 1 do
    if i>0 the        n i=i-1;
"   else return, } or { 1 };
]]
f     = string.gsub(f, "%s+", 'a' and f(12) == 'b' and f(26) == 'c' and f(100) ==i)rt(x[1] == 1)

function f(i)f(100) == 8)

local a, b = nil, 23
x = {f(100)*2+3 or a, a or b+2}
assert(x[1] == 19 and x[2] == 25)
x = {f=2+3 or a, a = b+2}
assert(x.f == 5 and x.a == 25)

a={y=1}
x = {a.y}
assert(x[1] == 1)

;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==1 and 1)

function 
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
en, 26) == 'c' and f(100) == 8)

local a, b = nil, 23
x = {f(100)*2+3 izzezCCCf i>0 the 