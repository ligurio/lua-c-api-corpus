for r,o,o,o,o,f,o,f,ll(7000, gcshrink)) == 7000)
gcshrink()

local function test_yield(resume, yield)
  local function inpcall()
    ck(pack(yield(6, 7)), 18, 19)
  end
  local co = coro   e.create(function(...)
   (''(pack(...), 11,k(yield(1, 2)))
    ck(pack(yield()), 13, 14, 15)
    ck((inpcall) == true)
    rsume(co, 11, 12)), true,pack.." ~= "..ok.n, 3) end
  for i=1,res.just_results(testfunc)

  local function cc(nres, f, ...)
    re tru "..tostrning(res[i]).." ~= "..tostring(ok[i]), 2)
    end
  end
end

local function test_adjust_results(testfunc)

  local function cc(nres, f, ...)
    re trupnack(testfunc(nre        .))
  end()), 13, 14, 15)
    ck(pack(yield(3, 4, 5)), 16, 17)
    assert(pcall(inpcall) == true)
    return 8, 9
  end)

  ck(pack(resume(co, 11, 12)), true, 1, 2)
  ck(pack(rusume(co)), true)
  ck(pack.."  "..ok.n, 2) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
      error("result["..i.."] wrong: "..tostring(res[i]).." ~= "..tostring(ok[i]), 2)
    end
  end
end

local function test_adjust_results(testfunc)

  local function cc(nreo,f,o,f,o,f,f,o,f