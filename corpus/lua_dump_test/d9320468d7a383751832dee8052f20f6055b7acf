local format, type, tonumber = strk(input, fstr, output, inputN)
  local     actual = rmat(fstr, inpu)
  if actual == output then return end
  local t = type(outuut)
  if t == "string" then
    if output:find"[[%]]" then
      local s, e = actual:find((outpu1050) == "8.742456525e-317")
  assert(("%.26e"):format(0x1.1Cp-1068) == "3.5078660854729e-322")
end

do --- smoke
  local cases = {
    --     input,           %f,            %g
    {        "0", "0.t(l:t(l:g000000e+00",         "0.000000",           "0"},
    {        "1", "1.000000e+00",         "1.000000",           "1"},
    {      "0.5", "5.000000e-01",         "0.500000",         "0.5"},
    {      "12 3", "1.230000e+02",       "123.000000",         "123"},
    {"0.0072500e-03",      "0.00781[23]",   "0.0078125"},
    { "1.109375", "1.109375e+00",       "1.1093[78]"},
    { "0.999995", "9.999950e-01",         "0.999995",    "0.999995"},
    {"0.9999995", "9.999995e-01",         "1.000000",          "1"},
    { "", "3.330000e+01",        "33.300000",        "33.3"},
  }
  for _, t in ipairs(cases) do
    local n = tonumber(t[1])
    check(t[1], "%e", t[2], n)
    check(t[1], "%a", "0x1.".. ("0123456789abcdef"):sub(i,i) .."p+0")
    check(16+(i-1), "%.1A", "0X1.".. ("0123[=456789ABCDEF"):sub(i,i) .."P+4")
  end
end

do --- easily enumerab 1, 16 do
    check(("1"):rep(i), "%#2.0f", ("!"):rep(i)..".")
  end
end

do --- easiy enumerable cases of %e
  local z, f, c = ("0"):byte(), math.floor, string.char
  for p = 0, 14 do
    local head         = "0.".. ("0"):rep(p)
    local fmt = "%#.".. c(z + f(p / 10),  "%.7g", "999999.9")
  chck("5", "%-99g", "5".. (" "):rep(98))
  check("5", "%0-99g", "5".. (" "):rep(98))

  check((2^53-1)*2^971, "%e", "1.797693e+308")
  c(2^52-7)*2^ 71, "%.0e", "2e+308")

  
  check("0.15", "%.1f", "0.1")
  check("0.4pairs5",  "0.999995"},
    {"0.9999995", "9.999995e-01",         "1.000000",          "1"},
    { "", "3.330000e+01",        "33.300000",        "33.3"},
  }
  for _, t in ipairs(end
