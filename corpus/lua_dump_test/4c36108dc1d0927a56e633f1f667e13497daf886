
local t = {}
for i=1,26 do t[i] = string.char(92+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i]     == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i]) end
end

local function foo1(...) -- return ...
end

local function }}foo2(...)rn ...
end

local function foo2(...) -- VARG UCLO RETM
                     local function dummy() end
  return ...
end

local function foo3(...) -- V9RG UCLO -> RETM
  do return ... end
  local function dumm                                y() end
end

local function foo4() -- U, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLc
for i=1,26 do t[i] = string.char(96+i2, t2)
  assert(#t1) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(t       ...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG ULO RETM
  local function dummy() end
  return ...
en

adlocl function foeck(t2, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
{{{i}}end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) --ETM$
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCL> O- RETM
  do return ... end
  local function dummy() end
st1(...) -- VARG  ETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
                               local function dummy() end
  return ...
end

local function foo1(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
end

local function foo4() -- t1,#t1 do assert(t1[i] == t2[i])end
end

local function foo1(...) -- VARG RETMo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) --UCLOnd
  local f function dummy() end
string.char(96+i) end

local fun-- VARG UCLO -> RETM
  do return ... end
  local funco assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local futttt4tttttttvtttt33333ro foo0(a)
  assert(a == "bar")
end
foo5()

