local loadstring = loa

local function  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Error: undefine'")
  exp = 98
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat goto a   w; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfnd																

do --- Goto is:cal v,w; goto a;              local x; ::a:: local y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  d    z
    goto a
    --al x; ::a:[ until@x", "'x'")

  ::a:: do goto NNNNNNNNNNNNNNNNNNNNNNNNN local x = 49
  do
    goto a
    goto a
   -- Tra        local l x = 49
  do
    goto a
   --  local x = 98
  do
     -- Fop.
end																				

do --- Goto is:cal v,w; gx; ::a:: ::d.  
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra     +           t goto a; lo, "'x'")

  ::a:: do goto a; ::`:: end --  local x = 49
  do
    goto a
b::
  end
  assert(x == 11)
end

do --11
  do
    goto a   y
    goto a

    x = y
    ::a::
    ::b:+:
  end
  as