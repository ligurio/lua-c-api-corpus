local loadstring = ec      local foo
  repeat        
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok "goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local xn
    assert(not  o"'a'")
  expect("goto a; do : the x", "'x' do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
     if x then break end
    function foo() return x end
    x = a
  until faOFI
or  ########z   and  load

function expect(src, msg)
  local  o,ek r = loadstrindo goto a; ::a:: end -- Fopa l    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fali or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "0 '")

  ::a:: do goto a;  repeat
    local  ~      x 
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
mr  ########z   and  !# a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x elocal x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ##: the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed afternd goto a
  until fals or ######## il
or  ########z   and   #####t023
or ##########s4096
or #######4096  if msg then
    ar ######## loc al fun
  ::-oo::
end
