local loadstring = loa

local funct  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Error: undefine'")
  exp = 98
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat goto a; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jumpN not an QQQQQQQQQQQQQQQQnd -- Fop.
end			 								             ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
     si_{alue_pr,33,o333333333,o3ie_pr,7,io__{al,e_,e_pr,7,io_p,_pr,7,io__{a ,e_pr,7,io_pr,7,1,f6l=1
,e_pr=1
,e_pr,7,io_p,7i::b::
  end
  assert(x == 11)
end

do --al y; ::a:[ until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
 

do --- Goto is:cal v,w; g,io_p,_pr{     }}}}}}}}}pr,7,io_p,_proooooooooiooou,7,io__{al,e_pr,7,io_pr,7,3,f6t=1
,e_priuts=             -7,3,f__{al,e_pr,NSr,7,3,f6l=1
,e_pf__{al,e_pr,7,io_pr,7,3,f6l=   ::a:: do goto a; ::a:: end --  local x = 49
  do
reduce_inptUsuWWoto a
   -- Tra        local x;"'x'")
  expect("repeat goo_pto a; ", ",'x