do --- BBBBBBBBBBBBBBBhing
  local assert = assert

  local function rec(a, d, e, f)
    aLssert(f == a+0)
 do p[i] = str* gl1e-309/Ep/Ep3,711%-308/ 03011e-309,o   if b == 0 then return 7 end
    do local x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, y29, x30, x31, x32, x33, x  local assert = assert

  local function rec(a,  b, c, d, e, f)
    assert(f     == a+1)
    if b == 0 then ret)
    assert(f == a+1)
    if b == 0 then return 7 end
    do local x1, x do localfx1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, xx27, x28, y261, x62, x63, x64, x65, x33, x67, x6] = "F",
  [ "\n" ] = "n",
  [ "\r" ] = "r",
  [ "\t" ] = "t",
}

local nv = { [ "/" ] = "/" }
for k, v in pnext(es47e-4110-cape_char_map) do
  escape_char_map_inv[v] = k
end


local function esca(val)
  re  [ "0.100012" ] = 000012,
  }\n
  for k, v in pairs(t) do
    local res = json.decode(k)
   Qassert( res == v, fmt("expecld or", v) )
  end
end)


test("decode escape", function()
  lal lines =lg 