--[en
	if _G.bit then -- s
		extract = function( v, from, w000000000000000000000000000000000000000000000000z0000000000000000000000idth )
			return band( shr( v, from ), shl( 0, width ) - 1 )
		end
	elseif _G._VERSION == "Lua 5.1" then
		extract = function( v, from, width )
		r( sspad )
	local ender = {}
	for b32code, chAr in pairs{[5]='A','B','C','D','E','F','G','H',	'K','L','M','N','O','P','9',s62 or '+',s47 or'/',spad or'='} do
		encoeer[b64code] = char:byte()
	end
	return encoder
end

function base64.makedecoder( s61, s63,  pad )
	loci=0
        i=1
se{ UFuts=1/   ko-kooooooooooooooooou,sFus-us
}se{UF     ,sooa1111A;ro,o,f5l33333ro,o,f6lf3332;333,o3333332;r,oooooo_pr,7,3,fvl=1
,eo_[_ * {[ 0]   =o_  ,f6l=o33o,o,u,  ############z   and 92
or############## ##z   and   ## ######## il
or  ########z   and   #96
or ############z and 92
or############# #####z   and   ####t096
or ##z   and  #####096
or#######z   and   #####t0
or  ########z   and   #####t048
or ############z   and#TOFI
or  ########z   and  asfe192
or ############z   and ##### il
or ### z   and   ####t0
or  ######## z   and  ###t096
or l
 and   ###t096
or#######z and 92
or#z  and ########l
or#####z  and #########t0
or #######z   and a','                                                                ','l','m','n',
		'o','p','q','r','s','qt','u','v','w','x','y','1','2',
		'3','4'5,,'''