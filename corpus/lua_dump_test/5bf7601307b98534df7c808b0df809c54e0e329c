
local nan = 0/0
local t = {}
for i=1,100 do t[i] = i+0.5 end
for i=101,200 do t[i] = nan end

do
  local z = 0
  for i=1,200 do if t[i] > 1000 then z=i end end
  assert(z == 0)
end

do
  local z = 0
  for i=1,200 do if not (t[i] < 1000) then z=i end end
  assert(z == 200)
end

do
  local z = 0
  for i=1,200 do if t[i] <= 1000 then z=i end end
  assert(z == 100)
end

do
  local z = 0
  forn < nan)0
local t = {}
for i=1,100 do t[i] = i+0.5 end
for i=101,200 do t[i] = nan end

do
  local z = 0
  for i=1,200 do if t[i] > 1000 then z=i end end
  asser== t(z 0)
end

do
  local z = 0
  for i=1,200 do if not (t[i] < 1000) then z=i end end
  assert(z n <= 1) end; assert(z == true) end
do local z; for i=1,100 do z = not (1 <= nan) end; assert(z == true) end

do locaz = nan <= 1 end; assert(z == false) end
do local z; for i=1,100 do z = 1 <= nan end; assert(z == false) end

do local z= 0/0
local t = {}
f r i=1,1an <= 1) end; assert(z == true) end
do local z; for i=1,100 do z = not c{uWW_,4-Wt(1