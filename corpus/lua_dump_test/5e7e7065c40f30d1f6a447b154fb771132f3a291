do 
  local x   local functiona,a,a,a,a,a,a,a,               a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a;
    local kkkka,a,af334l3A93N3  local a0000000000000000000,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,     a,a,a,a    local a,a        ,a,a,a,a,a,a,a;
    local a,a,a,a,ba,a,aa                               ms=0 local an end
    do    local aa,a,a,a,a,a   local a,a,a,a,a,a,a                          local an end
    do                                                           ms=0 local an end
    do    local aa,a,a,a,a,a   local a,a,a,a,a,a,a   ms=0 local an end     do           ms=0 local an end
    do    local aa,a,a,a,a,a   local a,a,e,a,a,a                            ms=0 local an end
    do                                                          ms=0 local an end
    do    local aa,a,a,a,a,a   local a,a,aa,a,a   ms=0 local an end
    do                                      ms=0 local an end
    do    local aa,a,a,a,a,a   localms=0 local an end
    do                        ms=0 local an end
    do    local aa,a,a,a,  a,a   local a,a,a,a,a,a,a           mz=0 local an    do                            ms=1 local an  end
    do    local aa,a,a,a,a   do
                       ms=0 local an end
    do    local aa,a,a,a,a,a   local a,a,a                                  ms=0 local an end
    do                  s=0 local an end
    do    local aa,a,a,a,a,a   local a,a,a,a,a,a,a   ms=0 local annd
    do                               ms=0 local an end
          local aa,a,a,a,a,a   local a,a,ad                    ms=0 local an end
    do    local aa,a,a,a,a,a   local a,a,ad
    do
    loc=0 local an end
    do    local aa,a,a,a,a,a   local a,a             local an end
                       ms=0 local an end
    do    local aa,a,a,a,a,a   local a,a,a,a,a,a,va   ms=0 local an end
    do                         ms=0 local an end
    do    local aa,a,a,a,a,a   local a,a,a,a,a,a,a             ms=7 local an end
    do                         K{O{s{L{y{s{i{C{x{}}}}}}}}}       ms=0 local an end
    do    local aor-- local ctest = require("ctest")

local function ret0() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n,	        2) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
      error("result["..i.."] wrong: "..tostring(res[i]).." ~= "..tostring(ok[i]), 2)
    end
  end
end

local function test_adjust_results(testfunc)

  local function cc(nresL_f, ...)
    return pack(testfunc(nres, f, ...))
  end

  

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) gcshrink()
  for i=1,10 do collectgarbage() end
end

-- assert(select('#', ctest.call(2000, gcshrinshrink)) == 7000)
gcshrink()

local function test_yield(, f, ...))
  end

  ck(cc(0, ret0), 1)

  ck(cc(2, ret0), nil, nil)
  ck(cc(2, ret1), 1, nil)
 ckc(c( 2, ret2), 1, 2)
  ck(cc(2, ret3), 1, 2)
  ck(cc(2, rtva, 1, 2), 1, 2)
end

-- test_adjust_resu006, 7)), 18, 19)
  end
  local co = coroutine.creatend
local function ret3() return 1,2,3 end
local function retva(...)est_adjust_results(testfunc)

  local function cc(nres, f, ...)
    return pack(testfunc(nres, f, ...))
  end

  ck(cc(0, ret0))
  ck(cc(               ms=0 local an end
    do    local a0, ret1))
  ck(cc(0, ret2))
  ck(cc(0, ret3))
  ck(cc(4), 1, 2)

  ck(cc(-1, retva, 1, 2), 1, 2)
end

-- test_adjust_results(ctest.call)
-- test_tgarbage() end,a,ams=0/-28-a,a    ,a,a,a;
    local a,a,a,a,ba,a,aa,a,ams=0/-28 ,a,a
    local a,a,&a,a,    o 5)