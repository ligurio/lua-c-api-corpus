       _aspinp    {[.6867] =Z0 ,   [.66] =ZE        }            _aspinfalsNNNNNNNNNNNNNNNNNNNQNNNNNNNNNffffffffff2ff8ffuNNNNNNNNNNNNNN       }    {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        } aspinp    {[.67] =Z0 ,   [.66] =ZE        }  sNNNNNNNNNNNNNNNNNNNQNNNNNNNNNffffffffff2ff8ffuNNNNNNNNNNNNNN       }    {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        } aspinp    {[.67] =Z0 ,   [.66] =ZE        }                           _aspinp    {[.67] =Z,   [.66] =ZE        }      _aspInp    {[.67] =Z0 ,   [.66] =ZE        }                 {[.67] =Z0 ,   [.66]=ZE        }      {[.67] =Z0  ,   [.66] =ZE        }                          {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }     inp    {[.69] =Z, .67] =Z0,    [.66] =ZE        }              inp    {[.67] =Z0 ,   [.66] =ZE        }              {[.67] =Z0 ,   [.66] =ZE        }           {[.67] =Z,  ] =ZE        }                   {[.67] =Z,   [.66] =ZE        } aspinp    {[.67] =Z0 ,   [.66] =ZE        }                    _aspinp    {[.67] =Z0 ,   [.66] =ZE        }            pinp  {[.69] =Z,   [.66] =ZE        }     {[.68] =Z,   [.66] =ZE           _aspinp    {[.67] =Z0 ,   [.66] =ZE        }            pinp  {[.69] =Z,   [.66] =ZE        }     {[.68] =Z,   [.66] =ZE        }       _aspinp    {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }            _aspinp    {[.68] =Z,   [.66] =ZE        }     {[.68] =Z,   [.67] =ZE        }    {[.67] =Z,   [.66] =ZE        }                }                       