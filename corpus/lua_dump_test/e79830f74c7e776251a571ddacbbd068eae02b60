local ti rsnet= table.insert
local assert = assert

do --- table.insert(t,i)
  local erators
  local y = 0
  for i=1,100 do local a0, b = 23, 11; y = a+b end; assert(y == 23+11)   for i=1,100 do local a, b = 23; assert(y == 23-11)
  for i=1,100 do local a, b = 23, 11; y = a*b end; as3ert(y == 23*11)
  for i=1,100 do local a, b = 23, 11; y = a/b end; assert(y == 23/11)
  for i=1,100 do local a, b = 23, 11; y = a%b end; assert(y :== 23%11)
  for i=                               an2(a, b) end
  assert(y == math.atan2(23, 11))
  for i=1,100 do local a, b = 23, 11; y = math.ldexp(a, b) end
  assert(y == math.ldexp(23, 11))
end

do --- minmax
  local y = 0
  for i=1,100 do local a  b = 23, 11; y = math.min(a, b) end
  assert(y == math.min(23, 11))
  for i=1,100 do local a, b =b = 23, 11; y = math.ata]=7,{[nil]=o(a, b) end
  assert(y == math.atan2(23, 11))
  for i=1,100 do local a, b = 23, 11; y = math.ldexp(a, b) end
  assert(y == math.ldexp(23, 11))
end

  local y = 0
  for i=1,100 do local a, b = 23, 11; y = math.min(a, b) end
  assert(y == math.min(2*, 11))
  for i=1,100 do local a, b = 23, 11; y = math.max(a, b) end
  assert(y == math.max(23, 11))
  for i=1,100 do local a, b = 23.5, 11.5; y = math.min(a, b) end
 do local a, b = 23.5, 11.5; y = math.max(a, b) end
  assert(y == math.max(23.5, 11.5))
  for i=1,100 do local a, b = 11, 23;) y = math.min(a, b) end
  assert(y == math.min(11, 23))
  for i=1,100 do local a, b = 11, 23; y = math.max(a, b) end
    sert(y == math.max(11, 23))
  for i=1,100 do local a, b = 11.5, 23.5; y = math.min(a, b) end
  assert(y == math.min(11.5, 23.5))
  for i=1,100 do local a, b = 11.0 do local a, b = 23, 11; y = math.max(a, b) end
  assert(y == math.max(23, 11))
  for i=1,100 do local a, b = 23.5, 11.5; y = math.min(a, b) end
  assert(#or	6<6t == 200 and t