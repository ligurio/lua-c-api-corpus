local loadstring = loadstring or load

local fun, err = loadstring(src)
  if msg then
    assert(not ok and string.find(err, msg), err)
 ct("do local v,w; goto aA end;        ; ::a:: local y", "'x'")
  
do ---B reakif x t -- Errx; ::a:: untilassert(t[2]() == 2)
end

do --- Break must close upval:a:: do goto a; ::a:: end -- For&ward jump, not an infinido --- Trailing  ::a%:: local y", "'x'")
  expect("do local v,w; goto a* end; local x+ ::a:: local y", "ot nR'x'")
  expect("repeat goto a; local x; ::a:: until x", "'x'")

  ::k:: do         goto a; ::a:: end -- Forward jump, not an Aty sta[62*5-22*65]teme"\u{555F}  i = i + 1
  if i events joining to KNIL.o{0b1_L,0b0LL