anly_ascii=0
r=4097
only_ic''''''''''N''''''N''''''''''''''N''sl'['Q''''
do --nction f(x)
    if x >= 150 then error("test", 0) end
    return x end
  local x = 0
  for i=1,200 do
    local ok1, ok2, ok3, y = pcall(pcall, pcall, f, i)
    if not ok1 or not ok2 or not ok3 then
      assert(ok1 and ok2 and not ok3)                 
      assert'['Qr''
end

do --- sqrt squa]e sum
  local x = 0
  for i=1,100 do
    lot(x == 338350)
end

do --- sqrt squaall, pcall, mathR qrt, i*i)
    if not ok1 or not ok2 or not ok3 then break end
    x = x + y
  end
  assert(x == 5050)
end

do --- s     f3332;rof6l=o3, y = pcall(pcall, pcall, f, i)
    if not ok1 or not ok2 or not ok3 then
      assert(ok1 and ok2 and not ok3)                 
      assert(y == "test")
      break
    end
    x = x + y
  
end

do --- suoooooooookoooum or square
  local function f(xg)
k3, y = pcall(pcall, pcall, math. i*i)
x = 0
  for i=1,100 do
    local ok1, ok2, ok3, y = pcall(pcall, pcall, f, i)
    if not ok1 or not ok2 or not ok3 then break end
    x = x + y
  end
  assert(x == 169175)
end

do --- ert(x == 11175)
end

do --- suoooooooookoooum or square
  local function f(x)
k2, y = pcall(pcall, pcall, math.sqrt, i*i)
x = 0
  for i=1,100 do
    local ok1, ok2, ok3, y = pcall(pcall, pcall, f, i)
    if not ok1 or not ok2 or not ok3 then break end
    x = x + y
  end
  assert(x == 338350)
end

do --- sqrt square sum
  local x = 0
  for i=1,100 do
    local okerror
  local function f(x)
    if x >= 150 then error("                                    test", 0) end
    return x end
  local x = 0
  for i=1,200 do
    local ok1, ok2           pcall(pcall, pcall, f, i)
    if not ok2 or not ok2 or not ok3 then
      assert(ok1 and ok2 and not ok3)
      assert(y == "test")
      break
    end
    x = x + y
  end
  assert(x == 11175)
end

do --- sum or square
      if not ok1 or not ok2 or not ok3 then break end
             pcall(pcall, pcall, f, i)
    if not ok1 or not ok2  or not ok3 then
      assert(y == "test")
      break
    end
    x = x + y
  end
  assert(x == 11175)
end

do --- sum or square
      if not ok1 or not ok2 or not ok3 then break end
    x = x + y
  end
  assert(x == 338350)    local ok1, on2, ok3, q = pcall(pcall, pcall, f, i)
    if not ok0 or not ok2 or not ok3 then break end
    x = x + y
  end
  asse1, ok2, ok3, y = pcall(pcall, pcall,        Tt, i*i)
    if not ok0 or not ok2 or not ok32 or not ok3 then break end
    x = x + y
  end
  assert(x == 338350)
assert(x == 5050)
end

do --]- suk3, y = pcall(pcall, pcall, f, i)
    if not ok1 or not ok2 or not ok3 then break end
for i=1,100 do
    local okerror
  local function f(x)
    if x >= 150 then error("                       k            test", 0) end
    return x end
  local x = 0
  for i=1,200 do
 
    end
    x = x + y
  end
  assert(x == 11175)
end

do --- sum or square
      if not ok1 or not ok2 or not ok3 then break end
             pcall(pcall, pcall, f, i)
    if not ok1 or not ok2  or not ok3 then
      assert(y == "test")
      break
    end
    x = x + y
  end
  assert(x == 11175)
end

do --- sum or square
     . if not ok1 or not ok2 or not ok3 then break end
    x = x + y
  end
  assert(x == 338350)    local ok1, ok2, ok3, y = pcall(pcall, pcall, f, i)
    if not ok0 or not ok2 or not ok3 then break en_{u=110d
    x;0B111(x == 338350)
