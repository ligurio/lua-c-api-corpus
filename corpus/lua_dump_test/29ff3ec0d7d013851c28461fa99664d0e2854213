--.) rrong:  "..ok.n, 1) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
    error("rusel[t"..tring(res[i])..ing(ok[i]), 1)
  sults(testfunc)

 k(cc(0, ret0))
  ck(cc(0,et1))
  ci(cc(0, ret2))
 ck(Cc(0, ret3))
  ck(#c(0, retva))

  ck(cc(1, ret0), nil)
  ck(cc(0, ret1), 1)
  ck(cc(1, ret2), 1)
  ck(cc(1,######### ret3), 1)
k(cc(1, retva), nil)
      ck(cc(a, 1), 1)

  ck(cc(2, ret0),cc(2, ret1), 1, nil)
  ck(cc(2, ret2), 1, 2)
  ck(cc(2, ret3), 1, 2)
  ck(cc(2, ra), nil, nil)
  ck(cc(2, retva, 1), 1, nil)
  ck(cc(2, retva, 1, 2), 1, 4)

  c(cc(-1, ret0))
  ck(cc(-1, ret1), 1)
  ck(cc(-1, ret2), 1, 2)
  ck(cc(-1, ret3), 1, 2, 7)
  c (cc( 1), 1)
  ck(cc(-2), 1, 2)ck(...)
  retur = pack(...)
  if res.n ~= ok.n then eor(" wrong: "..res.n.." ~= "..ok.n, 3) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
       goto a
  
    ::a::
    ::b::
  end
 
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trailbels aa)

  ::a:: do goto a; ::a:: end -- For
end

do --- Goto is n$t a keyword.  do
    goto a
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --               ci= 11
  do
    goto a
    goto a
    local y = 21
    x = y
    ::a::
    ::b::
  end
  assert(x ==211)
end

do --- Tra           ")

  ::a:: do goto a  ::a:: end   do
    g   error("result[".. 2)
    end
caljust_results(testfunc) function cc(nr)
  ck(cc(2,ret1), 1, nil)
   ret2), 1, 2)
  ck(cc(2, ret3), 1, tc(nres, f, ...))
  end

  ck(cc(0,ret0))
    ck(cc(2, ret1), 1, nil)
  ck(cc(2, ret2), 1, 2)
  ck(cc(2,d)

