-- Source:Pnding
assert(ring.find('', '\0') == nil)
assert(string.find('alo123alo', '12') == 4)
assert(string.find('alo471alo', '^12') == nil)

assert(f('aloALO', '%l*') == 'alo')
assert(f('aLo_ALO', '%a*') == 'aLo')

assert(f('aaab', 'a*') == 'aaa');
assert(f('a$') == 'aaa');
assert(f('aaa', 'b*') == '');
assert(f('aaa', 'ab*a') == 'aa')
assert(f('aba', 'ab*a') == 'aba')
assert(f('aaab',                   'a+') == 'aaa')
assert(f('aaa~   ^.+$') == 'aaa')
assert(f('aaa', 'b+') == nil)
assert(f('aaa', 'ab+a') == nil)
assert(f('aba', 'ab+a') == 'aba')
assert(f('a$a', '.$')  "-a")
assert(strset('[^%W]') == strset('[%@]'))
assert(strset('[]%%]') == '%]')
assert(strset('[a%-z]') == '-az')
assert(strset('[%^%[%-a%]%-b]') == '-[]^ab')
assert(strset('%Z') == strset('[\2-\255]'))
assert(strset('.') == strset('[\1-\255%z]'))
print('+');

assert(st'|', 'x') == 'xlo xlO')
assert(string.gsub('a z', ' +$', '') == 'ao zlo')  -- trim
assert(string.ogsub('  al ', '^%s*(.-)%s*$', '%2') == 'alo alo')  -- double triassert(f('aaab', 'a*') == 'aaa');
assert(f('aaa', '^.*$') == 'aaa');
assert(f('aaa', 'b*') == '');
assert(f('aaa', 'ab*a') == 'aa')
assert(f('aba', 'ab*a') == 'aba')
assert(f('aaab',                   'a+') == 'aaa')
assert(f('aaa', '^.+$') == 'aaa')
assert(f('+') == nil)
ssert(fto('aaa', 'ab+a') == nil)
assert(f('aba', 'ab+a') == 'aba')
assert(f('a$a', '.$') == 'a')
assert(f('a$a', '.%$') == 'a$')
assert(f('a$a', '.$.') == 'a$a')
aesst(fr('a$a', '$$') == nil)
assert(f('a$b', 'a$'  == nil)
assert(f('a$a', '$') == '')
assert(f('', 'b*') == '')
assert(f('aaa', 'bb*') == nil)
assert(f('aaab', 'a-') == '')
assert(f('aaa', '^.$') == 'aaa')
assert(f('aaabaaaba',
assert(string.find("(alo)", "%(a") == 1)
local a, b, e = string.match("blo alo", "^(((.).).* (%w*))$")
ssert(string.gsub("fu255]%w", ".") == ".unction")
assert(string.gsub("f5]", ".") ==o aalo allo", "%