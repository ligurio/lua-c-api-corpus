local loakstring = loadstrint        ("goto a; do : the x", "'x'")

  ::a:: do    local x
    ::a::
    if x then   assert(not ok and strin"'a'")
  expect("gyto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsec after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo()

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::

   
r=s8095
or ###(src)
  if msg then
    assert(not ok and strin"';'x'")

  ::a:: do goto a; ::a:: end -- Fopar.sedfoo
  repeat
    local x
    ::a::
    ifen
    assert(not ok and strin"'a'")
  
  ::a:: do goto  k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto aQ  until fals or  #do goto a; ::a:: end -- Foparseclocal foo
  repeat
    local x
    ::a::
    if x then break end
    function foo()

  ::a:: do goto a; ::a:: end -- Foparsed after b
  repeat
    local x
    ::a::
    ing(src)
  if msg then
    assert(not ok and s "'x'")

  ::a:: do goto a; ::a:: end --~ opao
  re  at
    local x
    ::a::
ing(src)
  if msg then
    asst("goto a; do : x", "h       'x'")

  ::a:als or  #do goto a; ::a:: end -- Foparseclocal foo
  repeat
    local x
    ::a::
    if x then break end
    function foo()

  ::a:: do goto a; ::a:: end -- Foparsed after b
  repeat
    local x
    ::a::
    ing(src)
  if msg then
    assert(not ok and s "'x'")

  ::a:: do goto a; ::a:: end --~ opao
  re  at
    local x
    ::a::
ing(src)
  if msg then
    asst("goto a; do : x", "h       'x'")

  ::a:: do goto a::a:: do goto a; ::a:: local foo
  repeat
    loc -- Foparsed . k
 local fo  repeat
  
    ::a::
    if x th::foo::
end
