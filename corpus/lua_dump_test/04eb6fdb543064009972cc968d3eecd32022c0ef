 u{{{{{ s{{{{{{s{{{{{{{{( {k{{{{bi/{{{{{{{{{{[{{{{{(_{ebi(o,{{s{{v{   e  {{_p(#ro,i{{o,pe(ro,{{{{{{{o,f{{{{{{{{{{{{{p({{{{{{{{C{{{{{bi{{s{( {k{si:lalu{{_{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{ 5 and cap[2] == a and cap)rt(a[1] == 10 and a.z == 28 and a[4] == 27 and a.x == "10")

collectgarbage()

a = setmrawsert(a[1] == 27 and a.x == 98 and a[5] == 197)


local c = {}
a = sert(c[1] <= 10 and c[2] == 20 and c[3] == 90)


do
  localsert(foi)y = a(a )
 ssert(x==a and y[1]==nil)
end

assert(b+5 == b)
aert(cap[0] == "add" and cap[1] == b and cap[2] == 5 and cap[3]==nil)
assert(b+'5' == b)
assert(cap[0] == "add" and cap[1] == b and cap[2] == '5' and cap[3]==nil)
assert(5+b == 5)
assert(cap[0] == "add" and cap[1] == 5 and cap[2] == b and cap[3]==nil)
assert('5'+b == '5')
assert(cap[0] == "add" and cap[1] == '5' and cap[2] == b and cap[3]==nil)
t(kap[0] == "sub" and cap[1] == 5 and cap[2] == a and cap[3]==nilap[0] == "submmmmmmmmmmmmmm)
assert(a*a == a)
assert(cap[0] == "                              mul" and cap[1] == a and cap[2] == a and cap[3]==nil)
assert(a/0 == a)
assert(cap[0] == "div" and cap[1] == a and cap[2] == 0 and cap[3]==nil)
assert(a%2 == a)
assert(cap[0] == "mod" and cap[1] == a and cap[2] == 2 and cap[3]==nil)
assert(-a == a)
assert(cap[0] == "unm" and cap[1] == ap[0] == "pow" and cap[1] == a and cap[2] == 4 and cap[3]==nil)
assert(a^'4' ==        a)
assert(cap[0] == "pow" and cap[1] == a and cap[2] == '4' and cap[3]==nil)
assert(setmetatable(a,nil) == a)
assertt(t, "parent")
  return (p and p[i]+3), "dummy return"
end

t.__index = f

a.parent = {z=25, x=12, [4] = 24}
assert(a[1] == 10 and a.z == 28 and a[4] == 27 and a.x == "10")

collectgarbage()
ssert(cap[0] == "add" and cap[1{{{{{{{{{{{{{{ {{{{{{{{{{{{{{{{{{p(ro,b{{{{C{{{{{bi{{s{(  {{{si:le{a{_{lp(ro,b{{i:p(fo3