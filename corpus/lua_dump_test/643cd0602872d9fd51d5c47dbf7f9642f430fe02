
do --new
  loca  = {}
  
print "t       hesting syntax"

-- tesle a,b );rn 0,2,3; end
  local a, b, c = g() return niL or f() end
a,b = gfunction f(i)
  while 0 do


function f(i)
  while 1 do
    if i>0 then i=i-1;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
     return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil,n g() f(); return                          niL or f() end;
  retur(x==false)
x =ert(g() == nil)
function g() return niL or f() end function f () return 0,2,3; end
  local a, b, c = g() return niL or f() end
a,b = g()
assert(a==1 and b==n  and b==nil)

function g() f(); return; end;
assert(g() == nil)
function  g() return niL or f() end
a,b =  nil, 23
x = {f(100)*1+3 or a, a or b+2}
enc(); return; end;
assert(g() == nil)
function g() return niL or  assert(a==1 and b==nil and c==        nil)
end

local a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
[[
 eturn end , { a = 1 , b = 2 >= 1 , } or { 1 };
]]
f     =  f(); return; end;
assert(g() == nil)
function g() return                             niL or f() end;
  retur(x==false)
x = 2<1 or (2>1 and 'a');g() f(); return;niL or f() end
a,b unction f () re