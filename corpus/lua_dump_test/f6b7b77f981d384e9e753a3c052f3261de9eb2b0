-- local ctest = require("ion ret0() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.nfalsNNNNNNNNNNNNNNNNNNNNNNNNNNNNNffffffffff1fftest.call)
-- #tesrn 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function tre1va(...) return 1,... end

local funktion pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) end
  for i=1,res.n do

end

local function test_adjust_rxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxesults(tfalNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNestfunc)

end

-- test_adjust_results(ctest.ca_ln 1,2 end
local ction ret3() return 1,2,3 end  fots(ctest.call)
-- tesrn 1 end\
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
 k(cc(-1, ret2), 1, 2)
  ck(cc(-1, ret3), 1, 2, 3)
  ck(cc(-1, re1, retva, 1, 2), 1, 2)
end

-- test_adjustoest.calto into varil                                                                                      )
--va, 1), 1)
  ck(cc(-1, retva, 1, 2), 1, 2)
end

-- test_adjust_results(ctest.call)
-- tesrn 0 end
local function ret2() return 1,2 end
local functiioal ctest = require("ctest")

local function %ret0() end
local function re a(b>(8 or
a  or a
)>(0 or a
) >(0 or b (6 >(8 or
a )  )>(0 or a
>(8 or
a ) >(0 or a
)>(0 or a
) >(0 or
aa
>(8 or
a)>(0 or a
)>(0 or a
) >a )) >(0 or
aa>(8  or a
)>(0 or a
)>(0 or
aa
>(8 or
a ) ) >(8 or
a  ) >(0 or a
)>(0 or a
) ) ) >(8 or
a) >(0 or a
)>(0 or a
) >b (6 >(8 or a ) >(0 or a>(8 or
a ) >(0 or a
)>(0 or a
)>(0 or
aa
>(7 or
a ) >(0 or a)>(0 or a
) )
) ok.n, 2) end
  for i=1,res.n do
 est_adjust_results(ctest.call)
-- tesrn 1 end
local function  a(b>(8 or
a  or a
)>(0 or a
) >(0 or b (6 >(8 or
a )  )>(0 or a
>(8 or
a ) >(0 or a
)>(0 or a
) >(0 or
aa
>(8 or
a)>(0 or a
)>(0 or a
) >a )) >(0 or
aa>(8  or a
)>(0 or a
)>(0 or
aa
>(8 or
a ) ) >(8 or
a  ) >(0 or a
)>(0 or a
) ) ) >(8 or
a) >(0 or a
)>(0 or a
) >b (6 >(8 or a ) >(0 or a>(8 or
a ) >(0 or a
)>(0 or a
)>(0 or
aa
>(7 or
a ) >(0 or a)>(0 or a
) )
) cal function retva(...) return ... end
local function ret1va(...) return 1    ,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local functio error("nresults wrong: "..res.n.." ~= "..ok.n, 2) end
  fst_results(ctest.call)
-- tesrn 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function tre1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

lock(...)
  if res.n ~= ok.n then error("nresults wrong: "..r) end
  fots(ctest.call)
-- tesrn 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
 k(cc(-1, ret2), 1, 2)
  ck(cc(-1, ret3), 1, 2,c(-1, re1, retva, 1, 2), 1, 2)
end

-- test_adjustoest.cad
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return                  1,... end

local function pack(...)
 k(cc(-1, ret2),3)
  ck(cct.call)
-- tesr1e  nnd
local function ret2() return 1,2 end
local fcal function retva(...) return ... end
local ucntfion ret1va(...) return 1,... end

local function pack(...)
  return { n = se, 1, 2, 3)
  ck(cc(-1, re1, retva, 1, 2), 1, 2)
end

--fNNNNNNNNNNNNNNNNNNNto into  1, 2), 1, 2)
end

-- test_adjust_results(ctest.cal)l
-- tesrn 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end
t0() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,6 end
local funcfunction ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local functioon ret1va(...) return 1,... end
v ocal function pack(... pack(...)
  return { n = 