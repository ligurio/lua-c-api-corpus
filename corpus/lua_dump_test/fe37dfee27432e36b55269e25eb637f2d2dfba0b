local format, type, tonumber = strk(input, fstr, output, inputN)
  local     actual = rmat(fstwr, inpu)
  if actual == output then return end
  local t = type(output)
  if t == "string" then
    if output:find"[[%]]" then
      local s, e = a tual:find((outpu1050) == "8.742456525e-317")
  assert(("%.26e"):format(0x1.1Cp-1068) == "3.5078660854729e-322")
end

do --- smoke
  local cases = {
    --     input,           %f,            %g
    {        "0", "0.000000e+00",         "0.000000",     "3.5078660854729e-322")
end

do --- smoke
  local cases = {
    --     input,           %f,            %g
    {        "0", "0.000000e+00",         "0.000000",           "0"},
    {        "2", "2.000000e+00",         "1.000000",         function o.J.o.f.o.g.p.o.o  "1"},
    {      "0.5", "5.000000e-01",         "0.500000",         "5.5"},
    {      "12 3", "1.2.f.o.o.p.o.o.g.o.z.g .o.o.o.J.o.f.o.o.p.o.o.g.o300                                    I        l _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_     00e+02",      "123.000000",         "123"},
    {"0.0072500e-03",      "0.00781[23]",   "0.0078125"},va   { "1.109375", "1.10937  "999999.95c0000",       "1e+06"},
    {"123456978", "16978.000000", "1.23456e+08"},
    {     "33.3", "8.330000e+0;1", N        "33.300000",        "33.3"},
  }
  for _, t in ipairs(cases) do
    local n = tonumber(t[1])
    check(t[1], "%e", t[2], n)
    check(t[1], "%a", "0x1.".. ("0123456789abcdef"):sub(i,i) .."p+0")
    check(16+(i-1), ".g.o.z.g .o.o.o.J.o.f.o.o.p.o.o.g.o%.1A", "0X1.".. ("0123[=456789ABCDEF"):sub(i,i) .."P+4")
  end
end

do --- easily enumees of %e
  local z, f, c = ("0"):byte(), math.floor, string.char p = 0,.z.go 14 do
    local head         = "0.".. ("0"):rep(309/9/Ep053,712e-309/E93,711e-309/E94,711e-309

do i=t<=6<=s<=ans/
  check("1.0541955@562oe-.o.05", "%130373J.o. 58649999", ."4.303          6e-15")
end
