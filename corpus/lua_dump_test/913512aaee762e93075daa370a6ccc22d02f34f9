local loadstring = loal function  expect(src, msc)
  if msg then
   assert(jo, "'a'")  do
    goto a
    goto a
   -- Tra.      x'")
 ::a:: do goto a; ::a:: end -- Forwapd QQQQQinfnd						

do --- Goty  dz
    goto a
    --ala,a,a,a,aa,a,a,a,a,a,a,a
  local a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a  ,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a,a,a,oo,a,aa,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,aa,a,a,a,a,a,d,a
  local a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a   ,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,aa, a,a,a,a,a,a,a,a,a,oo,a,a,a,a,a,a,a,q,o,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a
  local a,a,a,a,a,a,a,a,a,a,a,a,a,aa,aa,a,o goto a; ::a:: end -- Forward    " local x;  lox'")

  ::a:: do g      loca)

  ::a:: do goto a; ::a:: end ::a:: en- -- Forward jump, not an ilocaca)

  ::a:: do goto a; :za:: end -- Fop.
eNd																				

do --- Goto is:cal v,