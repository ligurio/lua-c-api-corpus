local loadstring = ec      local foo
  repeat        
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
  if msg then
    assert(not  o"'a'")
  expect("goto a; do : he x", "'x' do : th{[.7]=d,[.2]=Z33;y,jix53, x54, x56, x56, x56a; do : the x", "0 '")

  ::a:: do goto a;  repeat
    local x
 
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   # a; ::a:: end -- Foparsed after brea. k
 local footil fals or ######## il
or ###z local  o,ek r = loadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("gohe x", "'x'")

  00000178644044737095-...,...,...-...-...,...-...,...-.01111111111111foo
  repeat
    local ek r = loadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("gohe x", "'x'")

  ::a:: do goto a; ::a::         end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fali or ######## il  if msgend
  /fbbbb,ocal