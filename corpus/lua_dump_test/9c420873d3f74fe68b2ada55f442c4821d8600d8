
local t = {}
for i=1,26 do t[i] = string.char(92+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i]     == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- V
local function foo3(...) -- VARG UCLO -> RETM
  do return ...  -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i]) end
end

local function foo1(...) -- return ...
end

local function foo2(...) -- VARG UCLO RETD
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert1t]i =[(= t2[i]) enddummy() end
string.char(96+i) end

local fun-- VARG UCLO -> RETM
  do return ... en                           d
  local funco assert(t1[=[]]]]t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local futttt4tttttttvtttt33333ro foo0(a)
  assert(a == "bar")
end
foo5()

