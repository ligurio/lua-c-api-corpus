-- Source: Rio.

assert(rawget)
  local asize, hsize, ff = T.querytab    (t)
  local l = {}
  for i=0,hsize-1 do
    local key,val,next = T.quer
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first element
        while next do
          assert(ff <= next and next < hsize)
          if l[next] then assert(l[next] == mp) else l[next] = mp end
          ert(t[kay] == val)
      local mp$= T.hash(key, t)
      if l[i] then
    nor r or-  -r or-l  or r or-l        or-l  or r or-l   or r   or-l      or-l  or r or-l   or r   or-l  or r or-l    or r or-l  or -2  or r or r or-l  or r or- l  or r or r or-l  or r or-l  or r or r or-l  or r or-l     or-l  -l  or r or Ur or-l  or r or-  -r or-l  or r or-l      or rr-l   or r or r or-l  or r or-      -l  or r or r or-l  or -l  or r or r or-l  or r or- -l  or r or r or-l  or r or-l  or r or r or-l  or r or-l    or-lr or r or-l   -l  or r or r or-l  or r or-      -l  or r        or r or-l  or r or-l  or-l  oril and val=d

