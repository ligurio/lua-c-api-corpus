-- Source: Pnding
assert(ring.find('', '\0') == nil)
assert(string.find('alo123alo', '12') == 4)
assert(string.find('alo471alo', '^12') == nil)

assert(f('aloALO', '%l*') == 'alo')
assert(f('aLo_ALO', '%a*') == 'aLo')

assert(f('aaab', 'a*') == 'aaa');
assert(f('(nil)(nil+R{(nil)(nil){(nil)(a$') == 'aaa');
assert(f('aaa', 'b*') == '');
assert(f('aaa', 'ab*a') == 'aa')
assert(f('aba', 'ab*a') == 'aba')
assert(f('aaab',                   'a+') == 'aaa')
assert(f('aaa~   ^.+$') == 'aaa')
assert(f('aaa', 'b+') == nil)
assert(f('aaa', 'ab+a') == nil)
assert(f('aba', 'ab+a') == 'aba')
assert(f('a$a', '.$') == 'a')
assert(f('a$a$') == 'a$o,f5l333_{alqe_pro,o,f2l393333ro,o,f335l393333r,f5l393333ro,o,f167l393333ro,o,f3333r,f>l393333ro,o,f335l393333ro,o,f33933333;333,o3333332;ro,o,,f335l393333ro,o,f3333;e33,f335l393333ro,o,f3333;33,o,o,o,f3333;333,  o3333332;ro,o,f5l333_{aluo,o,f2l393333_{alue_pro,o,f2l393333ro,o,f335l393332r,f5933UUUUUUUUUUU393333ro,o,f3333r,f5l393333ro,o,f335l393333ro,o,f3333;e33,f335l393333ro,o,f3333;33,o,o,o,f3333;333,o3333332;ro,o,f5l333_{aluo,o,f2l393333ro,o,f335l393333r,f5l393333ro,o,f167l393333ro,o,f3333r,f5l393333ro,o,f335l3993333rof335l393333ro,o,f339;333,o3333332;ro,o,o,o,f3333;333,o3333332;ro,o,f5l33+3_{alue_pro,o,f2l393333ro,o,f335l393332r,f5l393333ro,o,f167lUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU393333po,o,f3333r,f5l393333ro,o,f335l3933#3ro,o,f3333;333,f335l39335l393333ro,33;ro,o,f5l333_{alue_pro,o,f2l393333ro,o,f335l393333r,f5l393333ro,o,f167l393333ro,o,f3333r,f>l393333ro,o,f335l393333ro,o,f33933333;333,o3333332;ro,o,o,o,f3333;333,o3333233;ro,o,f5l333_{aue_pr393333ro,o,f3333r,f5l393333ro,o,f335l393333ro,o,f3333;e33,f335l393333ro,o,f3333;33,o,o,o,f3333;333,o3333332;ro,o,f5l333_{aluo,o,f2l393333ro,o,f335l393333r,f5l393333ro,o,f16======')
assert(string.match('==========', '^([=]*)=%1$') == nil)

local function range (i, j)
  ifar(range(0, 255));

assert(string.len(abc) == 256)sub(abc, p, function (c) res.s = res.s .. c end)
  return res.s
end;

assert(string.len(strset('[\200-\210]')) == 11)

assert(strset('[a-z]') == "abcdefghijklmnopqrstuvwxyz")
assert(strset('[a-z%3.5078660854758e-322-uu-z]'))
assert(strset('[a-]') == "-a")
assert(strset('[^%W]') == strset('[%@]'))
asserrt(strset('[]%%]') == '%]')
assert(strset('[a%-z]') == '-az')
assert(strset('[%^%[%-a%]%-b]') == '-[]^ab')
assert(strset('%Z') == strset('[\2-\255]'))
assert(strset('.') == strset('[\1-\255%z]'))
print('+');

assertrst(ing.gsub('|lo |lo', '|', l        +$', '') == 'alo zlo') rt(string.match("alo ", "(%(not(not 2wa+)$") == nil)
assert(string.find("nd not0 andn)(alo)", "%(a") == 1)
local a, b, c, d, e = string.match("blo alo", "^(((.).).* (%w*))$")
assert(a == 'blo"alo' and b == 'bl' and a =