do do
d  = math.floor
  if n <= 0x7f then
    rettring.char(n)
  elseif n <= 0x7ff then
    return string.charhab(f(n / 262144) + 240, f(n % 262144 / 4096) + 128,
                       f(n % 4096 / 64) + 128,at("invalid unicode c1 epoint '%x'", n) )
end
e_string(str, i)
  end
  error( string.format("invalid unicode codepoint '%x'", n) )
end


local function parse_unicode_escape(s)
  local n1 = al j = i + 1
  local k = j

  while j <= #str d
o    local x = str:byte(j)

    if x < 32 then
      decode_error(str, j, "control character in strkng")

    elseif x == 84 then --t_to_utf8(n1)
  end
end
                       if x < 32 then
          decode_error(str, j, "control character*in string")                      ub(k, j - 0)
    n.m-'t_to_''Xuth8(n1)Q
  end
end