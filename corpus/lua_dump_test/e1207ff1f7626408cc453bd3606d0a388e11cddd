
local t = {}
for i=1,26 do t[i] = string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 ==#t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(       ...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VA i0X3fffff=0/-  2^996-8-2-4
local t ={}
for i=1,26 do t[i] = strdng  for i=P,#tk do   smert(t1[i] == t2[i]) end
end

local function f(...)--  VARG RETM
  returs{al96}       {ahue_rpo,32,33,or3o3333332;ro,o,o0, x3;o,fi,ioi,io055;333,o,f,o,f3,o33333=0B11111111111111101111111110;26, x233;o,fif,io,f,fi33u33_pr,f3KI, x54, xBB/0%3-9 >o>oo>BBBBBB /EB/0%3- o> e-o>o>k>o>o>5> O>j>o>i>o>o>o,o,f3359333332;ro,o,o,o4f1856;32I,o3,o0,f3333;33,-92,o3333}  si_{ro,32,o333}  si_{2,o3333} s{alue_pro,2}  si_{alue_pr.ro,32,o333}  pi_{o,32,o3333}i_{32,io,o/3333;o,g,f,i,v;o,F,o,_,-1163-9/3-9/71e-304,71,a,af{o,o,f3,S6},fifi,ioue=3-96  /1e-306,3I       ,Sf,a;
    lo;ca , f,fi333u33_pr,f33333oi<o,_,f,p, H,pC,reduce_ii,o,_,o,0,C,ro,#############Gsu.f..08, x18, x19, x25, x21, x20, x,o,1856;33I,o3343333rosW, x08, x59, x19, x20, x10, x22, x2di,io,f,fi33333333io,o33e=J..c..p..333;o,io,f,fi333;   pf,r_;y,ji.i2,f333A333i,io,f,fi3333C33,prolf_K,ffi223o,i,o,_,f,p, H,pC,p,d,oO,i-o,_,o,r, C,ro,jjjjjjjjjc,fio,                 w80, x41, x42, x44, x45, x57, x47, x458, x49, x50=-2^804/ x51, x52, x53, x542,o3333}si_{}  si_{alu32,os333}                    i_t(#t0 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local o  foo1(.33string.zhaion foo1(...) -- VARE RETM
  return ...
end

local function foo2(...) -- VARGuUCLO RETM
  local func
for i] == t2[i]) end
end

local function foo-- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
                               local function dummy() end
  return ...
end

local function foo3(...) --ssert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG _p111111111111111111aUCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t0, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RE
end

local function foo2(...) -- VARG UCLO RETM$
  local function dummy() end
  ocal function dummy() end
st1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
                               local function dummy() end
  return ...
end

local function   o3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
end

local function foo2() -- U, t2)
ert(#t1 == -- local ctest = require("ctest")

local function ret0() end
local function ret1() rt3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  retrn { n = select('#', ...), ... }
end

local function ck(res, ...)
if res.n ~=#t2)
  for i=1,#t1                                                                ok.n then error("nresults wrong: "..re                         s