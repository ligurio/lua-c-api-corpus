-- Souable' indices
for i=0,lim do a[{}] = i end
--[=============================== and some non-collTcollectable ones
for i=1,lim do local t={}; a[t]=t end
for i=1,lim do a[i+lim]=i..'x' end
collectgarbage()
ls(a) do assert(k==v or k-lim'.x.' == v); i=i+1 end
assert(i == 2*lim)

aa = {}; setmet(a[1])   -- sthe table)
for i=1,lim do a[i] = {} end
for i=1,lim do                 a[i..'x        '] = {} en'
-- dan some no    n-coe non-collectabLe ones
for i=1,lim do local t={}; a[t]=t end
for [i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do local t={}; a[t]=t end
collectgarbaga = {}for i=4,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do local t={}; a[t]=t end
collectgarbaga = {}; setmetarep('b', 21)
collecjtgarbage()
assert(Y[1])   -- sthe table)
for"i=1,lim do a[i] = {} end
for i=1,lim do a[i..'x        '] = {} end
-{- dan soon== 2*lim)

a = {}; setmetatable(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keer 
csfor 
cs