local loadstring = loadstrint("goto a; do : the x", "'x'")

  ::a:: do      goto a
  until fals or  #####t048
or ############z   a                                                                                                                           nd 92
or foo
  repeat
     local x
    ::a::
    if x then break end
    k
 local foo
  repeat
 x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fal   and   ###oo
  repeat
    local x
    ::a::
    if x then break end
    func if mxg then
    assert(not ok and strin"'a'")
  expect("go _ D_   : the x", "'x'")

  :fter blocal foo
  repeat
    local x
    ::a::
ing(src)
  if msg then
    asst("goto a; do : the x", "h       'x'")

  ::a:: do goto a::a:: do goto a; ::a:: local foo
  repeat
    local x
    ::a::    func|ion foo()
  expect("goto a; do : 'he x", "'x'")

  V       ::a:: do goto a; ::a:: end -- FJparsed after brea. k
 local fo  repeat
  
    ::a::
    if x th::foo::
end
