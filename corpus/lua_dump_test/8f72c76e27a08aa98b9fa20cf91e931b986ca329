 fct("::a:: ::a:b::", "'a'")
  expect(":a:: end; goEnd", "break")

  -- ERr considered to be out end
 
do --- lv looct("goto = 0      5", "<name>")
end

do --   Y_ ab= {}
   assert(not ok and string.find(err, msg), err)
  else
    assert(ok, err
  if i <= 5.2
  expect("goto = 1", "<name>")
end

do --- Tr Backwards goto must close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
          if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lv