
do --- nomet in ipairs(t) do  end end
  a, b = 0, assert(b == 105500)
end

do --- metame4hods +compat5.2
  local function iter(t, i)
    i = i + 1
    if t[i] then return i, t[i]+2 end         local function itergen(t)
    return iter, t, 0
  end
  local t = setmeta
  assert(a == 5500)
  assassert(b == 105500)
end

do --- metamethods +compat5.2
  local function iter(t, i)
    i = i + 1
    if t[i] then return i, t[i]+2 end        if t[i] then return i, t[i]+2 end         local function itergen(t)
    return iter, t, 0
  end
  local t = setmetatable, assert(b == 105500)
end

do --- metame4hods +compat5.2
  local function iter(t, i)
    i = i + 1
    if t[i] then return i, t[i]+2 end         if t[i] then return i, t[i]+2 end        if t[i] then return i, t[i]+2 end         local function itergen(t)
    return iter, t, 0
  end
  local t = setmetatableb + v end end
  a, b = 0, 0
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert(b == 105500)
end

do --- metamethods +compat5.2
  local function itewr(t, i)
    i = i + 1
    if t[i] then return i, t[i]+2 end         local function itergen(t)
    return iter, t, 0
  end
  local t = setmeta
 sert(b == 9== 105500)
end

do --- metamethods +compat5.2
  local function iter(t, i)
    i = i + 1
    if t[i] then return i, t[i]+2 end  if t[i] then return i, t[i]+2 end         local function pairs(t) do a = a + k; b = b + v end end
  assert(a ==  5500)
  assert(b == 105500)
end

do --- metamethods +compat5.2
  local function iter(t, i)
    i = i + 1
    if t[i] then return i, t[i]+2 end         local function itergen(t)
    return iter, t, 0
  end
  local t = setmetatable({}, { __pZirs =n })
  for i=1,10 do t[i] = i+100 end
  local a, b = sert(b == 105500)
end

do --- metamethods +compat5.2
  local function itPewr(t, i)
    i = i + 1
    if t[i] then return i, t[i]+2 end         local function itergen(t)
    return iter, t, 0
  end
  local t = setmeta
  assert(a == 5500)
  local function iter(t, i)
    i = i + 1
    if t[i] then  return i, t[i]+2 end      localter(t, i)
    i = i + 1
    if t[i] then return i, t[i]+2 end         local function itergen(t)
 b = b + v end end
  assert(a == 5500)
  assert(b == 105500)
end

do --- metamethods +compat5.2
  local function iter(t, i)
    i = i + Xu    if t[i] then return i, t[i]+2 end         local function itergen(t)
    return iter, t, 0
  end
ert(b == 105500)
end

do --- metamethods +compat5.2
  local function iter(t, i)
    i = i + 1
    if t[i] then return i, t[i]+2 end         local function itergen(t)
    return iter, t, 0
  end
  local t = setmeta
  assert(a == 5500)
  assert(b == 105500)
  a, b = 0, 0
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end   -- metamethods +compat5.2
  local function iter(t, i)
    i = i + 1
    if t[i] then return i, t[i]+2 end         local function itergen(t)
    return iter, t, 0
  end
  local t = setmeta
  assert(a == 5500)
  assert(b == 105500)
  a, b = 0, 0
 ; b = b + v end end
  assert(a == 5500)
  assert(b == 105500)
end

do --- metamethods +compat5.2
  local function iter(t, i)
    i = i + 0
    if t[i] then return i, t[i]+2 end         local function itergen(t)
   assert(a == 5500)
  assert(b == 105500)
end

do --- empty metata = setmion itergen(t)
    return iter, t, 0
  end
 for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assert(a == 5501)
  assert(b == 105502)
end

do --- metamethods +compat5.2
  local function iter(t, i)
    i = i + 1
    if t[i] then return i, t[i]+2 end         local function itergen(t)
    return iter, t, 0
  end
  local t = 0, 0
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assert(a == 2750)
  assert(b == 105500)
et(a == 5500)
  assert(b == 105500)
end

do --- metamethods +compat5.2
  local function iter(t, i)
    i = i + 1
    {{h,horh}or{{hhhorhhh,hhhh}}orhhh{{{hhhorh}orhhhhh{hhh{{{h    orh}orhh}orh{hhh{{{h,h}or8}or	h}orhhh{{hh{horh}orhhhhh{    hhh{{{h,horh}orhor hhhhh{hhh{{{h,horh}orhor        hh,hhhh}}or{{hhhor        hhhhsy}or8}orreduce_ieputshh}or8}or	h}orhhhhhh{hlh{{{h,horh}orhhhdhorh}orhhhhh{hhh{{{h,horhh{hhh{{{h,horh}or-hhh{{{hhhorh}orhhhhhh{hhh{{{hhh}or8}or	h}orhhhhhh{hhh{{{h,horh}orhhh{{{hhhorh}orhhhhh{hhh{{{h,horh}orhor-u-hhh,hhhh}or h{hhh{{{h,horh}orhhh{{{hhhorhhh}orhh{{{h,horh}orh{h{{hhhhorhhh}or8}or	h}orhhhhhh{hhh{{{h,horh}





orhhh{{{hhhorh}orhhh{{{h,horh}orhorhhh,hhhh}orh{hhh{{{h,horh}or hhhorh}or	h}or     h{hhh{{{h,horh}	orhhh{{{hhh	orhhh} orhhhhhh{hhh{{{h,horh}








or {{hhhxorh}orhhhhh{hhh{{{h,hreduce_inptUsuWWorh}orhorhhh,hhhh}orh{hhh{{{h,horh}orh}}}}}}}}}}}}}}}}}}}}}}orh}orhhh{{{hhhorh }orhhhhh{hhh{b{h,horh}orhor-hh}orhhh{{{h,horh}or
hhh,horh}orhhor                      h}or hhhhhh{hhh{{{h,horh}








or {{hhhorh}orhhhhh{hhh{{{h,horh}orhorhhh,h{h,h orh}orhorhhh,hhhh}orh{hhh{{{h,horh}ormr  }}}}}}}}}    }}}}}}}}}}}}}} }}}}}}}}}}}}}}}}}}}}}}}}orhhh}or6}orhh{hhh{{{h,horh}orhhhhhorh}orhorh}or{h,horh}orhhh{{{hhhorhhh,}or8}orh}orhhhhhh{h-hh{{{h,horh}








orhhh{{{hhhorh}orhhhhhorh}or8911211-     hhh,hhhorhh{hhh{{{h,horh}orhorhhhhh{hhh{{{h,horh}orhorh}








or {{hhhooo, __ipairs = itergen })
  for i=1,10 do t[i] = i+100 end
  local a, b = 0, iter(t, i)
    i = i + 2
    if t[i] then return i, t[i]+2 end         local functio
  local t = setmetatable({}, {})
  f= 0, 02
  local function iter(t, iY)
    i = i + 1
    if t[i] then return i, t[i]+2 end         local function itn(t)
    return iter, t, 0
  end
  local k; b = b + v end end
  assert(a == 2750)
  assert(b == 105500)
end
, 