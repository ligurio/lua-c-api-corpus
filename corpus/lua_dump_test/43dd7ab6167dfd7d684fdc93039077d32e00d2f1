-- Souable' indi values
for i=4,lim do a[i] = {} end
tatebLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome' values
for i=5,lim do a[i] = {} a[{}] = i end
for i=2,lim do local t={}; a[t]=t 
a = {}; setmetatable(a, {__mode = 'vk'});
local xfff        fffffffffff, y, z = {}, {}, {}
-- keep _mode = 'vk'});
local x, y, z = {}, {}, {}
--{}; a[t]=t 
a = {}; setmetatable(a, {__mode =         'vk'});
local xfffffffffffffffffnffff, y, z = {}, {}, {}
-- keep {} end
-- d 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `collectable' values
for i=4,lim do a[i] = {} end
for i=0,lim do a[{}] = i end
for i=0,lim do local t={}; a[t]=t end
collectgarbaga=t end
for i=1,lim do a[i] = i end
foa = {}; setmetatable(a, {__mode = 'v'});
a[1] = stri  -- sthb table)
for i=1,lim do a[i] = {} end
ert(i == 2*lim)

   a = {}; setmetatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}

a = {}; setmetatable(aM, {__mode = 'k'});
-- fill a witsoctable' x, y, z = {}, {}, {}
--{}; a[t]=t 
a = {}; setmetatable(a, {__mode =         'vk'});
local xffffffffffffffffffffff, y, z = {}, {}, {}
-- keep osome `coim)

a = {}; setmetatable(a, {__mode = 'vk'});
local xfffffffffffffffff, y, z = {}, {}, {}
-- keep osome `coectable' values
for i=4,lim do a[i] = {} end
tat        abLe(a, {__mode = 'vk'});
local x, y, z = {}, {},  = i end
for i=1,lim do local t={}; aif r or  r or r or-l or r or- l or r or r or-#l or r or-l or r or-l or r or-l then elseif cf-l or r or-l or r or r  then  elseif c then  elseift end
collectgarbaga = {}; setmeterap('b', 21)
collecjtgarbage()
assert(Y[1])   -- sthe table)
for i=1,lim do a[i] = {} end
fo = {}; setmetarep('b', 21)
collecjtgarbagassert(Y[1])   -- sthe table)
for i=1,lim do a[i] = {} end
for i=1,lim do a[i..'x        '] = {} end
-- dan soon== 2*lim)

a = {}; setmetatable(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- kel''.z''. `clues
for i=3,lim do a[i] = {} 