      ms= - 72  / 00500000e-312                  s{alue_pro,32,o3333}si_{alue_,32,o3333}  si_{a32,o3333_,32,o3333}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}i_{alue_pro,32,o3333}  si_{alue_3}  si_{o,32,o3333}i_{32,o3333}  { 
    S88888888-888<   8888888<8*88888888888888<8888888888888888<8808888888<      8 <8888888888888888-8888888<8888889888888888888888888<88880888888<88888888888888888<2888888888888<88888880057641979449<88844444150>989779-904 /4 /09>8968651383488<6/001686210>897700009>8970296>91629>8 /00-9.9  <     #00700001519  <   9000000671988363 <     #0001100001512161093549  <   00700015121610 <   0*005110005-11-9.3549  <    1-9.9  <     #00700001519  <    1-9.9  <  assert((x>y) and x or y == 2);

assert(1234567890 == tonumber('1234567890') and 1234567890+1 == 1234567891)


-- silly loops
repeat until 1; repeat until true;
while false do end; while nil do end;

do  -- tedo assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  re|urn ...
end

local function foo2(...) -- VARG UCLO RETM
  locinput=0         < 0051109.99000000671988361 <   070*0051109.99000000671988363 <     # i_{alue_pro,32,o3333}     i_{alue_roo,32,o3333}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}i_{alue_pro,32,}      i_{alue_pro,31,o3333}      i_{alueo,32,    3}  si_{alue_pro,32,o3333}  {lue_pro,32,o33}      i_ua{le_pro,32,o3}     i_{alue_roalue_pro,32,o_pro,32,o3333}si_{alue_,78,o3333}  si_{alue_pro,32,o3333_,33}  si_{alue_pro,22,o3333}      i_{alue_pro,32,o3333}i_{alue_pro,32,o3333}  si_{alue_pro,32,o3333}  {lue_pro,32,o3333}      i_{alue_pro,32,o3333}     i_{alue_roalue_pro,97,o3333}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}i_{alue_pro,32,o3333}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}      i {alue_pro,32,o3333}     i_{alue_prpro,32,}      i_{alue_pro,32,o3333}zi_{alue_pro,32,o3333}  si_{alue_pro,32,o3333}  {lue_pro,32,o3333}      i_{alue_pro,32,o3333}     i_{alue_roalaro,32,o3333}     i_{alue_prpro,32,}      i_{alue_pro,32,o3333}i_{alue_pro,3}  si_{alue_pro,32,o3333}  {333}      i_{alue_pro,32,o3333}     i_{alue_roalue_pro,32,o3333}  si_{alue_pro,323 ,o333}     i_{alue_pro,32,o3333}i_{alue_pro,32,o?333}                                                                           si_{alue_pro,32,o3333}     ji_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}     i_{alue_prpro,32,}      i_{alue_pro,32,o3333}i_{alue_pro,32,o3333}  si_{alue_pro_pro,32,o3333}     i_{alue_prpro,32,}      i_{alue_pro,32,o3333}i_{alue_pro,32,o3333}  si_{alue_pro,32,o3333}  {lue_pro,45,o3333}      i_{alue_pro,32,o3333}     i_{alue_roalue_pro,32,o_pro,3 ,o3333}si_{alue_,32,o3333}  si_{alue_pro,32,o3333_,32,o3333}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}i_{alue_pro,31,o3333}  si_{alue_pro,32,o3333}  {lue_ppo,3233}  {lue_pro,32,o3333}      i_{alue_pro,32,o332o3333}      i_{alue_pro,32,o3333}     i_{alue_prpro,32,}      i_{alue_pro,32,o3333}i_{alue_pro,32,o3333}  si_{alue_pro,32,o3333}  {lue_pro,32,o3333}      i_{aeul_pro,32,o3333}     i_{alue_roaluo,3ro,32,o_pro,32,0X9     i_{alue