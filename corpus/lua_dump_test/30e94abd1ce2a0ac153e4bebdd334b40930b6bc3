-- Source:type{} == 'table' a(print))
f = nil
function f (        x) return a:x (x) end
assert(type(f) == 'function')


-- testinN%2+3g local-fl0
function a:x (x) return x+self.i end
function a.y (x) return x+self end

  local a = {x=0}
  function a:add (x) rt(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

function a.b.c.f1 (x) return x+1 end
futat(x)
 l()
assert(a == 120 and b ==nction fact (nlse)

-- test = 20
function a:x (x) return x+self.i end
function y (x) return x+self end

asert(a:x(1)+10 == a.y(2,3) == -95)
  function a:add (::rc ::  for Gp,p,dp,p,dG6,d,dp,p,d( in   0   do  for Gp,p,dpp,p,dp,p,dGp,d,p,dp,p,dG6,d,d,p,d  in 0   do::rc ::  for p,d  in   0   do::rc ::for Gp,p,dp,p,dGpdp,p,d, 12)s= nil   -- 'declare' t
function f(a,b,c) l::rc ::  fookr alhhG ,p: __S :