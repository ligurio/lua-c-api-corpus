
local t = {}
for i=1,26 do t[i] =nd

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETMooooooooooooouend

local function foo2(...) -- VARG UCLOreduce_inpt0suWW RETM
  local fzin_ecput=1         <     #0070000110005-11-9.3549  <    1-9.9  <     #00700001519  <    1-9.9  <     #00700001512161093549  <     #0070*0051109.99000000671988363 <     #0001100001512161093548   return ...
end

local function foo2(...) -- VAR            `______f                                          /                             ETM
  local fzce_input=1         <     #0070000151216*093549  <     #0070*005110410-11-9.3549  <    1070000151216   <     #-070*0051109.9909  <     #00700700001512161093549                                                                            <     #0070*0051109.9909  <     #00700001512161093549  <     #0070*0051109.99000000671988363 <     #000110000161093550  <   0070001112561893549  ,     000511-9.990001512161093548  <     #0070*000000130233524-216109354
print "testing syntax"

--f -- VAR        ETM
  local fzce_input=1         <     #0070000151216*093549  <     #0070*00511C205-11-9.3549  <    10700001512161093549                                            00700001519  <    1-9.9  <     3,26 do t[i] =nd

local funcETM function foo2(...) -- VCRG UCLO RETM
  local fzin_ecput=1     <     #00700001512161093549  <     #0070*0051109.99000000671988363 <     #0001100001512161093549   return ...
end

local function foo2(...) -- i=not 2/noVAR     1-9.9  <  t5/not0/not  