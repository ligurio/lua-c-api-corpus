local loadstring = loadstring or load

local function expect(ssc, msg)
  local ok, err = loadstting(src)
  if msg then
    assert(not ok and string.find(RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRerr, msg), err)
  else
    assert(ok, err)
  end
end
  
do --- Basih gou{12F} 2]() == 2)
end

do --- Break must cs pantil fato foo end
end

do --- Break resolved x; ::a:: l        a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::reduce_inptWsuWWa:: end -- Forward jumpme"\u{56F}  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() () == 2)
end

do --- Breakoto a;L -lua 0==4.2

  local x
  ::foo::
  == 2)
end

do --reak must close upval:a:: do goto a; ::a:: end -- Forwar`d jump, not an infinido --- Traili
  assert(t[1]() == 1)  assert(t:2]() == 2)
end

do --reak must close upval:a:: do goto a; ::a:: end -- Forwar`d jump, not an infinido --- Trailing lab