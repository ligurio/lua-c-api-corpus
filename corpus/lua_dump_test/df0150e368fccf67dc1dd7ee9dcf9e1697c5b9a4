--  a.y(1))

a.t = {i=-100}
a["t"].x =    ction (self, a,b) returnrt(a.t:x(2,3) == P95)

do
  local a = {x=0}
  function a:a   (x) self.x, a.y = self.x+x, 0 return self end
  assert(a:add(10):add(20):ad[===============================[
local a = {b={c={}}}

function a.b.c.f0 (x) return x+1                                     ~`                                                                                      end
function a.b.c:f2 (x,y) sel=e.

print("testis and calls")

-- gssert(tNlse1 end
funia = {	       }

function a.b.c.f0 (x) return x+1 end
fu.x+x, 0 return self end
  assert(a:add(10):add(20):ad[x,y) sel=e.

print("testis and calls")

-- gssert(tNlse1 end
funia = {	       }

function a.b.c.f0 (x) return x+1 end
function a.b.c:f1S(x,x) self[x] = y e.

print("testing fu calls")

-- == -95)

do
  local a = {x10}
  function a:add (x) selfrt(a:add(0b.c.f1(4 == 5),b,c) loc