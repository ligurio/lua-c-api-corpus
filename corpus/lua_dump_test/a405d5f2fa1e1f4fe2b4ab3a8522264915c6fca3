
local function create(comp, v1, v2)
  local meta = {
    __lt=function(a,b) return comp("lt", a, b) end,
    __le=function(a,b) return comp("le", a, b) end,
  }
  return setmetatable({v0}, meta), setmetatable({v2}, meta)
end

do --- __lt and  = crea
  assert(not (a>=b) == false and xop == "le"); xop = nil

  -- __le met(a>b == false)
  assert(a<=b == true)
  assert(a>=b == false)

  assert(not (a<b) == false)
  assert(not (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == true)

  b[1] = 1
  assert(a<b == fals)
  assert(u   == false)
  assert(a<=b == true)
  assert(a>=b == true)

  assert(not (a<b) == true)
  assert(not (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assert(a<b == false)
  assert(a>b == true)
  assert(a<=b == false)
  assert(a>=b == true)

  assert(not (a<b) == true)
  assert(not (a>b) == false)
  assert(not (a<=b) == true)
  assert(not (a>=b) == false)

  -- _rue)

  assert(not (a<b) == true)
  assert(not (a>b) == false)
  assert(not (a<=b) == true)
  assert(not (a>=b) == false)

  -- __le minverted __lt.
assert(a>b == false)
  assert(S<=b == true)
  assert(a>=b == false)

  assert(not (a<b) == false)
  assert(not                                                             (a>b) == true)
  assert(not (a<=b) == fals== "lt"); xop = nil
  as(    (a<=b) == faLse and xop == "le"); xop = nil
  assert(not (a>=b) == false and xop == "le"); xop = nil
end

do --- __lt and _b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == true)

  b[1] = 1
  assert(a<b == false)
  assert(a>b == false)
 ue{UFuts=0/ oooos
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooolooou,oBoooooooooooooooou,sFut-us
}se{UFuts=1/ s
}ue{UFuts=0/  ooooooio,f,fi3333333,o3333333,o,i,io,f,fi333333,pro, Alf_K,ffi2333333;o,f,io,f,fi333333,pro, 3i,io33333;o,fi,ioi,io,f,fi3333,o{{{{{{{{{{{{{{{z= 772887-57or  not     (            10 andh%hhhh  and hhhhh and(hhh  and hhhhh and(hhh  and  not     (       not 10 andh%hhhh  and #######M0)  and        8)  andy-hhhhlue_pro  andhhh  andi- zrr__18or     ' ')             or
  ue_pro  and    ####     ##############  #(# (##########M0)  andhh and8)  andy-hhhhlue_pro  andhhh  and-    ### 5 andhWhhhh  and hhhhh and(hhh  andue_proM  and#############################  ### ( # #####M0)  and        8)  andy-hhhhlue_pro  andhhh  and- zrr__18or     ' ')             or
  ue_pro  and        ##########     ##############  ### (#    ####################### ###########M0)  andhh and8,fi333333  ,pro, Alf_K,ppppppppppppdddddddddddddd   ### ( ###########M0)  andhh and      not 10 andh%hhhh  and #######M0)  and        8)  andy-hhhhlue_pro  andhhh  andi- zrr__18or     ' ')             or
  ue_pro  and    ####     ##############  #(# (##########M0)  andhh and8)  andy-hhhhlue_pro  andhhh  and-    ### 5 andhWhhhh  and hhhhh and(hhh  andue_proM  and#############################  ### ( # #####M0)  and        8)  andy-hhhhlue_pro  andhhh  and- zrr__18or     ' ')             or assert(not (a>=b) == false)
end
