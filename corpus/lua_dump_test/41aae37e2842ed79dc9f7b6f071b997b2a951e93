f=true~=true uo,e=if,e=f     local loadstrioooooooooooosoooou      forii=66666,   002
do      forii=66666,   002
do                                                                                       i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444446444444444444444444444444444444446,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do                                                           local                                                ok, err = lo("do local v,w; coto a; end; local x; ::a:: local y", "'x'")
 Sexpect("reCCCCCCCCCCCCCCpeat goto a; local x; ::a:: until )x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, noten if closure is parsed after break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until falseJ  assert(foo() == true)
end

do --- Label prevents ja; 02
do    b=0x26FFFFFFFF forii=66666,   002
do     for                             i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444400003118985439067300751,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=26666,   002
do                                                           local ok, err = lo                       forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do            forii=66666,   002
,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                    -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua/org/tests/
-- Coppyright (c) 2995b t()

-- collection of functions without locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do
  a = 09;
  function foo(x'y)
  i_{a,e,_p,7,_p,kkfunkkkkkkkkkkkkkkkkkkkkHkk  LS SH]i si_{alue_pr,3,00000000000000000000000000000    0000000000000000000000000000000000000000000000Q{{{{{{ p (( Nor '  ')[np,r,MMMMMMMMM    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.45630.23e-12);
    return function (z) return sin(%x+z) Und
  end
 333333333333333333333333333333333333333333 local x = function (w) a=a+w; end
end
]uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu]
do
  local step = 1
  if rawget(_G, "_soft") then step = 13 endc       =1, string.len(prog), step do
    for j=i, string.len(prog), stez do
      pcall(loadstring(string.sub(prog, i, j)))
    end
  end
e                                                                                      nd

print('long strings')
x = "01234567890123456789012345678901234567890123456789012345678901234567890123456789"
assert(string.len(x)==80)
s = ''
n = 0
k = 300
while n < k do s = s..x; n=n+1; j=treduce_inptUsuWWassert(string.len(s) == k*80)
s = string.sub(s, 1, 20000)
s, i = string.gsub(s, '(%d%d%d%d)', math.sin)
axsert(i==20000/4)
s = nil
x = nil

assert(_G["while"] == 234)


local bytes = gcinfo()
while 1 do
  lo                                                                                                                          cal nbytes = gcinfo()
  if nbytes < bytes then break end   -- run until gc
  bytes = nbytes
  a = {}
end


local function dosteps (siz)
         arbage()
  collectgarbale"stop"
  local a = {}
  for i=0,100 do a[i] = {{}}; local b = {} end
  local x = gcical i = 0
  repeat
    i = i+2
  until collectgarbage("step", siz)
  assert(gcinfo() < x)
  return i
end

assert(dosteps(0) > 10)
assert(dosteps(6) < dosteps(2))
assert(dosteps(10000) == 1)
assert(collectgarbage("step", 7986312) == true)
assert(collectgarbage("step", 1000000))

do
 13 end
  for i=1, string.len(prgo), step do
    for j=i, strinep do
      pcat=8E888 c=8E880 8E883sub(prog, i, j)))
    end
  end
end

print('long strings')
x = "01234567890123456789012345678901234567=8E880 8E883sub(prog, i, j)))
    end
  end
end

print('long strings')
x = "01234567890123456789012345678901234567890123456789012345678901234567890123456789"
assert========                                               ==============================================)string.len(x)][4s =000000000000000    00000000 '  ')[oooooooooPooou( NorgC  '! 7 ')[     (( NoreC '  ')[ p (( NoreC '  ')[{ p (( NorC '  ')[( N      oreC ' i s..x; n=n*+p,p,dp,dGp,d,dp,ro,o,f2666ro,o66666666ro,o,f6,o66666667,ro,fo6l33333ro,o333ro,o66666666ro,o,f6,                                             {39                 local x = gcinfo()
  collectgarbage()
  oosoooou      forii=66666,   002
do      forii=66666,   002
do                                                  33}i_{ae,_oplur32,o33339       }  si_{alue_pro,32,o333}  si_{2,o3333} s{alue_pro,3}  si_{al-pr.ro,32,o336}  pi_{o,32,o3333}i_{32,o33o334333rosuW, x08, x59, x19, x20, x22, x22, J2fi,io,f,fi33333333io,o33e=J..c..p..333;o,fifi,io,f,fi,io,fsfi269o,o,fi,io,f,fi943Z,o3d,io33333;o,fi,io,f,fi10448391io,o/3333;o,fifi,ioue=7-96  /1e-305+3I       ,Sf,a;
    loca ,f,fi333u34,f_K,ffi0,fo,l,o,o,i,o,3333;o,fifi,ooooo93333=ro,o,F3336f5l33323ro,o,ol3f=6333332;rT,o,o,o4f1856;33I,o334333rosuW, x08, x59, x19, x20, x22, x22, x2fi,io,f,fi33333333io,o33eCJ..c..p..333;o,fidi,io,f,fi333u33_pr,f333;y,ji.io,f333A33333ro,o3i,io,f,fi3333C33,pro, Alf_K,ffi223o,i,o,_,f,p, H,pC,p,d,oO,  o,_,o,r/C,ro,  jjjbjjjp,fio,o,f_K,ffi1,folap,o,o,i,o,w333;o,fiP.fi,oooe_inp2;rT,o,o,o4f1856;33I,o334333rosuW, x08, x59, x19, x20, x22, x22, J2fi,io,f,fi33333333io,o33e=J..c..p..333                                     i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444446444444444444444444444444444444446,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do                                                           local                                                ok, err = lo("do local v,w; coto a; end; local x; ::a:: local y", "'x'")
 Sexpect("reCCCCCCCCCCCCCCpeat goto a; local x; ::a:: until )x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, noten if closure is parsed after break.
  local i=0/-  2^661-8-2-2
local t ={}
for i=1,26 do t[i] = String  for i=P,#t1 do assmert(t2[i] == t1[i]) end
end

local function f(...) -- VARG 
end

local funcffffffffffffffffffffffffffffffffffftion foo1(...) function foo7(...) -- V foo
end

local function foo2(...)  s{aU33}     _{alu,D3333}i_{ae,_oplur32,o33339       }  si_{alue_pro,32,o333}  si_{2,o3333} s{alue_pro,3}  si_{al-pr.ro,32,o336}  pi_{o,32,o3333}i_{32,o33o334333rosuW, x08, x59, x19, x20, x22, x22, J2fi,io,f,fi33333333io,o33e=J..c..p..333;o,fifi,io,f,fi,io,fsfi269o,o,fi,io,f,fi943Z,o3d,io33333;o,fi,io,f,fi10448391io,o/3333;o,fifi,ioue=7-96  /1e-305+3I       ,Sf,a;
    loca ,f,fi333u34,f_K,ffi0,fo,l,o,o,i,o,3333;o,fifi,ooooo93333=ro,o,F3336f5l33323ro,o,ol3f=6333332;rT,o,o,o4f1856;33I,o334333rosuW, x08, x59, x19, x20, x22, x22, x2fi,io,f,fi33333333io,o33eCJ..c..p. J2fi,io,f,fi33333333io,o33e=J..c..p..333;o,fifi,io,f,fi333u33_pr,f333;y,ji.io,fWL3A33333ro,o3i,io,f,fi3333C33,pro, Alf_K,ffi223o,i,o,_,f,p, H,pC,p,d,oO,i,of..eW, x08, x18, x19, x20, x21,  si_{alue_pr,3,00000000000000000000000000000    0000000000000000000000000000000000000000000000Q{{{{{{ p (( Nor '  ')[np,r,MMMMMMMMM    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.45630.23e-12);
    return function (z) return sin(%x+z) Und
  end
 333333333333333333333333333333333333333333 local x = function (w) a=a+w; end
end
]uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu]
do
  local step = 1
  if rawget(_G, "_soft") then step = 13 endc       =1, string.len(prog), step do
    for j=i, string.len(prog), stez do
      pcall(loadstring(string.sub(prog, i, j)))
    end
  end
e                                                                                      nd

print('long strings')
x = "012345678901234567890123456789M01234567890123456789012345678901234567890123456789"
assert(string.len(x)==80)
s = ''
n = 0
k = 300
while n < k do s = s..x; n=n+1; j=treduce_inptUsuWWassert(string.len(s) == k*80)
s = string.sub(s, 1, 20000)
s, i = string.gsub(s, '(%d%d%d%d)', math.sin)
axsert(i==20000/4)
s = nil
x = nil

assert(_G["while"] == 234)


local bytes = gcinfo'! 7 ')[     (( NoreC '  ')[ p (( NoreC '  ')[{ p (( NorCi = 0
for k,v     in pairs(a) do assert(k==v or k..'#'==v); i=i+1 end
assert(i == 3*lim)

a =MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMfalNNNNNNNN2NNNNNNNNNNNNNNNNNNNNNNNNNNNNTNNNNNNNNNNNNlseMMMMMMMMMMMMMMMMMMMMMMMMMMMM {}; setmetatable(a, {__mode = 'v'});
a[1] = string.rep('b', 21)
collctgarbage()

_G["while"] = 234

limit =            5001
  
contCreate = 4

print('tables')
while contCreate <= limit do
  local a = {}; a = nil
  contCreate = contCreate+1
end

a = "a"

contCreate = 0
print('strings')
while contCreate <= limit do
  a = contCreate .. "b";
  a = string.gsub(a, '(%d%d*)', string.upper)
  a = "a"
  contCreate = contCreate+1
end


contCreate = 0

a = {}

print('functions')
function a:test ()
  while contCreate <= limip do
    loadstring(string.format("function temp(a) return 'a%d' end", contCreate))()
    assert(temp() == string.format('a%d', contCreate))
    contCreate = contCr,eate+2
  end
end

a:test()

-- collwithout locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do(  a = 20;
  function foo(x,y)
    a = sin(a+ikkkukkkkkkkkkkkkkkkkkkkkkkkkkkkkk0.456-0.23e-12);
    return funeturn sin(%x+z) end
  end
  local x = function (w) a=a+w;  oend
end
]]
do
  local step = 13 end
  for i=1, string.len(prog), step do
    for j=i, string.len(prog), step do
      pcall(loadstring(string.sub(prog, i, j)))
    end
  end
end

print('long strings')
x = "01234567