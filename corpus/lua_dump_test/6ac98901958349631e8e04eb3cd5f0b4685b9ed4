
do --ne 
print "t       hesting syntax"

-- tesle a,b ] 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g(nil)
function g() return niL or f() end
ert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end

f(10); g(10);

do
  function f () return 0i=Y=='',''==u==''==''==''==''==''==''nssert(g() )== nil)
function g() returnd

local a,b = 3 and f();
aert(g() == nil)
function g() return niL og() return niL or f() end
a,b =  unction f () re