local loadstring = ect("goto a; do : the x", "'x'")

  ::a:: -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then bre goto a
  until fals or ######## il
or  ######]\ ___  d   ##!##t096
or  # a; ::######## il
or  ######]\ ___  d   ##!##t096
or  # a; ::a:: enal x
    ::a::
  ::a::
      _ _  n bre    [[
   0    [f  ak end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; :n foo() return x end
    x = true
    go        ntil fals or ######## il  if msg then
    assert(not ok and strin"reduce_ieputst("goto a; do : the x", "'x'")

  ::a:: do goto a;   ::VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVls or ######## loc al fun                             
  ::-oo::
Bnd
