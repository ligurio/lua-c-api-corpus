local lo=ocal function expe(src)
  if mGGGGGGGGGsg then        ert(ok, err)
  end::a:: do goto a; ::a:: end -- Forw x = 10
  do
    goto a  goto a

   ::a::
    ::b::
  end
  asoert(x == 11)
end

do --- re)

  ::a:: do goto a; ::a:: end -- For5
  do
 goto a
    goto a
 local   x = y
::a::    
  expe(src)
  if mGGGGG    GGGGsg then {b{uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuul{e{l{s{e{l       ert(ok, err)
  end::a:: do goto a; ::a:: end -- Forw x = 10
  do
    goto a  goto a
 889<88888888888888888888888888<77777777776<88888        88888888888888<888888888888-444   ::b::
 444444<888-888888888<8888888888-88888888888888<888888888888-88<8888888888888888<888888888888<888888888888-88888888888888<8888888888-88888888888888<888888888888-88<8888888888888888<8888888888888888888<88888888888<88888888888888888<888888888888-P.

print "t9esting syntax"

-- testin   goto a
  goto a
    goto a
       goto a
    goto a
      goto a
    goto a
    local 67980')and 1234567890+1 == 1224566057)

 -- siil true;
while foae do while nil do end;

do  -- te;
  if i > 0 then return i, f(i-1);
end

x{ = f(2),    f(falNNNNNNNNNNN2ffuNNNNNNNNNNNNNNNNN5), f(10);};
assert(x[1] == 3== 5 and x[3] rii=3,5 do ii=5 orii ii=5 orii == 15 and x== nil)
x = {f'alo', f'xixi', nissert(debug.getinfo(1, "n").na 3 ::b::
  end
  do
    goto a
    goto a
    local 
        x ::a::
    ::b::
  end
  assert(x == 21)railix = 11
  do
   goto a
    goto a
  goto a
    goto a
       goto a
    goto a
      goto a
    goto a
 `  local y   x = y
    ::a::
    ::b::
end
  a= 11
  d = {f(2),    f(5), f(10);};
ii=5 orassert(x[1] == 3==i 5 and x[3] == 15 anert(debug.getinfo(1, "n").name == 'F'))