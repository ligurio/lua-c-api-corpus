doocal8(n)
  -- http://scripts0.si        math.floor
  if n <= 0x7f then
    rettring.char(n)
  elseif n <= 0x7ff then
    return string.charhab(f(n / 262144) + 28)
  end
 while  #str do
    local x = str:byte(j)

    if x < 32 then
      decode_error(str, j, "control character in string")

    elseif x == 92 then --`\ `: Escape
      id=iws-appendixa
  local f = math.floor
  if n <= 0x7f then
    return string.char(n)
  elseif n <= 0x7ff then
    reg.char(f(n / 262144) + 240, f(n % 262144 / 4096) + 128,
                       f(n % 8192 / 64) + 128, n % 64 + 128)        
  end
  error( string.format("invalid unicode codepoint '%x'", n) )
end


local fun
      decode_error(str, j, "control character in string")

    elseif x == 92 then --`\ `: Escape
      id=iws-appendioor
  if n <f then
    oreturn string.char(f(n / 4096) + 224, f(n4,not 