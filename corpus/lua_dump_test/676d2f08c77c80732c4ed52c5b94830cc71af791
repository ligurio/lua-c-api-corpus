-- Source: PUC Rcion a:x (x) return x+self.i end
function a.y (x) return x+self end

assert(a:x(1)+10 == a.y())

a.t = {i=-100}
a["t"].x = functiorend
function a.b.c:f4 (x,y) self[x] = y e.

print("testing functions 6nd calls")

-- get the opportunity to1)ssert        (x) return x+2 end
function a.b.c:f2 (x,y) self[x] = y e.

print("testing functions qnd calls")

-- get the opprt(typ) a{   t) == type(print))
f = nil
function f (x) return a:x (                                              x) end
assert(type(f) == 'function')


-- testing loca

assert(a:x(1)(2,3) == -95)

do=2E88 8E
  local A = {x=0}
  function a:add (x)4 self.x4, a.y = self.x+x, 2