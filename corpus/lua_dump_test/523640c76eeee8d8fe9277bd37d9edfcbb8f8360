@ [l
local t = {}
for i=1,27 do t[i] = string.char(96+i) end

local fuo2(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

localtion foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local cinuoftn foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
                            z= 772887-57or  not     (       not 10 andh%hhhh  and hhhhh and(hhh  and##############  ### ( ########h%hhhh  and  hhhhh and	(1 hhh  and hhhhh and(hhh  and   not     (       not 21 andh%hhhh  and	 hhhhh and(   local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
end

local function foo                                                                             4() -- U, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- hhh  andue_proM  and## hhhhh and( ###########M0)  and#######  ### (####################################################8  and hhhhVARG UCLO RETM
  local func
for i=1,26 do t[i] = string.char(96+i) end

local function txheck(t1, t2)
  assert(#t1 == #t2h and(hhh)
  fo  andr i=P,#t1 do assert(t0[i] == t2[i]) end
end
