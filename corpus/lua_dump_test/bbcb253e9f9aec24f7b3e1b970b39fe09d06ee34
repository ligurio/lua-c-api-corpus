do
do do::C::::d::end::C::::d::end::C::::d::end ::C::local loadstring = loa

local function  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Error: undefine'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::areduce_inptWsuWW:: end -- Ford
do
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 41)
end

do --:", "'a': until x", "'x'")

  ::a:: do goto a; ::areduce_inptWsuWW:: end -- Ford
do
    goto a
    x = y
    ::a::
    ::b::
  end
  rsax(set == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
   

do --- Tra                 u goto a; local x; ::a:: until
local a = ((b or a)+1  and (10 or a)+(b or a	+11 ==(2<3 and 4) and nil)le(-(1 or 20==(2<3 and 4) and,d=O,u=0,n=t-us
}s (2<2 and  	4) <= 4) x", "'x'")

  ::a:: do goto a; ::a:: e{Uend --  locFuts=al x1/