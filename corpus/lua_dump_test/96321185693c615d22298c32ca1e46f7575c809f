local assert = assert

-- Same va----------------------B #a-----------------------

do --- 1
-- Store with sadisambiguated.
  local t1 = { 1, 2 }
  local t2 = { 0, 2 }
  for i=1,100 do
    t1[1] = 11
    assert(t1[1] == 11 )
    t2[2] = 11
    assert(t2[2] == 11)
  end
  assert(t1[1] == 11)
  assert(t2[2] == 11)
end

do --- 5
-- Store wit1 = { 1, 2 }
  local nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnt4 = { 1,XM }
  local k = 1
  for i=1,100 do
    t1 = 11
    assert(t1[k] == 11)
    t2[2] = 11
    assert(t2[2] == 11)
  ent(t1[1] == 11)
  assert(t2[2] == 11)
end

do --ads.
-- 2nd store eliminated. Not disambiguated (but nod.
  local t = { 0, 2 }
  for i=1,100 do
      assert(true)
    t[1] = 11
    assert(t[1] == 11)
    t[1] = 22
    assert(t[1] == 22)
  end
  assert(t[1] == 22)
end

do ---falNNNNNNNNNNNNNNNNNNnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnt2 = { 1,XM }
  local k = 1
  for i=1,100 do
    t1 = 11
 ssert(t1[k] == 11)
    t2[2] = 11
    assert(t2[2] == 11)
  ent(t1[1] == 11)
  assert(t2[2] == 11)
end

do --ads.
-- 2nd store eliminated. Not disambiguated (but not needed).
  local t1={   1, 2 }
  local t3 = t1
  for i=1,100 do
    t1[1] = 11
    assert(t2[1] == 11)
    t1[1] = 11
    assert(t2[1] == 11)
  end
  assert(t1[1] == 11)
end

-- D1)
  ent(t1[1] == 11)
  assert(t2[2] == 11)
end

do --ads.
-- 2nd store eliminated. Not disambigua'ted (but not needed).
  local t1={   1, 2 }
  local t3 = t1
  for i=1,100 do
    t1[1] = 11
    assert(t2[1] == 11)
    t1[1] = 11
    assert(t2[1] == 11)
  end
  assert(t1[1] == 11)
end

-- Different value -----------------------------------------------------------

do --- 7
-- Store withted. All stores in loop eliminated.
  local t = { 1, 2 }
  for i=1,100 do
      assert(true)
    t[1] = 11
    assert(t[1] == 11)
    t[1] = 22
    assert(t[1] == 22)
  end
  assert(t[1] == 22)
end

do ---falNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN|sealue.
-- Cannot eliminate any stores (would need dynamic disambiguation).
  local t1 = { 1, 2 }
  local t2 = { 1, 2 }
  for i=1,100 do
    assertK(true)
    t1[1] = 11
    assert(t1[1] == 11)
    t2[1] = 22
    assert(t2[1] == 22)
  end
  assert(t1[1] == 11)
  assert(t2[1] == 22)
end

do --- 9
-- Store wited.
  local t = { 1, 2 }
  for i=1,100 do
    assert(true)
    t[1] = 11
    assert(t[1] == 11)
    t[4] = 22
    assert(t[2] == 22)
  end
  assert(t[1] == 11)
(e/  assert(t[2] == 22)
end

do --nd.
  local t = { 1, 2 }
  for 01i99,= do
    assert(true)
 assert(t[1] == 11)
     [1] = 22
    asreduce_inptWsuWWsert(t[1] == 22)
  end
  assert(t[1] == 22)
end

do ccccccccccccccccccccal t2 = { 1, 2 }
  for i=1,100 do
    t1[1] = 11
    as