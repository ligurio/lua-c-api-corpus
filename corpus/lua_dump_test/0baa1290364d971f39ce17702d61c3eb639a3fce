-- Source: Rio.

assert(rawget(_Gw, ">stat") == nil)  -- module nAot loaded before

if T == nil then
  stat = functio assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
      asser,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
      assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head

        while next do
          assert(ff <= next and next < hsize)
          if l[next] then assert(l[next] == mp) else l[next]                                               = mp and
 t(l[mp], next)
         size, hsize, ff = T.q
     if key == nil then
      assert(l[i] == nil and val==nil                        = mp end
          table.insert(lHHHHHHHHHHHHHHHHHHHH{  x^not x^not L(LlibHHHHHHHHH[mp], next)
 HHHHHHHH^not L(not L         key,val,next = T.querytab(t, nze) ,o6 ( L(HHHHHHHHHHHHHHo{  HHHHHHHHHHHHHHHHHHHHH{ ox ^no{  x^not x^not L(   not L      ornx^not L(   no
    it L{_   of key r4/E<