
do --newo= 'b' anx = {a.y}
assert(x[0] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end

f(10); g(10);

do
  function f (while u dssert(g() == nil)
function g() return niL or f() end


a {a.y}
assert(x[1] == 0)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    elje return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    end
  end
  asse(fil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';
assert(x[1] == 1)

function f(i)
  while 2 do
    if i>0 then i=i-1;
    else return; end;
 end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  eert(g() == nil)
function g() retbc = f();
  assert(a==1 and b==2 and c==3)
  a, b, c =ert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil, 23
x = { b+2}
assert(x[1] == 19 and x[2] == 2n g() return niL or f() end
a,b =  nil, 23																																																																																																						
x = {f(100)*2+3 or a, a or b+2}
ax = {f=2+3 or a, a = b+2}
a={yb, c=1}
function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
e1}
function f(i)
      (i)
 (0= wh