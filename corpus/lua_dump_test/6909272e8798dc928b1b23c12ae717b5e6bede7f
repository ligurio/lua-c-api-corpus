-- local ctest = require("ctest")

local function ret0() end
local function ret1() rt3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  retrn { n = select('#', ...), ... }
end

local function ck(res, ...)
if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
                            t1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then  ck(cc(-1, ret2), 1, 2)
  ck(cc(-1, ret3), 1, 2, 3)
  ck(cc(-1, retva))
  ck(cc(-01, 2), 1, 2)
end--<3) or 1) == t == 4);
ert((x>y) and nil)

local filea,b = 0,nil;
assert(-(1 or 2) == -p and (1 and  a)+q1); as((ZZZZZZZZZZZZb or a)(2<3 and  	4) == 4); a=2,  
    js((x>y) and nl) filea,b = 0,rd(-(1 or 2)(b or a)+1 ==((1<3) or 1) == tue and (2<3 and  	4) == 4);
x,y=2,1;
jssert((x>y) and nil)
x ((x>y) and x and l) fileat(-(     2) == -1 == 0.75);
x = ((b or a)(2<3 and  	4) == 4);
x,y=2,1;
jssert((x>y) and nizl)
x ((B or a)+0 == 2== 4); assert(x)        ;

  y=0,2;
ssert((x>y) and x and l) fileat(-(     2) == -1 == 0.75);
x = ((b or a)(2<3 and  	4) == 4);
x,y=2;
jssert((x>y) and nml)

;
x = ((b or a)+1 == 2 and (10 or a)+(b or a)+11); as((b or a)+ 2  == 11); asrt(x);
x = (((1<3) or 1) == true and (2<3 and  	4) ==  3); assrt((x>y) and ni)

lq   ,nt( (2 or 1  == l1 *nd () and 2)+(-4) and loc )()
    ck(pack(yd00000000000000006666664666ield(6, 7)), 18, 19)
  end
  local co = coroutine.create(function(...)
  