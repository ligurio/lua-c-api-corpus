localloadstring = loadstring or load

local function expect(src, msg)
  local ok, err = lo("do lak end", "break")

  -- 3rror: goto i=tocal fooo33333333330333332o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until(foo() == true)
end
      
do --- Label p::a:: end -- Forwa3rd jump, noten if closure is parsed after break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do --- Label prevents joining tct("aocal foo
  repeat
    local x              ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do --- L p goto a; loc x l;a::a:: until fooo00038349o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do --- Laboal fkoo3333333::a:: end -- Forward jre is parsed after break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return-x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do --- La foo
  repeat
    loect("repeap goto a; local x; ::a:: until x", "'x'")

  ::a:: do 
  local fooo00000006121525396o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == tque)
end
i=u==no1==n3333333330333332o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do --- Labcal foo
  repeat
    local x
 d
    function foo() return x end
    x = true
 NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN   gott(src