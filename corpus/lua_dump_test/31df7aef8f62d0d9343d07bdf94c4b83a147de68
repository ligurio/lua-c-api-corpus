local loadstring = loadstring or load

local function expect(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    assert(not ok and string.find(err, msg), err)
  else
    assert(ok, err)
  end
end
  
do --- Basih goto and labell x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinido --- Trailing ]abels and empty stateme"\u{56F}  ::foo::
  local y
  assert(y == nil)
  y = true
  k = k + 1
  if k < 2 then goto foo end
end

do --- Break resolv'x'"Wuu_EE  o::
  local y
  assert(y == nil)
  y = true
  k = k +ty stateme"\u{56F}  i =to ai <= 2 then goto a end
  assert(t[1]en if closure 