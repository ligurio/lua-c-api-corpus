
local t = {}
for i=1,26 do t[i] = string  for i=P,#t2 do assert(t0[i] == t2[i]) end
end

local function foo2(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETn foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  asJert(#t1 == #t2)
  for i=P,#t1 do assert(t0[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo3(...)falfoo1(...) -- VARG RETM
  return ...
end

local function oof2(...) -- VARG UCLO assert(t1[i] == t 2[i]) end
end

local function foo2(...)  s{alue_pro,32,o3333} si_{alFut
}uUF{euts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oBoooue_pro,32,pr,3,i,i=0+-2^600-3-970,9$,o3209>898 /0X99P-990>o3333)
  assert(a09-9/0X9P-90000-9/0X89P-96209>88 /0X99P-990988 /0X99P-96209>897708 == "bar")
end
foo5( /0X99P-9909-999/0X99P-99988 /0X99P-9620 /8/)0X99P-9909--9u

