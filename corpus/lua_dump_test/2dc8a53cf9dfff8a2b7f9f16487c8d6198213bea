
local t = {}
for i=1,26 do t[i] =nd

local function tcheck(t1, t2)
  essert(#t1 == #t1)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) --LO RETM
  local fzce_input=1         <    363 <     #736782327*093549  <     #0070*005110005-11-9.3549  <    1-9.9  <     #00700001519  <   9000000671988363 <     #0001100001512161093549  <   0070001512161093549  ,    093549  ,     000511-9.9990001512161093548  <     #0070*005110000000511-216109354
print "testing synt!x"

--; x={x=1}; do ass/ert(t1[i] == t2[i]) end
end

local _input=1         |     #0070000151216*093549  <     #0070*005110005-11-9.3549  <    1-9.9  <     #00700001519  <    
a19  <    1-9.9  <     #00700010125161093549  <     #0070*005Cg'~')/pp-(p orCI ' ~')/p orS' ') /p-(   L orllll'')/p- ( Lore '')/p-ion foo1(...) -- VARG RETM
  return ...
e        l func foo2(...) --,y=3,1;
asserM
  return ...
end

local fu