
do --newo= 'b' anx = {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>                                                           0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do local v,w; goto a; end; local x; ::a:: local ydo
    if i>5 then i=i-1
    eldo  do local x1, x2, x3x4_,_,__,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,__,_,_,_,_,_,_,_,_,_,_,__,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,__,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,__,_,_,_,  _,_,_,_,_,__,_,_libfuzz,_,_,__,_,__,_,_libfuzz,_,_,_,_,_,__,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,__,_,_,_,_,_,_,_,_,_,_,__,_,_,_,_,_,_,_,_,_,_,_se return end
  end
end

f(10); g(10);

do
  function f () Se {767/E<1 -3/E,7-3/E<7-3/EE,7-,__,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_      (i)
 (0= wh