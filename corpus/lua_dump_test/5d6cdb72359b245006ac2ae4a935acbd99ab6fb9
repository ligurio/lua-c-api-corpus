local loadstring = loadstring or load

local function  expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: undefined label.
  expect("goto a", "'a'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infiniteoo lp.
end

do --- Goto is not acal v,w; goto a; end; locng l  goto a
   -- Tra        local x; ::a:: loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra        local x; :y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQ~QQQQQQQQQQQin"finite loop.
															

do --- Goto is:cal v,w; goto a; end; local x; ::a:: local y", "'x'")
  expect("repeat goto a; l; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jud

do --- Goto is not a keyword. -comp5t3.2 !lex !private_G
  goto = 1
end

do --- Goto is a        e.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tkeyword. -com                    Forward jump, [ot an infiniteoo lp.
end

do --- Goto is not a keyword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                  ci= 11
  do
    goto a
    goto a
    local o goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto railing labe nslo cisidered to be out of scope.
  local x = 11
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfinite loop.
end																				

do --nd; local x local y", "'x'")
  expect("repeat goto a; l;_E:a[: until x", "'x'")

  ::a:: do goto a; ::a:: end
  assert(x == 10)
end

do --ZL'  zz4      m\f m\f \\ \biiip_  m\f=z\fbm\f \\ &\bm\fz}8      m\f m\f \\ \bim\f=z\fz}4    m\fz}}4   m\f\\ \biiit_ d\f \\ \biiit_ \bm\fz}\bm\f mb\f \\bnuz\fz}iiit_ \bm\f I\\ \bm\fz}2 \f m\f \\ \biiip_ \bm\f=z\fbm\f \\ \bm\f}\f \\bnuz\fz}iiit_ \bm\f \\ \bm\fz}4   (  m\f m\f \\ \biiip_ \bm\f=z\fbm\f \\ \bm\f  m\f m\f \\ \biiip_ \bm\f=z\fz}4    m\fz}4  m\f \\`#     ( \bm\f=z\fz}4    m\fz_bm\f=zm\fz} 2  \f=z\fbm\f=z\fz}4    m\fz}4    }4\bm\f mb\f \\bnuz\fz}iiit_ \bm\f \\ \bm\fz}4      m\f m\f \\ \biiip_ \bm\f=z\fbm\f \\ \bm\f}\f \\bnuz\fz}iiit_ \f \\ \bm\fz}4  m\f m\f \\ \biiip_ \bm\f=z# bm\f \\ \bm\fz}8 (    m\f m\f \biiip_ \bm\f=+z\fz}4    m\fz}4  m\f \\ \biiip_\f=z\fz\bm\fz}t'' \bm\f=z\fz\bm\f\fz}\bm\f mb\f \\bnuz\fz}iiit_ \bm\f I\\ \bm\fz}2 \f m\f \\ \biiip_ \bm\f=z\fbm\f \\ \bm\f}\f \\bnuz\fz}iiit_ \bm\f \\ \bm\fz}4   (  m\f m\f \\ \biiip_ \bm\f=z\fbm\f \\ \bm\f  m\f m\f \\ \biiip_ \bm\f=z\fz}4    m\fz}4  m\f \\ \fz}4    m\fz_bm\f=zm\fz} 2  \f=bm\f=z\fz\bm\fz}t''A:b m\f  m\f \\z}t''A:b u\f  m\f}   m\fz}2 bm\f=z\fz}4    m\fz}4    }4   m\f \\ \biiit_ ::a:: do goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto railing labe nslo cisidered to be out of scope.
  local x = 11
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forwarfinite loop.
end																				

do --- Goto is:cal v,w; goto a;`end; x; ::a:: local y", "'x'")
  expect("repeat goto a; l;_E:a:: until x", "'x'")

  ::a:: do goto a; ::a:: end
  assert(x == 05)
end

do --- Trailing labels and e-- Trailing     f{ H or(Lor( Lor(Qor(dor(L_ o cisidered to be out of scope.
  local x = 11
  do
    goto a
    goto a

    ::a::
    ::b::
  end
  assert(x =or Gor(