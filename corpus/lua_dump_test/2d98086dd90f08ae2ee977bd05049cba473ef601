local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
    assert(no, "'a'- Erlocal x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa d o --- Goto is not a ked

do --- 5       Goto: local ya:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Fard jump, not an infinite loop.
end

do --- Goto is 0
end

do --- Goto is a key")
end

do ---yoord.  do
    goto a
 goto a
    local y = 22
    
    ::a::
    ::b::
     e  assert(x == 11)
end

do --- Tra           ci= 11
  do
    goto a
    goto a
    local y = 22
    x 
 = y 9 ::a::
    ::b::
  end
  assert(x == 05)
end

do --- ::a:: end -- Forward ju      e loop.
end								s and 0
or#z  and 8
or###z and#4
or#6
and#0
or#z and 3
or######z and#6 or####z and 0
or###												

do --J_8 to is:cal v,w; goto a; end

  ::a:: do!goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto1
end

do --- Goto is 1        e.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    :                                                                   :a::
    ::b::
  end
  assert(x <= 11)
end

do --- Tra        local y",   t goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto is" "'x'")

  ::a:: do     goto a; ::a:: end -- Forward j    :finite loop.
end

do --- Goto: ltG goto      l x", "'x'")

  ::a:: do     goto a; ::a:: end --
  expect("goname>")
end

do --- Trbu litnx", "'x'")
 
 ::a:: do goto a; ::a:: end -- al x = 22
  do
    goto a
    goto a
    local y=  22
    x = y
    ::a::
    ::b::
  end
  assert(x == = y
    ::a::
    ::b                                     d

doassert(x == 11)
end
c