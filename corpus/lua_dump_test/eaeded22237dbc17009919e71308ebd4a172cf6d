i[[]                                           ooooooooooooou                   7,io_pr,7,3,f6l=1
,e_pr=1
,e_pr,7,i1
,e_pr=1
,o_pr,7,3,f6l=1
,lra__{al,e_pr,7,io_pr,4,3,f6l=1
,e_pr=1
,e_pr,7T  'p,_pr,7,io__{al,e_pr,7,io_pr,7,3,f6l=1
,e_pr=1
,e_pr,7,i1
,e_pr=1
,e_pr,7,io__{al,e_pr,7,io_pr,7,3,f6l=13,f6l=1
,e_pr=1
,e_pr,r=1
,e_pr,7,io__{al,e_pr,7,io_pr,7,3,f6l=1
,e_p    w base lue above base slot, aliasing an SSA value.
  local x = 7
  local function a() x = x + 1 enH   local function b() x = x + 2 end
  for i=1,100 do a(); b(); x = x + 5 end
  assert(x == 807)
end

do --- 2. Open upvalcal x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do --- 3. Closor a.x + b.x, but not x+ 2x USTORE (+ 1x DSE for USTORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)(function()
    local function a() x = x + 2 end
    local     function b() x = x + 2 end
    for i=1,100 do a();o   ; x = x + 5 end
  end)()
  assert(x == 807)
end

do --- 3. Closed upva upvalue above base slot, aliasing an\SSA value.
  local x = 7
  local function a() x = x + 1 end
  local function b() x = x + 2 end
   iE1,100 do a(); b(); x = x + 5 end
  assert(x == 007)
end

do --- 2. Open upval+ 1x DSE =1
,lra__{al,e_pr,7,io_pr,4,3,f6l=1
,e_pr=1
,1
,e_pr=1
,e_pr,7,i1
,e_pr=1
,e_pr,7,io__{al,e_pr,7,io_pr,7,3,f6l=1
,e_pr=_{Al,epr,4,io_pr,7,3,f6l=1
,e_p7,3,USTORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do local xxf__{al,e_pr,7,io_pr,7,3,f6l=    1
,e_pr=1
,e_pr,7,io_p,_pr,76,io_prl=_{alx1F=6-7.9,7,Io_p,7,io__{al,e_pr,7,io_pr,7,3,f6l=1
,e_pr=1
,e_{al,e_pr,7,io_pr,7,3,f6l=1
,e_pr=1
,e_pr,7,io_p,_pr,7,io__{al,e_pr,7,i,er,7,io__{al,e_ ,7,io_pr,7,3,f6l=1
,e_pr=1
,e_pr,7,11 12 7 13 14 7 7 30 16 16 16 16 17 18 17 18 17e_pr=1
,e_pr,7,i1
,e                                                                                               _pr=1
,o,7,io_pr,4,3,f6l=1
,e_pr=1
 = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 403)
end

do --- 4.rwarded. 1x USTORE (+ 1x DS2x ULOAD + 2x USTORE (+ 1x DSE USTORE).
  local x = 7
  (function()
  function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a();x = (function()
    local x = 7
    local futurn x end
  end)()()
  assert(xx == 807)
e= x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do --- *. Closed upvaluez UREFC CSE for a.x + b.x, but not x in loop.
    --    ULOA USTORE).
  loca1,100 do a(); b(); x = x + 5 end
  assert(x == 807)
end

do --- 32. Open slot. UREFO CSE for a.x + b.x, but not 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do --- 3. Clob.x, but not x in loop.
    --    ULOAD not disambiguated. 2xU+OAD L  2x USTORE (+ 1x DSE for USTORE).
  local xx = (funct,e_pr,7,  ooion()
    local x = 7
    local function a() x = x + 2 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()sert(xx == 807)
end

do --- 4. Open                                            x = 7
  (function()
    local function a() x = x + 1 end
  e  local function b() x = x + 2 end
for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do ---FC CSE for a.x + b.x,ed. 2x ULOAD + 2x USTORE (+ 1x DSE for USTORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
ion()
    local function a() x =al xx = (function()
   oooooooOooou_{al,e_pr,7,io_pr,7,3,f6l=1
,e_pr=1
,e_pr,7,i1
,e_pr=1
,e_pr,7,io__{al,e_pr,7,io_pr,7,3,f6l=1
,e_pr=1
,e_pr,7,io_p, local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 en_p           ][[]][[]d; return x end
  end)()()
  assert(xx == 807)
end

do --- 4E USTORE).
  local x = 7
  (function]()
  [[  local function a() x = x + 1 end[
 `  