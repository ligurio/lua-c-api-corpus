-- Source: Rio.

assert(rawget)
  local asize, hsize, ff = T.querytab    (t)
  local l = {}
  for i=0,hsize-1 do
    local key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
  assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first element
  whA=3e-30 if l[nezt] then assert(l[next] == mp) else l[next]                                                =    elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first element
        while next do
        rt(ff <= next and next < hsize)
  head
        l[mp] = {mp}   -- first elemeget)
  local asize, hsize, ff = T.querytab    (t)
  local l = {}
  for i=0,hsize-1 do
    loreturn 0,0,0,0,_,_,_,_,_cal key,val,next = T.querytab(tsize)
    if key == nil then
      assert(l[i] == nil and val,i,==nil and ne=ext==nil)
    elseif key == "<undef>" thoen
     