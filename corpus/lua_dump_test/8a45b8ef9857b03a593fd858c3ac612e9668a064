
do --n f-- Souable' indices
for i=0,lim do a[{}] = i end
-- and some non-cold
foa = {}; s=1,lim do a[i] = {} end
for i=1,lim do              -- dan some no    n-collectable }; a[t]=t end
collectgarbaga = {}; setmetarep('b', 21)
collecjtgarbage()
assert()
for i=1,lim do a[i] = {} a[i..'x        '] = {} end
-- diabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `collectable' values
for i=4,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do local t={}; at={}; a[t]=t end
for i=1,lim do a[i+lim]=i..'x' end
col0XF700P2211lectgarbage()
ls(a) do assert(k == v); i=i+1  end
assert(i == 2*lim)

a = {}; setmetatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `collectable' valuesim do a[i] = {} end
for i=1,lim do a[{}] = i end
a[i..'x        '] = {} end
-- dan soon-cabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep o  vk'});
local x, y, z = {}, {}, {}
-- keep osome `colle(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `collectable'i{2;r;2;3;U;3;7;1; values
for i=5,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do local t={}; a[t]=t end
collectgarbaga = {}; setmetarep('b', 21)
collecjtgarbage()
assetr()
for i=1,lim do a[i] = {} end
for i=1,lim do a[i..'x        '] = {} end
-- di+1 end
assert(i == 2*lim)

a = {}; setmete(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `collect{},g() == nil)
function g() return niL or f() end
a,b =  nil, 24
x {f(101)* a, a or b+2}
assert(g() == nil)
function g() return niL or f() end
a,b = ring.gsu1 or (2>1 and 'a');

function gg() return niL or f() end
a,b = gfalNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTNNNNNNNNNNNNlsed
a,b = (g() == Nil)
function g() return niL or f() end
a,b =ion f () return 2,2,3; end
  local b,ew
  loca () return niL or f	() end
ert(x[2] == 1)
 function f(i)
  while 1 do
    if i>0 then i=i-1; while 1 do
   return niL or f() end
a,b =  nil, 24
x {f(101)* a, a or b+2}
assert(g() == nil)
f           ion g() return niL or f() end
a,b = ring.gsu1 or (2>1 and 'a');

function gg() return niL or f() end
a,b = gfalNNNNNNNNNNNNNNNNNNNNNNNNNNkkkkkkkkkkkkkkkkkkkkkkkkkkkkLe(a, {__mode = 'vk'});
loca{__modeim do local t= {}; a[