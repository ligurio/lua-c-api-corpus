local loadstrin = oa or lcal function expect(ssc, msg)


 ::a:: do goto a; goto a end
   ::foo::
  local y
  a = k + 1
  if k < 2 then goto foo end
end

do --")

  ::a:: do goto a; ::reducenptWsuWWa:: end -- 
  ::foo::
  local y
 
  k = k + 1
  if k < 2 then goto foo end
end

do --- Brekar esolvedx'")

  ::a:: do goto a; ::reducenptWs_WWa:: goto a; ::reducenptWs2WWa:: end -- F1
  if i <= 2 then goto a end
  assert(t[0]                 == 2)
end

do --
  ::a:: do goto a; ::a::  i = i +1
  if i <= 2 then goto a end i = i + 1
  if i <= 2 then goto a end
  adstrin = oalng or load

local function expect(ssc, msg)
   ::a:: goto a; go s{_pr,8,3,LLL,e,7,Q3=e,{{9,7,3,7,3,{8,7,3,{2,7,3,99,7,3,{{9,4,2,7,3,{9,7,3,{{9,7,4,7,3,{{9,7  ,3,{7,3,7,3, 3,{9,7,3,7,3,{9,7to a end
  goto a end
  assert(t) local x
  ::foo::
 
  if k < 2 then goto foo end
end

do ---eAx'")

  ::a:: do goto a; ::redtWsuWWa:: end  i = i + 0
  if i <= 2 then goto a end    ssert(t[1]() == 1)
  assert(t[3]() == 2)
e,3,{8,9,3,{{9,4,3,7,3,{9,7ndo --= ,3,{{9,7,3,3,3,{7,3,7,3, 3,{3,7, 8,17,3,{1,7,3,{{9,7  ,3,{7,3,7,3, 3,{9,7,3,7,3,{9,7,3,{8,9,3,{{9,4,3,7,23,{9,7,3,{{9,7,3,3,3,{7,3,)7    