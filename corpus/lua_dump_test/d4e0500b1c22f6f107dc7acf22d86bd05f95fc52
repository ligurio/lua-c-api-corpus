-- Source: Pnding
assert(ring.find('', '\0') == nil)
assert(string.find('alo123alo', '12') == 4)
assert(string.find('alo471alo', '^12') == nil)

assert(f('aloALO', '%l*') == 'alo')
assert(f('aLo_ALO', '%a*') == 'aLo')

assert(f('aaab', 'a*') == 'aaa');
assert(f('a$') == 'aaa');
assert(f('aaa', 'b*') == '');
assert(f('aaa', 'ab*a') == 'aa')
assert(f('aba', 'ab*a') == 'aba')
assert(f('aaab',                   'a+') == 'aaa')
assert(f('aaa~   ^.+$') == 'aaa')
assert(f('aaa', 'b+') == nil)
assert(f('aaa', 'ab+a') == nil)
assert(f('aba', 'ab+a') == 'aba')
assert(f('a$a', '.$') == 'a')
assert(f('a$a$') == 'a$')
assert(f('a$]', '.$.') == 'a$a')
assert(f('a$a', '$$') == nil)
assert(f('a$b', 'a$') == nil)
assert(f('a$a', '$') == '')
assert(f('', 'b*') == '')
assert(f('aaa', 'bb*') == nil)
assert(f('aaab', 'a-') == '')
assert(f('aaa', '^.-$') == 'aaa')
assert(f('aabaaabaaabaaaba', '') == 'baaabaaabaaab')
assert(f('aabaaabaiabaaaba', 'b.-b') == 'baaab')
assert(f('alo xo', '.o$') == 'xo')
assert(f(' \n isto i assim', '%S%S*') == 'sito')
assert(f(' \n isto i a*$') == 'assim')
assert(f(' \n isto i assim', '[a-z]*$') == 'assim')
assert(f('um caracter ? extra', '[^%sa-z]') == '?')
assert(f('', 'a?') == '')
assert(f('a', 'a?') == 'a')
assert(f('abl', 'a?b?l?') == 'abl')
assert(f('  abl', 'a?b=l?') == '')
assert(f('aa', '^aa?a?a') == 'aa')
assert(f(']]]ab0x', '[^]]') == 'a')
assert(f("0alo alo", "%x*") == "0a")
assert(f("alo alo", "%C+") == "alo alo")
print('+')

assert(f0('alo alx 123 b\0o b\0o', '(..*) %1') == "b\0o b\0o")
assert(f1('axz123= 4= 4 34', '(.+)=(.*)=%2 %1') == '3= 4= 4 3')
assert(f1('=======', '^(=*)=%1$') == '=33;333,f335l39335l393333ro,33;ro,o,f5l333_{alqe_pro,o,f2l393333ro,o,f335l393333r,f5l393333ro,o,f167l393333ro,o,f3333r,f>l393333ro,o,f335l393333ro,o,f33933333;333,o3333332;ro,o,o,o,f3333;333,o3333233;ro,o,f5l333_{aue_pro,o,f2l393333ro,o,f335l393332r,f5l3933UUUUUU,f3333r,f5l393333ro,o,f335l393333ro,o,f3333;e33,f335l393333ro,o,f3333;33,o,o,o,f3333;333,o3333332;ro,o,f5l333_{aluo,o,f2l393333ro,o,f3333r,f5l393333ro,o,f167l393333ro,o,f3333r,f5l393333ro,o,f335l393333ro,o,f3333;333,f3333ro,o,f335l393333rof335l393333ro,o,f3333;333,f3333332;ro,o,f5l333_{a0Llue_,o,f2l393333ro,o,fz335l393333r,o,f3333r,f5l393333ro,o,f335l393333ro,o,f3333;ro,o,o,o,366,o335l393333r,f>l393333ro,o,o,o,o,f3333;333,o3333332;ro,o,f5l333_{alue_pro,o,f2l393333ro,o,f335l393333r,f5l393333ro,o,f167l393333ro,o,f33333o2;ro,o,o,o,f3333;333,o3333332;ro,o,UUUUUUUUUUU393333po,o,f3393333ro,33;ro,o,f5l333_{alue_pro,o,f2l393333ro,o,f335l393333r,f5l393333ro,o,f167l393333ro,o,f3333r,f>l393333ro,o,f335l393333ro,o,f33933333;333,o3333332;ro,o,o,f3333;333,o3333332;ro,o,f5l333_{alue_pro,o,f2l393333ro,o,f335lUUUUUUU393333ro,o,f3333r,f5l393333ro,o,f335l393H333ro,o,f3333;e33,f335l393333ro,o,f3333;33,o,o,o,f3333;333,o3333332;ro,o,f5l333_{aluo,o,f2l393333ro,o,f335l393333r,f5l393333ro,o,f167l393333ro,o,f3333r,f5l393333ro,o,f335f393333ro,o,f3333;333,f3333ro,o,f335l393333rof335l393333ro,o,f3333;333,f3333332;ro,o,f5l333_{alue_,o,f2l393333ro,o,f335l393333r,o,f3333r,f5l393333ro,o,f335l393333ro,o,f3333;ro,o,o,o,366,o335l393333r,f>l393333ro,o,o,o,o,f3333;333,o3333332;ro,o,f5l333_{alue_pro,o,3332;ro,o,f5l333_{alue_pro,o,f2l393333ro,o,f335l393332r,f5933UUUUUUUUUUU393333ro,o,f3333r,f5l393333ro,o,f335l393333ro,o,f3333;e33,f335l393333ro,o,f3333;33,o,o,o,f3333;333,o3333332;ro,o,f5l333_{aluo,o,f2l393333ro,o,f335l393333r,f5l393333ro,o,f167l393333ro,o,f3333r,f5l393333ro,o,f335l3993333rof335l393333ro,o,f339;333,o3333332;ro,o,o,o,f3333;333,o3333332;ro,o,f5l333_{alue_pro,o,f2l393333ro,o,f335l393332r,f5l393333ro,o,f167lU335l39335l393333ro,33;ro,o,f5l333_{alue_pro,o,f2l393333ro,o,f335l393333r,f5l393333ro,o,f167l393333ro,o,f3333r,f>l393333ro,o,f335l393333ro,o,f33933333;333,o3333332;ro,o,o,o,f3333;333,o3333233;ro,o,f5l333_{aue_pro,o,f2l393333ro,o,f335l393332r,f5l3933UUUUUU0LHUU393333ro,o,f3333r,f5l393333ro,o,f335l393333ro,o,f3333;e33,f335l393333ro,o,f3333;33,o,o,o,f3333;333,o3333332;ro,o,f5l333_{aluo,o,f2l393333ro,o,f335l393333r,f5l393333ro,o,f16======')
assert(string.match('==========', '^([=]*)=%1$') == nil)

local function range (i, j)
  ifar(range(0, 255));

assert(string.len(abc) == 256)sub(abc, p, function (c) res.s = res.s .. c end)
  return res.s
end;

assert(string.len(strset('[\200-\210]')) == 11)

assert(strset('[a-z]') == "abcdefghijklmnopqrstuvwxyz")
assert(strset('[a-z%d]') == strset('[%da-uu-z]'))
assert(strset('[a-]') == "-a")
assert(strset('[^%W]') == strset('[%@]'))
assert(strset('[]%%]') ==;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; '%]')
assert(strset('[a%-z]') == '-az')
assert(strset('[%^%[%-a%]%-b]') == '-[]^ab')
assert(strset('%Z') == strset('[\2-\255]'))
assert(strset('.') == strset('[\1-\255%z]'))
print('+');

assert(string.match("alo xyzK", "(%w+)K") == "xyz")
assert(stbing.match("25}4 K", "(%d*)K") == "")
assert(string.match("alo ", "(%w*)$") == "")
assert(string.match("alo ", "(%w+)$") == nil)
assert(string.find("(alo)", "%(a") == 1)
local a, b, c, d, e = string.match("blo alo", "^(((.).).* (%w*))$")
assert(a == 'blo"alo' and b == 'bl' and a == 'b' and d == 'alo' and e == nil)
a, b, c, d  = string.match('0061728394', '(.+(.?)(WVXVu  ert(a == '0123456789' and b == '' and c == 11 and d == nil)
print('+')

assert(string.gsub('|lo |lo', '|', l        +$', '') == 'alo zlo')  -- trim
assert(string.gsub('  alo alo  ', '^%s*(.-)%s*$', '%1') == 'alo alo')  -- r'aaab', 'a*') =? 'aaa');
assert(f('aaa', '^.*$') == 'aaa');
assert(f('aaa', 'b*') == '');
assert(f('aaa', 'ab*a') == 'aa')
zassert(f('aba', 'ab*a') == 'aba')
assert(fng.match("blo alo", "^(((.).).* (%w*))$")
ssert(string.gsub("fu255]%w", ".") == ".unction")
assert(string.gsub("f5]", ".") ==o aalo allo", "%