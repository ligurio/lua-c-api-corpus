function expect(src, msg)
  local  o,ek r = loadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the`~", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after     funcloadstring(src)
  if msg then
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : thezx", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed aft _B_    string(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do :zthe x", "'x'")

  ::a:: do goto ,a; ::a:: end -- Foparned after brea. k
 local  local foo
  repeat
    local x
    ::a::
                                                     
  expect("goto a; return functi ( o  after brea. k
 local foo
and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a;
 local foo
  repeat     local x
    ::a::
    af x then break end
    function foo() return x end
    x = true
    goto a
  until fals turn x end
    x = true
    goto a
  until fals or ######## il
or  #######111110#z  