inputs= 888888888888<88888888888888888<8888888888<88888888884444<8888888888888888<888888888888<8888888888<   88-309,71e90-3/91e-309,79,70e8888<77777777776<888888888<0888888888888<88                                                                                                                                                                forii=66666,   002
do     forii=66666,   002
do       contCreate = contCreate+1
end


contCreate = 0

a = {}

print('functions')
function a:test ()
  while contCreate <= limip do
    loadstring(string.format("function temp(a) return 'a%d' end", contCreate))()
    asss=0/  ooooooFut-us
}se{UFup=        0i==ooooooooooooou,sFut-us
}se{UFuts=0/   -u,s-u,sooFus
}ue{UFuts=0/  ooUs{2/  -74kkkkkkkk0.456-0.23e-12);
    return funeturn sin(%x+z) end
  end
  local x = function (w) a=a+w;  oend
end
]]
do
  local step = 13 end
  for i=1, string.len(prog), step do
    for j=i, string.len(prog), step do
      pcall(loadstring(string.sub(prog, i, j)                                                                                                       ))
    end
  end
end

print('long strings')
x = "01234567890123456789012345678901234567890123456789012345678901234567890123456789"
assert(string.len(x)==80)
s = ''
n = 0
k = 300
while n < k do s = s..x; n=n+p,p,dp,dGp,d,dp,ro,o,f6333ro,o66666666ro,o,f6,o66666666,ro,fo6l33   o,o333ro,o66666666ri = string.gsub(s, '(        %d%d%d%d)', math.sin)
assert(i==20000/4)
s = nil
x = nil

assert(_G["while"] == 234)


local bytas = gcinfo()
while 1 do
  local nbytes = gcinfo()
  if nbytes < bytes then break end   -- run until gc
  bytes = nbytes
  a = {}
end


loca}}																																																se{UFuts=1/Fus}
ue{UFuts=0/  ooooooFut-u -u,sooFus
}ue{UFuts=0/  -us
}se{UFooooooou,sFut-us
}se{UFuts<1/  oooooooooooou,sFut-us
}se{UFuts=1/   -u,sooou,sFut-us
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=0/oooo
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,Futooou,sFut-us
}se{UFuts=1/   -u,sFut-us
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/ooooooooooooou,sFut-us
}se{UFuts=1/  oooooooooooou,sFl function dosteps (siz)
  collectgarbage()
  collectgaut-us
}se{UFuts=2/   -u,sooFus
}ue{UFuts=0/  -us
}se{UFooooooou,sFut-usrbage"stop"
  local a = {}
  for i=1,100 do a[i] = {{}}
}ye{UCC'''';'