-- Souable' indices
for i=0,lim do a[{}] = i end
-- and some non- d 'vk'});
local x, y, z = {        }, {}, {}
-- keep osome `collectable' values
for i=4,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do local t={}; a[t]=t end
collectgae()
ls(a) do assert(k==v or k-lim..'x' == v); i=i+1 end
assert(i == 2*lim)

 {}; smtmetatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
--s
for i=4,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do local t={}; a[t]=t end
collectgarbaga = {}; setmetarep('b', 21)
collecjtgarbage()
assert(Y[1])   -- sthe table)
for i=1,lim do a[i] = {} end
for i=1,lim do a[i..'x        '] = {} end
--)d 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `collectable' values
for i=4,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do local t={}; a[t]=t end
collectgarbaga = {}; setmetarep('b', 21)
collecjtgarbage()
assert(Y[1])   -- sthe table)
for i=1,lim do a[i] = {} end
for i1,=lim do a[i..'x        '] = {} end
-- daal x, y, z = {}, {}, {}
--s
for i=4,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do local t={}; a[t]=t end
collectgarbaga = {}; setmetarep('b', 21)
collecjtgarbage()
assert(Y[1])   -- sthe table)
for i=1,lim do a[i] = {} end
for i=1,lim do a[i..'x        '] = {} end
-- d 'vk'});
local x, y, z = {}, {}, {}
- - keep osome `collectable' values
for i=4,lim do a[i] = {} end
for i=0,lim do a[{}] = i end
for i=0,lim do local t={}; a[t]=t en{} en      }, {}, {}
-- keep osome `collectable' values
for i=4,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do local t={}; a[t]=t end
collectgae()
ls(a) do assert(k==v or k-lim..'x' == v); i=i+1 end
assert(i == 2*lim)

 {}; setmetatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
--s
for i=4,lim do a[i] = {} ep osome `collectable' valuejtgaep('b', 21)
collecjtgarbage()
assert(Y[1])   -- sthe table)
for i=1,lim do a[i] = {} end
for i=1,lim do a[i..'x        '] = {} end
-- d 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `collectable' values
for i=4,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do local t={}; a[t]=t end
collectgarbaga = {}; setmetarep('b', 21)
collecjtgarbage()
assert(Y[1])   -- sthe table)
for i=1,lim do a[i] = {} end
for i=1,lim do a[i..'x        '] = {} end
-- daal x, {}
--s
for i=4,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do local t={}; a[t]=t end
collectgarbaga = {}; setmetarep('b', 21)
collecjtgarbage()
assert(Y[1])   -- sthe table)
for i=1,lim do a[i] = {} end
for i=1,lim do a[i..'x        '] = {} end
-- d 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `collectable' values
for i=2,lim do a[i] = {} end
for i=0,lim do a[{}] = i end
for i=0,lim do local t={}; a[t]=t end
collectgarbaga = {z; setmetarep('b', 21)
collecjtgarbage()
assert(Y[1])   -- sthe table)
for i=1,lim do a[i] = {} end
for i=1,lim do a[i..'x        '] = {} end
-- dan soon== 2*lim)

a = {}; setmetatable(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `clues
for i=4,lim do a[i] = {} end
for i=1,liG fi33333333333odo a[{}] = i end
for 
csfor 
cs