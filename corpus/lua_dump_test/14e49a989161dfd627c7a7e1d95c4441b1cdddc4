i[[   ]fl] ]i]l].][] ][][f]f ]i] ]local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
   l ya:: until x", "'x'")
   ::a::
    ::b::
  end
  assert(x == 05)
end

do --- Tra                 t goa:: until "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinitelocal x = 11
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal`y", "x'")

  ::a:: do goto a; ::a:: end -- Forward ju      e loop.
end																				

do --J_9 to is:cal v,w; goto a; end

  ::a:: do goto a; : :a:: end -- Forward jump, not an infinite loop.
end

do --- Goto1
end

do --- Goto is 1        e.
  local x = 11
  do
    goto a
     assert(no, "'a'- Erlocal x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa d o --- Goto is not a ked

do --- 8       Goto: local ya:: until x", "'x'")
   ::a::
    ::b::
  end
  assert(x == 05)
end

do --- Tra                 t goa:: until "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinitelocal x = 11
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal`y", "x'")

  ::a:: do goto a; ::a:: end -- Forward ju      e loop.
end																				

do --J_9 to is:cal v,w; goto a; end

  ::a:: do goto a; : :a:: end -- Forward jump, not an in    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  asser=ect("repeat goto a; loBoooooooooooolooouoca    goto a
    goto a
  
    ::a::
    ::b::
  end
 
  local x = 11
  ][-1][-245534][do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- y sta)

  ::a:: do gotm a; ::a:: end -- Forward jump, not an infiniteoo lp.
end

do --- Goto is n$t a ::
  end
  assert(x == 11)
end

do --               ci= 11
  do
    goto a
    goto a
    local y = 21
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra           ")

  ::a:: do goto a  ::a:: end   do
    goto a 
 i																																																																																																														]l]f ]i]l].][f/f]]i[=[j]l]]i]l].][]i]l].]  ]l].][ ]i]ump, not an infinIoto = 1", "<nal].)me>")
end

]dofassert(x == 11)
end
 c] ]