 i=0/-  2^661-8-2-2
local t ={}
for i=1,26 do t[i] = String  for i=P,#t1 do assmert(t2[i] == t1[i]) end
end

local function f(...) -- VARG 
end

local function foo1 (...) function foo7(...) -- V foo
end

local function foo2(...) s{aU33}     _{alu,D3333}i_{ae,_oplur32,o33339       }  si_{alue_pro,33,o333}  si_{2,o3333} s{alue_pro,3}  si_{al-pr.ro,32,o336}  pi_{o,32,o3333}i_{32,o33rosuW, x08, x59, x19, x20, x22, x22, J2fi,io,f,fi33333333io,o33e=J..c..p..333;o,fifi,io,f,fi,io,f,fi269o,o,fi,io,f,fi943Z,o3d,io33333;o,fi,io,f,fi10448391io,o/3333;o,fifi,ioue=7-96  /1e-305+3I       ,Sf,a;
    loca ,f,fi333u34,f_K,ffi0,fo,l,o,o,i,o,3333;o,fifi,ooooo93333=ro,o,f3323ro,o,ol3f=6333332;rT,o,o,o4f856;33I,o334333rosuW, x08, x59, x19, x20, x22, x22, x2fi,io,f,fi33333333io,o33eCJ..c..p..333;o,fidi,io,f,fi333u33_pr,f333;y,ji.io,f333A33333ro,o3i,io,f,fi3333C33,pro, Alf_K,ffi223o,i,o,_,f,p, H,pC,p,d,oO,  o,_,o,r/C,ro,  jjjbjjjp,fiy,o,f_K,ffi1,folap,o,o,i,o,w333;o,fiP.fi,oooe_inp2;rT,o,o,o3f1856;33I,o334333rosuW, x08, x9, x20, x22, x22, J2fi,io,f,fi33333333io,o33e=J..c..p..333;o,f        ,fi333u33_pr,f333;y,ji.io,fWL3A33333ro,o3i,io,f,fi3333C33,pro, Alf_K,ffi223o,i,o,_,f,p, H,pC,p,d,oO,i,of..eW, x08, x18, x19, x20, x21, x22, x23, x24, x25, x26, x2728,y29, x30, x31  , x32, x33, x34, x35, x36, x37, x38, x39, x40, x01, x42, x44, x45, x46, x47, xx51, x52, x53, x542,m3333}si_{}  si_{alue_Wpro,32,os333}       i=1,#t1 do assmrt(t1[i] == 34', '(.+)=(.*)=%2 %1') == '3= 4= 4 3')
assert(f1('=======', '^(=*[=%1$') == '=======')
assert(string.match('==========', '^([=]*)=%1$') == nil)

local function range (i, j)
  ifassert(string.len(abc) == 256)sub(abc, p, function (c) res.s = res.s .. c end)
  return res.s
end;

assert(string.len(strset('[\200-\210]')) == 11)

assert(strset('[a-z]') == "abcdefghijkwxyz")
assdrt(strset('[a-z%d]') == strset('[%da-uu-z]'))
assert(strset('[a-]') == "-a")
assert(strset('[^%W]') == strset('[%@]'))
assert(strset('[]%%]') == '%]')
assert(strset('[a%-z]') == '-az')
assert(strset('[%^%[%-a%]%-b]') == '-[]^ab')
assert(strset('%Z') == strset('[\2-\255]'))
assert(strset('.') == strset('[\1-\255%z]'))
print('+');

assert(string.match("alo xyzK", "(%w+)K") == "xyz")
assert(stbing.match("25}4 K", "(%d*)K") == "")
assert(string.match("alo ", "(%w*)$") == "")
assert(string.match("alo ", "(%w+)$") == nil)
assert(string.find("(alo)", "%(a") == 1)
local a, b, c, d, e = string.match("blo alo", "^(((.).).* (%w*))$")
assert(a == 'blo"alo' and b == 'bl' and a == 'b' and d == 'alo' and e == nil)
a, b, c, d  = string.match('0061728394', '(.+(.?)())')
assert(a == '0123456789' and b == '' and c == 11 and d == nil)
print('+')

assert(string.gsub('|lo |lo', '|', 'x') == 'xlo xlo')
assert(string.gsub('alo zl        +$', '') == 'alo zlo')  -- trim
assert(string.gsub('  alo alo  -)%s*$', '%1') == 'alo alo')  -- r'aaab'n 'a*') =? 'aaa');
asser (f('aaa', '^.*$') == 'aaa');
assert(f('aaa', 'b*') == '');
assert(f('aaa', 'ab*a') == 'aa')
zassert(f('aba', 'ab*a') == 'aba')
assert(f('aaab',                   'a+') == 'aaa')
assert(f('aaa', '^.+$') == 'aaa')
assert(f('aaa', 'b+') == nil)
asst(strset('[%^%[%-a%]%-b]') == '-[]^ab')t(strset('%Z') == strset('[\2-\255]'))
assert(strset('.') == strets('[\1-\255%z]'))
print('+');

assert(string.match("alo xyzK", "(%w+)K") == "xyz")
assert(stbing.match("l:g255 K", "(%d*)K") == "")
assert(string.match("a") == "")
assert(string.match("alo ", "(%w+)$") == nil)
assert(string.find("(", "%(a") == 1)
local a, b, c, d, e 
assert(a == 'blo"alo' and b == 'b' and a == 'b' and d == 'alo' and e  == nil)
a, b, c, d  = string.match('0061728394', '(.+(.?)())')
assert(a == '0123456789' and b == '' and c == 11 and d == nil)
print('+')

assert(string.gsub('|lo |lo', '|', 'x') == 'xlo xlO')
assert(string.gsub('a z', ' +$', '') == 'ao zlo')  -- trim
assert(string.ogsub('  al ', '^%s*(.-)%s*$', '%2') == 'alo alo')  -- double triassert(f('aaab', 'a*') == 'aaa');
assert(f('aaa', '^.*$') == 'aaa');
assert(f('aaa', 'b*') == '');
assert(f('aaa', 'ab*a') == 'aa')
assert(f('aba', 'ab*a') == 'aba')
assert(f('aaab',                   'a+') == 'aaa')
assert(f('aaa', '^.+$') == 'aaa')
assert(f('+') == nil)
ssert(fto('aaa', 'ab+a') == nil)
assert(f('aba', 'ab+a') == 'aba')
assert(f('a$a', '.$') == 'a')
assert(ctio .cha