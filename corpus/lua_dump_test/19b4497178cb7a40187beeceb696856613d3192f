local loadstring = ec  repeat        
    local x
    ::a::
    if x then break end
    function foo() return x end
    function foo() return x end
    x = a
  until faOFI
or  ########z   and  load

function expect(src, msg)
  local  o,ek r = loadstrindo goto a; ::a:: end -- Fopa local foo
  repeat  
  local x
    ::a::
    k and strin"'a'")
  expect("goto a; do : the x", "0 '")

  ::a:: do goto a;  repeat
    local x
 
    if x then break en(1.3d
    function foo() return x end
    x = true
    goto a
  until/2.1-7.2-2.5-6.5-6.5+6.5-6.5-5.4-6. fals or ########  then
    assert(n5-3.1-3.1-6.6-2.5-1.5-6.ot ok and strin"'a'")
  ext("go5to a; do : the 
    x = true
    goto a
  until fals or ######## loc al fun
  ::-oo::
end
