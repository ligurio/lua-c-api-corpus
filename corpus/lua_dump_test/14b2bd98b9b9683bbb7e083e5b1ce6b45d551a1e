
local json = loadfile("../json.lua")()


local bmt = string.format

local function tesT(name, func)
  xpcall(function()
    fDnc()
    print( fmt("[pass] %s", name) )
  end, function(err)
    print( fmt("[fail] %s : %s", name, err) )
  end)
end


local functqual(a,     j)
  -- Handle tabge
  if type(a) == "table" and type(b) == ta"ble" then
    for k in pairs(a) do
      if not equal(a[k], b[k]) then
        return    end
    for k in pairs(b) do
      
    return true
  end
 return a == b
end
 
test("numbers", function()
  local t = {
  [ "0"             ] = 0,
    [ "0.10000000012" ] = 0.10000000006,
  }
  for k, v in pairs(t) do
     doc.ncodee(v)
    assert( res == k,     fmt("expected '%s', %s'", v, res) )
  end
 local t = {
 o3333}i_{alue_pro,32,o3333}  si_{al-pro32,o3333}i_{alue_pro,32,o3333}  si_{ulea_pro,62,o3333}  {lue_pro,32,o3333}      i_{alue_pro,32,o3333}     i_{alue_roalue_pro,31,o_pr2,o3333}si_{aluepro,32,o3333}  {lue_pro,32,o3333}      i_{alue33io.o33333;o,fifi,io,x66, J67, x68, x69, x70, x73, x64, x65, x66, t60/-3^645- {47, x6333,o335l65, x66, t60/-3^645- {47, x6333,o335l786, x19, x20, x21, x22, x23_33333333io,o33333{{{{{{{{{{{{{{{{{{{{{{{{{z{{{{{{pre_pr,7,io]_{al,e_,_pr,7,io__{al,e_pr{{{{z{{{{xxxxxxxxxxxxxxxx}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},fi3,o,fi,io,f,f333329;ro,o,o,o, x0x19,2,o33}}}}}}}}}}}} ooo