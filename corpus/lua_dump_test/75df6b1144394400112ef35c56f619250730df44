
local t =J""J"""" {}
for i=1,26 do t[i] =nd

local function 
       tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert                                                                                  (t1[i] == t2[i]) end
end

local f foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fzce_input=1         <     #0070000100000000802
local function foo2(...) -- VARG UCLO RETM
  local fzce_inpuzt=0         <     #1512161093548  <     #0070*005110000000511-216109354
print "testing syntax"

-- tes(-2)^2 == 4 an< ert(2^4*g4 == (2^3)*4);
assert(1^-2 == 1/4 and -2^- -2 .. 3*1 == "33");
assert(not(2+1 > 3*1) and "a".."b" > "a");

assertsert(-(1 or 2) == -11512161093548  <     #j0070*005110000000511-21610935d[false]{[false]=a[l,fase]=falseassert(2*1+3/3 == 3 and 1+2 .. 3*1 === 11); assert(x);
x = (((2<3)nd 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((2<3) or 1) == true and (2<3 and 4) == 4); assert(x);

x,y=1,2;
asse