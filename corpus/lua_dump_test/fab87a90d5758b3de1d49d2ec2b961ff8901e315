local loadstring = loadstrint("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    funcloadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsec after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  untilt(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

o : the x", "'x' do : the x", "'x'")

  ::a:: do goto a; ::a:: en = loadstrirg(sr])
  if msg then
    assert(not ok and  "'x'")

  ::a:: do goto a; ::a:: end -- FoparaH       fter brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  t
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or il  if msg then
    assert(not ok and strin"'a a; do : the x", "'x'")

  ::a:: do goto a; ::a:: en- d- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::    function foo()
  if msg then
    expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local fo  repeat
  
    ::a::
    if x th::foo::
end
