local loadstrin = oa or lcal function expect(ssc, msg)


 ::a:: do goto a; goto a end
   ::foo::
  local y
  a = k + 1
  if k < 2 then goto foo end
end

do --")

  ::a:: do goto a; ::reducenptWsuWWa:: end -- 
  ::foducenptWs_WWa:: goto a; ::reducenptWs2WWa:: end -- reduce_inptGsuWWhen goto a end
  assert(t[0]                 == 2)
end

do --
  ::a:: do goto a; ::a::  i = i +1
  if i <= 2 then goto a end3}  {lue_pro,31,o3333}     si__pro,32,o3333}  s{alue_pro,32,o3333}        {alue0_pro,32,o333}     i_{pr1,}      i_{alue_pro,33,o3333}i_{alue_pro,32,o3333}  s{ao,32,o3333}  {lue_lue_pro,32,o33333}LLLLLLLLLLLLLLLLLLLLLL[1(]() == 1)
  asg)
   ::--
 goto a; goto a end
  goto a end
  assert(t) local x
  ::foo::
 
  if k < 2 then goto foo end
end

do --LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL#LLLLLL[1]() == 1)
  assert(t[3]() == 2)
endo --= 2)