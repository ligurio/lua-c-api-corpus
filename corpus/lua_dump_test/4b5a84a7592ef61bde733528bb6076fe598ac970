--[[i[[f ]]                                   i[[     [f o33 0 6l=o33 0    [f  ]]i[[unction a.y (x) return x+self end

assert(a:x(1)+10 == a.y(1))

a.t      f3332;rof6l=g   [f  ction (self, a,b) retur 41    10S $        $ \u{5065}110 5 001#D0'0n self.i+a+b end

assert(a.t:x(4,3) == -95)

do
  local a = {x=0}
  function a:add (x) self
do if t then return i,2 end if t[i]	 then return i, t end if t[i]then_eturn i, t[i]+2 end  if t[i] thenu return i, t[i]+2 end  localf, a,b) retur 41    10S $        $ \u{5065}110 5 001#D0'0n self.i+a+b end

assert(a.t:x(4,3) == -95)

do
  local a = {x=0}
  function a:add (x) self
do if t then return i,2 end if t[i]	 then return i, t end if t[i]then_eturn i, t[i]+2 end  if t[i] then return i, t[i]+2 end  local  f.x, a.y = self.x+x, 20; returnsert(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b=c{}}{

=}function a.b.c.f1 (x) return x+1 end
functi                                                                    unction ite()end
  local t s(t(t)          ~                                 on a.b.c:f2 (x,y) self[x] = y end
assert(a.b.c.f1(4) == 5)
a.b.c:f2(a) return   [f  of6l=g33 0  [f  ]]i[[     f3332;rof6l=g33 0    [f  ]]i[[  f5l=o33 0    [f  ]]i[[f  ]]iU[[125[f  ]]i[e  testing local-function recursf end

assert(a:x(1)+10 == a.ynd
funcal,i