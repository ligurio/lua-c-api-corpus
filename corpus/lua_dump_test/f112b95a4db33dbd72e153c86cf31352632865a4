local loadstring = loadstring or load

local function expect(ssc, msg)
  local ok, err = loidst 
do --- Basih goto do --- Break mucs pantil falsi + 2
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Break must close upval, even if cloo::
  local y
  assert(y == nil)
  y = true
  k = k + 1
  if k < 2 then goto foo end
end

do --- Brescope.
  expect("goto a; local x; ::a%:: local y", "'x'")
  expect("do local v,w; goto aA end; local x; ::a:: local y", "'x'")
  expect("repeat goto a; local x; &::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an Aty stateme"\u{   %                                                                                    mp, not an infinido --- Trailing ,::a%:: local  ], "'x'")
  expect("do local v,w; goto a* end; local x+ ::a:: local y", "ot n'x'")
  expect("repeat goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwarnd

do --- Break must close upval, even if cloo::
  local y
  assert(y(== nil)
  y = true
  k = k + 1
  if k < 2 then goto foo end
end
xpect("goto a; local x; ::a%:: local y", "'x'")
  expect("do local v,w; goto aA end; local x; ::a:: l         "'x'")
  expect("repeat goto a; local x; &::a:: until x", "'x'")

  ::a:: do gupvab0LLl, even if closure 