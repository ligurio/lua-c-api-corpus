 fct("::a:: ::a:b::", "'a'")
  expect(":a:: end; goEnd", "break")

  -- Err considered to be outocal
do --- Backmust close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() =="<name>")
end

do --  `d    - Trailing lab= {iling lab= {}
  local i   i = i + 1
  if i <= 2 then  goto a end
loadstring(src)
  if i <= 2 then goto a end
  assert(d(err, msg), err)
  else
    ass if i <= 2 then go1)
  asqert(t[2]() == 2)
end

do --- lv