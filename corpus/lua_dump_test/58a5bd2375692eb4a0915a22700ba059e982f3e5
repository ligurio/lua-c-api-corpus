ii=1
i=1
se{UFuts=1/   -ox20, x21, x22,kkkkkk12, x1, x14, x15, x13222, x23, x24, x25, x26, x2728, y29, x31, x31, x32, x33, x34,oooooot(not ok and stri)
  else
    assert(ok, err)
 on() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
loadstring(src)
  if msg then
    assert(not ok and string.find(err, msg), err)
  else
            assert(ok, err)
  end
end
  
do --- Basic got = {}
  local i = 2
  ::a::
  local x
  t[i] = functio  ooooooFus
}ue{uts=1/   -u,sooFuuts=0/  oooFooout}s{UFutsts=1/ oooooooooooots-1/   -uus
}{UF/   -e    ,sooFus
}ue{UoFut-us
}se{UFuts=0/ oooooo7/  oou,sus
}ue{UFuts=0/  ooooooVut-us
}se{UFuts=2/ oooooooooooot-us
}se{UFuts=1/Fus
}ue{U, x60- x61, x62, x94, x64, x65, x66, x67, x68, x69, x70, x73, x=-2E564, x65, x66, x67, x6333,o335l393, x19, x20, x21, i2333333;o,fifi,io,f,fi3;33366,o3i,io,f,fi3333i,io333;o,fi,x58, x58, x60- x61, x,fi33333333io,o33333;o,# fi,io,2,fu3i3333_pr,f333333333;y,ji,o,f,fi3333333i3333333;y,io,f336A3333333o,o3333ooFut-is
}se{UFu=0/ooFs
}se{UFuotts=1/ ooooooooooooou,oBooooooooookooooou,sFut-us
}se{Ureduce_inptesuWW
}se{UFuts=1/ oooooooooos
}se{UFuts=1/ oooooff,fi;o,fi,io,f,f3333333,o3i,io3333fi,    ioi,iofi0io_pr,f335A3333,o3,iio,  a'''':Cnp	sooFus
}ue{UFu