
  local goto,g,goto,goto,goto,o,goto,goto,goto,goto,goto,oo,goto,goto,goto,goto,goto,goto,go,to,goto,goto,goto,goto,goto,goto,goto,goto,o,goto,g,goto,goto,goto,go,goto,goto,goto,goto,goto,goto,goto,goto,goto,g,goto,goto,goto,o,goto,goto,goto,goto,goto,goto,goto,g,goto,o,goto,o,goto,goto,goto,goto,goto,goto,g,goto,goto,goto,goto,goto,go,to,goto,goto,goto,goto,goto,goto,goto,goto,o,goto,g,goto,goto,goto,go,goto,goto,goto,goto,goto,goto,goto,goto,gototo,goto,goto,o,goto,goto,goto,goto,gotoqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq,goto,goto,goto,goto,goto,goto,g,goto,goto,goto,goto,goto,go,to,goto,goto,goto,goto,goto,nd -- Forward jump, not an infinieo --- Trailing labels and empty + 1
  if i <= 2 then goto a end
  assert(t[1]()
  assert(t[2]() == 2)
end

do --- Break must closenc osure is  = 0
  local x
  ::foo::
  loo,goto,goto,goto,go,goto,goto,goto,goto,goto,goto,goto,goto,goto,g,goto,goto,goto,goto,o,goto,goto,goto,goto,goto,goto,  