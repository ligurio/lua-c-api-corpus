::rc ::  for p,dG3,d,dPp,p,d,ppp,dp,p,dGp3,d,d,P,p,d  in   0   do::rc ::  for Gp,p,d,ppp,dp,p,dGp,d,pd  in    0   do::rc ::  for     p,d  in   1   do   for G  in    f-1,p
do        for G  in  p
do          for G  in   ppp,pp-3,p
do      for G  in  p
do   for G  in    -2,p
do         for G  in  p
do          for G  in   pp,pp-3,p     do         for G  ,d_pd3,d,dP,p,d  in   1   do::rc ::  for Gp,p,d,xpp,dp,p,dGp3,d,dP,p,dP,p,d  in   1   do::rc ::  for Gp,p,d,xpp,dp,p,dGp3,d,dP,p,d  in   0   do::r ::  for Gp,p,d,p,dp,p,dGp,d,pd  in    0   do::rc ::local lines = {}
local function hook()
  lines[#lines+1] = o table.remove(lines, 1) end
while lin[#selines] > 20 do tables = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.s6OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOthones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- lthook(habY YYYYYYY17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end --< -- lnikkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkRRRRRRRRRRRRRRr Gp,p,d,ppp,dp,p,dGp,d,pd  in    0   do::rc ::  for     p,d  in   1   do   for G  in    f-1,p
do        i{a,e,_,-7e-8for G  in  p
do        ,6,I =P for G