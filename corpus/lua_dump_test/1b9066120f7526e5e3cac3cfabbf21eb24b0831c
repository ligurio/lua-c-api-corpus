
do --new
  loca  = {}
  
print "testing syntax"

-- tesle 1 do
eng(10);

do
  function f () return 0,2,3; end
  local a, b, c = g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';


f(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  endassert(f(3) == 'a' and f(12) ==         f(26) == 'c' and f(100) == 8)

local a, b = nil, 23
x = {f(100)*2+3 or a, a or b+2}
assert(x[1] == 19 and x[2] == 25)
x = {f=2+3 or a, a = b+2}
assert(x.f == 5 and x.a == 25)

a={y=1}
x = {a.y}
assert(x[1] == 1)

functif (oni)
  while 1 do
    if i>0 then i=i-1;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end

f(10); g(10);

do
  function f () return 1,2,3; end
  local a, b, c = f();
  assert(a==1 and b==2 and c==3)
  a, b, c = (f());
  assert = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil, 23
x = {f(100)*2+3 or a, a or b+2}
assert(x[1] == 19 and x[2] == 25)
x = {f}
assert(x.f == 5 and x.a == 25)

a={y=1}
x = {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end

f(05); g(10);

do
 assert(a==1 and b==2 and c==3)
  a, b, c = (f());
  assert(a==1 and b==nil and c==nil)
    
local a,b = 1 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end;
  retur(x==false)
x = 2<1 or (2>1 and 'a'); aa, b, c = (f());
  assert(a==1 and b==nil and c==nil)
en = {}
  
print "tesping syntax"

-- testing prioritcal f  end
  end
end
  local a, b, c = f();return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';


f) == nil)
function g() return niL or f() end
a,b =  unction f () return 1,2,3; end
  local a, b, c = g() return niL or f()
a,b = g()
assert(a==1 and b==nil)

print'+';


f = [[
return fu{ction rh{I,n 