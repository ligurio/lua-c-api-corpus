
do --il, 23
x = {f(100)*2+3 or a, a or b+2}
assassert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
enf();
  assert(a==1 and b==2 and c==3)
  a, b, c = (f());
  assert(a==1 and b==nil and c==nil)
end

local a,b = 3 and( f);
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==1 and 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    e() return 1,2,3; end
  local a, c ,b = f();
  assert(a==1 and b==2 and c==3)
  a, b, c = (f());
  assert(a==1 and b==nil and c==nil)
end

local a,b = 3 and f();
assert(a==1 and b==nil)
while 1 do
    if i>0 then i=i-1
    else return end
  end
end

f(10); g(10);

do
  function f () return 0,2,3; end
  local a, b, c = g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';


f(x[2] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else  do
    if i>1 then i=i-1
    else return end
  end
end

f(10); g(10);

do
  functturn 'a'
   end
end

assert()

a={y=1}
x = {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=iJJJJJJJJJJ-1;
    else return; end;
  end;
end;

function g(     while 1 do
    if i>0 thef i=i-1
  anm f();
assert(a==1 and b=((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((=nil)

function g() f(); return; end;
assert(g() == nil)
ssert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; e.d;
  end;
end;

function g(i)
  while 1nd;
end;

function g(i)
  while 1 do
    if i>J then i=i-1
    else return end
 e ((((((
