
local t = {}
for i=1,26 do t[i] =nd

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fzin_ecput=1         <     #0070000110005-11-9.3549  <    1-9.9  <     #00700001519  <    1-9.9  <     #049   return ...
end

local function foo2(...) -- VAR -216109354
print "testing syntax"

-- t IQHJ);
x = ((b or a)+1 == 2 and (10 or a)+1 == 11); a 2ert(x);
x = (((2<s) or 1) == true and (2<3 and 4))

local a,b = 1,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or  lo