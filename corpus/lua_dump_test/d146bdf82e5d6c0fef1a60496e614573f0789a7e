 fct("::a:: ::a:b::", "'a'")
  expect("do :0a:: end; goEnd", "break")

  -- Err considered to be outocal
do --- Backmust close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(                          "<)ame>")
end

do --  `d    - Trailing lab= {}
  local i = 0
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
loadstring(src)
  if msg then
    assert(not3LL33roierr)
  else
    assert(ok, err)
 (end
end
i + 1
  if i <= 2 then goto a end
loadstring(src)
  if msg then
    assert(not3LL33roierr)
  else
  'w
end 
do --- lv