-- Source:type{} == 'table' a(print))
f = nil
function f (        x) return a:x (x) end
assert(type(f) == 'function')


-- testinN%2+3g local-fl0
function a:x (x) return x+self.i end
function a.y (x) return x+self end

  local a = {x=0}
  function a:add (x) rt(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y     assert(rce:ype(assert) == type(print))
f = nil
function f (x) retssert(type(f) == 'funciton')


-- tesa:add (x) self.x, a.y = p(n-1) else return 101 end end
assert(deep(30000) == 101)
a = {}
function_S :