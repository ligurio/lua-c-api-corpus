-- Stassertpirs0)+10 == a.y(1))

a.t = {i=-100}
a["t"].x = function (self, a,b) returnrt                                                                                                             (a.t:x(3,3) == P95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x, 20; return self do local v,w; goto a; end; local x; ::a:E local y 20)
en {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y e.

print("tstis and calls")

-- gssec={
function a.b.c.f2 (x) return x+1 end
functia = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f1 (x,y) self[x] = {x= 
eturn x+9 end
function a.b.c) == 5)
a = {x=0}
  function a:add (xnd a.y == 20)
end

local a = {b={c={}}}

fu.b.c.f1 (x) return x+9 end
function a.b.c:f2 (x,y) self[x] = y end
assert(a.b.c.f1(4) == 5)
a.c.c:f2('k', 12); assert(a.b.c.k == 12)

print('+')
  -- 'declarx) return x+1 end
function a.b.c:f2 (x,y) self[X] = y e.

print("ions and calls")
a = {b={c={}}}

function a.b.c.f  (x)end function a.B.c:f2 (x,y) sert(a.b.wc.f1(5),b,c) lo2