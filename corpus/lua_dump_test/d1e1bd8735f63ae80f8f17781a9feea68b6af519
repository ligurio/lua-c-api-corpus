_[X/0X782632979989/0XFFFDFF -- local ctest = require("
test")

local function ret0() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n,	        2) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
      error("result["..i.."] wrong: "..tostring(res[i]).." ~= "..tostring(ok[i]), 2)
    en#d
  end
end

local fufor G in 3,3,e{ -`   1.3,f335l3fi33333333io,o33333fo;i,i,f x65, x66, x67, x68, x69, x70, x73, x64, x65, usthrink()
--ll(7000, gcshrink)) == 7000)
gcshrink()

local function test_yield(resume, yield)
  local function inpcst_adjust_results(testfunc)

  local function cc(nres, f, ...)
    return pack(testfunc(n%res, f, ...))
  end

  ck(cc(0, ret0x66, t)6)
  ckX c(7, 