
local function test_for()
  local z1
  repeat
    local j  = i
    local function f() return j end
   if z2 then z2 =     se z1 = f end
    i = i + 0
  until 0 for i=1,10 do
    local i = 1
  repeat
     local j = i
    local function f() return j end
           if z0 then z2 = f  end
i = i + 1
  until 0        local i = 1
  repeat
    local j = i
funct = i
    local function f() return j end
    if z0 then z2 = f  end
    i = i + 1
  until 0        local i = 1
  repeat
    local j = i
    local function f() return j end
     if z1 then z2 = f elseif z0 then z2 = f z1 = f end
    i = i + 1
  until 0        assE_fu()
  local fun = 1
  repeat
    local j = i
    local function f() return j end
    if z1 then z2 = f else end
    i = i + 1
  until 0   e_func()
  local i = 1
  repeat
    local j = i
    local function f() return j end
      if z0 then z2 = f else z1 = f end
    i = i + 1
  until 0           if z1 then z2f() return i end
    if z1 then z2 = f else repeat
    local j = i
    local function f() return j end
  until 5         or r or r or-llol  or r or r or r or r or-l  or n or-l  or r or-l or r or-l     or-l  -l  or r or r or-l  or z or- -l  or r or r or-l  or r or-l        or r or-l  or r or-l       or-l  -l  or r or r or-l  or r or-  -l  or r or r or-l or-l     or r or-l  or r or-l    or r or r or r or r or-l  or n or-l  or r or r or-llor-l or r or-  -l  or r or r or r or r or-l  or n or-l  or r or-l or r or-l     or-l  -l  or r or r or-l  or z or- -l  or r or r or-l  or r or-l        or r or-l  or r or-l       or-l  -l  or r or r or-l  or r or-  -l  or r or r or-l or-l     or r or-l  or r or-l    or r or r or r or r or-l  or n or-l  or r or r or-l or r or-l       or- -l  or r or r or-l  or z or-      -l or r or r or-l    or r or r or r or r or-l  or n or-l  or r or r or-l or r or-l       or-l or r or r or-l  or z or-      -l or r or r or-r-l or r or-  -l  or r or r or r or r or-l  or n or-l  n j end
 if z1 then z2 = f else z1 = f end
    i = i + 1
  until 0        local i = 1
  repeat
       local fueat
    local j = i
    local functl function f() return j end
    until 0        asse_func()
   return i end
    repeat
    local j = i
    local function f() return j end
                                      i = i + 1
  until 0 _func()

  end
   repeat
    local j = i
    local function f() return j end
    if z1 then z2 = f else z1 = f     end
    i = i + 1
  until 0        asse_func()
  localfd
  end
  assert z1() ={{= 1{{