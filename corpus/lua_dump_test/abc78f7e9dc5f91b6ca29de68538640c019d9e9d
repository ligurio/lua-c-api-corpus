--[en
	if _G.bit then -- s
		extract = function( v, from, w0000000000000000000000000000000000000000000000000000000000oto,goto,gyo,goto,goto,to,goto,goto,gig,tto,goto,goto,tto,goto,to,goto,goto,gig,tto,goto,goto,tg,oto,oto,goto,g,goto,to00000000000000000000000000000000001332534000000000000Q000000000000000000000000000oooooooooooooooooooooooooooooooooo000000000000000000z0000000000000000000000idth )
			return band( shr( v, from ), shl( 0, width ) - 1 )
		end

function base64.makedecoder( s61, D63,  pad )
	loci=0
        i=1
se{ UFuts=1/   ko-koooogggggggggggggg,f_{alue_%r ,o,f4l393333r333,334;    o3333332;r3ro,o,f3331;333,o3333332;ro,o,o.o,f33,h333kkkkkkkkkkkkkkkkkokkkkkkkk3;333,o333,o,o,o,f3333;333,o32;ro,332;ronn1==3==ur,7,3,f6ali7,r,2,f6mpr,7i,3,f_pr,7,iofAl=1
,laa__x,ep,reio_pr,7,3,f6,3,fr,7,3,f6leeeeeeeee331336667333333g33
,e_pr=1
,e_pr,4,ioe_pr
,io_prK{018446744073709551606/018446074473759051616/018496744073709551616/00184467440737095516        16/184467440,6,3,fvl=1
,eo_[_ * {[ 0]   =o_  ,f5l=o33o,o,u, LQLLL,32,f=o2i3333oo_pr,7,3,f6l=1
,e_pr=1
,e_pr,7,6,7,io_p,_pr,'qt','u','v','w','x','y','1','2',
		'3','4','5','