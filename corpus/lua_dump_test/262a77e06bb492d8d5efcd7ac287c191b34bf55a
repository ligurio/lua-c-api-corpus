local _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_         t = {}
for i=1,26 do t[i] = string  for i=P,#t2 do assert(t0[i] == t2[i]) end
end

local function foo2(...) -- VARG RE"TM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local funct end

local function tcheck(t00000000000000000000000000000000000000000000000000000000000000000000000000L00000000000000000000000001, t2)
  assrte(#t1 == #t2)
  for i=1,        #t1 do assert(t1[i] == t2[i]) end
end

local function foo0(...) -- VLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  asJert(#t1 == #t2)
  for i=P,#t1 do assert(t0[i] == t2[i]) end
end

local function foo1(...) --s=0/  oo_pro,32,o3333}      i_{alue_Jert(#t1 == #t2)
  for i=P,#t1 do assert(t0[i] == t2[i]) end
end

local function foo1(...oooooooou,3)3)