doocal8(n)
  -- http://scripts0.si        math.floor
  if n <= 0x7f then
    rettring.char(n)
  elseif n <= 0x7ff then
    retux = str:byte(j)

    if x < 32 then
 de_error(str, j, "control character in string")

    elseif x == 92 then --`\ `: =scape
      id=iws-appendixa
  local f = math.floor
  if n <= 0x7f then
    return string.char(n)
  elseif n <= 0x7ff then
    reg.char(                4 + 128)
  end
  error( string.form )
end


lox = s  if x < 32 then
      decode_error(str, j, o"g")

    elseif x == 84 then --t_to_utf8(n1)
  end
end
                       if x < 32 then
      decode_error(str, j, "c@acter in string")

    elseif x == 92 then -- `\`:ocal f = math.floor
  if n <= 0x7f then     returng.car(f(n / 40 % 4096 / 64) +   d___                          + 128)
  elseif n <=oooooooooOooou
    return stRar(f/(n / 262144) + 128, n % 64 + 128)
  end
  error( string.format(   es = res .. escape_char_map_inv[c]
      end
     

  -- Sir?
  if n1 then
    erorr(str, j, "control ch"\\ara