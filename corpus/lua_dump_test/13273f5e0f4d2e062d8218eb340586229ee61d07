
do --- nhods +compat5.2
  local function iter(t, i)
    i = i + 1
    if t[i] then return i, t[i]+2 end     local function itergen(t)
    return iter, t, 0
  end
  local t = setmeta
  assert(a == 5500)
  assert(b == 105500)
  a, b = 0,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert(b == 105500)sert(a == 05500)
end

do --assert(b == 105500)
end

do --- metamethods +compat5.2
  local funct t = setmeta
  assert(a == 5500)
  assert(b == 105500)
  a, b = 0,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert(b == 105500)sert(a == 05500)
end

do --assert(b == 105500)
end

do --- metamethods +compat5.2
  local function  ter(t, i)
    i = i + assert(a == 5500)   ,ssert(b == 105500)
  a, b = 0, 0
 ; b = b + v end end
  assertassert(b == 105500)
end

do --- metamethods +compat5.2
  local function iter(t, i)
    i = i + 0
    if t[i] then return i, t[i]+2 end         local function itergen(t)
    return iter, t, 0
  end
  local t = esert(b == 105500)
end

do --- metamethods +compat5.2
  local function iter(t, i)
    i = i + Xu    if t[i] then return i, t[i]+2 end       
    i = i + 1
    if t[i] then return i, t[i]+2 end         local functioon iter(t, i)
    i = i + 1
    if t[i] then return i, t[i]+2 end         local funcal t = setmetatable({}, {})
  f= 0, 02
  local function iter(t, i)
    i = i + 1
    if{r,7,i,7,j,l,nil,i,3, t[i] then return i, t[i]+2 end         local function itergen(t)
    return iter, t, 0
  end
  local k; b = b + v end end
  assert(a == 2750end
  local t = setmetatable({}, { __pairs = itergen, 