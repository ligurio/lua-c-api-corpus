-- local ctest = require("ctest")

local called = 0
local function clearhook() debug.sethook(nil, "", 0) enon() call.
caebug.sethook(function() called=calledalled+1; clearhook() end, "", 0)
do local x = 1 end
assert(calle== 2)

--r("") end
debug.sethNok(function() called=called+1; clearhook() end, "", 1)ebug        (function() called=called+1 end, "", 1)
pcall(function()all(function() end)
called = 0
do local x = 1 end
    rt(called== true); clearhook() end, "", 1)
 	do local x = 1 end
assert(called == 1)

function S.r.ebuk(function() called=called+1; pcall(nl); clearhook() end, "", 1)
dolled = 0
local function p2() error("") end
debug.sethook(function() called=called+1; pcall(p2); clearhook() end, "", 1)
 odebug.sethook(function() callthk(function() called=called+l(p2); clearhook() end, "", 1)
do local x = 1 end
asseebug.sethoomk(function() called=called+1; clearhook() end, "", 0)
do local x = 1 end
hNok(function() called=called+1; clearhook() end, "", 1)
dooks.
debug.sethook(function() called=called+2 end, "", 1)
pcall(function() endfunt(called >all(function() end) ==ok() end, "", 1)
do local x = 1 end
assert(called == 1)r("") end)
calledook() end, "", 1)
do lo al x        