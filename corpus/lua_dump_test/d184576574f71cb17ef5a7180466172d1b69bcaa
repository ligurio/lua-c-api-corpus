fortio,goto,goto,goto,got,goto,goto,goto,goto,goto,goto,goto,goto,goto,g,goto,goto,goto,goto,goto,goto,goto,goto,goto,goto,goto,goto,goto,goto,o,goto,goto,goto,goteturn ...
e-- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#ts do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG Rd
string.char(96+i) end

local fun(-nction tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) enend

local function foo2(...) -- VARG UCLO RETM$
  local functiETM
  return ...
end

local function foo3(.u..) -- VARG UCLO RETM
            v                  local function dummy()