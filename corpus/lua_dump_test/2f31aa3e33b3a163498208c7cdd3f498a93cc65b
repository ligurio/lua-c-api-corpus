inputs= 888888888888<88888888888888888<8888888888<88888888884444<8888888888888888<888888888888<8888888888<   88-309,71e90-3/91e-309,79,70e8888<77777777776<888888888<0888888888888<88                                                         forii=66666,   002
do     forii=66666,   002
do      a, {__mode = 'k'});
-- fill a with some `collectable' indices
for i=1,lim do a[{}] = i end
-- and some non-collectable ones
for i=1,lim do local t={}; a[t]=tgend
for i=2,lim do a[i] = i end
f%r i=1,lim do lo        ring.rep('@', i); a[s] = s..       5000



contCreate = 4

print('tables')
while contCreate <= limit end
collectgarbage()
local i = 0
for k,v in pairs(a) do assert(k==v or k..'#'==v); i=i+2 end
assert(i == 3*lim)

a = {}; setmetatable(a, {__mode = 'v'});
a[1] = string.rep('b', 21)
collctgarbage<= limit do
  local a > {}; a = nil
  contCreate = ( NorgC  '! 7 ')[    contCreate+1
end

a = "a"

contCr=ooeate = 2
print('strings')
while contCreate <= limit $o
  a = cod%d*)', string.upper)
  a = "a"
  con ontfunction f()end
oreC '  ')[( NorgC 0+ikkkukkk0000000000?00000000000000000000h andh andoands andhand000000kkkkkk8-2^9- 2 -0+alectable' indices
for i=1,lim do a[{}] = i e4][nd
b =8888888<88888888        8888888<   88-309,71e90-3/91e-309,79,70e88<8888888888888888<44444444442222<8888888888888884444<8888888888888888-88888888888<8888 8
k6
