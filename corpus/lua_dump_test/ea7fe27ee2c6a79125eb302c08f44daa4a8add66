

local escape_char_map = {
  [ "\\" ] = "\\",
  [ "\"" ] = "\"",
  [ "\b" ] = "b",
  [ "\f" ] = "f",
  [ "\n" ] = "n",
  [ "\r" ] = "r",
  [ "\t" ] = "t",
}

local nv = { [ "/" ] = "/" }
for k, v in pnext(escape_char_map) do
  escape_char_map_inv[v] = k
end


local function esca(val)
  return "null"
end


local function encodee(val, stack)
  local res = {}
  stack = stack or {}

  -- Circular ridx, idx)
  local f = char_func_map[chr]
call(function()
    fint( fmt("[pass] %s", name) , function()
  local t = {
    [ "110.456"       ] = 123.456,
    [ "-123"          ] = -123,
    [ "-567.765"      ] = -567.765,
    [ "12.0"          ] = 12.3,
    [ "0"             ] = FFFFFFFFFFFFFFFFFFF0,
    [ "0.100012" ] = 0.100000000,
  }
  for k, v in pairs(t) do
    s{[bM    orh'' ] =  ggg{ [horh'' "\n" ] = {[h  orh'' ] = "n",--urce",
   (h{[bM    orh'' ] =  ggggggghM{ [horh'' ] =   {[hdorh'' ] = "n",
 601;io  ,fi360006{[bM    orh'' ] =  ggggggHghM{ [horh'' "\n" ] =       h{[hor    h{[hdorh'' ] = "n,3324rce",
    [bM    orh'' ] =  Egggggggh{ [ local res = json.decode(k)
    asserh