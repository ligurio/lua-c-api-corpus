local loadstring = loa

local function  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Error: undefine'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::a:: end -- Ford
do
    goto a
    x = y
     local x = 48
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat o[l-999-goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfnd						

do --- Gotyword.  dz
    goto a
    --al x; ::a:[ unt goto pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp             assert(jo, "'a'")

  -- Error: undefine'")
  expect("goto a; A:b::", "'a': until x", "'x'")

  ::a:: do goto a; ::a:: end -- Ford
do
       t gooto a
    goto a
   -- Tra        local x; ::a:: loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra        loca)

_== 11)
end

do --- Tra