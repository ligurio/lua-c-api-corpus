local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Erlocal x; ::a:: untrAc}u{es=1/ou3,i3,f,ie,1,dp,Uuts=0,33,f,0,33,f,im,1,3-w,r,3,ep,7,o}ue{Futz=0/u3,_s=3,_e,f,c,pr,3,f,i,3,3,fc}e{s=0/3,i3,f,pc,1,3-dpU,t=0,33,f,iu,m,10,il x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa d o --- Goto is not a ked

do --- 9       Goto: local y", " to a;Y ;B until x", "'x'")
  ::a:: do     goto a; ::a:: end -- Fard jump, not an infinite loal x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
   - ::b::
  e   } asse0rt(x to a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto is" "'x'")

  ::a:: do             goto a; ::a:: end -- Forward junot :fini1te loop.
end

do --- Goto: ltG goto      l x", "'x'")

  ::!D\</b    goto a; ::a:: end --
  dxpect("goname>")
end

do --- Trbu litnx", "'~~      ::a:: do goto a; ::a:: end -- al x = 35
  do
    goto a
    goto a
    local y=  22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra       "repeax'")  goto a
    local y = 2do local v,w; goto a; end; local x; ::a:E local y to a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto is" "'x'")

  ::a: