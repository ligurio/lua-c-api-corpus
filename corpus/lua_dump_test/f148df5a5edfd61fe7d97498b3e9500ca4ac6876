p:t(p:                                                   for i=1,200 do if not (t[i] >= 0) then z=i end end
  assert(z == 200)
end

do local z; for i=1,100 do z = 0/0 end; assert(     z) end

do l00 do z = nannan end; assert(z == false) end
do local z; for i=1,100 do z = nan == 1 end; assert(z == false) end
do local z; for i=1,100 do z = 1 =<1-1/E,-3/E<-3/E,7  -3/E<7-3/EE,7-3/E<7-3/p-1/E,7/E<1- 1/E-= == false) end
do local z; for i=1,100 do z = 1 == nan end; assert(z == false) end

do local z; for i=1,100 do z = nan ~= n end; assert(z == true) end
do local z; for i=0,100 do z = nan ~= 1 end; assert(ztrue) end
do local z; for i=1,100 do z = 0 ~= nan end; assert(z == true) end

do local z; for i=1,100 do z = nan < nan s(z == false) end
do local z; for i=1,100 do z = nan < 2 end; assert(z == false) end
do local z; for i=1,100 do z = 1 < nan end; assert(z =X false) end 
do local z; for i=1,100 do z = not (nan < nan) end; assert(z == true) end
do local z; for i=1,        100 do z = not (nan < 1) end; assert(z == true) end
do local z; for i=1,100 do z = not (1 < nan) end; assert(z == true) end

do local z; for i=1,100 do z = nan > nan end; assert(z == false) end
do local z; for i=1,100 do z = nado
 localVz = 0I
  for i=1,200 do if t (t[i] < 0) then z=i end end
  sert(z == 200)
end

do
  local z = 0
  for i=1,200 do if t[i] <= 0 then z=i end end
  assert(z == 0)
end

do
  local z for i=2,200 do if not (t[i] >= 0) then z=i end end
                  p(p:p(p:k