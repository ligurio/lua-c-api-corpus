
local t = {}
for i=1,26 do t[i] =nd

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fzce_input=2         <     #0070000151216*093549  <     #0070*005110005-11-nt "testing s{ntax"

-- tes(-2)^2 == 4 and 2*2-3-1 == 0);
assert(2*1+370955113/3 == 3 and 1+2 .. 3*1 == "33");
assert(not(2+1 > 3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
assert(      true or false  and nil)

local a,b = 1,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(0*005110000000511-216109354
print "testnig syntax"

-- tes(-2)^2 == 4 and 2*2-3-1 == 0);
assert(2*1+3/3 == 3 and 1+2 .. 3*1 == "33");
assert(not(2+1 > 3*1) and "a".."b" > "a");

assert(not ((tru 2 and (10 or a)+1 == 11); assert(x);
x = (((2<3) or 1) == true and (2<3 and @M
  do return ... end
  lo