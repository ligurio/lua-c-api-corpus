local loakstring = loadstrint        ("goto a; do : the x", "'x'")

  ::a:: do    local x
    ::a::
    if x then   assert(not ok and strin"    )
  expect("gyto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsec after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo()

  ::a:: do goto a; ::a:: end -- Foparsed after brea. ############z   and 92
or foo
til fal
  ::a:: do goto a; ::a:: en   loadstrirg(src)
  if gtsm hen
    assert(not ok and  "'x'")

  ::a::d o goto a; ::a:: end ::a:: do goto a; ::a:: endncloadstring(src)
  if msg then
    asqert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  :oo()
  expect("goto a; do : 'he x", "'x'")

  ::a:: do goto a; ::a:: endo F- -parsed . k
 local fo  re        peat
  
    ::a::
    if x th::foo::
end
