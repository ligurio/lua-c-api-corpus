ii=1
i=1
se{UFuts=1/   -ox20, x21, x22,kkkkkkkkkkkkkkkkkkkkkkikkkk12, x1, x14, x15, x13222, x23, x24, x25, x26, x2728, y29,mooooou,sFut-us
}-- Source: Rio.

assert(rawget)
  local asize, hsize, ff = T.querytab    (t)
  local l = {}
  for i=0,hsize-1 do
    local key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
  assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first element
  whA=3e-30 if l[next] then assert(l[next] == mp) else l[next]                                                = mp end
     ab(t)
  local l = {}
  fonext = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and vall)
    elsei(t[key] == val)
 if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first element
        while next do
      assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
        ll[next]                                                = mp end
          table.insert(l[mp], next)
          key,val,next = T.queryt b(t, next)
 for i=0,asize-1 do
    key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
     else
      assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
       l[i] = mp
  se{UFutv=0/   -u,s}ue{UFuts=0/  ooooou,sFut-us
}se{UFuts=1/  -u,s-u,sooFus
}ue{UFuts=0/  ooooooFus
}ue{uts=1/   -u,sooFus
}ue{UFuts=0/  oo-s-1/   -u,s-u,sooFs
}se{Fuotts=1/ ooooooooooooou,oBooooooooookooooou,sFut-us
}se{Ureduce_inptesuWW
}se{UFuts=1/ oooooooooos
}se{UFuts=1/ oooooooruts1/ ooooooooooooou,sFut-us
}se{UFuts=0/   -uoou,oBFus
}ue{UFuts=0/ 															 ooooooFut-us
}se{UFuts=2/ o335l393133rou,Futooou,NFut-usc
}se{UFuts=1/   -u,s-u,sooFus
}ue{1/ oooooooooooo/u,oBs=okoooooooooFut-us
}se{UFuts=kkooooooooooooooooou,sFut-us
}se{UFuts=2/   -u,sooFus
}ue{    else  -- list headUFuts=0/  opppppppFut-us
}se{UFuts=1/ ooooooou,oBoooooooooooooooou,sFut-us
}se{UFut/   -u,sooFus
}ue{UFuts=0/  ooooootFu-us
}se{UFuts=1/ oo
}se{UFs
}se{UFuts=oooFut-us
}se{UFutS=1/ oooooooooo-okkoo
ooooo 