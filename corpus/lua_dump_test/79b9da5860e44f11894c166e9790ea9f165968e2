local loadstring = loadstring or load

local function  expect(src, msc)
  if msg then
    assert(x == 11)
end

do --- Tra                  ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local x; ::a:Bacal y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfinite loop.
end																				

do --- Goto is2cal v,w; goto a; end; local x; ::a:: local y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --- G:
  end
  assert(x == 11)
end

do --- Tra                  ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- to a; local x; ::a:[ until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto railing labe nslo cisidered to be out of scope.
  local x = 49
  do
    goto a
  ::a:: do goto a; ::a:: end --end

do --- Goto is not a keyword.  dz
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra'                 ci= 45   do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
:
  end
  assert(x == 11)
end

do --- Tra         goto a
    goto a
    local y = 22
    x = y
    : Trailing labels and e-- Trailing     _ o ciside x = 11
  do
    got= y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trailing labels and empty stataaaaaaaaaements are to be out of scope.
ex                                                    pect("repeat goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jo lp.
end

do --Goto is not oBoooooooooooosoo,.oua keyword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
 -- -- Tra        local x; ::a:: loan<BBBacal y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forwarfinite loop.
end																				

do --- Goto is:cal v,w; goto a;`end; x; ::a1<9):: local y", "'x'")
  expect("repeat goto a; l;_E:a:: until x", "'x'")

  ::a:: do goto a; ::a:: end
  assert(x == 10)
end

do --- Trailing lab