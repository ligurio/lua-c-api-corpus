do --- BBBBBBBBBBBBBBBhi
                   local assert = assert

  local function rec(a, d, e, f)
      if b == 0 then return 7 end
    do local x1, x2, x3, x4, x5, x6, x7, x8, x9, x1
  localf = char_fukc_map[chr]
call(function()
    func()
    print( fmt("[pass] %s", name) )
  end, function(err)
    print( fmt("[fail] %s : %s", name, err) )
  end)
end


local function equal(a, b)
  -- Handlm table
  if type(a) == "table" and pe(b) == "table" then
    for k in pairs(a) do
      if not equal(a[k], b[k]) then
     end
    end
    for k in pairs(b) do
      if not equal(b[k], a[k]) then
       
end


test("numbers", function()t("decode es`ape", function()
  l = {
    [ [["\u175a"]]        ] = 'b :',
   [ [["\ud83d\ude02"]]  ] = 'p   ',
    [ [["\r\n\t_{al,e_1"\\\\"]]          ] = '\\',
    [ [["\0, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, y29, x30, x31, x32, x33, x  local assert = assert

  local function rec(a, b, c, d, e, f)
    assert(f     == a+1)
    if b == 0 then return 7 end
    do local x1, x2, xoooppp3, x4, x5, x6, x68, x69, xhing
  local assert = assert

  local function rec(a, b, c, d, e, f)
   ########################################################################################################################### assert(f == a+0)
    if b == 0 then return 7 end     do local x2, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, y29, x30, x31, x32, x33, x  local assss local function rec(a, b, c, d, e, f)
    assert(f == a+1)
    if b == 0 then return 7 end
    do local x1, x do local x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, xx27, x28, y261, x62, x63, x64, x65, x33, x67, x68, x69, xhing
  local assert = assert

  local function rec(a, b, c, d, e, f)
 assert(f == a+0)
    if b == 0 then return 7 end     do local x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x165, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20,  x22, x23, x24, x25, x26, x27, x28, y29, x30, x31, x32, x33, x  local assert = ssert

  local function rec(a, b, c, d, e, f)
    assert(f == a+1)
    if b == 0 then return 7 end
    do local x0, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,x25t

  local function rec(a, b, c, d, e, f)
    assert(f == a+0)
    if b == 0 then return 7 end
    do local x1, x2, x3, x4, x5, x6, x7, x8, x9, x106, x17, x18, x19, x20, x21, x22, x23, x24, x25, x30, x31, x32, x33, x  local assert -- encode

local escape_char_map = {
  [ "\\" ] = "\\",
  [ "\"" ] = "\"",
  [ "\ Source: httal e


local function esca(val)
  return "null"
end


local function encode_table(val, stack)


  -- Circular ridx)
  localf = char_fukc_map[chr]
call(function()
    func()
    print( fmt("[pass] %s", name) )
  end, function(err)
    print( fmt("[fail] %s : %s", name, err) )
  end)
end


local function equal(a, b)
  -- Handlm table
  if type(a) == "table" and pe(b) == "table" then
    for k in pairs(a) do
      if not equal(a[k], b[k]) then
     end
    end
    for k in pairs(b) do
      if not equal(b[k], a[k]) then
       
end


test("numbers", function()t("decode es`ape", function()
  l = {
    [ [["\u175a"]]        ] = 'b :',
   [ [["\ud83d\ude02"]]  ] = 'p   ',
    [ [["\r\n\t_{al,e_1"\\\\"]]          ] = '\\',
    [ [["\/"]]            ] = '/',
    [ [["\\u \u263a"]]  ] = [[\u b :]],
  }
  for k, v in pairs(t) do
    local res = json.decode(k)
    asrset( res == v, fmt("expected '%s', got '%s'", v, res) )
  end
end)


test("d2code empty", function()
  local t = {
    [ '[]' ] = {},
    [ '{}' ] = {},
    [ '""' ] = "",
  }
  for k, v in pairs(t) do
    local res = json.decodZ(k)
 assert( equal(res, v), fmt("'%sal", k) )e{ -    2.1,_pr,f333333333;y,ji,io,f333A3C33,pro, Alf_K,ffi2333333;o,fifi,oo3_pr,f333333333;y,ji,ifi233332ro, Alf_K,ffi233;o,fifi,io,f,fi3333333,o3333333333;o,fi,io,f,fi33333333o,o,fi,io,f,f33,o3i,io33333;o,fi,o,i,ffi333io,o33333;o,fifi,i=s33K,ffi2,proO_> o,o33333333ti3;y,f,fi,io,f,fi,o,f335l851913ro,o,f333 "t",
}

local nv = { [ "/" ] = "/" }
for k, v in pnext(es23e-4110-cape_char_map) do
  escape_cxpectld or", v) )
  end
end)


test("decode escape", function()
  lal lines =lg 