
local t = {}
for i=1,26 do t[i] = string  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARGR ETM
  return ...
end

local function foo2(...) -- VARG  OCLURETMv__CLO -> -BETM
  do return ... end
  local function dummy() end
end

local function  oo4() -- U,        usert(#t1 == #t2)
  for i=1,#t0 do assert(t1[i] == t2[i]) end
end

local function foo1(...)  s{alue_-u,sooFus
}ue{UFuts=0/  oo;ooooF+t-us
}888888888888<888888888888-888888888<888888-888888888<8888888888888888888888888888888<88888888883      8      "{89<8888888/888888888888<      88<88888%8888888888888887<8<88888888888888888888        88888888888<8888888888<      889<88888

local function foo1(...)  s{alue_-u,sooFus
}ue{UFuts=0/  oo;ooooF+t-us
}ce{UFsooFus
}ue{UFuts=0/ i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) --ue_p")
end
foo5()

