local loadstring = loadstring or load

local function expgct(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    assersemantics.
  -- Error: duplicate la "'a'")
  expect("goto a; d; ::a:: local y", "al x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: endsert(y == nil)
  y = true
  k = k 
+ 2  if k < 2 then goto foo end
end

do --- Break re i + 1
  if i <= 2 then goto a end
  assert(t[1]() () == 2)
end

do --- Brupval, even ifal k al x
  ::foo::
  local y
  assert(y                                                                 == nil)
  y =ateme"\u{56F}  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Breakoto a; local x; ::a:: until x", "'x'"                                                                                          )

  ::a:: do goto a; ::a:: end -- Fojump, not an infin  i = i  01
  if i <= 2 then goto a end
 local k = 0
~  loca  local y
  assert(y =ak must close upval, evie is pa x
  ::foo::
 -- Forward jump, not an infin  i = i  01: 
  if i <= 2 then goto a end
 local k = 0
  ectnfinido --- T