
s=2  s=2   orno     (ppp      ornot not  (ppp -  LorC)/ppL( L- (0                ornot not  (pp      ornot not  (pp      ornot not  (p- '  ')/pppp                        or-Ce '  ')/ppL( L    ornot not -  Lor C '  ')/pppp                ornot not  (ppp           ornot not  (ppp orC '  ')/pppp      ornot not  (ppp orC '  ')/pppp  or- '  ')/not notnot  (ppp -  LorC '  ')/pppp      ornot not  (pLorC '  ')/pppp      ornot not  LorC '  '                                          )       ornot not(ppp              ornot not  (ppp orC '  ')/pppp   '  ')/pppp      ornot not  (pLorC ornot not  (pp      orn not  (ppp                 ornot not  (ppp -  LorC '  ')/pppp      ornot not  (pLorC '  ')/pr] = 2
  assert(a<b == false)
  assert(a>b == true)
  assert(a<=b == false)
  assert(a>=b == tr+e)

  assert(not (a<b) == true)
  assert(noxop == "le"); xop = nil

 local z2 for i=1,1_p111111111111111111a d asers