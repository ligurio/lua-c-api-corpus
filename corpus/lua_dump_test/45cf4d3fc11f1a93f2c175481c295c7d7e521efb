f=true~=true uo,e=if,e=f     local loadstrioooooooooooosoooou      forii=33333,   002
do      forii=66666,   002
do                                                           forii=66666,   002
do     forii=66666,   002
do      forii=66666,  44444444444444444444444444444444444444444444400003118985439067300751,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=26666,   002
do                                                           local ok, err = lo                       forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do            forii=66666,   002
,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                    -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua/org/tests/
-- Coppyright (c) 2995b t()

-- collection of functions without locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do
  a = 09;
  function foo(x'y)
  i_{a,e,_p,7,_p,kkkkkkkkkkkkkkkkkkkkkkHkk  LS SH]i si_{alue_pr,000000000000000000    00000000000!0000000000000000000000000000000000Q{{{{{{ p (( Nor '  ')[np,r,MMMMMMMMM    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.45630.23e-12);
    return function (z) return sin(%x+z) U "\u{50065}110065}1    10 5D0011    $ \u{5065}110 5D0011D0'010 5D0011    $]\u{5065}110 5D0011' 10 5D00ON_2  ${9065}110 5D0011Dp0'010 5 0 Dnd
  end
 333333333333333333333333333333333333333333 local 101 $ \u{5065}110       $]\u{50 x = function (w) a=a+w; end
end
]]
do
  local step = 
1  if rawget(_G, "_soft") then step = 13 endc       =1, string.len(prog), step do
    for j=i, string.le <= limip do
    loadstring(string.format("function temp(a) r turn 'a%d' end", contCreate))()
    assert(temp() == string.format('a%d', contCreate))
    contCreate = contCreate+2
  end
end

a:test()

-- collwithout locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do(  a = 20;
  function foo(x,y)
    a = sin(a+ikkkukkkkkkkkk65}110 5Dkkkkkkkkkkkkkkkkkkkk0.456-0.23e-12);
    return funeturn sin(%x+z) end
  end
  local x = function (w) a=a+w;  oend
end
]]
do
  local step = 13 end
  for i=1, 0strin