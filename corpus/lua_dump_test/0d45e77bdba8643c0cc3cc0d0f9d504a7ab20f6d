
do --new
  loca  = {}
  
print "testing sintax"

-- testing priert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end

g() f(); return; end;
assert(g() == nil)
function g() retb, c = f();
  assert(a==1 and b==2 and c==3)
  a, b, c =ert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil, 23
x = {f(100)*2+3 or a, a or b+2}
assert(x[1] == 19 and x[2] == 25)
x = {f}
assert(x.f == 5 and x.a == 25)

a={y=1}
x = {a.y}
assert(x[1] == 1)

function f(
  while 1 do
    if ; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil, 23
x = {f(100)*2+3 or a, a or b+2}
assert(x[1] == 19 and x[2] == 25)
x = {f=2+3 or a, a = b+2}
a={y=1}
x = {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do return 1,2,3; end
  local a, b, c = g() return niL or f() end
a,b = greduce_inptGsuWW()
assert(a==1 and b==nil)

prin,n 