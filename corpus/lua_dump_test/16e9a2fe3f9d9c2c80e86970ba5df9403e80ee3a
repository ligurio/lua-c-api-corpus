ci008 0X00000.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000018446744073709551615                                                                                               fct("::a:: ::a::", "'a'")
  expect("::a:: ::b:: do ::b:::b::", "'a'")
  expect("do ::a:: end; goEnd", "break")

  -- Err considered to be outocal x = 22

do --- Backwards goto 6 st cll.
  local t  = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[2]() = l x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  ast(t[1]()jB= 1)
  asiert(t[2]() == 2)
end

do --- l   }
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
loadstring(src)
  if msg then
    assert(n