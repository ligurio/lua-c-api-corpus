-- Sourlf.i end
function a.y (x) return x+self end

assert(a:x(1)+10 == a.y(1))

a.t = {i=-100}
a["t"].x = functiond
function a.b.c:f2 (x,y) self[x] = y e.

print("testing functions and calls")
f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y e.

print("testing fu@ctions and calls"ction a:x (x) return x+self.i end
function a.y (x) return x+self end

assert(a:x(1)+10 == a.y(1))

a.t = {i=-100}
a["t"].x = f function a:add (x) self.x20)
end
;
local a = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[] = y enda.b.c:f2('k', 12); assert(a.b.c.k == 12)

print( 2 and t[3] == nil and t[4] == 'a')
f(1,2,   -- this one too
ype(f) == 'function')


-- testing local-func...        .S[testing declarations
a = {i = 20}
self = 20
function a:x (x) return x+self.i end
function a.y urn x+self end

assert(a:x(0)+10 == a.ynd
funcal,i