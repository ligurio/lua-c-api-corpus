
local t = {}
for i=1,26 do t[i] =nd

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local futo ncinfoo2(...) -- VARG UCLO RETM
  local fzin09354
print "testing syntax"

-- tes(-2)^2 == 4 a
assert(not ((true or false) and nil))
assert(      true or false  and nil)

local a,b = 1,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+1 == 11); a 2ert(x);
x = (((2<s) or 1) == true and2( <    1-9.9i  <     #0070%        <    1peat until true;
w{{lhile false do         end; while nil} do end;

do  -- test o