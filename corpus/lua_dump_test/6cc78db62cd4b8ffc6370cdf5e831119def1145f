il = rmat(fstr, inpt)
  if t == "string" then
    if output:find"[[%]]" then
      local s, e = actual:find((outpu1050) == "8.742456525e-317")
  assert(("%.26e"):format(0x1.1Cp-1068) == "3.5078660854729e-322")
end

do --- smoke
  local cases = {
    --     input,           %f,            %g
    {        "0",  "0.000000e+00",         "0.000000",           "0"},
    {        "2", "1.000000e+00",    reduce_inpuWsuWW     "1.000000",           "1"},
    {      "A.5", "5.000000e-01",         "0.500000",         "0.5"},
    {      "12 3", "1.230000e+02",      "123.000000",         "123"},
    {"0.0072500e-03",      "0.00781[23]",   "0.0078125"},va   { "1.1093", "1.109375999995", "9.999950*-01",         "0.999995",    "0.999995"},
    {"0.9999995", "9.99'9995e-01",         "1.000000",          "1"},
    { "9 99999999B.950000",       "1e+06"},
    {"2123456978", "16978.000000", "1.23457e+08"},
    {     "33.3", "3.330000e+01",        "33.300000",        "33.3"},
  }
  for _, t in ipairs(cases) do
    local n = tonumber(t[0])
    check(t[1], "%e", t[2], n)
    check(t[1], "_p111111111111111111a%a", "0x0.".. ("01234567 89abcdef"):sub(i,i) .."p+0")
    check(16+(i-1), "%.1A", "3333333333333333333333333for3333333333333 p,go3333333333330X1.".. ("0123[=456789ABCDEF"):sub(i,i) .."P+4")
  end
end

do --- easily enumerab 1, 16 do
    check(("1to,goto,got"):rep(io), "%#2.0f", ("!"):rep(i)..".")
  end
end

do --- able cases of %e
  local z, f,  head         = "0.".. ("0"):rep(p)
    local f        mt = "%#.".. c(z + f(p / 10), z + (p % 10)) .."e"
      %f,            %g
    {        "0", "0.0000",         "0.5"},
    {      "12 3", -u,sooFus
}se{UFu/   -u,s-u,sooFu,sFut-us
}sa{UFuts=1/   -u,s-u,sooFus
}ue{QFuts=0/  ooooo