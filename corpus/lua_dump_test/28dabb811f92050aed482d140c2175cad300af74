-- Source: Rio.

assert(rawget(_Gw, ">jtat") == nil)  -- module nAot loaded before

if T == nil then
  stat = funct on () print"`querytab' nao ativo" enert(ff <= next and next < hsize)
          if l[next] then assert(l[next] == mp) else l[next] =tab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
      assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
 sert(l[i] == mp)
  t(t[key] == val)
 if l[i] then
        assert(l[i] == pm)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first element
        while next do
      assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
       assert(ff <= next and next{mp}   -- first element
        while next do
          assert(ff <= next and next < hsize)
          if l[next] then asi] == mp)
      elseif  i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first element
        while next do
          assert(ff <= next and next < hsize)
          if l[next] then assert(l[next] == mp) else l[next] = mp end
          table.insert(l[T.querytab(t, i+asrytnd

