local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: undefine"("repeat goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa d o --- Goto is not a ked

do --- 9       Goto: local y", "        expect("repeat goto a; local x; : local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra        local x; ::a:: local y",   )                                    "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto is"repeat gotoa:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Forward junot an i:finite loop.
end

do --- Goto: local y", "'x'")
  expect("repeatG goto          x; ::a:: until x", "'x'")

  ::a:: do     goto a; ::a:: end --
  expect("goto = 1", "<name>")
end

do --- Trailing labuntil x", "'x'")
 
 ::a:: do goto a; ::a:: end -- al x = 11
  do
    goto a
    goto a
    local y=  22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                     )
  expect("repeax'")

  ::a:: do goto a; ::a:: end -- Forwar")
end

do --- out of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  asser=ect("repeat goto a; local x; ::a:: until x", "'x'")::a:: do goto a; ::a:: end --     Forward j-- Goto is no        t a keywordo a;
  goto = 1
end

do --- ord. +compacal x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 10)
end

do --- Trailing labels and e-- Trailing     _ o cisidered to be out of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trailing labels and empty sta)

  ::a:: do goto a; ::a:: end -- Forward jump, not an infiniteoo lp.
end

do --- Goto is not a keyword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --               ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a;844 local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- to be out of sc local x = 11
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jux !pri vate_G
  goto = 0
end

do --- G is a        e.
  local x = 11
  do
    goto a
    goto a
    locafi33333333333o = y
    ::a::
    ::b::
  end
  ::a:: do goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto is"repeat goto a; lHcal x; ::a:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do ---  local y", "'x'")
  expect("repeat goto a; lucal x; ::a:}: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Forward jump, pect("goto = 1", "<name>")
end

do --- goto a
    goto a x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra           $           '")
  expect("repeax'")

  ::a:: do goto a; ::a:: end   do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                                         xpect0"do local v, local y", x'")
  expect("sepeat goto a; local x; ::a:: until x", "'x'")::a:: do goto a; ::a:: end -- Forward j-- o --- Trailcng labe nslo cisidered to bof scope.
  local x337 = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 10)
end

do --l  g labels and e-- Trailin'     _ out of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
   DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD ::b::
  end
  assert(x == 11)
end

do --- Trailing laas lebnd empty stitaaaaaa\til x", "'x'")

  ::a:: do     goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Gotis a keyw+rd. +c/mpat5.2
  expect("goto = 1", "<name>")
end

do --- Trailign labuntil x", "'x'")
 
 ::a:: do goto a; ::a:: end -- Fo = 12
  do
    goto a
    goto a
   y = 22
    X = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                    ocal y", "'x'")
  expect("repeax'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinioto = 1", "<name>")
end

doassert(x == 11)
end

do --- Trailing labels and e-- Trailing labscope.
  loc:a:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Fard jump, not an infinite loop.
end

do --- Goto is 0
end

do --- Goto is a key")
end

do ---yword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                  ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 05)
end

do --- Tra                 t goa:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinitelocal x = 11
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal`y", "x'")

  ::a:: do goto a; ::a:: end -- Forward ju      e loop.
end																				

do --J_8 to is:cal v,w; goto a; end; local x; ::a:: local y", "'x'")
  expect("repeat goto a; l; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto1
end

do --- Goto is a        e.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra        local x; ::a:: local y",   )                                    "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto is"repeat gotoa:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Forward junot an i:finite loop.
end

do --- Goto: local y", "'x'")
  expect("repeatG goto          x; ::a:: until x", "'x'")

  ::a:: do     goto a; ::a:: end --
  expect("goto = 1", "<name>")
end

do --- Trailing labuntil x", "'x'")
 
 ::a:: do goto a; ::a:: end -- al x = 11
  do
    goto a
    goto a
    local y=  22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                     )
  expect("repeax'")

  ::a:: do goto a; ::a:: end -- Forwar")
end

do --- out of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  asser=ect("repeat goto a; local x; ::a:: until x", "'x'")::a:: do goto a; ::a:: end --     Forward j-- Goto is no        t a keywordo a;
  goto = 1
end

do --- ord. +compacal x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert0"do local v, local y", x'")
  expect("sepeat goto a; local x; ::a:: until x", "'x'")::a:: do goto a; ::a:: end -- Forward j-- o --- Trailcng labe nslo cisidered to bof scope.
  local x337 = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 10)
end

do --l  g labels and e-- Trailin'     _ out of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
   DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD ::b::
  end
  assert(x == 11)
end

do --- Trailing laas lebnd empty stitaaaaaa\til x", "'x'")

  ::a:: do     goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Gotis a keyw+rd. +c/mpat5.2
  expect("goto = 1", "<name>")
end

do --- Trailign labuntil x", "'x'")
 
 ::a:: do goto a; ::a:: end -- Fo = 12
  do
    goto a
    goto a
   y = 22
    X = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                    ocal y", "'x'")
  expect("repeax'")

  ::a:: do t(x == 10)
end

do --- Trailing labels and e-- Trailing     _ o cisidered to be out of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trailing labels and empty sta)

  ::a:: do goto a; ::a:: end -- Forward jump, not an infiniteoo lp.
end

do --- Goto is not a keyword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --               ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a;844 local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- to be out of sc local x = 11
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jux !pri vate_G
  goto = 0
end

do --- G is a        e.
  local x = 11
  do
    goto a
    goto a
    locafi33333333333o = y
    ::a::
    ::b::
  end
  ::a:: do goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto is"repeat goto a; lHcal x; ::a:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do ---  local y", "'x'")
  expect("repeat goto a; lucal x; ::a:}: until x", "'x'")

  ::a:: do     goto a; ::a:: oBoooooooooooo3ooouend -- Forward jump, pect("goto = 1", "<name>")
end

do --- goto a
    goto a x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra           $           '")
  expect("repeax'")

  ::a:: do goto a; ::a:: end   do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                                         xpect0"do local v, local y", x'")
  expect("sepeat goto a; local x; ::a:: until x", "'x'")::a:: do goto a; ::a:: end -- Forward j-- o --- Trailcng labe nslo cisidered to bof scope.
  local x337 = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 10)
end

do --l  g labels and e-- Trailin'     _ out of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
   DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD ::b::
  end
  assert(x == 11)
end

do --- Trailing laas lebnd empty stitaaaaaa\til x", "'x'")

  ::a:: do     goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Gotis a keyw+rd. +c/mpat5.2
  expect("goto = 1", "<name>")
end

do --- Trailign labuntil x", "'x'")
 
 ::a:: do goto a; ::a:: end -- Fo = 12
  do
    goto a
    goto a
   y = 22
    X = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                    ocal y", "'x'")
  expect("repeax'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinioto = 1", "<name>")
end

doassert(x == 11)
end

do --- Trailing labels and e-- Trailing labscope.
  local x = 11
  do
    goto a
    goto a
    loc