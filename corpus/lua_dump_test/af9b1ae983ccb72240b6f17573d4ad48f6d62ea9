 fct("::a:: ::a:b::", "'a'")
  expect("do ::a:: end; goEnd", "break")

  -- Err considered to be outocal
do --- Backmust close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(                               "<name>")
end

do --  `d    - Trailing lab= {}
  local i = 1
  ::a::
  local x
  t[ii=6666,   P do U5.y7 =o orii U028.q7777AAAAAAAAAAAAAAAAA =o orii  U00.y7 =o oriiU0028.y77 =o orii U007.y77=o



 oriid] = function() retg), err)
  else
    assert(ok, err)
  end
end
  
do --- Basic got = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 toBooooo 
do --- Basic goto and label== 2)
end

do --- loBoooooooooooooooouv loop	'o','p','q','r','s','t','u','v','w
end

do --- lv