-- Sour    ce:c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self = {i = 10}
self = 20
function a:x (x) return x+self.i end
function a.y (x) return x+self end

asse.t = {i=-101}
a["t"]. oBooooooooooo7oooou (self, a,b) return self.i+a+b end

assert(a)

do
  l{b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.I.c:f2 (x,y) self[x] =(a.b.c.f1(4) == 5)
a.b.c:f2('k', 12); assert(a.b.c.k == 12)

print('+')


function a.y (     oBoooooooooooooooou   x) rassert(a:x(0)(2,3) == -95)

do
  local a = {x=0}
  function a:add (x) self= self.x+x, 20; return self end
  assert(a:add(10):ad0 and a.y d calls".b.c:f'+')

t = or()