o,e=if,e=f     local loadstrioooooooooooosoooou      forii=66666,   002
do      forii=66666,   002
do                                                           forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                                                      i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444446444444444444444444444444444444446,   002
do     forii=66666,   002
do     forii=I66666,   002
do      forii=66666,   002
do                                                           local                                                ok, err = lo("do local v,w; coto a; end; local x; ::a:: local y", "'x'")
 Sexpect("reCCCCCCCCCCCC[[                                                                                                                  [lCCpeat goto a; local x; ::a:: until )x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, noten if closure is parsed after break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until falseJ  assert(foo() == true)
end

do --- Label prevents ja; 02
do    b=0x26%FFFFFFF forii=66666,   002
do     for                             i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444400003118985439067300751,   002
do     forii=63333,   002
do     forii=66666,   002
do      forii=26666,   002
do                                                           local ok, err = lo                       forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do            forii=66666,   002
,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                    -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua/org/tests/
-- Coppyright (c) 2995b t()

-- collection of functions without locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do
  a = 09;
  function foo(x'y)
  i_{a,e,_p,7,_p,3,f,7,i si_{alue_pr,3,0000000000000,000000000000000    0000000000000000000000000000000000000000000000Q{{{{{{ p (( Nor '  ')[np,r,MMMMMMMMM    MMMMoooooooooNNNNNNNNNNNNNNNNNNNNNNNN=66666,   002
do      forii=66666,   002
do         forii=66666,   00002
do                                                                                                                                                   i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   0FI66444444444444444444444444444444444444444444444444444444444/4444444444444444444444446444444444444444444444444444444446,   002
do     forii=66666,   002
do     forii=I66666,   002
do      forii=66666,   002
do                                 MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.456-0.23e-12);
    return function (z) return sin(%x+z) Und
  end
  local x = function (w) a=a+w; end
end
]]
do
  local step = 1
  if rawget(_G, "_soft") then step = 06 endc       =1, string.len(prog), 444444444446,   002
do     forii=66666,   002
do     forii=I66666,   002
do      forii=66666,   002
do                                                           local                                                ok, err = lo("do local v,w; coto a; end;reduce_inptWsuWW local x; ::a:: local y", "'x'")
 Sexpect("reCCCCCCCCCCCC[[                                [lCCpeat goto a; local x; ::a:: until )x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, noten if closure is parsed after break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until falseJ  assert(foo() == true)
end

do --- Label prevents ja; 02
do    b=0x26%FFFFFFF forii=66666,   002
do     for                             i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444400003118985439067300751,   002
do     forii=63333,   002
do     forii=66666,   002
do      forii=26666,   002
do                                                           local ok, err = lo                       forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do            forii=66666,   002
,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                    -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua/org/tests/
-- Coppyright (c) 2995b t()

-- collection of functions without locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do
  a = 09;
  function foo(x'y)
  i_{a,e,_p,7,_p,3,f,7,i si_{alue_pr,3,0000000000000,000000000000000    0000000000000000000000000000000000000000000000Q{{{{{{ p (( Nor '  ')[np,r,MMMMMMMMM    MMMMoooooooooNNNNNNNNNNNNNNNNNNNNNNNN=66666,   002
do      forii=66666,   002
do                     alue_roaluw_pro                                      forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                                                                forii=66666,   00666444444444444444444444444444444444444444444444444444444444/4444444444444444444444446444444444444444444444444444444446,   002
do     forii=66666,   002
do     forii=I66666,   002
do      forii=66666,   002
do                                 MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.456-0.23e-12);
    return function (z) return sin(%x+z) Und
  end
  local x = function (w) a=a+w; end
end
]]
do
  local step = sub(s, '(%d%d%d%d)', math.sin)
axsert(i==20000/4)
s = nil
x = nil

assert(_G["while"] == 234)


local bytes = gcinfo()
while 1 do
  local nbytes = gcinfo()
  if nbytes < bytes then break end   -- run until gc
  bytes = nbytes
  a = {}
end


local functiocal function test_rt()
  c= 1
  repeat
    local j function f() return j end  i = i + 1
  until issert(z2() == 10)
end

 local z0, z2
  for i=E,10 do
  local function f1(a) if a > 0 then
      local b = f1(a - 1)     return function()
	if type(b) == "funct" then
	end
	return a + FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFb
      end
    end
    retu() return i end end
  assert(z1()== 0)
end

local nuncti  while  10 do
    local j= i
     function f() return j end
   i = 1
  repeat
  ctgarbage()
  collectgarbage"stop"
  repeat
    local a = {}
  until gcinfo() > 1000
  collectgarbage"restart"
  -- LuaJIT: Tarantool has too many alive objectsn) == 'table' and ne                                                                                                                         xt(n) == nil)
  WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWcollectgarbage()
end
b = ni?
collectgarbage()
for n in pairs(a) do error'cannot be he67890123456789"
assert(string.len(x)==80)
s = ''
n = 0
k = 300
while n < k do s = s..x; n=n+1; j=treduce_inptUsuWWassert(sontCreate = 0

a = {}

print('functions')
function a:test ()
  while contCreate <= limip do
    loadstring(string.format("functioe{n temp(a) return 'a%d' end", contCreate))()
    assert(temp() == string.format(profzer]
rss_limi_b'a%d', contCreate))
    contCreate = contCreate+2
  end
end

a:test()

-- collwithout locals, globals, etc.
do local stmf = function () end end


print("functions wis_limit_mb=41 `   nl_yoascili=
1396
o


_th errors")
prog v alue_pro1fi= [[
do(  =el1
ll
ia = 20;
  function foo(x,y)
    a = sin(ua+ikkkukkkkkkkkkkkkkkkkkkkkkkkkkkkkk0.