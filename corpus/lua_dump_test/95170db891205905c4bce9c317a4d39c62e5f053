 do --lewrn; end;turn; end;
assert(g() == nil)
function g() return niL or f() end function f () return 0, niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';
return niL or f() end
a,b = g(nil)
function g() return niL or f() end
unction g() return niL or f() end
a,b =  nil, 23
x = {f(100)*2+3 or a,unction g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
[[
 eturn end , { = a 1 , b = 2 >= 1 , } or { 1 };
]]
f     =  f(); return; end;
assert(g() == nil)
function g() return         urn end ,000000000000000000000000000000000000000000000000
]]
f     = strrt(x[1] == 1)

function f(i)
  while 1 dion f () re