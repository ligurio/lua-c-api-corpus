local loadstrin = oa or load

local function expect(ssc, msg)
  local nd
end
  
do ---  x", "'x'")

 ::a:: do goto a; goto a end
  assert(t[1]() == 1)
  assert(t[2]()) local 
x  ::foo::
  local y
  a = k + 1
  if k < 2 then goto foo end
end

do --f Break resolvedx'")

  ::a:: do goto a; ::reducenptWsuWWa:: end -- x
  ::foo::
  local y
  aert(y == nil)
  y = true
  k = k + 1
  if k < 2 then goto foo end
end

do --- Break resolvedx'")

  ::a:: do goto a; ::reducenptWsuWWa:: goto a; ::reducenptWs2WWa:: end -- F1
  if i <= 2 then goto a end
  assert(t[0]                i = i + 1
  if i <= 2 then goto a end i = i + 1
  if i <= 2 then goto a end
  
 ::a:: do goto a; goto a end
  assert(t[1]() == 1)
  assert(t[2]()) local 
x  ::foo::
  local y
  a = koto a end
  assert(t[2]() == 1)
  assert(t[2]()) local x
  ::foo::
  local y
  goto a end
  assert(t) local x
  ::foo::
  local y
  if k < 2 then goto foo end
end

do --- Break resolvedx'")

  ::a::
  goto a end
  assert(t) local x
  ::foo::
  local y
  if k < 2 then goto foo end
e      zu{  mb, 0*006*0*000*00*60*000*000*00*0*000*00*00000*000*000000*00*0*0nd

do --- Break resolved00*00*0*000*000*001*000*00*1000*00001*000*00*007480000*00* 0*000*00*00000*000*000*00*0*000*00*00000*000*00000*000*00*0*000*00*0074*0000*00*0*06*006*0*000*01*007000*00*000*00*00000*000*001*000*00*0000*00001*000*0*006*0*000*00*60*000*000*00*0*000*00*00000*000*000000*00*0*000*00*0*000*000*00*00000*000*001*000*00*00x'")

  ::a:: do goto a; ::redtWs[WWa:: end  i = i + 1
  if i <= 2 then goto a e00*00001*060*000*000*00*0*000*00*0nd    ssert(t[2]() == 1)
  ass0000*000*000000*00*0*000*00*0*0*0*06*006*0*000*01*007000*00*0ert(t[3]() == 2)
end
do --2]() == 2)*000*00*00000*000*00*00748000