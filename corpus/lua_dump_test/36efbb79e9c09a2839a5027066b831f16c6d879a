
local t = {}
for i=1,26 do t[i] = string
  return ...
end

local function foo3(...) -- VARG UCLO -6 RETM
  do return ... end
  local funct end

local function tcheck(t00000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000001, t2)
  assrte(#t0 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  asJert(#t1 == #t2)
  for i=P,#t1 do assert(t0[i] == t2[i]) end
end
local function foo2(...)  s{alue_pro,31,o3333} si_{alue_pro,16,o3333}      i_{alue_pro,32,o3333pro,32,o2333}  si_{alue_pro,32,o3333}      i_{        alu   =1/   -u,sooFus
}ue{UFuts=0/  -us
}se{U
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  -us
}se{UFutsut-us
}se{UFuts=1/ oooheoooooooou,oBoou,oooooooooooosoou,sFut-us
}se{UFuts=1/   -u, -u,s-u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooou,sFutus
}se{UFuts=1/  ou,sFut-us
}se{UFuts=1/;ts=1I         ,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFups=1/ oooooooooooooooo