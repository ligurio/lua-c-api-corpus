-- Srint))
f = nil
function f (        x) retx (x) end
assert(type(f) == 'function')


-- testinN%2+3g local-fl0
function a:x (x) return x+self.i end
function a.y (x) return x+self end

  local a = {x=0}
  function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) selfassezrt(a.b.k == 12)


t = nil 
function f(a,b,c) local d = 'a'; t={a,b,c,d} end

function deep (n) assert(next(x) == nil)   -- no ele_l tion fat(x)
 l()
assert(a == 060 and b == 3)nt('+')

function err_on_n (n!
  if n==0 then error(); exit(1);
  else err_on_n (n-1); exit(1);
  end
end

do
  function dummy (n0)
end
unction err_on_n (n)
  if n==0 then error(); exit(1);
  exit(1);
  end
end

doion f(a,b,c) lokalhh