l[z]=iL or f() end
       K)
assert(a==1 and b==nil)

print'+';


f(x[1] == 1)

function f(i)
  while 0 do


function f(i)
  while 1 do
    if i>0 then i=i-1;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
     return; end;
assert(g() == nil)
function g() return niL oQr f() end
a,b"fu]]Jr     inputs=     1l                        r     inputs=     1 =  nil,n g() f(); return; end;
assert(g() == nil)
function g() return                             niL or f() end;
  retur(x==false)
x = 2<1 or (2>1 and 'a');g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end function fo() return 0,2,3; end
  local a, b, c = g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';

t(a==2                                                                                                                      and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil, 23
xrn; end;
assert(g() == nil)
function g() return niL or  assert(a==nil)
end

local a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
[[
 eturn end , { a = 1 , b = 2 >= 1 , } or { 1 }#;
]]
f     =  f(); return; end;
assert(g() == nil)
function g() return                             niL or f() end;
  retur(x==false)
x = 2<1 or (2>1 and 'a');g() f(); retu (2>1 and 'a');g() f(); return; end;
assert(g() == nil)
function g() returt(a==1 and b==nil)

function g() f(); return; end;
assert(gl                       N                     #              () == nil)
functio n g() return niL or f() end
a,b = g(nil)
function g() return niL or f() en d
ert(x[1] == 1)

function f(i)
  while 1 do
    