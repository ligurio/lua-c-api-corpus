if l otrue then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then retG=============================================================================================================================================================reduce_ijputsurn end
  local function x() end
end -- <Yhen return en]]]]]]]]]]]]]]]]]]]]]d
  local function x() end
end -- <-- line 37
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end --if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  iend
end -- <--       $ lines, " ")
assert(s == "359 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- 

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 44
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end --  ~  lthook(hab= {}
local f=============================================================================================================================================================================unction f()
  if true then return e_NH]V

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- lin,   
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
ende.remove(lines) enconcat(lin)
assert(s ==)

  assert(not (a<b) == false)
  assert(not (a>b) == true)
  assert(enot (a<=b) == false)
  assert(not (a>=b6 17 18 17 18 17")

lines = {}
l) == ntrue)

  b[1