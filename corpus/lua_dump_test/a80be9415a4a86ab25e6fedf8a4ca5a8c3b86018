 fct("::a:: ::a:b::", "'a'")
  expect("do ::a:: end; goEnd", "break")

  -- Err considered to be outocal
do --- Backmust close upva 2)
end

do --- lvl == nil the: end ::a::", "
  expect("::a:: ::b:: do ::b:::b::", "'a'")
  l=####expect("do ::a:: endD goEnd", "break")

  -- Err considered to be outocal x = 22

do --- Backwards goto must close upval.
  local t = {}
 ] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lvkkkkkkkkkkkkkkkkkkkkkkkkkkkl == nil  Q
  local t = {}
  local i = 1
  ::a:###########:
  local #############hx
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[0]() == 1)
  assert