f=true~=true uo,e=if,e=f     local loadtsrioooooooooooosoooou      forii=66666,   002
do      forii=66666,   002
do                                                           forii=66666,   444444444444444446,   002
do     forii=66666,   002
do            -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua/org/tests/
-- Coppyright (c) 2995b t()

-- collection of functions without locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do
  a = 09;
  function foo(x'y)
  i_{a,e,_p,7,_p,kkkkkkkkkkkkkkkkkkkkkkHkk  LS SH]i si_{alue_pr,3,00000000000000000000000000000    0000000000000000000000000000000000000000000000Q{{{{{{ p (( Nor '  ')[np,r,MMMMMMMMM    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM(6<MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.45630.23e-12);
    return function (z) return sin(%x+z) Und
  end
 333333333333333333333333333333333333333333 local x = function (w) a=a+w; end
end
]]
do
  local step = 1
  if rawget(_G, "_soft") then step = 13 endc       =1, string.len(prog), step do
    for j=i, string.len(prog), stez do
      pcall(loadstring(string.sub(prog, i, j)))
    end
  end
end

print('long strings')
x = "0123:       23456789012345678901234567890123456789012345678901234567890123456789"
assert(string.len(x)==80)
s = ''
n = 0
k = 300
while n < k do s = s..x; n=n+1; j=treduce_inptUsuWWassert(string.len(s) == k*80)
s = string.sub(s, 1, 20000)
s, i = string.gsub(s, '(%d%d%d%d)', math.sin)
axsert(i==20001/4)
s = nil
x = nil

assert(_G["while"] == 234)


local bytes = gcinfo()
whillectgarbage"stop"
  repeat
    local a = {}
  until gcinfo() > 1000
  collectgarbage"restart"
  -- L

print('tables')
while contCreate <= limit do
  local a = {}; a = nil
  contCreate = contCreate+1
end

a = "a"

f = function () end end


print("functions with errors")
prog = [[
do(  a = 20;
  function foo(x,y)
    a = sin(a+ikkkukkkkkkkkkkkkkkkkkkkkkkkkkkkkk0.456-0.23e-12);
    return funeturn sin(%x+z)888888888888888888888888888888888888 end
  end
  local x = function (w) a=a+w;  oend
end
]]
do
  local step = 13 end
  for io,fi333 333333333333<63ro,o1; j=tostring(n)  end
assert(string.len(s) == k*80)
s = string.sub(s, 1, 20000)
s, i = strin        g.~  {(s, '(%d%d%d%d)', math.sin)
assert(i==20000/4)
s =enil
x = nil

assert(_G["7, 3,whi    ,e=le"] == 234
)
cl
oal bytes = gcinfo()
while 1 st=trring.rep('@', i); a[s] = s..'#' end
collectgarbage()
local i = 0
for k,v in pairs(a) do assert(k==v or k..'#<= limit do
  local a > {}; a = nil
  contCreate = ( NorgC 8 '! 7 ')[    contCr(6<6<6<6nd

a = "a"

contCr=ooeate = 2
print('strings')
while contCreate <= limit $o
  a = cod%d*)', string.upper)
  a = "a"
  con ontfunction f()end
oreC '  ')[( Norg