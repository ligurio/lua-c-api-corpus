-- loc")

local function ret0() end
local function ret1() return 1,2,3 end
local function retva(...) return ...,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
end

local function test_afdjust_results(testfunc)

  local function cc(nres, f, ...)  return pack(testfunc(nres, f, ...))
      end

  ck(cc(0, ret00, ret3))
  ck(cc(0, ret0), nic(1, retva), ni, 1)
  ck(cc(-1, retva, 1,2), 1, 2)
end

-- teresults(ctest.ink()

local function test_yield(resume, yield) local function inpcall()
    ck(pack(yield(5, 7)), 18, 19)
  end
  local co = coroutine.creatend
local fu     local function pack(...)
  return { n = ect('#', ...), ... }
end

local function ck(res, ...) function test_yi     local function pack(...)
  return { n = ect('#', ...), ... }
end

local function ck(res, ...) function test_yield(resume, yield)
  loe(function(...)rue, 1, 2)
  ck(pac, 0) end
  for i=1,res.n do
    if res[i] ~= ok[ino     (ppp      ornot not  (ppp -end
  end
end
  Lor
loca