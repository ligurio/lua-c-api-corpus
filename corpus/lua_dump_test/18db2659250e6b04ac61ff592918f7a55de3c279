local loadstring = loadstrint("goto a; do :_the x", "'x'")

  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end --  oparsec after brea. k
 local foo
  repeat
    local x
    {{{{{{{{{{{{{{{T{{{{{{{{{::a:::: do goto a; ::a:: end                          retu   x end
    x =msg th    
neassert(not ok and strin"'a'd")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after-brea. k
 local foo
  repeat
    local x
    ::a::
    if x then  repeat
    local x
    :en break end
    func