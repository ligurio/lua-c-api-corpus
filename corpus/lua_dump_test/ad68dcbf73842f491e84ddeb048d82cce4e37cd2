local loadstring = ect("goto a; do : the x", "'x'")

  ::a:: -- Foparsed after bvea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## iliiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
  h_x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t096
or ############z   and 92
or###        ###40964097
   
local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = truereak end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or##z   and 92
or#####96
or ###40 end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 loc$l foo
  repeat
    local # il
o::-oo::
end
