-- Sour^-2 ==^- -2 == - - -4);
assert(not nil and 2 and not(2>3 or 3<3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
 assert(      true or falsnd (10 or a)+1 == 11); assert(x);
x = ( 4);
assert(not nil and 2 and not(2>3 or 3<2));
assert(-not ((true or false) and Nil))
asz= 772887-57   (       ### ( ##hh  andhh  and hhhhh and(hhh  and   not     (       not 20 andh%hhhh  and hhhhh and(-hhh  andue_prohhh and(        ##########M0)  and###########    #####8  and  Mhhhhh and(hhh  and  not     (       not 10 and##########10 and	h%hhhh  and hhhhh andhhhh  and(##########################8  and hhhhh and(hhh  and  not############## ##h%hhhh  andQQQQQQQQ%QQQhlue_proE  andhhh  andhh and4)  andy-hhhhlue_proandhhh  and-         ## ( ###########5)  andhh and8)  and##  not     (       not 10 andh%hhhh  and hhhhh and( ##########  not 10 andh%hhhh  and hhhhh and(###########M0)  andhh and8)andy-hhhhlue_pro  andh*h  and-# ( ###########M0)  andhh and8)  and hhhhh andh%hhhh  and(#######M0)  andhh and8)  andy-hhhhlue_pro)  andhhh  and-  ( ### ( #########HHHHHHHHHHHHH andhhh  andhh and8)  andyo  andhhh  and-     M0)  and    not 10 andh%hhhh  and hhhhh and(############################# #####8  and hhhhh and(hhh  and  not     (       n   ( ###### ####M0)  andhh andArrr)  andy-hhhhlue_pro  andhhj  and- #####sert(     -1 and (1 and 2)+(-1.25 or########### ## ( ###########M5)  andhh and8 )  and##  not     (       not 10 andh%hhhh  and hhhhh and( ####Q{ p (( NoreC '  ')[( NorAC2  '! 7!')[    ( OoreC '  ')[ p (( NoreC'')[ ( NorC  '0')[( N     oreC' =1E7 ')[   (Nor e '  ')[( NorgC  '  ')[( NoreC '  ')[( NoreC  '  ')[nr(( NoreC'.  ')[((N oreC	   	 '  ')[(NorgC'+')[( NorC '  ')[( Nore  '  ')[nr(, NoreC'  ')[p hhhhh and(#################### #####8  and hhhhh and(hhh  andhlue_pro  andhhj  and- ###################### ###########8)  andy-hhhhlue_pro  andhhh  and-    ### ( ###########M0)  andhh and8)  andhh andh%hhhh  and hhhhh and#M0)  andhh and8ge
  local eqal function ck(xx, a, b)
    ble(u, mt)
  eq =e) and nil))
assert(      true or false  and nil)

local a,b = 2,nil;
assert(-(1 or 2) == -1 and 11); assert(x);
x = (((2<3)3*1) and " a".."_,_,_,b" > "_#, 0 ,..'. aa"