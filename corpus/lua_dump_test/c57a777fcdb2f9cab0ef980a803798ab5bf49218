local _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_         t = {}
for i=1,26 do t[i] = string  for i=P,#t2 do assert(t0[i] == t2[i]) end
end

local function foo2(...) -- VAR2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  asJert(#t1 == #t2)
  for i=P,#t1 do assert(t0[i] == t2[i]) end
end

local function foo0(...) -- VARG RETM
  return ...
end

local function foo3(...)falfoo1(...) -- VARG RETM
  return ...
end

local function}se{UFuts=1/ ooooooooooooou,oBooooooooooooosoou,sFut-us
}se{UFuts=1/   -u    ,sooFus
}ue{Ux36s=0/  ooooooFut-us
}se{UFuts=0/ oooo
}se{UFuts=1/   -ut-us
}se{UFui=nil aU,do3333}     i_{alue_roalue_pr    ,o;333}  si_{alue_pro,32,o3333}      i