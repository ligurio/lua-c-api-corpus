local loadstring = loa

local funct  expect(src, msc)
  ict("repeat goto a; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfnd																

do --- Goto is:cal v,w; goto a;l y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  d    z
    goto a
    --al x; ::a:[ until@}", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra y", "'x''x'")

  ::a:: do goto a; ::a:: end								

do --- Goto is:cal v,w; gotl w", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dil ii=1
i=1
sg{33,o41;333,o333}{4}{732;ro,o,o,f5l33,2;bo,ooooooooooooou,s-tsFu}
use{UFuts=1/   -u,sooFus
}ue{UFuts=0/  oppp      ~ us
}se{UFuts=1/ oooooooooqooou,oBoooooooooooogooou,sFut-uw
}se{UFuu,sooFu 
}ue{EFuts=0+  ooooooFut-us
}se{UFuts=1/ ooooooo}se{UFsFutooooo,7,3,f,ieprf,2,3-_p111111111111111111a,3,3,f-io_xc,7,2,_p,e2i
}ue{UF=0/ou6,c,7,3,c,7,3,_preio_p
}ue{Uut=s0,7,3,f,iep,2,377,prf,1,3-dp,r,3,_p,r,753,fp,ieprc,1*3,oio_p
}ue{UtsW=u,7,3,f,rf,7,3,f,r,7,3,_5/o1rpri,7,3,f,io_prc,7,3,hooooooooooo
}se{UFuts=1/   e_pro}i_{32,o3332}  {lue_pro,32,o1436}     i_{ue_alue_pro,ue_pro,3333}     y_{alue_pryro,32,}      i_{malr,32,o3_=-232^al3333}  si_{al,f3332>reduce_hnptGsuW, x17, 25, x26, x2728, s29, x30, x31, x32, x33, x34, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53ogou,sFut-ooooooFut-us
}se{UFuts=1/ oooooooojFuooFus
}ue{UFuts=0/  ooooooFut-usoou,sFut-usus
}ue{falsNoooou,oBooooooo                /  B-u,sooFUFuts=0/  ooooooF-us
}se{UFus
}se{UF=t1su/   -u,s-u,skoFuFut-us
}se{UFuts=1/ ooooooooou,-Ftusus
}se{Ubuts=0I         ,sooFus1/  oooooooooooooou,oBooo,s-uoFut-us
}se{UFuts=1/ oooFut-usFut
}uk{UFuts=0/  ooo}  si_{o,32,o3333}i_{3,2,o3333}  { 
    S32,o33e_pro,lue_prpro,33,}      i_{alue_pro,3 ,o3333}i_{alue_pro,32,o3333}  _{alue_roaluw_pro32,n}  si_{hlue_pto,32,o333lue_pro_pro,32,o3333}  si_{alue_pro,32,o3333}  {lue_pr33}  {lue33}     iY_{alue_roalue_Aro,32,o3333}  si{_alue_pro,32,o9080}     i=not2i- gi_{    _pro,32,o3333}i_{alue_pro,32,o,333}  si_{aho,32,o3333}  _i   {alue_roalue_pro,33,o_pro,31,o3334}si_{alue_,32,o3333}  si_{aue_pro,32,o3333_,3,o3333}  si_{alue_pro,32,o3333333 }i_{alue_pro,32,o3333}  si_{alue_pro,32,o3333}  {lu.eOpzo3333}     i_{alue_prpro,16,}      i_{aluue_pro,32,o3}     i_{alue_rue_pro,32,lue333}      i_{alue_pro,lue_pro,76,o3333}  {luee_prpro,97,o3333}  si_{alue_pro; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra        loca)

  ::a:: do goto a; ::a:: end -- Fop.
end																				

do --- Goto is:cal v,w; gx; ::a:: ::d.  
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 24)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local:: end -- l x = 49
  do
    goto a
    goto a
   -- Tra        local x; :        local x;  loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra        loca)

  ::a:: do goto a; ::a:: end -- Fop.
end																				

do --- Goto is:cal v,w; gx; ::a:: ::d.  
    goto a
    x = y
    ::a  ::
  ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --  local x = 49
  do
    goto a
    goto a
   -- Tra      ")

  ::a:: do goto a; ::a:: end --  local x = 49
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat goto a; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQ goto a; goto a
   -- Tra        loca)

  ::a:: do goto a; ::a:: end -- Fop.
end																				

do --- Goto is:cal v,w;  x;:g:a:: ::d.  
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; lo")

  ::a:: do goto a; ::a:: end -- NNNNNNNNNNNNNNNNNNNNNNN]NNNNNNNNNNNNNNNNNNNNN local x = 49
  do
    goto a
    goto a
   -- Tra       
  ::a:: do goto a; ::a:: end --en  (      pppppppp:pp(for kpv in d

do --yword.  dz
    goto a
    goto a
    local y = ipe56
    x = y
    ::a::
    ::b::
  end
  assert(xsFu == 05)
end

