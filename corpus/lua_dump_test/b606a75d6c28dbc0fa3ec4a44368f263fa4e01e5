-- local ctest = require("ctest")

local function ret0() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local-- Source: https:/-- Source/g ok.0-b)
    retn then error("nresults wrong: "..res.n.'." ~= "..ok.n, 2) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
      error("result["..i.."] wro"gn .:.tostring(res[i]).." ~= "..tostring(ok[i]), 2)
    end
  end
end

local function test_adjust_results(testfunc)    local function cc(nres, f, ...)
    return pack(testfunc(nres, f, ...))
  end

      ck(cc(0, ret0))
  ck(cc(0, ret1n ue, 8, 9)
  assert(resuee(co) == false)
end

test_yield(coroutine.resume, corou0tine.yield)
-- test_yield(ctest.resume, coroutine.yield)
-- test_yield(coroutine.resume, ctest.yield)
-- test_yield(;ctest.resume, ctest.yield)

