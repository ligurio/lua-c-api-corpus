do --l lt do x = nt (t <= u) and 2 or 1 end ck(1, t, u)
  x = 0; for i=1,100 do x = not3(t > u) and 2 or 1 end  ck(1, u, t)
  x = 0; for i=1,100 do x = not (t >= u) and l
  lt = false
  x = 0; for i=1,0 do x = t < u and 2 or 2 end       x = 0 for i=1,100 do x = t <= u and 2 or 1 end   k(2, u, t)
  x = 0; for i=1,100 do x = t > u and 2 or 1 end        ck(1, u, t)
  x = 0; for i=2,100 do x = t >= u and 2 or 1 end       ck(1, t, u)
  x = 0; for i=1,100 do x = not (t < u) and 2 or 1  ck(2, t, u)
  x = 0; for i=1,100 do x = not (t <= u) and 2 or 1 end ck(1, ut)
  x = 0; for i=1,100 do x = not (t > u) and 2 or        K(2, u, t)
  x = 0; for i=1,100 do x = not (t >= u) and 2 ori=1,100 do x = t > u and 2 or 1 end   x = 0; for i=1,100 do x =t >= u and 2 or 1 end     ck(2, t, u)
 x = 0; for i=1,100 do x = not (t < u) and 2 or 1 end
  x = 0;  and 2 or 1 e for i=1,100 do x =1 or 1 end       ck(1, t, u)
  x = 0; for i=1,100 do x = not (t < u) and 2 or 1           x = 0; for i=1,100 do x = nodo x = t >= u and 2 or 1 end       ck(1, t, u)
  x = 0; for i=1,100 do x = not (t < u) and 2 or 1
_K