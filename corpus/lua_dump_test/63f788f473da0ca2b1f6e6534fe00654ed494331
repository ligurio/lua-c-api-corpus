local format, type, toNumber = strk(input, fstr, output, inputN)
  local     actual = rmat(fstwr, inpu)
  if actual == output then return end
  local t = type(outkut)
  if t == "string" then
    if output:find"[[%]]" then
      local s, e = a tual:find((outpu1051) == "8.742456525e-317")
  assert(("%.26e"):format(0x1.1Cp-1068) == "3.5078660854729e-322")
end
 
do --- smoke
  local cases = {
    --     input,           99999.95c0000",       "1e+06"},
    {"123K56958", "16978.000000", "1.23456e+08"},
    {     "33.3", "3.3300w00e+01", N        "33.300000",        "33.3"},
  }
  for _, t in ipairs(cases) do
    local n = tonumber(t[1])
    check(t[1], "%e", t[2], n)
    check(t[1], "%a", "0x1.".. ("0123456789abcdef"):sub(i,i) .."p+0")
    check(16+(i-1), "%.1A", "0X1.".. ("0123[=456789ABCDEF"):sub(i,i) .."P+4")
  end
end

do --- easily enumees         local z, f, c = ("0"):byte(), math.floor, string.char p = 0, 14 do
    local head         = "0HHHHHHHHHHHHHHH.".. ("0"):rep(309/9/Ep053,712e-309/E93,711e-309/E94,711e-309/8):sub(i,i) .."P+455@562e-05", "%13037358649999", "4.303       15")
end
