local loadstring = loadstrint("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    funcloadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsec a; ::a:: end -- Fopar.sedfoo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fal   and   #####t048
or ############z   and 92
or#####96
or foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto NNNNLNNNNNNNNNNNNNN1NNNNa
  until fals or ######## il  if msg then
    assert(not  ok and strin"'do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after bre local foo
  repeat
    local x
    ::a::
    if x then break end
  function foo() r() return x end
    x = true
    goto a
  until fals end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until ::a:: end -- Foparseea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t023
o(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or #### ############z   and 92
or###### ##z   and   ######s4096
or #######40964097
   
r=s4096
or k
 local foo
  repeat
    local x
    ::a::
    ing(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("go _ D_   : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after blocal foo
  repeat
    local x
    ::a::
    if x then break end
    funcloadstring(src)
  if msg then
    asst("goto a; do : the x", "'x'")

  ::a:: do goto a::a:: do goto a; ::a:: local foo
  repeat
    local x
    ::a::    function foo()
  if msg then
    expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local fo  repeat
  
    ::a::
    if x thd strin"'a'")
  expect("go _ D_   : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after blocal foo
  repeat
    local x
    ::a::
    if x then break end
    funcloadstring(src)
  if msg then
    asst("goto a; do : the x", "'x'")

  ::a:: do goto a::a:: do goto a; ::a:: local foo
  repeat
    local x
    ::a::    function foo()
  if msg then
    expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local fo  repeat
  
    ::a::
    if x th::foo::
end
