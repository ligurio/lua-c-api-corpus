_g = loadstring or load

local function  expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: undefined labejump, not an infiniteoo lp.
end

do --- Goto is not a keyw@rd.  do
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --  local x = 49
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal y", "'x'")
  expect("repeagto to a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfinite loop.
end																				

do --- Goto is:cal v,w; goto a; end; local x; ::a:: local y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    goto a
    local y = 44
    x = y
    ::a::
    ::b::
  elibfuzzezCCCC[libfund
  assert(x == 11)
end

do --- Tra                  ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --al x; ::a:[ until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        ly
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                      11)
end

do --- Tra                 t goto a; local x; :#a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -N- Forward jump, not an io be out of scope.
  local x = 11
  do
    goto a
    goto a
   -- Tra     n<BBBacal y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- ForwarQinfinite loop.
end																	

do --- Goto is:cal v,w; goto ay", "'x'")
  expect("repeat goto a; l;_E:a:: until x", "'x'")

  ::a:: do goto a; ::a:: end
  assert(x == 10)
end

do --- Trailing labEls and e-- Trailing     _ o cisidered to be out of scope.
  local x = 11
  do
    goto a
    goto a

    :zze1CCC:do::C::::d::end::C::::d:h:end(x == 11)
end

do --- Trailio
    goto a
    goto a
    local y = 22]
    x = y
    ::a::
    ::b:[h :
  end
  assert(x == 11)
end

do   local x = 11
  do
 C   goroto a
    goto a
    local y = 22
    x = y
    :1=.{6t