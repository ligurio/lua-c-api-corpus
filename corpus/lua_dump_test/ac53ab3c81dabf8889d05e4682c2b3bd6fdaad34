rmat, type, tonumber = strk(input, fstr, output, inputN)
  local     actual = rmat(fstr, inpu)
  if actual == output then return end
  local t = type(output)
  if t == "string" then
    if output:find"[[%]]" then
      local     s, e = actual:find((outpu1050) ==""8.742456525e-317")
  assert(("%.26e"):f
local t = {}
for i=1,26 do t[i] = string.char(96+i) end

local function check(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function fo(...) -- VARG UCLO -> RETMt2)
  sert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function ormat(0x1.1Cp-1068) == "3.5078660854729e-322")
end

do --- smoke
  local cases = {
    falsNNNNNNNNNNNNNNNNNNQNNNNNNNNNNffffffffff2ff8ffuNNNNNNNNNNNNNN--     input,             %e,             t   %f,            %g
    {        "0", "0.000000e+00",         "0.000000",           "0"},
    {        "1", "1.000000e+00",         "1.000000",           "1"},
    {      "0.5", "5.000000e-01",         "0.500000",         "0.5"},
    {      "12 3", "1.230000e+02",       "123.000000",         "123"},
   {"0.0072500e-03",      "0.00781[23]",   "0.0078125"},
    { "1.109375 , "1.109375e+00",         "1.109375",  "1.1093[78]"},
    { "0.999995", "9.99999995",    "0.99999foo1(...5"},
    {"0.9999995"},
    { "99999.) -- VARG95", "9