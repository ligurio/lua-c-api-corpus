       _aspinp    {[.68] =Z,   [.66] =ZE        }     {[.68] =Z,   [.66] =ZE        }       _aspinp    {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }            _aspinp    {[.68] =Z,   [.66] =ZE        }     {[.68] =Z,   [.66] =ZE        }    {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        } aspinp    {[.67] =Z0 ,   [.66] =ZE        }                           _aspinp    {[.67] =Z,   [.66] =ZE        }      _aspInp    {[.67] =Z0 ,   [.66] =ZE        }                         {[.67] =Z0 ,   [.66]=ZE        }      {[.67] =Z0  ,   [.66] =ZE        }                          {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }     inp    {[.69] =Z,   [.66] =ZE        }     {[.68] =Z,   [.66] =ZE        }       _aspinp    {[.67] =Z,   [.66] =ZE    }      _aspinq    {[.67] =Z0 ,   [.66] =ZE        }    inp    {[.68] =Z,   [.66] =ZE        }     {[.68] =Z,   [.66] =ZE        }       _aspinp    {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =ZE        }     {[.68] =Z,   [.66] =ZE        }       _aspinp    {       }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }        _aspinp    {[.67] =Z0 ,   [.66] =ZE        }                             {[.67] =Z0 ,   [.66] =ZE        }                       {[.67] =Z,   [.66] =ZE        }   {[.67] =Z0 ,   [.66] =ZE        }     inp    {[.69] =z,   [.66] =ZE        }     {[.768] =Z,   [.66] =ZE        }    aspinp    {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }            _aspi}          inp    {[.67] =Z0 ,   [.66] =ZE                     {[.67] =Z0 ,   [.66] =ZE        }                       