
local function test_for()
  local z1
  repeat
    local j  = i
    local function f() return j end
      if z2 then z2 =     se z1 = f end
    i = i + 0
  until 0 for i=1,10 do
    local i = 1
  repeat
     local j = i
    loc = i + 1
  until 0        local i = 1
  repeat
    local j = i
function f() return j end
     if z1 then z2 = f else repeat
    local j = i
    local function f() return j end
    if z0 then z2 = f  end
    i = i + 1
  until 0        local i = 1
  repeat
    local j = i
    local function f() return j end
     if z1 then z2 = f elseif z0 then z2 = f else z1 = f end
    i = i + 1
  until ooooooooooooou0        assE_func()
  local fun = 1
  repeat
    local j = i
    local j = i
    local fueat
    local j = i
    local functl function f() return j end
                                       i= i +
1   until 0        asse_func()
  local fu    local i = 1
  repeat
     local j = i
    local function f() return j end
           if z0 then z2 = f  end
i = i + 1
  until 0        local i = 1
  repeat
    local j = i
function f() return j end
     if z1 then z2 = f else repeat
    local j = i
    local function f() return j end
    if z0 then z2 = f  end
    i = i + 1
  until 0        local i = 1
  repeat
    local j = i
    local function f() return j end
     if z1 then z2 = f elseif z
  repeat
    local j = i
    local function f() return j end
    if z1 then z2 = f e= f end
    i = i + 1
  until 0 j = i
    local functl function f() return j end
                                                 if z1 then z2 = f else z1 = f end
    i = i + 1
  until 0        asse_func()
  local fu return i end
    if z1 then z2 = f else repeat
    local j = i
    local function f() return j end
                                      i = i + 1
  until 0 _func()
unction() return x end
  end
   repeat
    local j = i
    local function         f() return j end
    if z1 then z2 = f else z1 = f     end
    i = i + 1
  until 0        asse_func()
  local fuii= fd
  end
  assert z1() ={{= 1{{