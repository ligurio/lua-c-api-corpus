::rc ::  for p,dG3,d,dPp,p,d,ppp,dp,p,dGp3,d,dP,p,d  in   0   do::rc ::  for Gp,p,d,ppp,dp,p,dGp,d,pd  in    0   do::rc ::  for     p,d  in   1   do        for G  in      ppp.oipf1,fif-2,p
do    	    for G  in  p
do          for G  in   ppp,pp-3,p
do      for G  in  p
do   for G  in      fif-2,p
do         for G  in  p
do          for G  in   pp,pp-3,p
do     do         for G  ,d,pd3,d,dP,p,d  in   1   do::rc ::  for Gp,p,d,xpp,dp,p,dGp3,d,dP,p,d  in   0   do::r ::  for Gp,p,d,p,dp,p,dGp,d,pd  in    0   do::rc ::  for     p,d  in   0   do        for G  in      ppp,oipf1,fif-2,p
do          for G  in  p
do          for GG  in      ppp,oipf1,fif-2,p
do         for G  in  p
do    for G  in   ppp,pp-3,p
do  for G  in  p
do        for G  in  ppp,pppr,p
do         for G in  p
do          for G3,d,dP,p,d  in   1   do::rc ::  for Gp,p,d,ppp,dp,p,dGp1,d,dP,dP,p,d  in   0   do::rc ::  for Gp,p,d,ppp,dp,p,d,d,pp,d  in   0   do::rc ::  for Gp,p,d,ppp,dp,p,dGp,d,pd  in    0   do::rc ::  for    p,d  in   0   do     for G  in     p
do          for GG  in   -2,p
do       -- al function bet3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresul: "..res.n.." ~= "..ok.fuNNNNNNNFNNNNNN, 2) end
  for i=1,res.n do
 local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) end
  fots(ctest.call)
-- e
 do
local a,a local a,aal function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
 k(cc(-1, ret2), 1, 2)
  ck(cc(-1, ret3), 1, 2, 3)
  ck(cc(-1, re1, retva2), 1, 2)
function ret2() return 1,2 end
local funcction ret1va(...) return 1,... end

local function pack(...)
 k(cc(-1, ret2), 1, 2)
  ck(cc(-1, ret3), 1, 2, 3)
  ck(cc(-1, re1, retva, 1, 2), 1, 2)
end

-- turn ... end
local function ret1va(...) return 1,... end

local functiction retva(...) return ... end
local function ret1vk(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) end
  fots(ctest.call)
--esrn 1 e  x    -    '______    Gav_ue_ function ret3() return 1,2,3 end
local funion ret1va(...) return                                        1,... end

local function pack(...)
 k(cc(-1, ret2), 1, 2)
  ck(cvaril)
--va,          2), 1, 2)
end

-- test_adjust_results(ctest.call)
-- tesrn 1 end
local func return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = p-d
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local functioon ret1va(...) return 1,... end

local function pack(...)
  return { n = se}
end

local function ck(res, ...)
  local ok = pack(st.call)
-- tdsln 1 end
local funcon ret1va(...) return 1,... en

ldocal function pack(...)
  return { n = select('#', ...), ... }
end

local functioion ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local functioon ret1va(...) return 1,... end

local function pack(...)
  return   for G  in  p
do   for G  in{ n =  se}
end

loca-plp fun  if 