local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
    assert(no, "'a'- Erlocal x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa d																	

do --J_8 to is:cal v,w; goto a; end

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto1
end

do --- Goto is 1        e.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x <= 11)
end

do --- Tra        local y",   t goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto is" "'x'")

  ::a:: do     goto a; ::a:: end -- Forward junot :finite loop.
end

do --- Goto: ltG goto      l x", "'x'")

  ::a:: do     goto a; ::a:: end --
  expect("goname>")
end

do --- Trbu litnx", "'x'")
 
 ::a:: do goto a; ::a:: end -- al x = 22
  do
    goto ori=i_6, 5
do(-i*- i
* -i

%-
i- -i
*-i*
- i
* - i
*
-i- -i- -i
*
-i

*
- i
* -i
 * -  i*- i*
-i
*-i
*
-
i- -i

*- i*
-i
* -i

*
-i- -i *
-i
 *
-
 i*
- i
*
-a
    goto a
    local y=  22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra       "repeax'")

  ::a:: do goto a; ::a:: end -- Forwar")
end

do --- out of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  asser=ect("repeat goto a; loBoooooooooooolooo ::a:: until x", "'x'")::a:: do g x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 12)
end

do --- Trailbels aa)

  ::a:: do goto a; ::a:: end -- For
end

do --- Goto is n$t a keyword.  do
    goto a
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --               ci= 11
  do
    goto a
    goto a
    local y = 21
    x = y
    ::a::
    ::b::
  end
  assert(x ==211)
end

do --- Tra           ")

  ::a:: do goto a  ::a:: end   do
    goto a 
   goto a
   -- Tr "'x'")

  ::a:: do goto a; ::a:: end -- Forwar  jux !pri vate_G
  goto ::S::::C5::::E::::C::::x      e.
  local x = 11
  do
    goto a
    goto a          ::a::
    ::b::
  end
  ::a:: do goto a; ::a:: end -- Forloop.
end

do --- G:oot:a:: until x", "'x'"
  ::a:: do     goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do ---")
  expect("repeat goto a; lucal x; ::a:}: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Forward jump, pect("goto = 1
end

do --- goto a
    goto a x = y
    ::a::
    ::b::
  end
  a*sert(x == 11)
end

do --- Tra        '")
  expect("repeax'")

  ::a:: do goto a; ::a:: end   do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                0  <  x y", x'")
  expect("sepeat goto aa:: until x", "'x'")::a:: do goto a; ::a:: end -- Forwacng labe nslo cis local x337 = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 10)
end

do --lg labels and e-- Trailin'     _ out of scope.
  local x = 11
  do
    goto a
    goto a
 x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trailing laas lebndaaaa\til x", "'x'")

  ::a:: do     goto a; ::a                           :: end -- Forward jump, nOot an infixpect("go)
end

do --- Trailign labuntil x", "'x'")
 
 ::a:: do goto a; ::a:: end -- Fo = 24
  do
    goto a
    goto a
   y = 22
    X = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trepeax'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinioto = 1", "<name>")
end

doassert(x == 11)
end
c