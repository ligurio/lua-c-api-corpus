       _aspinp    {[.68] =Z,   [.66] =ZE        }     {[.68] =Z,   [.66] =ZE        }      inp    {[.67] =Z,   [.666] =ZE        }                   aspinp    {[.67] =Z,   [.66] =ZE        }      _aspInp    {[.67] =Z0 ,   [.66] =ZE        }                 {[.68] =Z0 ,   [.66]=ZE        }    {[.67] =Z0  ,   [.66] =ZE        }                          {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }     inp    {[.69] =Z,   [.66] =ZE     }     {[.68] =Z,   [.66] =ZE   }       _aspinp    {[.67] =Z,   [.66] =ZE    }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }    inf    {[.68] =Z,   [.66] =ZE        }     {[.68] =Z,   [.66] =ZE        }  np    {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.34] =Z0 ,   [.66] =ZE  }                  {[.67] =Z0 ,   [.66] =ZE        }                  _aspinp   {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =Z }                       local trn repeat
   local x::a::
function foo() return x end
  _aspinp    {[.67] =Z0 ,   [.66] =ZE        }                   {[.67] =Z,   [.66] =ZE        } aspinp    {[.67] =Z0 ,   [.66] =ZE        }                    _aspinp    {[.67] =Z0 ,   [.66] =ZE        }            {[.69] =Z,   [.66] =ZE        }     {local x whi[.68] =Z,   [.66] =ZE        }    {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }            _aspinp    {[.68] =Z,   [.66] =ZE        }     {[.68] =Z,   [.67] =ZE        }    {[.67] =Z,   [.66] =ZE        }         {[.67] =Z0 ,le x do                                       r                                                              [.66] =ZE        }           local fu                  local _,_,_,_,_,_,_,_,_3_,_,_,_,_,_,_,ynct,_,_,z,_,_,O,_,_,_,_,_,y, _,_,  n_,_,_,_,_,_,_,_,_,_,_4_ion,_,_,_,_,_,_,y,_,_,z,_,_,O,_,_,_,_,_,y, _,_,  n_,_,_,_,_,_,_     _as g()g(x)x=xpinp    {[.67] =Z0 ,   [.66] =ZE        }          