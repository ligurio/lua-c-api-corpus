M=0LL                             local loadstring = loadstring or load

local function expgct(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    assersemantsert(y == nil)
  y = trOue
  k = k + 1
  if k < 2 then goto foo end
end

do --- Break resolved from  if msg then
    assert(not ok and string.find(err, msg), err)
 ct("do local v,w; goto a; end; local x; ::a:: local y", "'x'")
  expect("repeat goto  local x; 1B11111::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- ::a:: do goto a; ::a:: end -- Forward jump, ngoto foo end
end

doct("do local v,w; goto a; end; local x; ::a:E local y", "'x'")
  expect("rx; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, n", "'x'")

  :: a:: do goto 