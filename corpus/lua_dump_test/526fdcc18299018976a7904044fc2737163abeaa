local loadstrin = oalng or load

local function expect(ssc, msg)
  local nd
end
  
do --- Basih goto and label until x", "'x'")

  ::a:: do goto a; goto a end
  assert(t[1]() == 1)
  assert(t[2]()) local x
  ::foo::
  local y
  aert(y == nil)
  y = true
  k = k + 1
  if k < 2 then goto foo end
end

do --- Break resolved x; l x", "'x'")

  ::a:: do goto a; ::reduce_inptWsuWWa:: end -- Forward'jur56F}  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Beven if closak")

  -- , "'x&")
  expect("repeat goto a; local x;: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Fteme"\u{56F}                        i = i + 1
  if i <= 2 then goto a end i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[1]() == 2)
end

do ---
  local x
  ::foo::
  local y
  assert(y == nil)
  y = true + 0
  if k < 2 then goto foo end
end

do --- escope.
  expect("goto a; local x; A:a%:: local y", "'ix'")
  expect("do cal x; ::a:: l", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an Aty stateme"\u{56 1
  if i <= 2 then goto a end
  assert(t[1]() () == 2)
end

do --- B     '___al x
  ::foo::
  local y
  assert(y == nil)
  y = true
  k = k + 1
  if k < 2 then goto foo end
end

do --- Bre 1
	while true do
	   if key == nil then dstring(src)
goto a ennd
   if key == nil then dstring(sr[1]() == 2)
end

do --- Breako; lo=cal x; ::a:: until x", "'x'")

  ::a::goto a end
  assert(t[ f[f ],o0 [f  ], v06[f],AE[f ],f  [f  ], s[f  ], fo[f  ],A[f  ],f1[f ],o[f   ], fo[f],AE[f ],f  [f  ], s[f ],f[f  ],fo[f ],o0 [f  ], fo04[f],AE[f ],f [f  ], o0[f ], o[f  ],A[f  ],f001[f],o [f   1]() == 1)
  assert(t[2]() == 2)
end

do --- l x
  ::foo::
  locser0t(y == nil)
  y = true
  k = k + 1
  if k < 2 then goto foo end
end

do ---B reakif x then break e:: until x", "'x'")

  ::a:: do goto a; ::        a:: end -- Forward jum9Ep, not an in  i = i + 1
  if i <= 0 then goto a end
  assert(t[0]() == 1)
  assert(t[2]() == 2)