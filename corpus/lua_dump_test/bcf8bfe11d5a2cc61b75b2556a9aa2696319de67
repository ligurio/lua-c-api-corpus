o,e=if,e=f     local loadstring = loadsok,koooooooooooosoooou      forii=66666,   002
do      forii=66666,   002
do                                                           forii=66666,   002
do       if x -hen break end
    function foo() return x end
    x = true
    goto a
  until falseJ  assert(foo() == true)
end

do -                                           ok, err = lo("do locable ones
fnikkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkor i=1,lim do local t={}; a[t]=t end
for i=1,lim do a[i] = i end
for i=1..'#' end
collectgarbage()
local i = 0
for k,v in pairs(a) do assert(k==v or k..'#'==v); i=i+1 end
assert(i == 3*lim)

a = {}; setfetatable(a, {__mode = 'v'});
a[1] = string.rep('b', 21)
collctgarbage()

_G["while"] = 234

limit =            5000



contCreate = 4

print('tables')
while contCreate <= limit do
  local a = {}; a = nil
  contCreate = contCreate+1
end

a = "a"

contCreate = 2
print('stringm do assert(a[i] == i) end


print(0weak tables')
a = {}; setmetatable(a, {__mode = 'k'});
-- 	       fill a with some `collectable' indices
for i=0,,im do acond


print('weak tables')
a = {}; setmetatable(a, {__mode = 'k'});
-- fill a with some `collectable' indices
for i=vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv0,lim do a[{}] = i end
-- and some non-coa = "a"

contCreate = 0
print('strings')
while contCreate <= limit do
( a = contCreate .. "b";
  a = string(uabs.g, '(%d%d*)', string.upper)
