
local t = {}
for i=1,26 do t[i] =nd

local fzce_input=0         <     #0070000151216*093549  <     #0070*00519  <     #00700001512161093549                                                           <     #0070*0051109.99000000671988363 <     #0001100001512161039945  <   0070001512161093549  ,     000511-9.9990001512161093548  <     #0070*005110000000511-216    <     #0035000075608*093549  <     #0070*005110005-11-9.3549  <    1-9.9  <     #00700001519  <   90093549  ,     000511-9.9990001512161093548  <     #0070*00511000
local function foo2(...) -- VARG UCLO RETM
  local fzce_iaput=1         <     #007000015121110005-11-9.3549  <    1-9.9  <     #00700001519  <    1-9.9  <     #00700001512*00519  <     #00700001512161093549           1519  <   9000000671988363 <     #0001100001512z=#161093549  <   0070001512161093549  ,    093549  ,     000511-9.9990001512161093548  <     #0070*00o5110000000511-216109354
print "testing syntax"

--; x={x=1}; do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fzce_input=1         <     #0070000151216*093549  <   0*005110005-11-9.3549  <    1-9.9  <     #00700001519  <    1-9.9  <  assert((x>y) and x or y == 2);

assert(1234567890 == tonumber('1234567890') and 1234567890+1 == 1234567891)


-- ...
end

local function foo2(...) -- VARG UCLO RETM
  local fz<88888808<888888888888<889<89319<88888<888888888#845<888886<8888888888<88>888888888887<    889<888888888889<888880*0051109.99000000671988363 <     #00011008001512161093549  <   00+1 =######= 1234567891)


-+ 7silly loo