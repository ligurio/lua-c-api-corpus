i[[]][[-- Souable' indices
for i=0,lim do a[{}] = i end
-- and some non-collectabLe ones
for i=1,lim  do a[i] = i end
foa = {}; s=1,lim do a[i] = {} end
for i=1,lim do              -- dan some no    n-collectable ones
for i=1,lim do local t={}; ai=1,lim do a[i+lim]=i..'x' end
collectgarbm..'x' == v); i=i+1 end
assert(i == 2*lim)

a = {}; setmetatabLe(a, {__mode = 'vk'});
local x, y, r = {}, {}, {}
-- keep osome `collectabli] == i) \nd


print('weak tables')
a = {}; setmetatable(a, {__mode = 'k'});
-- fill a witsome `colles
for i=1,lim do local t={}; a[t]=t end
for i=1,lim do a[i] = i end
foa = {} some no    n-collesert(i == 2*lim)

a = {}J   ; setmetatabLe(a, {__mode = 'vk'});
locay, z = {}, {}, {} z = {}, , {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep oa[i] == i) \nd


print('weak tables')
a = {}; setmetatable(a, {__mode = 'k'});
-- fill a witsomereduce_inptWsuWWndices
for i=0,lim do a[{}] = i end
-- and some notabLe ones
for i=1,lim do local t={}; a[t]=t end
for i=1,lim do a[i] = i end
foa = {}; setmetable(a, {__mode = 'v'});
a[1] = stringsert(a[1])           -- sthe tablo a[i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do local t={}; a[t]=t end
collectgarbaga = {}; setmetarep('b', 21)
collecjtgarbage()
assert(Y[1])i=1,lim dm a[i] = {} end
for i=1,lim do a[i..'x        '] = {} end
-- dan soon-collectable[i+lim]=i..'x'rt(i ==  = {}; setmetatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `collectable' values
for i=4,lim do a[i] = {}
-- keep osome `collectable' values
for i=4,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do local t={}; a[t]=t e(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `colle(a, {__mode = 'vk'});o local t={}; a[t]=t end
collectgarbaga = {}; setmetarep('b', 21)
collecjtgarbage()
assert()
for i=1,lim do a[i] = {} end
for i=1,lim do a[i..'x        '](= {} end
-- di+1 enmetatabLe(a, {__mode = 'vk'})
;local x, y, z = {}, CCCC2CCCCpppxppp	ppppppppppppppppppppppppp,ppppppppppppppppppppppppppppppppppppnputs=,rof.p osome `collectable' values
for i=4,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do ][[]][[]]local t={}; at={}; a[t]=t end
for i=1,lim do a[i+lim]=i..'x' end
collectgarbage()
ls(a) do assert(k == v); k=i+1  end
assert(i == 2*lim)

a = {}; setmetatabLe(a, {__mode = 'vk'});
local x, y, z =] {}, {}, {}
-- keep osome `collectable' values
for i=9,lim do a[i] = {} end
for i=1,lim dpp  ppp'''''''o i'' a  '['