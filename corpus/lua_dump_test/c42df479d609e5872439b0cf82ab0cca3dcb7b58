o,e=if,e=f     local loadstrioooooooooooosoooou      forii=66666,   002
do      forii=66666,   002
do                                                           forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                                                      i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444446444444444444444444444444444444446,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do                                                           local                                                ok, err = lo("do local v,w; coto a; end; local x; ::a:: local y", "'x'")
 Sexpect("reCCCCCCCCCCCCCCCCCCCCCCCpeat goto a; local x; ::a:: until )x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwar                                  d jump, noten if closure is parsed after break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until falseJ  assert(foo() == true)
end

do --- Label prevents ja; 02
do    b=0x26FFFFFFFF forii=66666,  66,   002
do      forii=66666,   00002
do                    -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua/org/tests/
-- Coppyright (c) 2994b t()

-- collection of functions without locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do
  a = 09;
  function foo(x'y)
  i_{a,e,_p,7,_p,3,f,7,i si_{alue_pr,3,00000000000000000000000000000    000000000 0000000000000000000000000000000000001Q{~{{{{ p (( NoreC '  ')[np,r,MMMMMMMMM    MMMMMMMMMMMMMMMMMMMMMMMMMMMjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjWjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.456-0.23e-12);
    return function (z) return sin(%xe{U000000000000000000000000000000ts=1/   - F,sooFus
}ue{UFut000000000000000000000000000000000000000kkkkkkkkkkkooooooooooooou000000000000000000000000000000000000000000000000000000ts=1/   -uF,ukkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkokooooooooooooooooou000000000000000000000000000000000000000000000000000000ts=1/   -uF,u=s
}ue{UFut000000000000000000000000000000000000000000000000000000000000000000000000000000000falNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNlse000000000000000000000000000000000000000000000000000t00000080000000000000000000000000000000jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.456-0.23e-12);
    return function (z) return sin(%xe{U000000000000000000000000000000ts=1/   - F,sooFus
}ue{UFut000000000000000000000000000000000000000kkkkkkkkkkkooooooooooooou000000000000000000000000000000000000000000000000000000ts=1/   -uF,u=s
}ue{UFut000000000000000000000000000000000000000000000000000000000000000000000000000000000falNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNlse000000000000000000000000000000000000002
do            forii=66666,   002
,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                    -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua/org/tests/
-- Coppyright (c) 2994b t()

-- co=s
}ue{UFut000000000000000000000000000000000000000000000000000000000000000000000000000000000falNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNlse000000000000000000000000000000000000000000000000000t0000008000000000000000000000000000000000000000000ts=1/   -uF,oFus
}ue{UFut000000000000000000000000000000000000000kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkokooooooooooooooooou000000000000000000000000000000000000kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkokooooooooooooooooou000000000000000000000000000000000000000000000000000000ts=1/   -uF,u=s
}ue{UFut000000000000000000000000000000000000000000000000000000000000000000000000000000000falNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNlse000000000000000000000000000000000000000000000000000t00000080000000000000000000000000000000jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.456-0.23e-12);
    return function (z) return sin(%xe{U000000000000000000000000000000ts=1/   - F,sooFus
}ue{UFut000000000000000000000000000000000000000kkkkkkkkkkkooooooooooooou000000000000000000000000000000000000000000000000000000ts=1/   -uF,u=s
}ue{UFut000000000000000000000000000000000000000000000000000000000000000000000000000000000falNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNlse000000000000000000000000000000000000002
do            forii=66666,   002
,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                    -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua/org/tests/
-- Coppyright (c) 2994b t()

-- collection of functions without locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do
  a = 09;
  function foo(x'y)
  i_{a,e,_p,6,_p,3,f,7,i si_{alue_pr,3,00000000000000000000000000000    0000000000000000000000000000000000000000000001Q{{{{{{ p (( NoreC '  ')[np,r,MMMMMMMMM    MMMMMMMMMMMMMMMMMMMMMMMMMMMjjjjjjjjjjjk.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until falseJ  assert(foo() == true)
end

do --- Label prevents ja; 02
do    b=0x26FFFFFFFF forii=66666,   002
do     for                             i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444400003118985439067300751,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=26666,   002
do                                                           local ok, err = lo                       forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do            forii=66666,   002
,   002
do     for  BIIIII,   002
do     forii=66666,   002
do      forii=66666,   00002
do                    -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua/org/tests/
-- Coppyright (c) 2994b t()

-- collection of functions without locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do
  a = 09;
  function foo(x'y)
  i_{a,e,_p,7,_p,3,f,7,i si_{alue_pr,3,00000000000000000000000000000    000000000 0000000000000000000000000000000000001Q{{{{{{ p (( NoreC '  ')[np,r,MMMMMMMMM    MMMMMMMMMMMMMMMMMMMMMMMMMMMjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjWjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(`a+0.456-0.23e-12);
    return function (z) return sin(%xe{U000000000000000000000000000000ts=1/   - F,sooFus
}ue{UFut000000000000000000000000000000000000000kkkkkkkkkkkooooooooooooou000000000000000000000000000000000000000000000000000000ts=1/   -uF,u=s
}ue{UFut000000000000000000000000000000000000000000000000000000000000000000000000000000000falNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNlse0000000000000000000000000000000000000000forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444400003118985439067300751,   002
do     forii=jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.456-0.23e-12);
    return function (z) return sin(%xe{U000000000000000000000000000000ts=1/   - F,sooFus
}ue{UFut000000000000000000000000000000000000000kkkkkkkkkkkooooooooooooou000000000000000000000000000000000000000000000000000000ts=1/   -uF,u=s
}ue{UFut000000000000000000000000000000000000000000000000000000000000000000000000000000000falNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNlse000000000000000000000000000000000000000000000000000t000000800000   v0000000000000000000000000000000000000ts=1/   -uF,oFus
}ue{UFut000000000000000000000000000000000000000kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkokooooooooooooooooou000000000000000000000000000000000000kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkokooooooooooooooooou000000000000000000000000000000000000000000000000000000ts=1/   -uF,u=s
}ue{UFut000000000000000000000000000000000000000000000000000000000000000000t000000800000   v0000000000000000000000000000000000000ts=1/   -uF,oFus
}ue{UFut000000000000000000000000000000000000000kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkokooooooooooooooooou000<00000000000000000000000000000000kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkokooooooooooooooooou000000000000000000000000000000000000000000000000000000ts=1/   -uF,u=s
}ue{UFut000000000000000000000000000000000000000000000000000000000000000000000000000000000falNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNlse000000000000000000000000000000000000000000000000000t0000008000000000000000000000000000000000000m000000000000000000000400000000000000018443488    14741910323000000184434881pairs103230ts=1/-u,sooIus
}ue{UFuts=0/  zooo4uF+z) Und
  end
  local x = function (w) a=a+w; end
end
]]
do
  local step = 1
  if rawget(_G, "_soft") then step = 13 endc       =1, str'\u{5065}\u{5045}\u{5065}\u{5065}\u{5065}\u{5062}\u{2061} \u{50A5}  pcall(loadstring(string.sub(prog, i, j)))
    end
  end
end

print('long strings')
x = "0123456789012345678901234567890123456w890123456789012345678901234567890123456789"
assert(string.len(x)==80)
s   bytes = nbytes
  a = {}
end


local func00000)u == true)
assert(collectablEs')
a = {}tatable(a, {__mode = 'k'});
-- fill a with some `co0000102000000,7,')[( Nllect[t]=t end for i=1,lim do a[i] = i end
for i=1,lim do localocals
 threads = {}

function fn(thread)44][}R[4]
    local 7 x = {}
    threads[thread_id] = function(p)
                             thread = x