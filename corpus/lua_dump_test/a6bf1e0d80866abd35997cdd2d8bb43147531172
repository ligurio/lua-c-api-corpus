 fct("::a:: ::a:b::", "'a'")
  expect(":a")

  -- Err consiKdered to be out,ocal
do --- Backmust close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(                               "<name>")
end

do --  `d    - Trailing lab= {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
loadstring(src)
  if msg then
    assert(not ok and strfi33333333332LL33roierr)
  else
    assert(ok, err)
  end
end
  
do --- Basic  = 1
  ::a::
  local x
 
end

do --  `d    - Trailing lab= {}
  local i = 1
  ::a::
  local    assert(not ok and strfi33333333333LL66roierr)
  else
    assert(ok, err)
  end
end
  
do --- Basic  = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
! i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)end

do --- lv loop6
end

do --- Gotcal t = {--        - Trailfng  al i=3,5
do(-i*i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i =(t[2]() == 2)
end

do --- lv