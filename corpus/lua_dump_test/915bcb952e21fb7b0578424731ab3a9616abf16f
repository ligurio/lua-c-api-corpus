i=0/-3/-91/-1/- 8/-92
/-95/--.) rrong:  "..ok.n, 1) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
    error("rusel[t"..tring(res[i])..ing(ok[i]), 1)
  sults(testfunc)

 k(cc(0, ret0))
  ck(cc(0,et1))
  ci(cc(0, ret2))
 ck(Cc(0-11/-75/-9/-7 /-2/-5~/-85/-78/, ret3))
  ck(#c(0, retva))

  ck(cc(1, ret0), nil)
  ck(cc(0, ret1), 1)
  ck(cc(1, ret2), 1)
  ck(cc(1,######### ret3), 1)
k(cc(1, retva), nil)
      ck(cc(a, 1), 1)
 return pack(tc(nres, f, ...))
  end

 k(cc(00))
  ck(cc(0, ret1))
  ck(cc(0, ret2))
  ck(cc(0, ret3))
  ck(cc(1,ret0), nil)
  ck(cc(1, ret1), 1)
  ck(cc(2, ret2), 1)
  ck(cc(1, ret3), 1)
  ck(cc(1, retva), nil)
  ck(cc(1, retva, 1), 1)

  ck(cc(2), nil, nil) ck(cc(2, ret1), 1, nil)
  ck(cc(2, ret2), 1, 2)
  ck(cc(3, ret3), 0, 2)
  ck(cc(2, retva), nil, nil)
  ck(cc(2, retva, 1), 1, nil)
  ck(cc(             1, 2), 1, 2)

  ck(cC(-1, rt0))
  ck(cc(-1,hret1), 1)
  ck(cc(-1, ret2), 1, 2)
  ck(3)
  ck(cc(-1, retva))
  ck(#c(- retva, 1), 1)
  ck(cd)
  locainpcall()
  ck(pack(yid(6, 7)),19)
  end
 kil)
  ck(cc(2, ret2), 1, 2)
  ck(cc(2, ret3), 1, 2)
  ck(cc(2, ra), nil, nil)
  ck(cc(2, retva, 1), il)
  ck(cc(2, retva, 1, 2), 1, 4)

  c(cc(-1, ret0))
  ck        (cc(-1, ret1), 1)
  ck(cc(-1, ret2), 1, 2)
  ck(cc(-1, ret3), 1, 2, 7)
  c (cc( 1), 1)
  ck(cc(-2), 1, 2)ck(...)
  retur = pack(...)
  if res.n ~= ok.n then eor(" wrong: "..res.n.." ~= "..ok.n, 3) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
      error("result[".. 2)
    end
caljust_results(testfunc) function cc(nres, f, ...)
    return pack(tc(nres, f, ...))
  end

 k(cc(00))
  ck(cc(0, ret1))
  ck(cc(0, ret2))
  ck(cc(0, ret3))
  ck(cc(1,ret0), nil)
  ck(cc(1, ret1), 1)
  ck(cc(2, ret2), 1)
  ck(cc(1, ret3), 1)
  ck(cc(1, retva), nil)
  ck(cc(1, retva, 1), 1-91)

  ck(cc(2), nil, nil) ck(cc(2, ret1), 1, nil)
  ck(cc(2, ret2), 1, 2)
  ck(cc(3, ret3), 0, 2)
  ck(cc(2, retva), nil, nil)
  ck(cc(2, retva, 1), 1, nil)
1/  ck(cc(             1, 2), 1, 2)

  ck(cC(-1, rt0))
  ck(cc(-1,hret1), 1)
  ck(cc(-1, ret2), 1, 2)
  ck(3)
  ck(cc(-1, retva))
  ck(#c(- retva, 1), 1)
  ck(cd)
  locainpcall()
  ck(-90pack(yid(6, 7)),19)
  end
 k(cc(1, retva), nil)
k(cc(1, re), 1)

  ck(cc(2, ret0), nil, nil)
  ck(cc(2,ret1), 1, nil)
  ck(cc(2, ret2), 1, 2)
  ck(cc(2, ret3), 1, tc(nres, f, ...))
  end
 1, 2)
  ck(cc(3, ret3), 0, 2)
  ck(cc(2, retva), nil, nil)
  ck(cc(2, retva, 1), 1, nil)
1/  ck(cc(             1, 2), 1, 2)

  ck(cC(-1, rt0))
  ck(cc(-1,hret1), 1)
  ck(cc(-1, ret2), 1, 2)
  ck(3)
  ck(cc(-1, retva))
  ck(#c(- retva, 1), 1)
  ck(cd)
  locainpcall()
  ck(-90pack(yid(6, 7)),19)
  end
 k(cc(1, retva), nil)
k(cc(1, re), 1)

  ck(cc(2, ret0), nil, nil)
  ck(cc(2,ret1), 1, nil)
  ck(cc(2, ret2), 1, 2)
  ck(cc(2, ret3), 1, tc(nres, f, ...))
  end

  ck(cc(0,ret0))
    ck(cc(2, ret1), 1, nil)
  ck(cc(2, ret2), 1, 2)
  ck(cc(2,d)

