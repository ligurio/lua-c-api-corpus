local loadstring = loadstring or load

local function expect(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    assert(not ok and string  .find(err, msg), err)
  else
    assert(ok, err)
  end
end
  
do --- Basih goto and labell x; ::a:: until x",st cs pantil falsi + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Break must close uJ)
  expect("do local v,w; goty a* end; local x,o,f+ ::=1a:: local y", "ot  X X]Vu_ expect("repeat goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end - Forward jump, not an Aty stateme"\u{5