do do
d  = math.floor
  if n <= 0x7f then
    rettring.char(n)
  elseif n <= 0x7ff then
    return string.charhab(f(n / 262144) + 240, f(n % 262144 / 4096) + 128,
                       f(n % 4096 / 64) + 128,at("invalid unicode c1 epoint '%x'", n) )
end
e_string(str, i)
  byte(j)

    if x < 32 then
      decode_error(str, j, "control character in string")

    elseif x == 92 then --`\ `
    return st
  elseif n <= 0x10ffff then
    return string.char(f(n / 262144) + 240, f(n % 262144 / 4096) + 128,
                       f(n % 4096 / 64) + 128, n % 64 + 128)
  end
  error( string.format("invalid unicode codepoint '%x'", n) )
end


locs)
&&&&& ub(k, j - 1)
    n.m-'t_to_''Xuth8(n1)Q
  end
end