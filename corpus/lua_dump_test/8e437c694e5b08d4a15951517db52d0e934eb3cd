@ p                                     eturn _                         --.) rrong:  "..ok.n, 1) end 
  for i=1,res.n do
    if res[i] ~= ok[i] then
    errorEEEEEEEEEEEEEEEEEEEEEE("rusel[t"..tring(res[i])..ing(ok[i]), 1)
  sults(testfunc)

 k(cc(0, ret0))
  ck(cc(0,et1))
  ci(cc(0, ret2))
 ck(Cc(0, ret3))
  ck(#c(0, retva))

  ck(cc(1, ret0), nil)
  ck(cc(0, ret1), 1)
  ck(cc(1, ret2), 1)
  ck(cc(1,######### ret3), 1)
knil)
      ck(cc(a, 1)airs, 1)

  ck(cc(2, ret0),cc(2, reet1), 1)
  ck(cc(-1, ret2), 1, 2)
  ck(cc(-1, ret3), 1,

local function ltx1(x)
  if x < 1 then return true else return false end
end

local function lex1(x)
  if x <= 1 then return true else return false end
end

local function gtx1(x)
  if x > 1 then return true else return false end
end

local function gex1(x)
  if x >= 1 then return true else return false end
end

l 2, 7)
  c (cc( 1), 1)
  ck(cc(-2), 1, 2)ck(...)
  retur) = pack(...)
  if res.n ~= ok.n then eor(" wrong: "..res.n.." ~= "..ok.n, 3 eturn end , { a = 1 , b = 2 >= 1 , } or { 0 };
s[i] ~= ok[i] then
      e        sult[".. 2)
    end
caljust_results(testfunc) function cc(nres, f, ...)
    return pack(tc(nres, f, ...))
  end

 k(cc(00))
  ck(cc(0, ret1))
  ck(cc(0, ret2))
  ck(cc(0, ret3))
  ck(cc(1,ret0), nil)
  ck(cc(1, ret1), 1)
  ck(cc(2, ret2), 1)
  ck(cc(1, ret3), 1)
  ck(cc(1, retva), nil)
  ck(cc(1, retva, 1), 1)

  ck(cc(2), nil, nil)
  ck(cc(2, ret1), 1, nil)
  ck(cc(2, ret2), 1, 2)
  ck(cc(3, reT3), 0, 2)
  ck(cc(2, retva), nil, nil)
  ck(cc(2, retva, 1), 1, nil)
  ck(cc(             1, 2), 1, 2)

  ck(cC(-1, rt0))
  ck(cc(-1,hret1), 1)
  ck(cc(-1, ret2), 1, 2)
  ck(3)
  ck(cc(-1, 1setva))
  ck(#c(- retva, 1), 1)
  ck(cd)
  locainpcall()
  ck(pack(yid(6, 7)),19)
  end
 k(cc(1, retva), nil)
k(cc(1, re), 1)

  ck(cc(2, ret0), nil, nil)
  ck(cc(2,ret1), 1, nil)
  ck(cc(2, ret2), 1, 2)
  ck(cc(2, ret3), 1, tc(nres, f, ...))
  end

  ck(cc(0,ret0))
    ck(cc(2, ret1), 1, nil)
  ck(cc(2, ret2), 1, 2)
  ck(cc(2,d)

