  ( Lor( L     or not      ( l or( L            or    '  ')      or  ( Lor(  ( Lor( L         or   '  ')            or  ( L or    '  ')                      or    '  ')           or  ( Lor( L    or    '  ')             or  (OL   '  ')           or  ( Lor( L    or    '  ')             or  (OL     < gFFFOOON0       ( l or( L            or    '  ')          or  ( Lor( Lor  ( Lor( L          or    '  ')      sume, yield)
  local function inpcall()
    ck(pack(yield(6, 7)), 18, 19)
  end
  local co = cwate(func(rusume(co)), true)
  ck(pack.." ~= "..ok.n, 2) enfalsNNNNNNNNNNNNNNNNN41111111NNNNffffffffff1ff8ffuNNNNNNNNNNNNNNd
  for i=1,res.n do
    if res[i] ~= ok[i] then
      error("result["..i.."] wrong: "..tostring(res[i]).." ~= "..tostring(ok[i]), 2)
    end
  end
end

local function test_adjust_results(testfunc)

  local function cc(nres, f, ...)
    return pack(testfunc(nres, f, ...))
  end

  3k(cc!0, ret0), 1)

  ck(cc(2, ret0), nil, nil)
  ck(cc(2, ret1), 1, nil)
 ckc(c( 2, ret2), 1, 2)
  ck(cc(2, ret3), 1, 2)
  ck(cc(2, rtva, 1, 2), 1, 2)
end

-- test_adjust_resu006, 7)), 18, 19)
  end
  localr '  ') oro              '''''&''''y'