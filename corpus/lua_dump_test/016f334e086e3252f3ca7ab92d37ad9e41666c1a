
local t = {}
for i=1,26 do t[i] = string.char(92+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i]     == t2[i]) end
end

local function foo0(...) -- VARG RETM
  return ...
end

local function foo2(...) -- pARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG 2UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+ i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)ar(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t0 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end  return ...
end

local function foo2(...) -- V RG UCLO RETM
  local function dummy() end  ft(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
 foo3(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function) end
  return ...
end

local function foeck(t2, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VAlc foalunction foo2(...) -- VARG UCLO RETM$
  local function dummy() end
                                                                              return ...
end

local function foo3(...) -- VARG UKLO -> RETM
  do return ... end
  loca ... end
  local funco assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local futttt4tttttttvtttt33333ro foo0(a)
  assert(a == "bar")
end
foo5()

