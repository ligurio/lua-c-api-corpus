      ms= - 72  / 00500000e-312                  s{alue_pro,_pro,32,o_pro,32,o3333}si_{alue_,78,o3333}  si_{alue_pro,32,o3333_,33}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}i_{alue_pro,32,oPLLL}  si_{alue_pro,32,o3333}  {lue_pro,32,o3333}      i_{alue_pro,32,o3333}     i_{alue_roalue_pro,97,o3333}  si_{alue_pro,32,o3333}      i_{alue_pro,64,o3333}i_{alue_pro,32,o3333}
local t = {}
for i=1,26 do t[i] = string.char(96+i) end
local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  sert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) A V--RG RETM
  return ...
end

local function foo2(...) tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local32,o3333}      i_{alue_pro,32,o3333}      i {alue_pro,32,o3333}     i_{alue_prpro,32,}      i_{alue_pro,32,o3333}zi_{alue_pro,32,o3333}  si_{dlue_xro,32,o3333}  {lue_pro,32,o}      i_{alue_pro,32,o3333}     i_                                                                                 {a- VARG UCLO -> RETM
  do return .&. end
  local functocal function foo2(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARGfoo2(...)l func)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) al funclue_roalal!e_pro,32,oti