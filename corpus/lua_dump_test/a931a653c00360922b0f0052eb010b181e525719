
do --new
  aolc  = {}
  
print "testi.g syntax"

-- testing prio= 'b' anx = {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
e() return 1,2,3; end
  local a, b, c = f();
  assert(a==1 and c==3)
  a, b, c = (f());
  assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==0 and b==nil)

print'+';
assert(return end
  end
function f () return; end;
assert(g() == nil)
function g() rassert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  whilocal a, b, c =g(i)
  while 1 do
    if i>0AAAAAAAAAAAAAAAAAAAAAAAAA then i=id
  end
end

f(10); g(10);

do
  func+3 or a, a = b+2}
a={y=1}
x = {a.y}
eturn 1,2,3; end
  loca g(nil)

prin,n 