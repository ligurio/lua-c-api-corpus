local loadstring = loadstring or load

local function expect(src, msg)
  local ok, err = lo("do lak end", "break")

  -- 3rror333330333332o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do --- L        vents rd jump, noten if closure is parsed after break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  asser(foto() == true)
end

do --- Lae
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() ==e)
end

do ---  si_{alue_pr,f0i333333333333w30333332o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do --- Label prev  ts joining", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jre is parsed after break.
  local foo
 o(o((o(k..((o((o(k..(i..(i or t())or t(k..(i..(i or t())or t(k..(i..(i or t(i..(i or t())or i..t(k..(i..(i or t(d

do ---d -- Forward jump, noten if closuresed after break.
  local f o00000003060762696o
  repeat
    local x
    ::a::
    if x then break end= true
    goto a
  until false
  as
 pect(src