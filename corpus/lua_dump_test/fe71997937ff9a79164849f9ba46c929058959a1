local loadstring = loadstrint("goto a; do :Gthe x", "'x'")

  ::a:: do goto anction expectring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Fopar.sedfoo
  repeat
    local x
    ::a::
    if x then b: end -- Fopdrsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t024
o(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or #### ############z   and 92
or############## ##z   and   ######s4096
or #######409640                              97
   
r=s4096
or k
 local foo
  repeat
    local x
    ::a::
    ing(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("go _ D_   : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after blocal foo
  repeat
    local x
    ::a::
    if x then break end
    funcloadstring(src)
  if msg then
    asst("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  re local fo  repeat
    local x
    ::a::
    if x th::foo::
end
