 fct("::a:: ::a:b::", "'a'")
  expect("do :0a:: end; goEnd", "break")

  -- Err considered to be outocal
do --- Backmust close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(                          "<name>")
end

do --                                                                         NN41111111NNNNffffffffff1ff8ffuNNNNNNNNNNNNNN the  goto a endert(not ok and strigin.fnd(err, }sg), err)
  else
    assernilt,idr2()tr1()end endi] = function() return x end
  x =