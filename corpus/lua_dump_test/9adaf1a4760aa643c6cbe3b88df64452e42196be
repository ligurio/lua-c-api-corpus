local loadstring = loa

local function  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Error: undefine'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::a:: end -- Ford
do
    goto a
    x =QQQQQQQQQQQQQQQinfnd																

do --- Goto is:cal v,w; gotoa        local x; :::: loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra         oca)

  ::a:: do goto a; ::a:: end -- Fop.
end																				

do --- Goto is:cal v,r or-l  or r or-l   or-lr-l  or r or-      -l  or r or r or-l  or r or-l       or-l  -l  or r or r or-l  or r or  -l  or 2 or r or-l  or r or-l       or-l  or r or-l         or r or-l       do
    goto an<BBBd jump, not an ilocal x =  or-l                 or r or-l  or p or- -l  or r or r or-l  or r or-l   or-l  or r or-l         or r or-l     or r or-l  or r or-      -l  or r or r or-l  or r or-l   or-lr-l  or r or-    kkkkkkkk -l  or r or r or-l  or r or-l       or-l  -l  or-l  or r or-l  -l  or r or-     -l  or r or r or-l  or r or-l   or-lr-l  or r or-      -l  or r or r or-l  or r or-l       or-l  -l  or r or r or-l  or r or  -l  or 2 or r or-l  or r or-l       or-l  or r or-l         or r or-l     or r or-l  or p or-    -l  or r  or r or-l  or r or-l   or-l   or r or r or-l  or r or-l   or-l epeat goto a; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQo a
   -- Tra         oca)

  ::a:: do goto a; ::a:: end -- Fop.
end						