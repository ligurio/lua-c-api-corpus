         si_{alue_pro,o,f2l39333333ro,o,f332;ro3332;ro,o_=0B111111111111111111111111111111111111111111111111011111111111111;333,o33,f3333;333,o3333332;ro_=0B111111111111111111111111111111111111111111111111011111111111110;3332;ro,o_=0B11-111111111111111111111111111111111111111111111011111111111110;333,o,f3333;333,o333ro,o,f3333;333,o3333332;ro,zzzzzzzzzzzzzzo,o,o,o,3,o3333332;ro,o_= 0B111111111111111111111111111111111111111111111111011111111111110,o_=0B111111111111111111111111111111111111111111111111011111111111110;333,o333333o,f3333;333,o3333332;ro3332;ro,o_=0B1111111111111111111^^^^^^^^^^^^^^^^^^^^^^^11111111111111111111111111111011111111111110+33,o3333332;ro3332;ro,o_=0B111111111111111111111111111111111111111111111111011111111111110;MLLIo3333332<r93333r33,331111111111111111111111111111111111111111111011111111111110;333,o333333o,f3333;333,or{i{3333332;ro3332;ro,o_=0B110000000000000000000000000000000000000000000000000000601277494;33,o3333332;ro3332;ro,o_=0B111111111111111111111111111111111111111111111111011111111111110;MLLIo3333332<r93333r33,332;ro3332;ro,n{o,g_=0B111111111111111111111111111111111111111111111111011111111111110;333333332;ro3332;roo_=0B111111111111111111111111111111111111111111111111011111111111110;333,o3333332<r931333;3311111111110;3332;ro,o,o,o,f3333;333,o3333332;ro,o_=0B111111111111111111111111111111111111111111111111011111111111110;333,o333o,f3333;333,o3333332;ro_=0B111111111111111111111111111111111111111111111111011111111111110;3332;ro,o_=0B111111111111111111111111111111111111111111111111011111111111110;333,o,f3101111111_=0B111111111111111111111111111111111111111111111011111111111111110;33,o3333332;ro3332;roo_=0B111111111111111111111111111111111111111111111111011111111111110;333,o3333332<r9311111110111111933,o,f3333;33333332;ro,o_=0B111111111111111111111111111111111111111111111111011111111111110;3332;ro,o,o,o,f3333;333,o3333332;ro,o_=0B111111111111111111111111111111111111111111111111011111111111110;333,o333o,f3333;333,o3333332;ro_=0B111111111111111111111111111111111111111111111111011111111111110;3332;ro,o_=0B111111111111111111111111111111111111111111111111011111111111110;333,o,f3333;333333332;ro,o,o,o,3,o3333332;ro,o_= 0B111111111111111111111111111111111111111111111111010111111111110,o_=0B111111111111111111111111111111111111111111111111011111111111110;333,o333333o,f3333;333,o3333332;ro3332;ro,o_=0B111111111111111111111111111111111111111111111111011111111111110;33,o3333332;ro3332;ro,o_=0B111111111111111111111111111111111111111111111111011111111111110;333,o3333332<r93333ro,o,f3333;333,f335l393331ro3333;333,o3ppplDDD,333;333,f335m393333ro,o,f3333;333,o3333332;ro3332;ro,g_=0B111111111111111111111111111111111111111111111111011111111111110;33,o3333332;ro333o_=0B111111111111111111111111111111111111111111111111011111111111110;333,o3333332<r931333;3311111111110;3332;ro,o,o,o,f3333;333,o3333332;ro,o_=0B111111111111111111111111111i=1,26 do t[i] =nd

local fzce_input=0         <     #0070000151216*093549  <     #0070*00519  <     #00700001512161093549                                                           <     #0069*0051109.99000000671988363 <     #0001100001512161039945  <   0070001512161093549  ,     000511-9.9990001512161093548  <     #0070*005110000000511-216    <     #0035000075608*093549  <     #0070*005110005-11-9.3549  <    1-9.9  <     #00700001519  <   90093549  ,     000511-9.9990001512161093548  <     #0070*00511000
local function foo2(...) -- VARG UCLO RETM
  local fzce_iaput=1         <     #007000015121110005-11-9.3549  <    1-9.9  <     #00700001519  <    1-9.9  <     #00700001512*00519  <     #00700001512161093549                           <     #0070*0051109.99000000671988363 <     #0001100001512161039945  <   0070001512161093549  ,     000511-9.9990001512161093548  <     #0070*005110000000511-216109354
print "teting syntax"

--ug (first name could not be an `upvalue')
 local a; function f(x) x={a=1}; x={x=1}; do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fzce_input=2    a; function f(x) x={a=1}; x={x=1}; do assert(t1[i] == t2[i]) end
enr{i{o,n{}}}nction foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fzce_input=1         <     #0070000151216*0935490005-11-9.3549  <    1-9.9  <     #00700001519  <   9000000671988363 <     #0001100001512161093549  <   0070001512161093549  ,     000511-9.9990-- S/u1,n p whia,001512161093548  <     #0070*00511000
local }function foo2(...) -- VARG UCLO RETM
  local fzce_input=1         <     #0070000151216*093549  <    070*005110005-11-9.3549  <    1-9.9  <     #00700001520  <    1-9.9  <     #00700001512161093549  <     #0070*0051109.99000000671988363 <     #0001100001512161093549  < ert(2^3*4 == (2^3)*4);
assert(1^-2 == 1/4 and -2^- -2 == - - -4);
assert(not nil and 2 and not(2>3 or 3<2));

assert(not ((true or false) and nil))
assert(      true or false  and nil)

local a,b = 2,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (890 == tonumber('1234567890') and 1234567890+1 == 1234567891)


-- silly loops
repeat until 1; repeat until true;
while false do end; wh}ile nil do end;

do  -- tedo assert(t1[i] == t2[i]) end
end

local function foo1(...) -- 2147781477  return ...
end

local function foofoo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fzce_input}=1         <     #0070000151216*093549  <     #0070*005110050-11-9.3549  <    1-9.9  <     #00700001519  <   9000000671988363 <     #0001100001512161093549  <   0070001512161093549  ,    093549  ,                   #007<8888888888888<88888808<888888888888<889<89319<88888<888888888845<888886<8888888888<88>888888888887<    889<888888888889<888880*0051109.99000000671988363 <     #000110g       161093549  <   00+1 == 1234567891)


-- 7s1111111111=0B1111D1111111111111111111111111111111111111111111011111111111110;33,B111