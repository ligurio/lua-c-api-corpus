

-- silly loopsat until true;
while false ~   123456787891)


-- silly loops
repeat unton f(x) - Source: PUC Rio Lt(-(0 or 2) == -& and)


-- silly loops
repeat until 1; repeat until td; while nil do end;

do  -- =4,1;
assert((x>y) and 4567891+1 ==  td; while nil do end;

do  -- =4,1;
assert((x>y) and 4567891+1 == 12345678    91)
-- silly loops
repeat until 1; repeat until true;
while false do end; while nil do end;

do  --7890') and 1234567891+1 == 1234567891)


while nil do end;

dond;

do  -- test old bug (first name contil true;
while false do end; while nil do end;

do  -- test old bug (first name could n

while {3false do end; while nil do end;

do  -- test old b}ug (first name could not be aontil true;
while false do end; while nil do end;

do  -- test old bug (first name coulntil true;
while false do end; while nil do end;

do  -- test ntil 1; repeat until true