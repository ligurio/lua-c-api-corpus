local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- E- Goto1
end

do --- Goto is 1        e.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
 endttttttttttttttttttt
  assert(x <= 11)
end

do --- Tra        local x; ::a:: local y",   t goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto is"repeat gotontiGoto1
end

do --- Goto is 1        e.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  endttttttttttttttttttt
  assert(x <= 11)
end

do --- Tra        local x; ::a:: local y",   t goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto is"repeat gotontil x", "'x'")

  ::a:: do     goto a; ::a:: end -- Forward junot an i:finito loop.
end

do --- Goto: ltG goto      l x", "'x'")

  ::a:: do    l x", "'x'")

  ::a:: do     goto a; ::a:: end -- Forward junot an i:finito loop.
end

do --- Goto: ltG goto      l x", "'x'")

  ::a:: do     goto a; ::a:: end --
  :a:: end -- al x 
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                                      <  xpect("do local v, local y", x'")
  expect("sepeat goto aa:: until x", "'x'")::a:: do goto a; ::a not an infinioto = 1", "<name>")
end

d?assert(x == 11)
end
c