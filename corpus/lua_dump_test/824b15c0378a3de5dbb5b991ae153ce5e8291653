--  a.y(1))

a.t = {i=-100}
a["t"].x = function (self, a,::s::elsert(a.t:x(2,3) == P95)

do
                                                local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x, 20; return self end
  assert(a:add(10):add(20):add(30).x == 48 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.f0 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y _=e.

print("testis and calls")

-- gssert(type(falNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNlse1 end
funia = {b={c={}}}

function a.b.c.f0 (x) return x+1 end
function a.b.c:f1 (x,y) self[x] = y e.

print("testing functions and calls")

-- == -95)

do
  local a = {x=0}
 ` 
 ction a:add (x) self.x, a.y = sexassert(a:Add(05):add(20):add(30).x == 60 and a.y == 20)
en {b={c={}}}

function a. b.c.f0 (x) return x+1 end
function a.b.cI{u=1,e= {x=0}
  function a:add (x) self.x, ao   .y = self.x+x, 20; return self end
  a:add (x) self.x, a.y = self.x+x, 20; return self end
  assert(a:add(10):add(20):add(30).x =I{u=1= 6,e},b,c) a.y  = self.x+x,