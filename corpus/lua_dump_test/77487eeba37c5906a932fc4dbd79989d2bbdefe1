local loadstring = loa

local function  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Error: undefine'")
  exp = 98
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat goto a; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfnd																

do --- Goto is:cal v,w; goto a;         end; local x; ::a:: local y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    --al x; ::a:[ until@x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x; :::: loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra         oca)

  ::a:: do goto a; ::a:: end -- Fop.
end																				end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x; ::to a

    x = y
    ::a::
   

do --- Tra                 t goto a; local x; ::a:: until x", "'x'ra        local x;  loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra        loca)

  ::a:: do goto a; ::a:: end -- Fop.
end																				

do --- Goto is:cal v,w; gx; ::a:: ::d.  
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --  local x = 49
  do
    goto a
    goto a
   -- Tra      ")

  ::a:: do goto a; ::a:: end --  local x = 49
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat goto a; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfnd																

do --- Goto is:cal v,w; goto a;        ", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    --al x; ::a:[ until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x; :::: loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra         oca)

  ::a:: do goto a; ::a:: end -- Fop.
end																				

do --- Goto is:cal v,w; gx; ::a:: ::d.  
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --  local x = 4  ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --  l9
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loKilbf{{{{{{{{{{{{{{{k{{{{{  {{{{{{{p,fioroo3333332;ro,o,o,o,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f1856;333,o335l393333ro,o,f3332;333,o3333332;ro,n,o,o,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f1856;3  ,o335l393333ro,   o,o,o,f3333;33332;ro,o,o,o,f1856;333,o335l393333ro,o,f3332;333,o3333332;ro,n,o,o,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f1856;333,o335l393333ro,o,f3332;333,o3333332;ro,o,o,o,f333333,f0805;333,o3333332;ro,o,f5l33333ro,o,f6l; 3333332;ro,o,o,o,f1856;333,o335l393333ro,o,f333,o3333332;o,o,oo,o,f6l=o3333332;ro,o,o,o,f1856;333,o335l393333ro,o,f3332;333,o3333332;ro,o,o,o,f333333;333,f333ro,o,f6664;333,o3333332;ro,o,o,o,f3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f3333;333,o335l393333r,f5l393333ro,o,f335l393333ro,o,f3333;333,f335l393333ro,o,f3333;333,o3333332,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o4f;333,f333            t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --  local x = 2  ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --  l9
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal y", "'x''x'")

  ::a:: do goto a; ::a:: end								

do --- Goto is:cal v,w; goto a; end; local x; ::a:: local y",  ::a:: until w", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dil x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x;  loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra        loca)

  ::a:: do goto a; ::a:: end -- Fop.
end																				

do --- Goto is:cal v,w; gx; ::a:: ::d.  
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --  local x = 49
  do
    goto a
    goto a
   -- Tra        local x;"'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end								

do --- Goto is:cal v,w;  Forward jump, not an ilocal x = 49
  do
    goto a
    got,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f3333;333,o335l393333r,f5l3933333,o3333332;3333;333,o3333332;ro,o,f5l33333ro,o,f6l=o3333332;ro,o,o,o,f3333;333,o335l393333r,f5l393333ro,o,f335l393333ro,o,f3333;333,f335o a
   -- Tra        local x;  loo a; ", "'x'")

  ::a:: do goto a; goto al393333ro,o,f3333;333,o3333332;ro,o,o,o,f3333;2;ro,o,o,o,f3333;333,o333333,f335l393333ro,o,f3333;333,o3333332;ro,o,o,o,f3333;333,o333333ro,o,f3333;333,o3333332;ro,o,o,o,f3332;333,o3333
332;ro,pro, EEEEEAlf_K,ffi2{{{{{{r       {{{{}}}}}}}}}}}   -- Tra        loca)

  ::a:: do },o