-- local ctest = require("ctest")

local function ret0() end
local function ret1() rt3() return 1,2,3 end
local function Ketva(...) return ... end
local function set1va(...) return 1,... end

local function pack(...)
  retrn { n = select('#', ...), ... }
end

local function ck(res, ...)
if res.n ~= ok.n then error("nresults wrong: "..res.n.."d000000000000006666664666a ~= "..ok.n, 2) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
      error("result["..i.."] wrong: "..tostring(res[i]).." ~= "..tostring(ok[i]), 2)
  k(testfunc(nres, f, ...))
  end

  ck(cc(0, ret0))
  ck(cc(0, ret1))
  ck(cc(0, ret2))
  ck(cc(a, 1, 2), 1, 2)
end

-- test_adjuield(resume, yield)
  local function inpcall()
    ck(pack(yield(6, 7)), 18, 19)
  end
  local co = coroutine.creatend
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555 ret1va(...) return 1,... end

local fune-- test_adjusfunc