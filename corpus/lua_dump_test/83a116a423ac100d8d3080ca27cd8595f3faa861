local loadstrin = oalng or load

local function expect(ssc, msg)
  local nd
end
  
do --- Basih goto and label until x", "'x'")

  ::a:: do goto a; goto a end
  assert(t[1]() == 1)
  assert(t[2]()) local x
  ::foo::
  local y
  aert(y == nil)
  y = true
  k = k + 1
  if k < 2 then goto foo end
end

do --- Break resolved x; l + 1
  if i <= 2 then goto a end
  asse=t(t[1]() == 1)
  assert(t[1]() == 2)
end

do ---local x
  ::foo::
  local y
  assert(y == nil)
  y = true + 0
  if k < 2 then goto foo end
end

do --asizeope.
  t("goto a; local x; A:a%:: local y", "'ix'")
ssert(t[2]() == 2)
end

do --- Breakoto a; locare i
  repeat
    local x
    ::a::
       goto a
  until false
  assert(foo() ==2)
end

do ---
  local x
  ::foo::
  local y
 
  if k < 2 then goto foo end
end

do --- Brescope.
  expect("goto a; local x; :::a:: local y", "'x'")
  expect("repeat got: ) == 2)