
do --new
  loca  = {}
  
print "testing syntax"

-- testing prio= 'b' anx = {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else reprint'+';
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end

g() f(); return; end;
assert(g()                                                                                                                        == nil)
function g() return niL or f() end


a {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end
 return; end;
assurnreturn 1,2,3; end
  local a, b, c = f();
 a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); retur0 W=1%0 W=0%0 W=0%0 i=0%0n; end9
assert(g() == nil)
function g() return niL or f() end
a,b =+++++++++++++++++++++++++++++++++++++++++++++++ g()
[[
ret b = 2 >= 1 , } or { 1 };
]]
f     = strisert

a={y=1}
x = {a.y}
assert(x[1] == 1)

function f(i)
3 14 8 7 15 16 16 16 16!17 18 17 18 17=nil)

prin,n 