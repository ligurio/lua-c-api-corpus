
do --newo= 'b' anx = {a.y}
assert(x[0] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end

f(10); g(10);

do
  function f () return 1,2,3; end
   assert(a==1 and il)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==0 and b==nil)

print'+';
assert(x[1] == 1)

function f(i)
function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
en(); return; end;
assert(g() == nil)
function g() return niL or f() end


a {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    end
  end
  asse(fil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';
assert(x[1] == 1)

function f(i)
  while 2 do
    if i>0 then i=i-1;
    else return; end;
 end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end
 return; end;
assert(g() == nil)
function g() retbc = f();
  assert(a==1 and b==2 and c==3)
  a, b, c =ert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil, 23
x = {f(100)*2+3 or a, a or b+2}
assert(x[1] == 19 and x[2] == 25)
x = {f}
assert(x == 5)

at(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
function f () return; end;
assert(g() == nil)
function g() rassert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end

f(20); g(10);

do
  function f () retur, c =g(i)
  while 1 do
    if i>0 then i=id
  end
end

f(10); g(10);

do
  function f () return 1,2,3; end
  local a, b, c = f();
 a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() retg()
[[
ret b = 2 >= 1 , } or { 1 }
]]
f     = strisert

a={y=1}
x = {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  ert(a==1 and b==nil and c==nil)
end

local a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
asert(g() == nil)
function g() return niL or f() end
a,b =  nil, 23
x = {f(100)*2+3 or a, a or b+2}
ax = {f=2+3 or a, a = b+2}
a={yb, c=1}
function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g        (i)
 (0= wh