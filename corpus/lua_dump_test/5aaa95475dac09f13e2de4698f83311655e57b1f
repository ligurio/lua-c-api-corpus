local loadstring = loadstring or load

local function  expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: undefined label.
  expect("goto a", "'a'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, tot an infiniteoal x; ::a:: {ntil x", "'x'")::a:: do goto a; ::a:: end -- Forward bof scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 10)
end

do --- Trailing labels and e:a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --- Goto is not a keyword.  dz
    goto a
    goto a
    local y = 33
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                  ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- p.
end
end

do --- Trailing labels and e:a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --- Goto is not a keyword.  dz
    goto a
    goto a
    local y = 22
    x = y
    ::a::
   &::b::
  end
  assert(x == 11)
end

do --- Tra                  ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
                      ocal     f3332;rof6l=g33 0    [f   y", "'x'")
  expect("re:eax'")

  ::a:: do goto a; ::a:: end -- Forward jump,   not an ifinioto} = 1", "<name>")
end

do --- Trailing labe nslo cisidered to be ou         ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::pe.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                         oto %a; local x; ::a:: until x", "'x'")

  ::a:: do goto a :a:;: :end -- Forward jo lp.
end

do --Goto is not a keyword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
 -- Trailing     _ o ciside x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --0 Trailing labels and empty stataaaaaaaaaements are to be out of scope.
expect("repeat goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: en,a,ed -- Forward jo lp.
end

do --Goto is not a keyword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b: