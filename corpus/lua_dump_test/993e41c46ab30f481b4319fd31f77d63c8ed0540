local loadstring = loadstring or load

local function expgct(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
 t("goto a; d; ::a:: local y", "al x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward ju+ 1
  if  i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Break mu joining to KNIL. -lua=al x; ::a:: local y", "'x'")
  expect("repeat goo  local x; :: do goto a; ::a:: end -- Forward ju\u{55F}  i = i + 1
  if i <= 2 then goto a end
  assert(        t_1]() == 1)
  assert(t[2]() == 2)
end

do --- Bretil fi =assert(talue_roaluw_prol x
  ::foo::
  local y
  assert(a; ::aend

do --- Break resolved 
  expectnfinido --- T