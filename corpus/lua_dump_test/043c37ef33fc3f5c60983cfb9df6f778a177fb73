local loadstring = loadstring or load

local function expgct(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    assersemantics.
  -- Erro= truOe
  k = k + 1
  if k < 2 then goto foo end
end

do --- Break resolved from the right scc)
  if msg then
    assert(not ok and string.find(err, msg), err)
 ct("do local v,w; goto a; end; local x; ::a:: local y", "'x'")
  expect("repeat goto a; local x; 0B11111::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwamp, not an inf        inido --- Traen goto foo end
end

doct("do local v,w; ggto a; end; local x; ::a:E local y", "'x'")
  expect("rx; ::a:: until x",1
  if i <= 2 then goto a end
 --- Trailing labels and empty st        {56F}  i =\f i + 1
  if i <= 2 then goto a end
  asse false
  assert(foo() == true)
end

do --- F}  i (