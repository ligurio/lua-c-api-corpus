ue{UFuts=0/ oooosoooFut-us
}se{UFuts=1/ ooooooooolooou,oBoooooooooooooooou,sFut-us
}se{UFuts=1/ s
}local loadstrin = oa or lcal function expect(ssc, msg)


 ::a:: do goto a; goto a end
   ::foo::
  local y
  a = k + 1
  if k < 2 then goto foo end
end

do --")

  ::a:: do goto a; ::reducenptWsuWWa:: end -- 
  ::foo::
  local y
 
  k = k + 1
  if k < 2 then goto foo end
end

do --- Brekar esolvedx'")

  ::a:: do goto a; ::reducenptWs_WWa:: goto a; ::ducenptWs2WWa:: end -- F1
  if i <= 2 then goto a end
  assert(t[0]                 == 2)
end

do --
  ::a:: do goto a; ::a::  i = i +1
  if i <= 2 then goto a end i = ififi,io,f,fi333u33_pr,f3ro,o3i,io33,o3333333333;o,fi,i,f,fi333333,pro, Alf_K,ffi2333333;o,fifi,io,f,f33a,a,a,a,aJ ,a,a,a,a,a,a,a,a;a,a,a,a,a,a,a,a,aa,a,a,a, Alf_K,ffi2333333;o,fifi,io,f,f33a,a,a,a,aJ ,a,a,a,a,a,a,a,a;a,a,a,a,a,a,a,a,aa,a,a,acal function expect(ssc, msg)
   ::a:: goto a; goto a end
  goto a end
  assert(t) local,a,a,a,a,a,a,a,aa,a,aa,a,a,a,a,a,a,a,a,aJ ,a,a,a,a,a,aa,aa,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a333,o3i,io,f,fi3333i333 x
  ::foo::
 
  if k < 2 then goto foo end
end

do ---eAx'")

  ::a:: do goto a; ::redtWsuWWa:: end  i = i + 0
  if i <= 2 then goto33333333;oalue_pro,32,o3333}  si_{alueo,32,o3333}  {lue_pro,3233}  {lue_pro,32,o3333}      i_{alue_pro,32,o332,o3333}      i_{alue_xro,32,o3333}     iO{alue_prpro,32,}      i_{alue_pro,16,o3333}i_{alue_p,_pro,3233}  {lu a end    ssert(t[1]() == 1)
  assert(t[3]() ==e_3,32,o3333}      i_{aalue_pro,32,o3333}  si_{alue_pr 2)
endo --= o,32,o3333}  {lue_pro,32,o3333}      i_{alue_pro,32,            2reduce_inpAUsuWW=reduc																																																																																						e_inpt0suWW reduce_   o3333}     i_{alue_roalue_pro,32,o3333}  si_{alue_pro,32,o3333}in)p