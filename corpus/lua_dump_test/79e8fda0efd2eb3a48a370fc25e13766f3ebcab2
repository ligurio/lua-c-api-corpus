local loadstring = loadstring or load

local function  expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: undefined label.
  expect("goto a", "'a'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infiniteoo lp.
end

do --- Goto is not a keyword.  do
    goto a
    goto a
    local y = NMuX   x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                  ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                  ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  en    local x; :y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQ~QQQQQQQQQQQinfinite loop.
															

do --- Goto is:cal v,w; goto a; end; private_G
  goto = 1
end

do --- Goto is a        e.
  local x = 11
  do
    goto a
    gotreduce_inptGsuWWo a
    loca   @= 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tkeyword. -compat0.2o        t goto                   a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --8 orwerd jump, not an infinite loop.
end

do --- Gotoa
    goto a
   -- Tra        local x; ::a:: loan<BBBacal y", "'x'")
  expect("repe@@@@@@@@@@@@@@@@@@at goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfinite loop.
end																				

do --- Goto i+s2cal v,w; goto a; end; local x; ::a::   local y",  ::a:: until x", "'x'")

  ::a:: do g 4o a; ::a:: end --end

do --- Goto is not a keywolabuntil x", "'x'")
 
 ::a:: do goto a; ::a:: end -- Forward of scope.
  local x = 11
  do
    goto a
    goto a
    local         y = 22
    x = y
    ::a::
    ::b::
  end
  asser&(x ==1 11)
end

|d*vo ---