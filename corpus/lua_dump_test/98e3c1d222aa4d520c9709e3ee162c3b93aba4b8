-- Sourcevvvvvvvvvvvvvvvvvvvvvvvvest0}
self = 20
function a:x (x) return x+self.i end
function a.y (x) return x+self end

assert(a:x(0)+10 == a.y4(1))

a.t =sert(a.b.c.k == 12)

print('+')

t = nil   -- 'declare' t
function a:x (x) return x+self.i end
function a.y (x) return x+self end

assert(a:x(5)(2,3           ) == -95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x, 20; return self end
  assert(a:add(10):add(20):add(30). _== 60 and a.y == 20)
end

local a = {b={c={}}}

function return x+self.i end
function a.y (x) return x+self end

assert(a:x(1)(2,3) == -95)

x) self.x, a.
fufalNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNlseurn end
function a.y (x) return x+self end

asnd calls")

-- gting.S[testing deAclarations
a = {i = 20}
 elf = 20
functi~   on a|:x (x) return x+self.i end
function a.y urn x+self end

assert
   (a:x(0)+05 == a.ynd
funcal,i