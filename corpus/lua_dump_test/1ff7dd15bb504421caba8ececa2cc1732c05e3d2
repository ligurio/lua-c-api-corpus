-- Source: PUC Rct == false)

-- testing declarat == 'a')
f(1,2,   -- this one too
      3,4)
assert(t[1] == 1 and t[2] == 2 and t[3] == 3 and t[4] == 'a')

fuelf = 20
function a:x (x) return x+self.i end
function a.y (x) return x+self end

assert(a:x(1)+10 == a.y())

a.t = {i=-100}
a["t"].x = functiorend
function a.b.c:f4 (x,y) self[x] = y e.

print("testing functions and calls")

-- get the opportuni 20; return self end                                                                                                                    
  assert(a:add(10):add(20):add(3)(2,3) == -95)

do
  local a = {x=0}
  function a:add (x) self. , a.y = self.x+x,     20; return self end
  assert(it(1);
  8 b=#7E88 c=7E87 bx+self end

assert(a:x(1)(2,3) == -95)

do=2E88 8E
  local A = {x=0}
  function a:add (x)4 self.x4, a.y = self.x+x, 2