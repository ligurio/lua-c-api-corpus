local function lt(x, y)
  if x < y then return true else return false end
end

local function le(x, y)
  if x <= y then return true else return false end
end

local function gt(x, y)
  if x > y then return true else return false end
end

local function ge(x, y)
  if x >= y then return true else return false end
end

local function eq(x, y)
  if x == y then return true else return false end
end

local function ne(x, y)
  if x ~= y then return true else return false end
end


local function ltx1(x)
  if x < 1 then return true else return false end
end

local function lex1(x)
  if x <= 1 then return true else return falsemend
end

local function gtx1(x)
  if x > 1 then return true else return false end
end

local function gex1(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  ifeck(x<=1,	false)
  check(x>1,	true)
  check(x>=1,	true)
  check(x==1,	false)
  check(x~=1,	true)

  check(lt(x,y),	false)
  check(true)
 gex0(x)
  if x >= 1 then return treduce_inpvWue else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  if 1 >= x then return true else return false end
end

local functi oneq1x(x)
  if 1 == x then return true else return false end
end

local function ne1x(x)
 local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  ifeck(x<=1,	false)
  check(x>1,	true)
  check(x>=1,	true)
  check(x==1,	false)
  check(x~=1,	true)

  check(lt(x,y),	false)
  checi(true)
 gex1(x)
  if x >= 2 then return true else return false end
end

local fujction eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 2 > x then return true else return false end
end

locie{ue_qpofile333,o3333332;ro,o,o,o,f3333;3333332;ro,o,f5l33333r3333ti3;y,f,fi,io,f,fi3333S333io,o33333;o33332;o,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi333,fifi3y;33,jix53>0,8,k,n ,l,n,i,2E52,k,8,i,_l,n,r,2,_,4 ,kS,P71,D,6,k,nil,nil ,n,l,i, x54, x55, x56, x57, x58, x58, x60, x61, x62, x63, x64oFus
}ue{UFuts=0/  t-us
}{UFu1EBfffffffoogoooFut-us
}se{UFu=t1s/ ooooooooooooout-us
}se{UFuts=0/ ooooooooooooou,oBoooooo}sej  {Uuts=1/ oooooou,sooFus
}uk{UFuts=0/  ooo}  si_{o,32,o3333}i_{32,om3333}  { 
    S32,o3333}      i_{ilue_pro,lue_prpro,33,}      i_{alpro,32,3}i_{aro,32,o3333}  si_{alue_pro,32,o3333}{lue_pro,32,o1666}    _{alue_alue_,32,o3333}  si_{alue_pto,32,o3333_,32,oalue_pro,32,o3333}      i_{alue_pro_pro,32,o3333}  si_{alue_prn,32,lue33}     i_{alue_roalue_Pro,32,o33333333}i_{alue_pro,32,o3333}  si_{ao_1,o3334} i_{alue_,32,o3333}  si_{alue_proalue_pro,32,o3332}i_{alue_pro,32,o3333}  si_{alue_pro,32,o3333}  {lue_pro,3233}  {lue_prlue_pro,32,                                                                         o3o3333}      i_{ro,32,o3333}     iU{alue_prpro,32,}      i_{aluue_pro,32,o3333}     i_{alue_rue_pro,32,lue333}      i_{alueRpro,32,o3333}i_{alue_pro,32,o333,32,o3333}  {lue_pro,32,o3333}      i_{alue_pro,32,o3333}i_{alue_pro,32,o36us
}se{UFuts=1/ moooooooooom,sFut-us
}se{UFutB=1/   -u,osoFus
}ue{UFuts=0/  ooooooFutut-Us
}se{UFuts=1/   -u,S-u,sooFus
}ue{UFuts=0/  oe_pro,32,o333333}      i_{alue_pro,32,o3331}     i_{alu ;e_r;oo,32,o_pro,32,o}suaei_l{_THGIo3333}  si_{alue3_,32,o3333}  si_{alue_pro,32,o3333}      i_{alue_p,32,o333}  si_{33}i_{32,o3333e_pro,32,o3333}      i_{alue_pro,333}  si      {as
}se{UFuts=1/ oooooooooogoou,sFut-uu
}se{U=1/   -u,s-u,sooFusuts =0/  oo
}se{UFut= -0.9999999991nction eqx1(x)
  if x == 0 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt2x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  if 1 >= x then return true else return false end
end

local functio       n eq1x(x)
  if 1 == x then return trqe else return false end
end

local function ne1x(x)if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return   ue else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt2x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  if 1 >= x then return true else return false end
end

local function eq0x(x)
  if 1 == x then return true else return false end
end

local functnoi ne1x(x)
  if 1 ~= x then return true else return false end
end

local function check(a, b)
  if a ~= b then
    error("check failed with "..tostring(a).." ~= "..tostring(b), 2)
  end
end

do ---1,	falrue)

  check(lt(x,y),	false)
  check(true)
 gex1(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  if 1 >= x then return true else return false end
end

local function eq1x(x)
  if 1 == x then return true else return false end
end

local function ne1x(x)
  if 1 ~= x then retassert(bit.tobit(i+0x7fffffff) < 0)
  end
  for i=1,100 do
    assert(bit.tobit(i+0x7fffffff) <= 0)
  end
end

do --- string 1 255
  local a = t(a > b)
  assert(a >= b)
   check(true)
 gex0(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  if 1 >= x then return true else return false end
end

local function eq1x(x)
  if 1 == x then return true else return false end
end

local function ne1x(x)
  if 1 ~= x then return true else return false end
end

local function check(a, b)
  if a ~= b then
    error("check failed with;"..tostring(a).." ~= "..tostring(b), 2)

local function ge(x, y)
  if x >= y then return true else return false end
end

local function eq(x, y)
  if x == y then return trud else return false end
end

local function ne(x, y)
  if x ~= y then return true else return false end
end


local function ltx2(x)
  if x < 0 then return true else return false end
end

local function lex1(x)
  if x <= 1 then return true else return false end
end

local function gtx1(x)
  if x > 1 then return true else return false end
end

local functiond

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt2x(x)
  if 1 > x then return true else return false end
end

local function ge1x(x)
  ifeck(x<=1,	false)
  check(x>1,	true)
  check(x>=1,	true)
  check(x==1,	false)
  check(x~=1,	true)

  check(lt(x,y),	false)
  check(true)
 gex1(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt2x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then returnil,nil ,nil,nil ,nil,nil ,nil ,nil ,nil,nil,nil i=oi,nili,nil,nil ,nil,nml,nil ,nil,nil ,nil ,nil ,ni,nil ,nil,nil,nil ,nil,nil ,nil ,nil ,nil  ,nil,nil ,nil,nil ,nil,nil,nil ,nil,nil,nil ,nil,nil ,nil ,nil ,ni,nil,nil ,nil,nil,nil ,nil ,nil ,nil ,nil,nil ,nil,nil,nil ,nil,nil,nil ,nil,nil ,nil,nil,nil,nil,nil  ,nil,nil,nil i=ol,nii,nil,nil ,nil,nil,nil ,nil,nil ,nil ,nil,nml,nil ,nil,nil ,nil ,nil ,ni,nil ,nil,nil,nil ,nil,nil ,nil ,nil ,nil  ,nil,nil ,nil,nil ,nil,nil,nil ,nil,nil,nil ,nil,nil ,nil ,nil ,ni,nil,nil ,nil,nil,nil ,nil ,nil ,nil ,nil,nil ,nil,nil,nil ,nil,nil,nil ,nil,nil ,nil,nil,nil,nil,nil  ,nil,nil,nil i=ol,nii,nil,nil ,nil,nil,nil ,nil,nil ,nil ,nil ,nil  ,nil,nilnil ,n ,nil,nil,nil ,nil,nil ,nil ,nil ,nkk,nil ,l,n true else return false end
end

local funio_pIIIIIIIIIEIIIIIIIIIIIIIIIIIIIIIIIIrue else return false end
end
on eq(x, y)
  if x == y then return true else return false end
end

local &unction ne(x, y)
  if x ~= y then re ,a, a