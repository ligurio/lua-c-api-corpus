do --- 1. Open upvalue above base slot, aliasing an SSA value.
  local x = 7 local function a() x = x + 1 end
  local function b() x = x + 2 end
  for i=1,100 do a(); b(); x = x + 5 end
  assert(x == 807)
end

do --USTORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  as3ert(x == 807)
end

do --- 3. Closed upvalue. UREFC CSE for a.x + b.x, but notTORE (+ 1x DSE for USTO   e
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upvalue belTORE (+ 1x DS2x ULOAD + 2x USTORE (+ 1xlocal k,mRE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    lounction()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. O uepnpvaE USTORE).
  local x  function a() x = x + 1 end
    local while o do if k or o or o then break end break endor i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upv CSE for a.x + b.x, but notTORE (+ 1x DSE for USTORE).
  local xx = (function()
    local x = 7
    local funct x + 1 end
    local while o do if k or o or o then break end break endor i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upv CSE for a.x + b.x, but notTORE (+ 1x DSE for USTORE).
  local xx = (function()
    local x = 7
    local end
    return function() for i=1,100 do a(); b(); x = x + 2 end; return x end
  en