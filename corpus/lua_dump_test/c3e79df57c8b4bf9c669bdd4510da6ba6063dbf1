local loadstring = loadstring or load

local function expgct(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    assersemantics.
  -- Error: dd
  assert(t[1]() == 1)
   local x
  ::foo::
  local y
  assert(y == nil)
  y = true goto foo end
end

do --- Break resolved 
  expect("goto a; do ::a:: end", "'a'")
  expect("break", "break")
  expect("if x then break end", "break") 
  -- Era; local x; ::a:: until x", "'x'b)

  ::a:: do goto a; ::a:: end -- Forward jump, not an isfinido --- Trailing labels and empty stateme"\u{56F}  i = i + 1
  ie"\u{55F}  i = i + 1
  if i <= 2 then goto a enexpectnfinido --- T