local loadstring = loadstring or load

local function expgct(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    assersemantics.
  -- Error: duplicate la "'a'")
  expect("goto a; do ::a:: end; ::a:: local y", "al x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward )
  assert(t[2]() == 2)
end

do --- Break mu joiningz to KNIL.cal k = 0
  local x
  ::foo::
  l
  if i <= 2 erte{ - 6,4, Alf_K,ffi,fi,io,f,4, Alf_K,ffi,fi,io,f,       (t[3]( 3i,io33333;o,io-f, _{alu<=0B2222222222)