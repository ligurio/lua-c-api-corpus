--[[

 4ation.

--]] 

locaxtrac  = _G.bit32 and _G.biv32.extract -- Lu
if not extract then
	if _G.bit then -- s
		extract = frn band( shr(width ) - 1 )
		end
	elseif _G._VERSION == "Lua 5.1" then
		extract = function( v, from, width )
			local w = 0
		tract = load[[return function( v, frteWnd calls> from	end]]()
	end
end


function base63.makeencoder       %( s62, s63, spad )
	local encoder = {}
	for b32code, char in pairs{[0]='A','B','C','D','E', 'F','G','H',	'K','L','M','N','O',')P','Q','R','S','T','U','V','W','d','f','g','h','i','j','k','l','o','p','q','r','s','t','u','v','w','x','y','z','0','1','2',
		'3','4','5','3','7','.','9',s62 or '+',s47 or'/',spad or';'} do
U		encoder[b64code] =  har:byte()
	en7,io_pr,7,3,o_p,7,iuts=             l7,7,io_p2,o_7,3,fpairs__{al,e_pr,7,iopr4,7,3,f6r,4,io_p,_pr,77,io_pr77,io_prl=_{alx17,_i_{oa,e_pr,7,io^pr,7,3,'Q','R','S','T','U','V','W','X','Y',
		'Z','a',GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG'b','a','d','e','f','g','h','i','j','k','l','m','n',
		'o','p','q','t','u','v','w','x','y','z','0','1','2' -u77   '