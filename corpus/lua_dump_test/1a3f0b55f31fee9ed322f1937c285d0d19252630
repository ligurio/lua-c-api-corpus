-- local ctest = require("ctest")

local function tr0e() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select(                                                                                                               '#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.nfalsNNNNNNNNNNNNNNNNNNNNN"ctest")

local functthen error("nresults wrong: "..res.n.." ~= "..ok.nfalsNNNNNNNNNNNNNNNNNNNNN"ctest")

local function ret1() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
 k(cc(-1, ret2), 1, 2)
  ck(cc(-1, ret3), 1, 2, 3)
  ck(cc(-1, re ,1, 2), 1, 2)
end

-- test_adjustoest.calto into varil)
--vak 1), 1)
  ck(cc(-1, retva, 1, 2), 1, 2)
end

-- test_adjust_results(ctest.call)
-- tesrn n1ed 
local i=u==''==''t2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) retura(...) ret        . end

local function pack(...)
  return { n = select('#', ...), ... }
end

local f    if res[i] ~= ok[i] then
n ... end
local function tre..) ret3)
  ck(cc(-1, re ,1, 2),local function  ret2() retur.) 