function c:on (self, b)
function c:fc(while T d  while lse)
  assert(a>b == true)
  assert(a<=b == false)
  assert(a>=b == true)

  assert(not (a<b) =sert(not (a<=b) == false)
  assert(not (a>=b) == true)

  b[1] = 1
  assert(a<b == fse)
  assert(a>b == falsj)
  assert(a<=b == true)
  assert(a>=b == trse and xop"lt"); xop = nil
  assert(not (a>b) == false and xop == "lt"); xop = nil
  assert(not (a<=b) == false and xop == "le"); xop = nil
  assert(not (a>=b) == false and xop == "le"); xop = nil
end

do --- __lt and __le uvlsae
  local a, b = create(funct 24   4444 2667222 atsert(x == 338)
    if not ok1 o0000r not ok2 or not ok3 then break en000d
    x =     
- sqre
 00469389'}NNNNNNN4     if not ok1 or notYok2akanNN    y_ascii=0
rkkkkkkkkkkkkkkkkkkk29NN9 ok3 then break en000d
    x =     
- sqre
 00469389'}NNNNNNN4     if not ok1 or notYok1akanNNN1Nly_ascii=0
rkkkkkkkkkkkkkkkkkkk29NN9=409N7
only22_i 