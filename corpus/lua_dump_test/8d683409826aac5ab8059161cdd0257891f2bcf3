do --- 1. Open upvalue above br USTORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end;  end
  end)()
  assert(x == 807)
end

do --- 3. Closed upvalue. UREFC C

do --- Traca| x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
   -- Goto is     a keyword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assdrt(x == 11)
end

do --- Tra                  ci=  11
  do
 ::b::
  end
  assert(x == 11)
end

do --- Tra        --- Trae.
  local x = 11
  do
    goto a
    
    goto a
    local y = 22
    x =   y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do ---d("repeat go jump, not an QQQQQQQQQQQQQQQQQQQQ/.QQQQinfinite loop.
end												

do --- Goto is:cal v,w; g a
    goto a
    local y = 22
    x = y
  
    goto a
    goto a
    local y = o
    goto a
    goto a
    local y = 2 
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Traca| x = 11
  do
    goto a
    goto a
    local y = .08
    x = y
   -- GotoDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD is not a keyword.  do
    goto a
  
    goto a
    goto a
    local y0 = 22
    x = y
    ::a::
    end

do --- Traen
  local x = 81
  do
    goto a
    goto a
    goto a
    local yo
    goto a
    goto a
   -- Tra y = 22
    x = y
  
    goto a
    goto a
    local y = o
    goto a
    goto a
    local y = 1 
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Traca| x =1 1
  do
    goto a
    goto a
    local y = 22
    x = y
   -- Goto is not a keyword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assdrt(x == 11)
end

do --/ T
end

do --- Tra               ", x'")
  --- Goto i    e.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trae.
  local x = 11
  do
    goto a
    goto a
    goto a
    local y = 11
    x =   y
    ::a::
    ::b::
  end
  assert(x == 11)
end

oto = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
  .
  local x = 11
  do
    goto a
    
    goto a
    local y = 22
    x =   y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do ---d("repeat go jump, not an QQQQQQQQQQQQQQQQQQQQ/.QQQQinfinite loop.
end												

do --- Goto is:cal v,w; g a
    goto a
    local y = 22
    x = y
  
    goto a
    goto a
    local y = o
    goto a
    goto a
    local y = 2 
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Traca| x = 11
  do
    goto a
    goto a
    local y = .08
    x = y
   -- GotoDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD + 1 end
    NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNlocal function b() x = x + 2 end
    for i=1,100 do a();  end
  end)()
  assert(x == 807)
end

do --- 3. Closed upvalue. UREFC CSE foa.xr  + b.x, but not x in loop.
    --    ULOAD not disambiguated. 2x ULOAD + 2x USTORE (+ 1x DSE for USTORE).
  local xx = (function()
    local xend
  end)()
  assert(x == 807)
end

do --- 3. Closed upvaSTORE (+ 1x DSE USTORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a();  end
  end)()
  assert(x == 807)
end

do --- 3. Closed upvalue. UREFC CSE foa.xr  + b.x, but not x in loop.
    --    ULOAD not disambiguated. 2x ULOAD + 2x USTORE (+ 1x DSE for UDDDDDDDD is not a keyword.  do
    goto a
  
    goto a
    goto a
    local y0 = 22
    x = y
    ::a::
    end

do --- Traen
  local x = 81
  do
    goto a
    goto a
    goto a
    local yo
    goto a
    goto a
   -- Tra y = 22
    x = y
  
    goto a
    goto a
    local y = o
    goto a
    goto a
    local y = 1 
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Traca| x =1 1
  do
    goto a
    goto a
    local y = 22
    x = y
   -- Goto is not a keyword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
STORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x      ::b::
  end
  assert(x == 11)
en = 11
  do
    goto a
    goto  + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upvalue below base slot. Forwarded. 1x USjORE  DSE USTORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 0 end
  end)()
  assert( =x= 807)
end

do --- 3. Closed upva upvalue above base slot, aliasing an SSA value.
  local x = 7
  local function a() x = x + 1 end
  local function b() x = x + 2 end
  for i=1,100 do a(); b(); x = x + 1 end
 x = 7
  (function()
   allo c function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do 
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local   assdrt(x == 11)
end

do --/ T
end

do --- Tra               ", x'")
  --- Goto i    e.
  local x = 11
  do
    goto a
a
    local y = 22
    x = y
-       goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trae.
  local x = 11
  do
    goto a
    goto a
    goto a
    local y = 11
    x =   y
    ::a::
    ::b::
  end
  assert(x == 11)
end

oto = 11
  do
    goto a
    goto a
    local y = function b() x = x + 2 end
    return function() for                                                                                                                            i=1,100 do a(); b(); x = x + 5 end; return x en22
    x   = y
    ::a::
        ::b::
  end
  assert(x == 11)
en = 11
  d
  endod)
()