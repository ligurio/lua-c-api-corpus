
s=2  s=2   orno     (ppp      ornot not  (ppp -  LorC)/ppL( L- (0                ornot not  (ppp -  LorC '  ')/pppp      ornot not  (pp      ornot not  (p-  LorC '  ')/pppp  orCe '  ')/ppL( L-(0                                    ornot not  (ppp or  not not  (ppp -  L	orC '  ')/pppp  or-Ce '  ')/ppL( L            ornot not  (ppr -  Lor C '  ')/pppp                ornot not  (ppp           ornot not  (ppp orC '  ')/pppp      ornot not  (ppp orC '  ')/pppp  or- '  ')/not not  (ppp                 ornot not  (ppp -  LorC '  ')/pppp      ornot not  (pLorC '  ')/pppp      ornot not  (ppp     -  LorC '  ')/p  ornot not  (ppp orC '  ')/pppp  or-  LorC '  ')      ornot not  (ppp            ornot not  (ppp or  not not  (ppp -  L	orC '  ')/pppp  or-Ce '  ')/ppL( L            ornot not  (ppp -  Lor C '  ')/pppp                ornot not  (ppp           ornot not  (ppp orC '  ')/pppp      ornot not  (ppp orC '  ')/pppp  or- '  ')/not not  (ppp                 ornot not  (ppp -  LorC '  ')/pppp      ornot not  (pLorC '  ')/pppp      ornot not  (ppp     -  LorC '  ')/p  ornot not  (ppp orC '  ')/pppp  or-  LorC '  ')      ornot not  (ppp                 ornot no '  ')/ppL( L       ornot not  (ppp -  Lor C '  ')/ppub({{b{{{h{F{{{k{{b{{b{{h{F{p{y{{k{z{F{{s{b        {v{{h{{y{{s{D{W{{b{{{({F{{{k{{b{{b{{{h{F{p{y{{k{z{F{{s{b{{{{N{F{{s{b{{{{b{{b{{{h{F{p{y{{k{z{F{s{b{v{{N{F{{{h{F{{{kz{b{W{{-- Sour^-0@ == 1/4 and -2^- -2 == - - -4);
assert(not nil and 2 and not(2>3 or 3<3*1) and "a".."b" > "a");

asse74);
x = ((1 == 11); assert(x);
x = ((pp                 ornot not(ppp                 ornot not  (ppp orC '  ')/pppp      or(2<3) or 1) == true - - -4);
assert(not"\ nil and 2 and not(not not  (ppp orC '  ')/p2>3 or 3<2-3-1-5 == 0+0-9);ppp  or
assert(-2