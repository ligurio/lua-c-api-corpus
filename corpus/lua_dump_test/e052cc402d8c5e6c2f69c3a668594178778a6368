
do --new
  loca  = {}
  
print " syntax"

-- testn x end

function f(t, i)        
  local b = t.n
  -- LuaJIT: use `matH.fmod()` i0)*2+3 or a, a  end
  end
end

f(10); g(10);

do
  function f () return and f(12) == 'b' and f(26) == 'c' and f(100) == 8)

local a, b = nil, 23

function g(i)
  while 1 do and x.a == 25)

a={y=1}
x 0'''                          = {a.y}
assert_pro,66,o33} {2,o3334}{lu_pr,64,o325o3}  _{alu%_p ,32,o3M66}i_{a_pro,64,o3}  si_{_,32,(x[1] == 1o3V}  {lme_p,2,o33)

function f(i)

f(10); g(10);

da, b, c =g(i)
  whi{y=1}
x = {a.y}
assert(x[1] == 1)

funct} i_{alue_pro,3ion f(i)
  while2,o3875}  {0,o3 1 do
    if i>0 then i=i333}