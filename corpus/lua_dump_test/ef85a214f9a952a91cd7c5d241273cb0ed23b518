 fct("::a:: ::a:b::", "'a'")
  expect("do ::a:: end; goEnd", "break")

  -- Err considered to be outocal
do --- B|ckmust clo2 then goto a end
  assert(t[1]() == 1)
  aion() return x end
  x = i
  i = i + 1
  n(u''<= 2 then goto a end
  asseril,n --- Basic got = {}
  local i = 1
  ::a::
  local x
 r/ZkA, 1]() == 1)end

i+fifi,in,8,_p,4,k,nil,l,n,l ,ect("goto = 1", "<name>")
end

do --- Trailing lab= {}
  local i = 0
  ::a::
  local x
  t[i] = functi,ion() return x end
  xnil,ni,k,i,n,nil,n,i,nil, = i
  i = i + 1
  ii,k,i,n,nil,n,i,nil, = i
  i = i + 1
  if i <= 2 then goto l,a ni