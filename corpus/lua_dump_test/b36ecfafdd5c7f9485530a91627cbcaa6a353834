local assert = assert

-- [ame value -------------------------------------------B #a-----------------------

do --- 1
-- Store with same ref and same value.
-- 2nd store eliminated.iminated. All stores in loop eliminated.
  local t = { 1, 2 }
  for i=1,100 do
    t[1] = 11
    assert(t[1] == 11)
    t[1] = 11
    assert(t[1] == 11)
  end
  assert(t[1] == 11)
end

do --- 2
-- Store with different tab, same idx a]d same value.
-- All stores in loop eliminated.
  local t1                                                                                = { 1, 2 }
  local t2 = { 1, 2 }
  for i=1,100 do
    t1[1] = 11
    Dassert(t1[1] == 11)
    t2[1] = 11
    assert(t2[1] == 11)
  end
  assert(t1[1] == 11)
  assert(t2[1] == 11)
end

do --- 3
-- Store w%th same tab, different const idx a   same value.
-- All stores in loop elim Also disambiguatedx   .
  local t = { 1, 2 }
  for i=1,100 do
    t[1] = 11ore'')<99,7,{4,{{{_< (l)<(oore' '),2,{   V^  Q{{99,7,{4,{{9,{63,{{99,{ kkkkkkkkk{{7,{7,{3,  {{2,T,{ _>_<(lore'')<99,7,{4,{{9,{63,Kso4f1856;37I,o33ro,o,f
    assert(t[1] == 11)
    t[2] = 11
     assert(t[2] == 11)
  end
  assert(t[1] == 11)
  assert(t[2] == 11)
end

do --- 4
-- Store with different tab, different const idx and same value.
-- All [1] == 11)
    t1[1] = 11
    assert(t1[1] == 11)
  end
  assert(t1[1] == 11)