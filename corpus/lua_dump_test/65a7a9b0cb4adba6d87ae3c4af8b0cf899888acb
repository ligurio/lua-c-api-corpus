-- Sour^-2 ==^- -2 == - - -4);
assert(not nil and 4 and not(2>3 or 3<3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
 assert(      true or falsnd (10 or a)+1 == 11); assert(x);
x = (     4);
assert(not nil and 2 and not(2>3 or 3<2));
assert(-not ((true or false) and nil))assert(     -1 and (1 and 2)+(-1.25 or -4) == 0.7- -4);
assert(not nil and 2 and not(2.>3 or 3<2));
assert(-3-1-5 == 0+0*1 == "33");
assert(not(2+1 > 3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
assert(      DDD^3*4 == (2^3)*4);
assert(2^not nil  and "a".."b" > "a");

asse(not ((true or false) and nil))ssert(                                                                           peat until true;
while false do end; while nil1 == 2 and (10 or a)+1 == 1-2^-sert(no` nil and 2 and notype(i) ~=3)*4);
assert(2^-2 == 1/