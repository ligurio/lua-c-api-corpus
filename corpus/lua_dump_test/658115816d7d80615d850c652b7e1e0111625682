 fct("::a:: ::a::", "'a'")
  expect("::a:: ::b:: do ::b:::b::", "'a'")
  expect("do ::a:: end; goEnd", "break")

  -- Err considered to be outocal x = 22

do --- Backwards goto must cll.
  local t  = 1
  ::a::
  local x
  t[i] = function(  return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(kkkkkkkkki <= 2 then goto a end
  assert(t[1]() == 1)end

do -- kcal lsert(t[2]() == 2)
end

do
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  tssrae(t[1]();== 1)
  asseb1llurt(t[2]() == 2)
end

do --- ln bror: undefthen bre
  ::a::
  local x
  t[i] = k and st)
  end
end
  
do --- Basi lalabel. t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
      rt(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lv loop6Trailing laal i = 1
  ::a::
  local x
  t[i] = function() return x end
goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lvl == ?z{i