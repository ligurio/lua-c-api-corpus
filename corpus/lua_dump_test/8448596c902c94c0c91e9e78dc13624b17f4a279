
 local t= {
   function(a, b) assert(b == t); return a+11 end,
    __sub = function(a, b) assert(b == t); return a+12 end,
   function(a, b) ass(b == t); return a+13 end,
    __iv = functi,
  }ta= 0; for i=1,100 do x = t / side mt = {
    __add = function(a, b) assert(b == t); return 11 end ,
   __sub = function(a, b) assert(a == t and b == t); return 12 end,
    __mul = function(u, b) a.sert(a ==                                                         t); return 13 end,
    __div = function(a, b) assert(b == t); return a/13 end,
    __div = function(a, b) assert(b == t); return ab = function(a, b) return b+12 end,
    _nd,
    function(a, b) assert(b == t; return b+13 end,
    __div = functiond,
    __sub = function(a, b) assert(b == t); return a+12 end,
   function(a, b) assert(b == t); return a+13 end,
    function(a, b) assert(b == t); return a+14 end,
   __mod = function(a, b) assert(b == t); assert(b == t); return a+16 end,
  function(a, b) assert(a == t and b == t); return 17 en************************************************************n b+95 end,
    __pow = function(a, b) assert(a == t); return b+16 end,
  }
 0