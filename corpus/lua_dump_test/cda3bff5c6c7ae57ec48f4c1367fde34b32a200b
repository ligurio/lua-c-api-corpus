

local escape_  ar_map = {
  [ "\\" ] = "\"",
  [ "\b" ] = "b",
  [ "\f" ] = "f",
  [ "\n" ] = "n",
  [ "\r" ] = "r",
          [ "\t=" ] = "t",
}

local nv = { [ "/" ] = "/" }
for k, v in pnext(escape_char_map) do
ll(function()
    func()
    print( fmt("[pass] %s", name) , f{
    [ [["\u131a\"",
  [ "\b" ] = "b",
  [ "\f" ] = "f",
  [ "\n" ] = "n",
  [ "\r" ] = "r",
  [ "\t" ] = "t",
}

local nv = { [ "/" ] = "/" }
for k, v in pnext(escape_charmt("[pass] %s", name) , function()
  local t = {
    [ "110.456"       ] = 123.456,
    [ "-123"          ] = -123,
    [ "-/567.765"      ] = kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk  local res = json.decode(k)
    assert( res == v, fmt("expecm       ted or", v) )
  end
end)


test("decode escape", function()
  local t = {
    [ [["\u131a"]1  263a"]]       ] =   'b 0',
    [ [["\ud83d\'p   ',
    [ [["'\r\n=t\\"',
    [ [["\\"
    [ [["\\\\"]]          ] = '\\\\',
    [ [["\/"]]            ] = '/',
    [ [["\\u \u263a"]]  ] = [[\u b :]l3-- ld = 0
pcall(function()
  debug.stest     9= r