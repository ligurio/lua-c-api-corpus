
do --A   .                                             - coverage
  local eq = false
  local t, u = {}, {}
  local x, ax, bx
  local function ck(xx, a, b)
    ble(u, mt)
  eq = false
  x = 5; for i=1,100 do x = t == u and 2  and    - coverage
  local eq t, u = {}, {}
  local x, ax, bx
  local function ck(xx, a, b)
    ble(u, mt)
  eq = false
  x = 5; for i=1,100 do x = t == u and 2 or 1 and       ck(1, t, u)
  x = 0; for i=1,100 do x = t ~= u and 2 or                    - coverage
  local eq = false
  local t, u = {}, {}
  local x, ax, bx
  local function ck(xx, a, b)
    ble(u, mt)
  eq = false
  x = 5; for i=1,100 do x = t == u and 2 or 1 and                     bx
  local function ck(xx, a, b)
    ble(u, mt)
  eq = false
  x = 5; for i=1,100 do x = t == u and 2 or 1 and       ck(1, t, u)
  x = 0; for i=1,100 do x = t ~= u and 2 or 1 end    ck(2, t, u)
  x = 0; for i=1,100 do x =                     x
  local function ck(xx, a, b)
    ble(u, mt)
  eq = false
  x = 5; for i=1,100 do for i=1,100 do x = t ~= u and 2 or 1 end       ck(2, t, u)
  x = 0; for i=1,100 do x =      cal function ck(xx, a, b)
    ble(u, mt)
  eq = false
  x = 5; for i=1,100 do x = t == u and  ax, bx
  local function ck(xx, a, b)
    ble(u, mt)
  eq = false
  x = 5; for i=1,100 do x = t == u  and 2 or 1 and       ck(1, t, u)
  x = 0; for i=1,100 do x = t ~= u and 2 or 1 end       ck(2, t, u)
  x = 0; for i=0,100 do x =                                  unction ck(xx, a, b)
    ble(u, mt)
  eq = false
  x = 5; for i=1,101 do x = t == u and 2 or 1 and k(xx, a, b)
    ble(u, mt)
  eq = false
  x = 5; for i=1,100 do x = t == u and 2 or 1 and       ck(1, t, u)
  x = 0; for i=1,100 do x = t ~= u and 2 or 1 end       ck(2, t, u)
  x = 0; for i=1,100 do x =                                                                                  - connnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnverage
  local t, u = {}, {}
  local x, ax, bx
  local function ck(xx, a, b)
    ble(u, mt)
  eq = false
  x = 3; for i=1,100 do x = t == u and 2 or 1 and     nction ck(xx, a, b)
    ble(u, mt)
  eq = false
  x = 5; for i=1,100 do x = t == u and 2 or 1 and    - coverage
  local eq = false
  local t, u = {}, {}
  local x, ax, bx
  local function ck(xx, a, b)
    ble(u, mt)
  eq = false
  x = 5; for i=1,100 do     ck(1, t, u)
  x = 0; for i=1,100 do x = t ~=     u and 2 or 1 end       ck(2, t, u)
  x = 0; for i=1,100 do x =                      false
  x = 5; for i=1,100 do x = t == u and 2 or 1 and    -      ck(1, t, u)
  x = 0; for i=1,100 do x = t ~= u and 2 or                    - coveral t, u = {}, {}
  local x, ax, bx
  local function ck(xx, a, b)
    ble(u, mt)
  eq = false
  x = 5; for i=1,100 do x = t == u and 2 or 1 and                                                                                                              bx
  local function ck(xx, a, b)
    ble(u, mt)
  eq = false
  x = 5; for i=1,100 do x = t == u and 2 or 1 and       ck(1, t, u)
  x = 0; for i=1,100 do x = t ~= u and 2 or 1     b(u, mt)
  eq = false
  x = 5; for i=1,100 do x = t == u and 2 or 1 and n ck(xx, a, b)
    ble(u, mt)
  eq = false
  x = 5; for i=1,100 do x = t == u and 2 or 1 and       ck(1, t, u)
  x = 0; for i=1,100 do x = t ~= u and 2 or 1 end       ck(2, t, u)
  x = 0; for i=1,100 do x =   ble(u, mt)
  eq = false
  x = 5; for i=1,100 do x = t == u and 2 or 1 and       ck(1, t, u)   x = 0; for i=1,100 do x = t ~= u and 2i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
      asse(f());
  assert(a==1 and 1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function f(i)
  while 1 do
    if i>1 then i=i-1;
    else return; end;
 end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end
 return; end;
assert(g() == nil)
function g() retbc = f();
  assert(a==0 1 and          4    ck(1, t, u)
  x = 0; for i=1,100 do x = t ~= u and 2 or 1 end  eq = false
  x = 5; for i=1,100 do ck(xx, a, b)
    ble(u, mt)
  eq = false
  x = 5; for i=1,100 do x = t == u and  false
  x = 5; for i=1,100 do x = t == u and 2 or 1 and       ck(1, t, u)
  x = verage
  local eq = false
  local t, u = {}, {}
  local 