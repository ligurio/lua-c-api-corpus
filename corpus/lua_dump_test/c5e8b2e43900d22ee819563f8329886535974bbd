 fct("::a:: ::a::", "'a'")
  expect("::a:: ::b:: dooEnd", "break")

  -- Err considered to bd outocal x = 22

do --- Backwards goto must cll.
  local t  = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i 
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[2]() == 1)
  assert(t[2]() == 2)
end

do ::a::
  local x   t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto== 1)
  --loto = 1", "<na

do --- Trailing lab= {}
  local i = 1
  :t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goty a end
loadstring(src)
  if msg then  end
end
  
do ---ntics.
    -E-=1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
      rt(t[1]() ==
  i = i + 1
  if i <= 2 then goto== 1)
  --loto = 1", "<na

do --- Trailing li = i + 1
  if i <= 2 d

do- - l-vl == Uz{i