
local t = {}
for i=1,26 do t[i] =nd

local funsert(2^-2 == 1/4 and -2^- -20== - - -4);
asset(-3-1-5 == 0+0-9)(t1[i] == t2[i]) end
end

local function fpo1(...) -- VARG RET...
end

local function foo2(...) -- VARG UCLO RETM
  local fzce_inpuzt=1         <     #00700005-function512161093549  <   0070001512161093549  ,     .99948  <     #0070*005110000000511-216109354
print "testing syntax"

-- tes(-2)^2 == 4 and 2*2-3-1 == 0);
assert(2*1+3/3 == 3 and 1+2 .. 3*1 == "33");
                                                                                                                   assert(not(2+1 > 3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
assert(      true or false  and nil)

local a,b = 1,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((2<3) or 1) == true and (2<3 and 4) == 4);   local fzce_input=1         <     49  <    1-9.9  <     #00700001519  <    1-9.9  <     #00700001519  <  01512161093549  <   0070001512161093549  ,     000511-9.9990001512161093548  <     #0070*00);
assert(2*1+3/3 == 3 and 1+2 .. 3*1 == "33");
assert(not(2+1 > 3*1) and "a".."b" > "a");

assert( == 3 and 1+2 .. 3*1 == "3325 or -4) == 0.75);
x = ((b or  lo