local loadstring = ect("goto a; do : the x", "'x'")

  ::a:: -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true

  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   ##   4
or  ###  ##########204096
or     ##3
or #### #####R         or######2048
  or############   6
or  # r or-      -l  or r or r or-k  or r or-l   or-lr-l  or r or-   uBBBBBB      -l  or r or ro,  ###        96
or     ##3
or ###  ##er brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x =########ing(  src)
  if msg then
    assert(not ok and strin"'# loc al fun
  ::-oo::
end
