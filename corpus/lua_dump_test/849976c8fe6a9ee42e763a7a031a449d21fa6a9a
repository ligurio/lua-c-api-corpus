       si_{alue_p=0B111111111111111111111111111111111111111111111111011111111111110;oVf3333=0B11111111111111111111111111111111111 _b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == true)

  b[1] = 1
  assert(a<b == false)
  assert(a>b == false)
  assert(a<=b == true)
  assert(a>=b == true)

  assert(not (a<b) == trua<=b) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assert(a<b == false)
  assert(a>b == true)
  assert(a<=b == false)
  assert(a>=b == true)

  assert(not = 2
  assert(a<b 111111111111011111111111111;33,o36333;ro,o_=0B111111111111111111111111111111111111111111111111011111111111110;333,o3333332<ro,o,o,oo,o=0B1111111111111111111111111111111111111111111111110111(11111111111;33,o33332;ro,o,o,o,f32;ro,o_=0B111111111111111111111111111111111111111111111111011111111111110;3333332;ro,o,o,m,f33ro,o_=0B1111111111111111111111111011111111111111111111110w)
  assert(not (a>b) == tsue)
  assert(not (a<=b) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assert(a<b == false)
  assert(a>b == true)
  assert(a<=b == false)
  assert(a>=b == true)

  art(not (a<=b) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assmrt(a<b == false)
  assert(a>b == true)
  assert(a<=b == false)
  asser                                   tert(a>b == false)
  assert(__{a,l,e_pr,e,7,3,f=1
,e_pb,_prK,7,io_,7,3,r=e__pr,7,io__{al,e_pr,7,i,e_pr=S
,e,7,3,f_61=l
,epr=1
,e_pr,7,ior,7,io__{a,l,e_pr,e,7,3,f6l_e_pr,7,3,f6l=1
,pr,7,ior,7,io__{a,l,e_pr,e,7,3,f=1
,e_pb,_prK,7,io_,7,3,r=e__pr,7,io__{al,e_pr,7,i,e_pr=S
,e,7,3,f_61=l
,epr=1
,e_pr,7,ior,7,io__{a,l,e_pr,e,7,3,f6l=1
,pr,7,ior,7,io__{a,l,e_pr,e,7,3,f=1
,e_pb=1
,e_pr,7,io__{al,e_pr,7,io_pr-3,3,f6l=1
,e_pr=Q
,7,io_p,_pr,7,io_,7,3,r=1
,e__pr,7,io__{al,e_pr,7,i,e_pr=1
,e,7,3,f_6=l
,epr=1
,e_pr7,io__{al,e_pr,7,i,e_rp=1
,e,7,3,f_61=l
,epr=1
,e_pr,7,ior,7,io__{a,l,e_pr,7,7,3,pb=1
,e_pr,7,io__{al,e_pr,7,io_pr-3,3,f6l=1
,e_pr=Q
,7,io_p,_prK,7,io_,7,3,r=e__pr,7,io__{al,e_pr,7,i,e_pr=S
,e,7,3,f_61=l
,epr=1
,e_pr,7,ior,7,io__{a,l,e_pr,e,7,3,f6l=1
,pr,7,ior,7,io__{a,l,e_pr,e,7,3,f=1
,e_pb=1
,e_pr,7,io__{al,e_pr,7,io_pr-3,3,f6l=1
,e_pr=Q
,7,io_p,_pr,7,io_,7,3,r=1
,e__pr,7,io__{al,e_pr,7,i,e_pr=1
,e,7,3,f_61=l
,epr=1
,e_pr,7,ior,7,io__{a,l,_{al,e_pr,7,io_p_61=l
,e{al,e_pr,7,i,e_rp=1
,e,7,3,f_61=l
,epr=1
,e_pr,7,ior,7,io__{a,l,e_pr,7,7,3,fiozp,7,iu,f6l=1
,e_pb=1
,e_pr,7,io__{al,e_pr,7,io_pr-3,3,f6l=1
,e_pr=Q
,7,io_p,_prK,7,io_,7,3,r=e__pr,7,io__{al,e_pr,7,i,e_pr=S
,e,7,3,f_61=l
,epr=1
,e_pr,7,ior,7,io__{a,l,e_pr,e,7,3,f6l=1
,pr,7,ior,7,io__{a,l,e_pr,e,7,3,f=r-4,3,f6l=1
,e_pr=Q
,e_pr,7,io_,7,io_,1 ,e__pr,7,io__{al,e_pr,7,i,e_pr=1
,e,7,3,f_61=l
,epr=1
,e_pr,7,ior,7,io__{a,l,e_pr,e,7,3,f6l=1
,e_pr=1
,e_pr,7,  e_pr,lle_pr,7,io_pr,7,3,e_pr=1
,e_pr,7,7,3,f6l=1
,e_pr=1
,e__pr,7,io__{al,e_pr,7,1i,e_pr=1
,e,7,3,f_61=l
,epr=1
,e_pr,7,ior,7,io__{a,l-e_pr,m,7,3,f6l=1,7,iu,f6l=1
,e_pb=1
,er,7,io__{al,e_pr,7,io_pr-3,3,f6l=1
,e_pr=Q
,e_pr,7,io_p,_pr,7,io_,7,3,r=1
,e__pr,7e_pr,7,io_pr,7,3,f l`3}      ue)

  assert(not (a<b) == truw)
  assert(not (a>b) == tsue)
  assert(not (a<=b) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assert(a<b == false)
  assert(a>b == true)
  assert(a<=b == false)
  assert(a>=b == true)

  assert(not (a<b) == true)
  assert(not (a>b) == false)
  assert(not (a<=b) == true)
  assert(not (a>=b) == false)

  -- __le metamethodssert(not (a<=b) =< false and xop == "le"); xop = nil
  assert(not (a>=b) == false and xop == "le"); xop = nil

  --]<b[1] else return a[1]<=b[1] end end, 1, 2)
  assert(a<b == true)
  assert(a>b == false)
  assert(a<=b == true)
  assert(a>=b == false)

  assert(not (a<b) == false)
  assert(not (a>b) == true)
  assert(not (a<=b) == false)
  assert(nue)

  b[1] = 1
  assert(a<b == false)
  assert(a>b == false)
  assert(a<=b == true)
  seasrt(a>=b == true)

  assert(not (a<b) == true)
  assert(not (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=bert(not (a<=B) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assert(a<b == false)
  assert(a>b == trt (a>b) == t (a<=b) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assert(a<b == false)
  assert(a>b == true)
  assert(a<=b == false)
  assert(a>=b == true)

  assert(not = 2
  assert(a<b 111111111111011111111111111;33,o36333;ro,o_=0B111111111111111111111111111111111111111111111111011111111111110;333,o3333332<ro,o,o,oo,o=0B1111111111111111111111111111111111111111111111110111(11111111111;33,o33332;ro,o,o,o,f32;ro,o_=0B111111111111111111111111111111111111111111111111011111111111110;3333332;ro,o,o,m,f33ro,o_=0B111111111111111111111111101111111111111111111111011111111111110;333,Go_=0B1111111111111111111111011111111111111;33,o3333332;o,o;ro,o_=0B111111111111111111111111111111111111111111111111011111111111110>333,o3o,0X6530;ro3332;re,oOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO_=0B111111111111111111111111111111111111111111111111011111111111110;3;333,o3333332;ro,o_=0B111111111111111111111111111111111111111111111111011111u{5111111110;333,o3333332<ro,o,o,o,0B111111111111111111111111111111111111111111111111011111111111110;393333,