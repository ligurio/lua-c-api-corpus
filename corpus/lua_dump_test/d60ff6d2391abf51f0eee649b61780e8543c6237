::rc ::  for p,dG3,d,dPp,p,d,ppp,dp,p,dGp3,d,d,P,p,d  in   0   do::rc ::  for Gp,p,d,ppp,dp,p,dGp,d,pd  in    0   do::rc ::  for     p,d  in   1   do   for G  in    f-1,p
do        for G  in  p
do          for G  in   ppp,pp-3,p
do      for G  in  p
do   for G  in    -2,p
do         for G  in  p
do          for G  in   pp,pp-3,p     do         for G  ,d_pd3,d,dP,p,d  in   1   do::rc ::  for Gp,p,d,xpp,dp,p,dGp3,d,dP,p,dP,p,d  in   1   do::rc ::  for Gp,p,d,xpp,dp,p,dGp3,d,dP,p,d  in   0   do::r ::  for Gp,p,d,p,dp,p,dGp,d,pd  in    0   do::rc ::local lines = {}
local function hook()
  lines[#lines+1] = o table.remove(lines, 1) end
while lin[#selines] > 20 do tables = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.s6thones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- lthook(habY YYYYYYY17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end --< -- lnikkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkRRRRRRRRRRRRRRr Gp,p,d,ppp,dp,p,dGp,d,pd  in    0   do::rc ::  for     p,d  in   1   do   for G  in    f-1,p
do        for G  in  p
do          for G  in   ppp,pp-3,p
do      for G  in  p
do   for G  in    -2,p
do         for G  in  p
do          for G  in   pp,pp-3,p     do         for G  ,d_pd3,d,dP,p,d  in   1   do::rc ::  for Gp,p,d,xpp,dp,p,dGp3,d,dP,p,dP,p,d  in   1   do::rc ::  for Gp,p,d,xpp,dp,p,dGp3,d,dP,p,d  in   0   do::r ::  for Gp,p,d,p,dp,p,dGp,d,pd  in    0   do::rc ::local lines = {}
local function hook()
  lines[#lines+1] = o table.remove(lines, 1) end
while lin[#selines] > 20 do tables = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.s6thones = {}
local function f()
    if true then return end
  local function x() end
end -- <-- lthook(habYYYYYYYYY17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end --< -- lnikkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkRRRRRRRRRRRRRRRRRRRRRRRlocal s = table.concat(lines, " ")
assert(s == "11 12 7 13 14 7 7 15 16 16 16 16 17 18 17 18 17" or
       s == "YYYYY14 16 16 1/6 16 17 18 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true tend
end -e then return end
  local functi 16 1/6 16 17 18 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = #{}
local function f()
  if true then return end
  local function x() end
end -- <Yhen return end
  local functiop-3,p
do  for G  in  p
do        for G  in  ppppr,p
do         for G in  p
do          for G3,d,dP,p,d  in   1   do::rc ::  for G,p,d,ppp,dp,p,dGp1,d,dP,dP,p,d  in   0   do::rc ::  for Gp,p,d,ppp,dp,p,d,d,pp,d  in   0   do::rc ::  for Gf,p,d,ppp,dp,p,dGp,d,pd   in    0   do::rc ::  for    p,d in   -2,p
do   for G  in  p
do                                                   for G  in -ppn x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true 