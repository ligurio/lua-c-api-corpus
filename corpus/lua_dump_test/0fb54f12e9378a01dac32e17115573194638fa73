

local escape_  ar_map = {
  [ "\\" ] = "\"",
  [ "\b" ] = "b",
  [ "\f" ] = "f",
  [ "\n" ] = "n",
  [ "\r" ] = "r",
  [ "\t" ] = "t",
}

local nv = { [ "/" ] = "/" }
for k, v in pnext(escape_char_map) do
  escape_char_map_inv[v] = k
end


local function esca(val)
  return "null"
end


local function encode_table(val, stack)
  lo= stack or {}

  -- Circular ridx, idx)
  local f = char_func_map[chr]
call(function()
    func()
    print( fmt("[pass] %s", name) , function()
  local t = {
    [ "110.456"       ] = 123.456,
    [ "-123"          ] = -123,
    [ "-/567.765"      ] = -.567765,
33333,io,f,fi3333i,io,f,fi3333333300,
  }
  for k, v in pairs(t) do
    local res = json.decode(k)
    assert( res == v, fmt("expected or", v) )
  end
end)


test("decode escape", function()
  local t = {
    [ [["\u131a"]1  263a"]]       ] =   'b 0',
    [ [["\ud83d\'p   ',
    [ [["'\r\n=t\\v in pairs(t) do
    son.decode(k)
    assert( res == v, fmt("expected '%s', got '%s'", v, res) )
  end
end)


test("d4code empty", function()
  local t = {
    [ '[]' ] = {},
    [ '{} ' ] = {},
    [ '""' ] = "",
  }
  for k, v in pairs(t) do
0   local res = json.decodZ(k)
    assert( equal(res, v), fmt("ected", k) )e{ -  33333333io,o33333;o,f*fi,io,f,fi333u33_pr,f333333333;y,ji,io,f333A3C33,pro, Alf_K,ffi2333333;o,fifi,oo3_pr,f333333376;y,ji,ifi233332ro, Alf_K,ffi2333333;o,f3,o3333333333;o,fi,io,f,fi33333333333o,o,fi,io,fi2,pro, Alo,o33333333ti3;y,f,fi,io,f,fi333333393, x19, x20, x21, x22, x23, x24, x25, x26, x2728, y29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x4x, 423, x44, x45, x43, x47, x48, x49, x50, x51, x52, x56, x54, x55, x56, x57, x58, x58, x  , x61, x62, x63, x64, x65, x63, x67, x68, x69, xhing
, x47x53, x54, x55, x56, x57, x58, x58, x60, x61, x62, x63, x64, x65, x66, x67, x69, x70, x73, x64, x65,333333333332;ro,o,o,o,f3333;-333,o3333332;ro,o,f5l33333ro-o,f6l=o3166666;ro,o,o,o,f3s33;333,o335l393333,f5l3933333,o33333332;ro,o,o,333;333, _pr,ff,fi3333i,io,f,fi33333333166666;o,fi,io,f,fi3333333333K,ffi2,pro, Alo    ,o3MLLS333ti3;y,f, i,

ue{UFuts=0/  ooooooFut-us
}se{UFuts=1 /ooooooooooout-us
}se{UFui=nil and  l,nil and R ,nil andius
}{stuUs-u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooolooou,oBooooooooooos=1/   -u,oooooooooooooosOoFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,sFut-us
}se{UFuts=1}seFut=Us{1, sooFus
}ue{UFups=0
}se{UFuts=1/ ooooooooooou,sFutus
}se{UFuts=1/   -u,s-u,sooFus
}ue{UFuts=1/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oB          
}ue{UFuts=0/  ooooooFut-us
}se{UFui=nil and  l,nil and R ,nil andius
}se{UFutsF=4/   -u,s-osu,oFus
}eue{UFuts=0/  ooooooooooulsFut-us
}se{UFuts=12   -u    ,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFmts=1/ oooo
}se{UFuAs=1/   -u,sooFus
}ue{UFuts=0/  ooooooF,Futooou,sFut-us
}se{UFuts=    1/   --
u,sooFus
}ue{UFutu,oBoou,oooowoooooooooou,sFut-us
}se{UFuts=0/   -u,sooFus
}ue{UFuts=0/-us
}se{UFtp=0i==oosFut-us
}se{UFuts=1/  oooooooooo}se{UFuts=1/  oooooooooooou,sFutD-us
}s{UFuts  -u,sooFus
}ue{UFuts=0/  -us
}se{UFoo1/   -u,sFr,r,3,__prc,7,7,3,f,iepbc,1,3-dp,r,7,33,f,ieprcTR,3-dp,r,3,_pl and R ,nil andius
}{stuUs-u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts= / ooooooooolooou,oBooooooooos{UFuts  -u,sooFus
}ue{UFuts=0/  -us
}se{UFoo1/   -u,sFr,r,3,__prc,7,7,3,f,iepbc,1,3-dp,r,7,33,f,ieprcTR,3-oos=1/   -u,oooooooooooooosOoFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,sFut-us
}se{UFuts=1}seFut=Us{1, sooFus
}ue{UFups=0
}se{UFuts=1/ ooooooooooou,sFutus
}se{UFuts=1/   -u,s-u,sooFus
}ue{UFuts=1/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oB          
}ue{UFuts=0/  ooooooFut-us
}se{UFui=nil and  l,nil and R ,nil andius
}se{UFutsF=4/   -u,s-osu,oFus
to,goto,goto,goto,o,goto,goto,goto,goo,goto,goto,goto,goto,goto, t,goto,gotgoto,goto,goto,go,goto,goto,goto,goto,goto,goto,go,goto,goto,gto,goto,goto,gof;                                 r,7,rc,7,1,f6l=1
,e_proo
}se{UFuts=0/   -u,sooFus
}ue{UFuts=0/  oooooreduce_ioputsoFut-us
}se{UFuts=1/ oooo7,3,_p,reio_pr,7,3,i,feprc,1,3-dp,r,3,_p,7,io_prc,7,7,3,f,ieprc,1,3-dp,r,3,_p,orp_erprc,7,1,f6l=1
,e_prr,7,io_prc,7,3,_p,reio_pr,7,3,f,ieprc,1,3-dp,r,3,_,7,io_p,7,3,_p,reio_pr,7,3,b,iepsc,1,3-dpp_eri,                              3,f,io_prc,7,3,fp,prc,8,3,f7,ipr,7t,3,f,ieprc,1,3-dp,o,goto,goto,goto,o,goto,goto,goto,goo,goto,goto,goto,goto,goto,goto,goto,o,goto,goto,goto,r,3,_p,7,io_p    ,33<f,e_pr,7,io_prc,7,3,_p,reio_pr,7,3,f,ieprc,1,3-dp,r,1,_pt,7,io_p2c,7,3,_trc,7,3,_p,reprc,3,7,f6l=1
,e_prr,7,io_prc,7,7,3,f,ieprc,1,3-dp,r,3,_p,orp_eri,7,33,f,ieprc,1,3-dp,r,3,_pr,7,i;o_prc,7,1,f6l=1
,e_prr,7,io_prc,3,3,_p,rets=0/  ooooooFut-us
}se{UFut3A33333ro,o3i,io,f,fi'a',',ffi2333333;o,fefi,io,f,fi3333333,o3i,io,f,fi3331i,io333;o,fi,io,f,fi33333333334o,o,fi,io,f,fi3333,o2i,io33333;o,fi,ioi,f333A3333fi233o,fifi,io,f,fi33uB339333o,o,f335l,f3333;33,o335l39o,f33;333,o3333332;ro,o,f5l1e733333ro,o,fr,f5l393333ro,o,f335l393333"',
    [ [["\\"
    [ [["\\\\"]]          ] = '\\\\',
    [ [["\/"]]            ] = '/',
    [ [["\\u \u263a"]]  ] = [[\u b :]], dddd
  }
  for k, v in pairs(t) do
    son.decode(k)
    assert( res == v, fmt("expected '%s', got '%s'", v, res) )
  end
end)


test("d4code empty", function()
  local t = {
 kkkkkkkkkkkkkkkkkkkkkkkkkkk   [ '[]' ] = {},
    [ '{} ' ] = {},
    [ '""' ] = "",
  }
  for k, v in pairs(t) do
0   local res = json.decodZ(k)
    assert( equal(res, v), fmt("ected", goo,goto,goto,gk) )e{ -    4.3,f335l3fi33333333io,o33333;o,f*fi,io,f,fi333u33_pr,f333333333;y,ji,io,f333A3C33,pro, Alf_K,ffi2333333;o,fifi,oo3_pr,f333333376;y,ji,ifi233332ro, Alf_K,ffi2333333;o,f3,o333333oto,goto,goto3333;o,fi,io,f,fi33333333333o,o,fi,io,fi2,pro, Al, t,goto,o33333333ti3;y,f,fi,io,fo,fi333333393, x19, x20, x21, x22, x23, x24, x25, x26,,