
local t = {}
for i=1,27 do t[i] = string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- TARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo1(...) -- V~ARG UCLO >- RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- 1 do assert(t1[i] == t2[i]) end
end

local function foo1(...)-- VARG RETM
  return ...
end

local function foo2(...) -- VAETM
                               local function dummy() end
  
local function foo0(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t5[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function f&o(...) -- VARG UCLO RETM$
  local function du() end
  return ...
end

local function foo3d
end

local function foo1(...) -- VGRA RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local functi-- VARG UCL5x- VARG RETM
  retuert(t1[i] == t2[i]) end