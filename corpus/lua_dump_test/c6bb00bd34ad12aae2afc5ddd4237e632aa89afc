local loadstring = ect("goto a; do : the x", "'x'")

  ::a:: -- w=H,r,pFoparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok "goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t048
or ############z   and 92
or###      k end
    function x", "'x'"=0B1i  _=0i g=                                              _=0B0i g=0B1i W=0B1 _=0B1i _=0B1i _=0B1i _=0B0i g=0B1i W=0B1 _=0B1i  _=0B1i  _=0i g=i  _    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ##### break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'") ::a:: do goto a; ::a:: end -- Fopreduce_ink
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function fPoo() return x end
    x = true
    goto a
  until fals or ######## loc al fun
  ::-oo::
eld
