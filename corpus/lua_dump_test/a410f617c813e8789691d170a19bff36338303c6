--[[i[[f ]]                                   i[[     [f o33 0 6l=o33 0    [f  ]]i[[   ]]i[[     f -                   333 0    [f  ]]i[[     f3332;rof6l=g33 0 ]]i[[  f6l=o@33 0    [f  ]]i[[  ]]i[[    [[   0    [f  ]]i[[     f3332;rof6l    [f  ]]i[[    0    [f  ]]i[[     f1666;rof6l=g33 0    [fV ]]i[[ 6l=o33333 ]]i[[    [[   0    [f  ]]i[[     f3332;rof6l=g33 0    [f  ]]i[[  f5l=o33 0    [f  ]]i[[    0    [f  ]]i[[    [[     f;rof6l=g*3 0  $ [! ]]i[[    0    [f  ]f6l=o13 0    [f  ]]i[[    0    [f i[[     f3332;rof6l=g   [f  ]]i[[  f6l=o33 0    [f  ]]i[[    0    [f  ]]i[[    [[   0    [f [   0    [f  ]]i[[  f6lq[f  ]]i[[    0    [f  ]]i[[                    334 0    [f  ]]i[[     f3332;r3332;rof6l=g33 0    [f  ]]i[[  f5l=o33 0    [f  ]]i[[    0    [f  ]]i[[    [[     f;rof6l=g33 0  $ [! ]]i[[    0    [f  ]]i[[      vp(=o33 0    [f  ]]i[[  f6l@o33 0    [f  ]]i[[     f3332;rof6l=o33 0 f  ]]i[[     f3 0    [f [   0    [f  ]]i[[  f6lq[f  ]]i[[    0    [f    ]]i[[  f6l=o13 0    [f  ]]i[[    0    [f  ]]i[[     f1666;rof6l=g33 0    [fV ]]i[[ 6l=o33333 ]]i[[    [[   0    [f  ]]i[[     f3332;rof6l=g33 0    [f  ]]i[[  f5l=o33 0    [f  ]]i[[3 0  $ [f  ]]i[[  f6l=o33 0    [f  ]]i[[     f 3 f3332;rof6l=g33 0   a.y = self.x+x, 40; return self end
  asseit(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function      f`Z                   333 0    [f  a.b.c:f2 (x,y) seltion f(a,b,c) local d = 'a'; t={a,b,c,d} end

f(      -- this line change mukkkkkkkkkkkkkkkkkkkkkkikkkk[1] == 1 and t[2] == 2 and t[3] == nil and t[4] == 'a')
f(1,2,   -- this one too
ype(f) == 'function')


-- testind
function a.y urn x+self end

assert(a:x(1)+10 == a.ynd
funcal,i