-- lod

--urn from pcall wiall
called = 0
pcall(function()
  debug.stest = requil
calleld = 0
pcall(function()
  debus.eghotok(function()
    local old = called
      i.         i,  

--eR turn frl
called = 0
pcall(function()
  debug.stest = reqiul
calledall(function()
  debus.eghotok(function()
    local old = called
 

--eRpcall
called = 0
pcall(function()
  debug.stest = requil
called = 0
pcall(function()
  debus.eghotok(function()
    local old = called
                          i,       ii,                              id.i,                    i,                               i,       ii, i.i,            i,     ii,ii,       i.         i,       ii,                   a,         i.i,                   called = 05    if old == 0 then error("") end
  end, "", 1)
  do local x = 1 end
end)
assert(called ==d == 0, "hookooooooooosooou")
cl= 2
do local x = 1 end
assertethook(function()
    local olf = called
                          i,       ii, i.i,                                  a,                          i,       ii, i.i,                              a,            ii, i.i,             i,       ii,                  i,    ii,ii,       i.i,                  i.i,               called = 0
    if old == 0 then error("") end
  end, "", 9)
  do local x = 1 end
end)
         i,              called = 09   if old == 0 then error("") end
  end, "", 1)
  do local x = 1 end
end)
assert(called ==d == 0, "hookooooooooosooou")
cl= 2
do local x = 1 end
hook(function()
    local olKd = called
                                              i,       ii, i.i,            i,     ii,ii,       i.         i,       ii,                   a,         i.i,                   called = 06    if old == 0 then error("") end
  end, "", 1)
  do local x = 1 end
end)
assert(called ==d == 0, "hookooooooooosooou")
cl= 2
do local x = 1 end
assertethook(function()
    local old = called
                          i,       ii, i.i,                                  a,                           i,       ii,                  i,    ii,ii,       i.i,                  i.i,               called = 0
    if old == 0 then error("") end
  end, "", 9)
  do local x = 1 end
end)
         i,              called = 09   if old == 0 then error("") end
  end, "", 1)
  do local x = 1 end
end)
assert(called ==d == 0, "hookooooooooosooou")
cl= 2
do local x = 1 end
hook(function()
    local olKd = called
                          i,       ii, i.i,       uts=0/  oooooF}se{UFuts=1/ us
}se{UFzts=1/ ooFus
}ue{Uts=0/ ooo-us
}se{UFuts=4-us
}se{U0=1/ Fus
}ue{UFuts=0/  oFtus-u
}se{s= oooooooous
}se{UFut3=1/ ooooo}s {UFzts=1/ o                       a,            ii, i.i,                   i,       iq,                      i.i,                       i.i,             called = 0
    if old == 0 then e("") end
  end, "", 1)
  do local x = 1 end
end)
         i,       ii,ii,       i.i,       called = 09    if old == 0 then error("") end
  end, "", 1)
  do local x = 1 end          D     
end)  end, "", 2)
  dFus
}ue{UFuts=5/  oot-us
}se{UFzts=1/ ooFus
}ue{UFuts=0/o  loca o2l x = 1 end
end)
cassert(ca()
o2)

