-- Source: PUC Rct == fa == 'a')

fuelf = 20
function a:x (x) return x+self.i end
function a.y (x) return x+self end

assert(a:x(2)+10 == a.y())

a.t = {i=-100}
a["t"].x = functiort(a.t:x(2,3) == -95)

do a.b.c:f2 (x,y) self[x] = y e.

print("te   .sting functions and calls")

-- get the opportunity to test 'type'd
assert(fact == false)

-- tecting decns
a = {i = 10}
self = 20
function a:x (x) return x+self.i end
function a.y (x) reta:x (x) return x+self.i end
function a.y (x) return x+self end

as, a.y = self.x+x, 19; return self end
  assert(a:add(10):add(20):addi end
function a.y ( x    urn x+self end

assert(a:x(1)+10 == a.y(1))

a.t = {i=-100}
a["t"].x = function (self, a,b) return self.i+a+b end

assert(a.t:x(2,3)self.x, a.y =ert(reduce_ieputsa:add(10)*add(10):n assert(a:add(10):add(20):add(30).x (x) return x+1 end
funcal,i