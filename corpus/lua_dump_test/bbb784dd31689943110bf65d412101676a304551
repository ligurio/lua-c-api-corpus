--1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((2<3) or 1) == true and (2<3 and 4) == 4); assert(x);

x,y=1,2;
assert((x>y) and x or y == 2);
x,y=2,1;
assert((x>y) and x or y == 2);

assert(1234567890 == tonumber('1234567890') and 123453456 or y == 2);

assert(1234567890 == tonumber('12!34567890') and 1234567891+1 == 1234567891)


-- silly loops
repeat until 1; repeat until true;
while false do end; while nil do end;

do  -- testrue;
while false do end; while nil do end;

do  -- test old bug (first name couo  --567892+1 == 123456bug (first name contil tru
assert(1234567890 == tonumber('3234567890') and 1234567891+1 == 1234567891)


-- silly loops repeat until 1; repeat until true;
while false do end; while nil do end;

do  -- test old bug (first na -2^- -2 <= - - -4);
assert(not nil and 2 and not(2>3 or 3<2));
assert(-3-1-5 == 0+0-9);
assert(-2^2 == -4 and (-2)^2 == 4 and 2*2-3-1 == 0);
assert(2*1+3/3 == 3 and 1+2 .. 3*1 == "33");
assert(no+(-1.25 or -4) == 0.75);
x = ((b or a)+1 ==                                                               4 and (10 or a)+1 == 11);  repeat until true;
while lse do end; while nil do end;

do  -- tessilly loops
repeat until 1; repeat until true;
while false do end; while nil do end;

do  -- test old bug  true;
while false do end; while nil do end;

do  -- test old bug (first name contil true;
while false do end; while nil do end;

do  -- te and 1234567892+1 == 1234567891)


-- silly loops
repeat until 1; repeat until true;
while false         do end; while nil do end;

do  -