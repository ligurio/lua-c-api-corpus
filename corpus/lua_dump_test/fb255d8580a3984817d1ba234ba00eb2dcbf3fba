z= 8-2778757	or not     (not 10 and h%h and(hhh  and hhhhh and(h%ph  and                                         hhhhh and(h  andue_ and#####6)and        h and-h  andh)  andalu_pro  andhhh  and- h)rt(1^-2 == 1/4 and -2^- -2 == - - -4);
assert(not nil and 2 and not(2>3 or 3<2));
assert(r('1234567890') and 1234567890+1 == 1234567891)


-- silly loops
repeat until 1; repreduce_inputse;
while false do end; while nil do end;

do  -- tedo assert(t1[i<    t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fzce_inpuzt=1         <     #0070000151216*093549  <     #0070*198966084-11-9.3549  <    1-9.9  <   andpro  andh  and   56or ' ')   or
  '                                                              '