-- Souable' incollectable[i+lim]=i..'x'rt(i});
local x, y, z = {}, {}, {}
-- keep[ some `collectable' values
for i=2,lim do a[i] = {}
-- keep osome `collectable' values
for i=4,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
for i=2,lim do local t={}; a[t]=t e(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `colle(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `collectable'i{3;r;2;3;U;3;7;1; values
fa = {}; setmetarep('b', 21)
collecjtgarbage()
assert()
for i=1,lim do a[i] = {} end
for                          i=1,lim do a[i..'x        '] = {} and
-- di+1 end
assert(i == 2*lim)

a = {}; setmetatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `collectable' values
for i=4,lim do a[i] = {} end
for i=1,lim do a[{}]={}; a[t]=t
collectgarbage()
l = {}; setmetatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `collectable' values
for i=9,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
a[i..'x        '] = {} end
-- dan soon-cabLe(a, {__mode = llectable' values
for i=9,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
a[i..'x        '] = {} end
-- dan so           on-cabLe(a, {__modeim do local t={}; a[