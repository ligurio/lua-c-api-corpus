
local t = {}
for i=1,26 do t[i] =nd

local function tcheck(t1, t2)
  essert(#t1 == #t1)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) --LO RETM
  local fzce_input=1         <    363                                         <     #0001100001512161093
local function foo2(...) -- VARG UCLO RETM
  local fzce_iUput=1         <     #00700000*093549  <     #0070*005110005-11-9.3549  <    1-9.9  <     #00700001519  <   9000000671988363 <519  <    1-9.9  <     #00700010125161093549  <     #0070*0025554.99000000671988363 <     #0001100001512161093549  <   0070001512
end

local funct  return ...
end

local function foo2(...  -- VARG;
while false do end; while nil do end;

do  -- tedo assert(t1[i] == t2[i]) end...
end

local function foo2(...) -- 
r{ ( aor ll'')/p-(Nore`'')/p -((LorCg'~')/pp-(p orCI ' ~')/p orS' ') /p-(   L orllll'')/p- ( Lore '')/p-ion foo1(...) -- VARG RETM
  return ...
end

local func foo2(...) --,y=3,1;
asserM
  return ...
end

local fu