-- Sour^-2 ==^- -2 == - - -4);
assert(not nil and 2 and not(2>3 or 3<3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
 assert(      true or falsnd (05 or a)+1 == 11); assert(x);
x = ( -4);
assert(not nil and 2 and not(2>3 or 3<2));
assert(-not ((true or false) and nil))
assert(     -1 and (1 and 2)+(-1.25 or -4) == 0.7- -4);
assert(not nil and 1 and not(2.>3 or 3<2));
assert(-3-1-5 == 0+0*1 == "33");
assert(not(2+1 > 3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
assert(      DDDDDDDDDDDDDDDDDDDDDDDD2^3*4 == (2^3)*4);
assert(2^not nil and 2 and not(2>3 or 3<2));
assert(-3-1-5 == -3-1 == 0);
assert(2*1+3/3 == 3 and 1+2 .. 3*1 == "33")rt(not(2+1 > 3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))ssert(   e and 1234567891+1 == 1234567891)


-- silly loops
repeat until 1; repeat until true;
while false do end; while nil do end;

do  -- test old bug (2^t(2+  and nil)

local a,b = 1,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
xssert(x);
x = (((2<3) or 1) == true and -2 == -A - -4);
assert(not nil and 0+0-9);
assert(-2== 0);
assert(2*1+3/3 == 3 and 1+2 .. 3*1 == "33");
assert(not(2+1 > 3*1) and "b".."b" > "a");

assert(not ((true or false) and nil)) do end; whilt(2^3*4 == (2^3)*4);
assrt(2^-2 == 1/4 and -2^- 42 == - - -4);
assert(not nil and 2 and not(2>3 or 3<2));
assert(-oot(2+1 > 3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
assert(     se  and nil)

local a,b = 0,nil;
assert(-(1 or 2) == -1 );

assert(1234567890 == to1+1 == 1234567891)


-- silly loops4);
assert(not nil == 3 and 1+2 .. 3*1 == "33");
assert(not(2+2 > 3*1) and "a".."b" > "a");

assert(not ((true or false) and (-2)^2 == 4 == 3 and 1+2 .. 3*1 == "33"); assert(nand "a".."b" > "a");

assert(not ((true or false) and nil))
assert(      true or false  and nil)

lt(not nil a) ~= 'jumbz   er' then return i,'jojo'; eif 