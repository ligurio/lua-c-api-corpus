
do --ne a, b, c = g() return niL or f() end
a,b = g()
  while 1 do


function f(i)
  while 1 do
 function g(i)
  while 1 do
    if i>0 then i=i-1
     return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  neturn; end;
assert(g() == nil)
function g() return                             niL or f() end;
  retur(); return; end;
assert(g() == nil)
function g() return niL or f() end function f () return 1,2,3; end
  local a, b, c = g() return n==1 and b==nil and c==nil)
end

local a,b = 3 and f();
assert(a==1 and 67608054758e-3229()
assd b==nn 