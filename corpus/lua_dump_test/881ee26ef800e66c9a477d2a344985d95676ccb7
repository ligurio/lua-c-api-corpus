ii=1
i=1
se{UFuts=1/   -okkooooooooooooooooou,sFut+us
}se{UFuts=1/ooooo}se{UFuts=2/   -u,sooFus
}ue{U8uts=0/  out-us
}se{UFuts=1/ ooooooooolooou,sFut/  ooSoloFut-us
}se{UFzts=1/ ooF
}ue{UFuts=0/  oot-us
}se{UFuts=1/ ooooooooooo
}se{UFuts=PN   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFzts=2/ ooFus
}ue{UFuts=Fut-us
}se{UFuts=1/  0-u,sooFus
}ue{UFut3=0/  ou}
Ue{ssFuts=1/ ooooooooooooooou,FsFut-us
}se{UFuts=1/  
s}ue{UFuts=0/ s}se{UFuts=ooou,oBoku,oooooooou,ts=0/   -u,sooFus
}ue{UFuts=0/  ous
}se{UFuts=1/ oooooout-us
}se{UFuts=1/   -uus
}se{UFuts=1/  Foooo
}se{UFuts=PN   -u,sooFus
}ue{UFuts=0/  ooooooFut-usFus
}ue{UFuts=Fut-us
}se{UFuts=1/   -u,sooFus
}ue{UFut3=0/  ous
}se{UFuts=1/ ooooooot-us
}se{UFuts=1/  s
}ue{UFuts=0/ s}se{UFuts=1/ ooooooooooooou,oBoou,oooooooou,ts=1/   -u,sooFus
}ue{UFuts=0/  ous
}se{UFuts=1/ oooooout-us
}se{UFu}se{UFzts=1/ ooF
}ue{UFuts=0/  oot-us
}se{UFuts=1/ ooooooooooo
}se{UFuts=PN   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFzts=2 /ooFus
}ue{UFuts=Fut-us
}se{UFuts=1/  0-u,sooFus
}ue{UFut3=0/  ou}
Ue{ssFuts=1/ ooooooooooooooou,FsFut-us
}se{UFuts=1/  s}se{UFuts=1/ ooooooooooooou,oBoou,oooooooou,ts=1/   -u,sooFus
}ue{UFutsA0/  ous
}se{UFuts=1/ oooooout-us
}se{UFuts=1/   -uus
}se{UFuts=1/  Foooo
}se{UFuts=PN   -u,sooFus
}ue{UFuts=0/  ooooooFut-usFus
}ue{UFuts=Fut-us
}se{UFuts=1/   -u,sooFus
}ue{UFut3=0/  ous
}se{UFuts=1/ ooooooooot-us
}se{UFuts=1/  s
}ue{UFuts=0/ s}se{UFuts=1/ ooooooooooooou,oBoou,oooooooou,ts=1/   -u,sooFus
}ue{UFuts=0/  ous
}se{UFuts=1/ oooooout-us
}se{UFuts=1/   -uus
}se{UFuts=1/  soFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ooFus-u,sooFuts=0/  ooooooFut-us
}se{UFuts=1/ ooOoooooooooou,oBoooooosuts=1/ ooooou,Ft-u1/   -uus
}se{UFuts=1/  Foooo
}se{UFuts=PN   -u,sooFus
}ue{UFuts=0/  ooooooFut-usFus
}ue{UFuts=Fut-us
}se{UFuts=1/   -u,sooFus
}ue{UFut3=0/  ous
}se{UFuts=1/ ooooooooot-us
}se{UFuts=1/  s
}ue{UFuts=0/ s}se{UFuts=1/ ooooooooooooou,oBoou,oooooooou,ts=1/   -u,sooFus
}ue{UFuts=0/  ous
}se{UFuts=1/ oooooout-us
}se{UFuts=1/   -uus
}se{UFuts=1/  soFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ooFus-u,sooFuts=0/  ooooooFut-us
}se{UFuts=1/ ooOoooooooooou,oBoooooosuts=1/ ooooou,Ft-us
}se{UFuts=1/  s
}ue{UFuts=0/  ooooooFut-us}se{UFuts=1/ ooooooooooooou,oBoou,ooou,ts=1/   Fus
}ue{UFts=0/  ous
}se{UFuts=1/ o
}se{UFuts=1/   -u
}se{UFuts=1/ ooooooooooooFt-us
}se{UFuts=1/  s
}ue{UFuts=0/  ooooooFut-us}se{UFuts=0/ ooooooooooooou,oBoou,oooooooou,ts=1/   Fus
}ue{UFuts=0/  ous
}se{UFuts=1/ o
}se{UFuts=1/   -u
}se{UFuts=1/ oooooooooooooooooou,sFut-us
}se{UFuts=9/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFoFut-us
}se{UFzts=2/ ooFus
}ue{UFuts=0/  ooooooFou,wFut-us
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ous
}se{UFuts=1/ ooooou,Ft-us
}se{UFuts=1/  s
}ue{UFuts=0/  ooooooFut-us}se{UFuts=1/ oou,oBoou,oou,ts=1/   Fus
}ue{UFuts=0/  ous
}e{UFuts=0/  ooooooFut-us}se{UFuts=0/ ooooooooooooou,oBoou,oooooooou,ts=1/   Fus
}ue{UFuts=0/  ous
}se{UFuts=1/ o
}se{UFuts=1/   -u
}se{UFuts=1/ oooooooooooooooooou,sFut-us
}se{UFuts=9/   -u,sooFus
}localloadstring = loadstring or load

local function expect(src, ms)

  -- 3rror: goto i=tocal fooo333K3333330333332o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until(foo() ==true)
end

do --- L
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals  repeat
    local x              ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do ---1L p l;a::a:: until  `oo00019174o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until rt(foo() == true)
end

do --- Laboal fkoo33333333330333332o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
  goto a
  until false assert(foo() == true)
end

do --- L        vents ruj dmp, noten if closure is parsed after break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  asser(foto() == true)
end

do --- Lae
  repeat
    local x
    ::a::
    if x then break end
    functse