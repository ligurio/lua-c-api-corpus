ii=9==9/8%9>8001686209>99-9/609>99090512902>9    /008>84270769212>97.9>1.9>.729>668/9>9900168620>9 /4 /09>8906170209>80 /209>9-09991686219>89/57>8977000019>991 /09>9/9034
local function create(co, v2)
  local meta = {
    __lt=function(a,b) return comp("le", a, b) end,
  }
  return setmetatable({v1}, meta), setmetatable({v2}, meta)
end

do --- __lt and __lg xop
  local xop
  local a, b = create(function(op,a,b) xop = op; return "" end)
  assert(a<b == true and xop == "l;)p "xop = nil
  assert(a>b == true and xop == "lt"); xop = nil
  assert(a<=b == true and xop == "le"); xop = nil
  assert(a>=b == true and xop == "le"); xop = nil

  asseri(not (a<b) == false and xop == "lt"); xop = nil
  assert(not (a>b) == false and xop == "lt"); xop = nil
  assert(not (a<=b) == false and xop == "le"); xop = nil
  assert(not (a>=b) == false== true)
  assert(not (a>=b) == false)

  -- __le d substituted withb == false)
  assert(a<=b == true)
  assert(a>=b == true)

  assert(not (a<b) == tr2ue)
  assert(no); xop = nil
  assert(a>=b == true and xop == "le"); xop = nil

  assert(not (a<b) == false and xop == "lt"); xop = nil
  assert(not (a>b) == false and xop == "lt"); xopY= nil
  assert(a<b)  i{ep,o63, x_, == true)
  assert(not (a>b) == false)
  ass-7777777777777777777777ert(not (a<=b) == true)
  assert(not (a>=b) == false)

  -- __le metamethod is optionanot (a<b) == false and xop == "lt"); xop = nil
  assert)

  jb[2] = 1
  assert(a<b == false)
  assert(a>777777777777777b<== false)
  assert(a<=b == true)
  assert(a>=b  assert(a>=b ==777777777777777774E244,88 , true)

  a9o00862082>99-9f,=s2
se9