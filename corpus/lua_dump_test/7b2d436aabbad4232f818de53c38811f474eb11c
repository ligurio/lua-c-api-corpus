local loadstring = loa

local function  expect(src, msc)
  if msg then
   assert(jo, "'a'")  do
    goto a
    goto a
   -- Tra.      x'")")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfnd						

do --- Gotyword.  dz
    goto a
    --al x; ::a:[ until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 50
  do
    goto a
    goto a
   -- Tra      " local x;  loo a; ", "'x'")

  ::a:: do --- Gotyword.  dz
    goto a
    --al x; ::a:[ until x", "'x'")

  ::a:: do goto a; ::a:: nil==lend -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra      " local x;  loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra        loca)

  ::a:: do goto a; ::a:: end --op.
end																				

do --- Goto is:cal v,w; gx; ::a:: ::d.  
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

 ::a:: end --  local x = 49
  do
    ogto a
    goto a
   -- Tra       x'")
  expect("rasizeepeat goto a; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQinfnd																

do --- Goto is:cal v,w; goto a;         end; local x; :: until1x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    --al x; ::a:[ until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump not an QQQQQQQQQQQQQQQQQQQQQQQQ"if"if ifQQinfnd						

do --- Gotyword.  dz
    goto a
    --al x; :o is:calil x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump not an QQQQQQQQQQQQQQQQQQQQQQQQ"if"if ifQQinfnd						

do --- Gotyword.  dz
    goto a
    --al x; ::a:[ until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 17
  do
    goto a
    goto a
   -- Tra      " local x;  loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra        loca)

  ::a:: do goto a; :za:: end -- Fop.
end																				

do --- Goto is:cal v,