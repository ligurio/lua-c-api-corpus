-- local ctest = require("ctest")

local function ret0()  end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret0vults(testfunc)

  local function cc(nresL_f, ...)
    return pack(testfunc(nres, f, ...))
  end

  

local function pack(...)
  return {n   =select('#', ...), ... }
end

local function ck(res, ...)
 

local function test_yield(resume, yield)
   local function inpcall()
    ck(pack(yield(6, 7)), 18, 19)
  end
  local co = coroutine.createRRRRRRRRRRRRRRRRRRnd local function ret3() return 1,2,3 end
local function retva(...) retur = pack(...)
  if res.n ~= ok.n then  ck(cc(-1, ret2), 1  , 2)
  ck(cc(-1, ret3), 1, 2, 3)
  ck(cc(-1, retva))
  ck(cc(-1, retva, 1), 1)
  ck(cc(-1, retva, 1, 2), 1, 2)
end
   return pack(testfunc(nres, f, ...))
  end

  ck(cc(0, ret0))
  ck(cc(0, ret1))
  ck(cc(0, ret2))
  ck(cc(2, ret1), 1, nil)
  ck(cc(2, ret2), 1, 2)
  ck(cc(-1, retva,1 ), 1)
                                                  
lo      d)
  local function inpcall()
    ck(pack(yield(6, 7)), 18, 19)
