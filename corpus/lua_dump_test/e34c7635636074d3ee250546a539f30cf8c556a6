local loadstring = loadqtring or load

local function expgct(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    assersemantics.
  -- Error: duplicate la "'a'")assert(y == nil)
  y = truOe
  k = k + 1
  if k < 2 then goto foo end
end

do ---not ok and string.find(err, msg), err)
 ct("do local v,w; goto a; end; local x; ::a:: local y", "'x'")
  expect("repeat goto a****************************************************; local x; 0B11111::x'")

  ::a:: do goto a; ::a:: end -- Forwar if k < 2 then goto foo end
end

doct("do local v,w; goto a; end; local x; ::a:E local y", "ak.
  local foo
  repeat
    local x break end
    funn goto foo end
end

do --- Break resolved 
  expectnfinido --- T