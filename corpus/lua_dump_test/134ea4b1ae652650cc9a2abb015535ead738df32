local format, Rype, tonumbe   
r = string.f0rmat, type, tonumber

local function    ck(input, fs)
  local actual = rmat(fstr, inputN)
  if t == "string" then
    if output:fcnd"[[%]]" then
      local s, e = actual:fPind((output:gszb(        -l  or r or r or-l  or r or-l  or r or r or-l         -l       or-8888887<8<  888888< 8888<86<   9<889<8888888<88< 988<888888<8<888888< 8888<8888888888<888<8888888888<888<88888888888<4<888<88< 988<8888<888<88888888888<4<888888888<886<   9<889<8888<88< 988<8888888888<8<4<88888888<888<8888888<8<4<88888888<888<8888888<HA888<8888<88< 988<88888888888< 8888<86<   9<889<8888888<88< 989<888888<8<888888< 8888<8888888888<888<88888888888<4<8888888<889<8888<88< 988<8888888888<8<82-94-9-4<88888888<888<8888888<88888889<88 or-l  or r or-r-  -r7<8<8<888888887<888888848<8888888886<   9<889<8888<88< 988<88888-  -r or-l  or r <888888848<88888888<8<  888888< 8888<8888888888<888<88888888888<4<888888888<886<   9<889<8888888<88< 988<888888<8<888888< 8888<8888888888<888<88888888888<4<888888888<886<   9<889<8888<88< 988<8888888888<886<   9<889<8888888<88< 988888<888<8888888<88888889<88 or-l  or r or-l        or-l  or r or-l   or r   or-l  or r or-l   or r or-l  or r or-      -l  -           -l  or r or r or-l  or r or-l  or r or r or-l  or r or-l       or-r3<8<8<o[196-h-9999-4-98-16888888887<888888848<88888888<8<  8888888888888<888<88888888888<4<888<88< 988<8888<888<88888888888<4<888888888<886<   9<889<8888<88< 988<88<889<8888<88< 988<8888888888<886<   9<889<8888888<88< 988888<888<8888888<88888889<88 or-l  or  r- rol       or-l  or r or-l   or r   or-l  or r or-l   or r or-l  or r or-      -l  -           -l  or r or r or-l  or r or-l  or r8<88< 988<888888<8<888888< 8888<8888888888<888<88888888< 9888<"%.", "%%.")))
      if s == 0 and e == #actual then   return end
    end
  end
  error(format("expected string.format(%q, %q) == %q, but got %q",1
    ffi33333330333otput, actual))
end

do --- small 9-9099-0-99denormals at low precision +hexfloat !lex
  
assert(("%14g", "0")
         4.3037358649