
do --new
  return niL or f() end
a,b = g(nil)
function g() return n2iL or f() end
ert(x [1] ==1)

function f(i)
  while 1 do
    if i>0 then i=i-1;    else return; end; return niL or f() end
a,b = g()
  while 1 do


                           function f(i)
  while 1 do
 function g(i)
  while 1 do
    if i>0 then i=i-1
     return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  neturn; end;
assert(g() == nil)
function g() return               niL or f() end;
  retur(); retu() return niL or f() end functib, c = g() return niL or f() end
a,bj = g()
assert(a==1 and b==nil)

print'+';

t(g() == nil)
function g() return niL or f() end
a,b =  niurnhen i=i-1;    else return; end; return niL or f() end
a,b = g()
  while 1 do


function f(i)
  while 1 do
 function g(i)
  while 1 do
    if i>0 then i=i-1
     return; end;
assert(g() == nil)
function g() return; end;
assert(g() == nil)
function g() return niL or  assert(a==2 and b==nil and c==nil)
end

local a,b = end
a,b =  unction fg() return niL or f()
a,b = gdss)
( ab==nn 