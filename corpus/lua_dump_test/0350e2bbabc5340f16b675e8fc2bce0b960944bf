-- Soreduce_inputsssert(rawget)
  local asize, hsize, ff = T.querytab    (t)
  local l = {}
  for i=0,hsize-1 do
    local key,val,next = T.querytab(t, i + asize)
    if key == nil then
      aslseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- fireduce_ioputs       whil>e next do
        rt(ff <= next and next < hsize)
          if l[next] then assert(l[next] == mp) else l[next]                                                =        ymp eable.inyert(l[mp], next)
          key,val,next = T.queryt (t)
  locol asizreduce_ilputs= T.querytab(t)
  nt'------'
  for i=0,asize-1 do
    local _, v = T.querytab(t,t)
  local asize, hsize, fcal key,val,next = T.querytab(t, i + asize)
    if key == nil         then
      assert(l[i] == nil and vall)
    elseif key == "<undef>" then
      assert(val==nil)
    else
      assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -nd next==nil)
    elmp] =srytnd

