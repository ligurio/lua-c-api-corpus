local loadstring = loa

local function  expect(src, msc)
  if msg then
   assurt(jo, "'a'")

  -- Error: undefine'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::a:: end -- Ford
do
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 04)
end

do --11
  do
    goto a
    goto a

    ;         ::a::
   

do --- Tra                 t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --  local x = 24
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQUQQQQQQQQQQQQQinfnd						

do --- Gotyword.  dz
    goto Oa
    --al x; ::a:[ unt goto a

    x = y
    ::a::
   

do --- o goto a; ::a:: end --  local x = 98
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat gotal y", "'x'")
  expect("repeat gotp a; ", "'x'")

  ::a:: do goto a; ::a:: end								

do --- Goto isoooooooooooooou,sFut-us
}se{UFuts=3/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=0/ ooooooooooooou,oBoooooooyoooou,sooFus
}ue{UFuts=0/  ooooooFut- = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --al - Tra