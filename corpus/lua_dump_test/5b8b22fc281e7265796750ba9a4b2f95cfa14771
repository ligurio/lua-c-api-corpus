local loadstring = loa

local function  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Error: undefine'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::a:: end -- Ford
do
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
   

do --- Tra                 t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --  local x = 49
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfndb::
  end
  assert(x == 11)
end

do --- Tra             assert(jo, "'a'")

  -- Error: un                                                         define'")
  b'['.Q''.l''.l''.l''.z''.Q' '.Q''.l''.f''.Q''.l''.l''.l''.z''.Q''. ::a:: end -- Ford
do
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x =  

do --- o goto a; ::a:: end --  local x = 49
  do
    g                 t goto a; local 65} x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --  local x = 49
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat goto a; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQZQQQ