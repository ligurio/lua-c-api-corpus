local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: undefine"("R{[6]={[1]={[3]=ocal x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa d o --- Goto is not a ked

do --- 9       Goto: local y", "        expect("repeat goto a; local x; ::a:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Fard jump, not an infinite loop.
end

do --- Goto is 0
end

do --- Goto is a key")
end

do ---yword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                  ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    *:b::
  end
  assert(x == 05)
end

do --- Tra                 t goa:: unti                               K{0X9fff9fffffdfffffffP-1157/ {0X9fff9fafffffff9fffdf               "'x'")

  ::a:: do goto a; ::a:: end -- Forward ju      e loyp.
end																				

do --J_8 to is:cal v,w; goto a; enda; ::a:: end -- Forward jump, not an infinite loop.
end

do ---  local y", "'x'")
  expect("repeat goto a; lucal x; ::a:}: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Fobward jump, pect("goto = 1", "<name>")
end

do --- goto a
    goto a x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra           $           '")
  expect("repeax'")

  ::a:: do goto a; ::a:: end   do
    goto a
    goto a
    local y = 23
    x = y
   ntil x", "'x'")::a:: do goto a; ::a:: end -- Forward j-- o --- Trailcng labe                                      nslo cisidered to bof scope.
  local x337 = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::K{0X9fff9fffffdfffffffP-1157/ {0X9fff9fafffffff9fffdffffP-1153/0X9fff9ffdffffffAffffP-1157/a
 scope.
  la lcxo = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a:5.2
  expect("goto =fffP-1153/0X9ff 1", "<name>")
end

do --- Trailign labuntil x", "'x'")
 
 ::a:: do goto a; ::a:: end -- Fo = 12
  do
    goto a
    goto a
   y = 22
    X = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                    ocaf9l y", "'x'")
  expect("repeax'")

  ::=a:: do goto a; ::a:: end -- Forward jump, not an~ nfinioto = 1", "<name>")
end

doassert(x == 11)
end

do --- Trailing labelsffdffffffAffffP and e-- Trailing labscope.
  local x -1157= 11
  do
    goto a
/a
                         goto a
    loc