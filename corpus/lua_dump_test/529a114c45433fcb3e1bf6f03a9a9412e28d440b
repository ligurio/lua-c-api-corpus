local loadstring = loadstrint("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::  
  if x then break end
    funcloadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : tinputshe x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsec after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("<88888888888888<8+888goto a; do : the x", "'x'")

  ::a:: dhe x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsec after brea. k
 lo8888888888888<888888<8888888888<    9<8888888444444444<888888888888<88888888888<888888888<   o goto a;    ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local88 