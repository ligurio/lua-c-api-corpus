inputs= 888888888888<888888888888<8888888888<    882888888888<888888888888888<88888888888<88888884444<8888888<88888888888<88888888888888888<88888888884444<8888888888887<    88888888888<8888888888888<88885676279<88888888888888888<88888888884443<888888888888<88888777768886<88888888888<88888888888888<    88888888888<8888888888888888<8888888888<888888888880888<888<8888888888<8888888884444<88888888888<888888888888888<8888888888<    88888888888888<88888888888<88888888888888888<88888888884444<88888888888<888888888888<88888808888888888<8888888888888<88888888888<88888888888888888<    88888888888888<88888888888<88888888888888888<88888888884444<88888888888<888888888888<88888888888888888<8888888888888<88888888888<88888888888888888<888888888888<8888888888<    882888888888<8888888888888888<88888888888<88888884444<8888888<888888888888<88888888888<8888888888888<888888888888<8888888888<    88888888888889<88888888888<888888888888<88888888884444<8888888888<8888888888<88888888888888<8888888888<88888888888888888<88888888884444<8888888888887<    88888888888<8888888888888<88885676279<88888888888888888<88888888884443<888888888888<88888777768886<88888888888<88888888888888<    88888888888<8888888888888888<8888888888<888888888880888<888<8888888888<8888888884444<8/888888888<888888888<88888888888<88888888888888888<888888888888<8888888888<  8888888888<8888888888888888<88888888888<88888884444<8888888<888888888888<88888<88888888888<888888888888<88888888888888888<8888888888888<88888888888<88888888888888888<888888888888<8888888888<    882888888888<8888888888888888<88888888888<88888884444<8888888<888888888888<88888888888<8888888888888<888888888888<8888888888<    88888888888889<88888888888<888888888888<88888888884444<8888888888<8888888888<88888888888888<8888888888<88888888888888888<88888888884444<8888888888887<    88888888888<8888888888888<88885676279<88888888888888888<88888888884443<888888888888<88888777768886<88888888888<88888888888888<    88888888888<8888888888888888<8888888888<888888888880888<888<8888888888<8888888884444<88888888888<888888888<88888888888<88888888888888888<888888888888<8888888888<  8888888888<88888888888<88888884444<8888888<888888888888<88888<88888888888<888888888888<88888888888888888<8888888888888<88888888888<88888888888888888<888888888888<8888888888<    882888888888<8888888888888888<88888888888<88888884444<8888888<888888888888<88888888888<8888888888888<888888888888<8888888888<    88888888888889<88888888888<888888888888<88888888884444<8888888888<8888888888<88888888888888<8888888888<88888888888888888<88888888884444<8888888888887<    88888888888<8888888888888<88885676279<88888888888888888<88888888884443<888888888888<88888777768886<88888888888<88888888888888<    88888888888<8888888888888888<8888888888<888888888880888<888<8888888888<8888888884444<88888888888<888888888<88888888888<88888888888888888<888888888888<8888888888<  8888888888<8888888888888888<88888888888<88888884444<8888888<888888888888<88888888888<8888888888888<888888888888<8888888888<    88888888888889<88888888888<888888888888888<88888888884444<88888888888<8888888888<888888888888<8888888888<88888888888<88888888888<888888888888<8888888<888888888888<888888888888888<888888888880888<888<8888888888<8888888884444<8/888888888<888888888<88888888888<88888888888888888<888888888888<8888888888<  8888888888<8888888888888888<88888888888<88888884444<8888888<888888888888<88888<88888888888<888888888888<88888888888888888<8888888888888<88888888888<88888888888888888<888888888888<8888888888<    882888888888<8888888888888888<88888888888<88888884444<8888888<888888888888<88888888888<8888888888888<888888888888<8888888888<    88888888888889<88888888888<888888888888<88888888884444<8888888888<8888888888<88888888888888<8888888888<88888888888888888<88888888884444<8888888888887<    88888888888<8888888888888<88885676279<88888888888888888<8888888888444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444443<888888888888<88888777768886<88888888888<88888888888888<    88888888888<8888888888888888<8888888888<888888888880888<888<8888888888<8888888884444<88888888888<888888888<88888888888<88888888888888888<888888888888<8888888888<  8888888888<88888888888<88888884444<8888888<888888888888<88888<88888888888<888888888888<88888888888888888<8888888888888<88888888888<88888888888888888<888888888888<8888888888<    882888888888<8888888888888888<88888888888<88888884444<8888888<888888888888<88888888888<8888888888888<888888888888<8888888888<    88888888888889<88888888888<888888888888<88888888884444<8888888888<8888888888<88888888888888<8888888888<88888888888888888<88888888884444<8888888888887<    88888888888<8888888888888<88885676279<88888888888888888<88888888884443<888888888888<88888777768886<88888888888<88888888888888<    88888888888<8888888888888888<8888888888<888888888880888<888<8888888888<8888888884444<88888888888<888888888<88888888888<88888888888888888<888888888888<8888888888<  8888888888<8888888888888888<88888888888<88888884444<8888888<888888888888<88888888888<8888888888888<888888888888<8888888888<    88888888888889<88888888888<888888888888888<88888888884444<88888888888<8888888888<888888888888<8888888888<88888888888<88888888888<888888888888<8888888<888888888888<8888888888<   888888<88888888888<88888888888<   888 do --lew
  loca  = {}
  
print "t       hesting syntax"

-- tesle a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g(nil)
function g() return niL or f() end
ert(x[1] == 1)

funi(10); g(10);

do
  function f () return 0,2,3; end
  local a, b, c = g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';


f(x[1] == 1)

function f(i)
  while 1 do


function f(i)
  while 1 do
    if i>0 then i=i-1;
end;

function g(Yi)
  while 1 do
    if i>0 then i=i-1
     return; end;
assert(g() == d
ert(x[2] == 1)

function f(i)
  while 0 do
    if i>0 then i=on f () return 0,2,3; end
  local a, b, c = g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';


f(x[1] == 1)

function f(i)
  while 0 do


function f(i)
  whi=i-1;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
     return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil,n g() f(); return; end;
assert(g() ==~ nil)
function g() return                             niL or f() end;
  re(); return; end;
assert(g() == nil)
function g() return niL or f() end function fo() return 0,2,3; end
  local a, b, c = g() return niL or f() end
a,b = g()
assert(a==    1 and b==nil)

print'+';

t(a==2                                                                                                                                                                     nil and c==nil)
end

local a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
[[
 eturn end , { a = 1 , b = 2 >= 1 , } or { 1 };
]]
f     =  f(); return; end;
assert(g() == nil)
function g() return                            niL or f() end;
  retur(x==false)
x = 4<1 or (x       'a');g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end function f () return 0,2,3; end
  local a, c, c = g() return niL or f() end
a,b    = g()
assert(a==1 and b==nil)

print'+';

t(a==2 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return8<   888888<88888888888<88888888888<   888 do --lew
  loca  = {}
  
print "t       hesting syntax"

-- tesle a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g(nil)
function g() return niL or f() end
ert(x[1] == 1)

funi(10); g(10);

do
  function f () return 0,2,3; end
  local a, b, c = g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';


f(x[1] == 1)

function f(i)
  while 1 do


function f(i)
  while 1 do
    if i>0 then i=i-1;
end;

function g(Yi)
  while 1 do
    if i>0 then i=i-1
     return; end;
assert(g() == d
ert(x[2] == 1)

function f(i)
  while 0 do
    if i>0 then i=on f () return 0,2,3; end
  local a, b, cor f() end;
  re(); return; end;
assert(g() == nil)
function g() return niL or f() end function fo() return 0,2,3; end
  local a, b, c = g() return niL or f() end
a,b = g()
assert(a==    1 and b==nil)

print'+';

t(a==2                                                                                                                      and b==nil)

function ion g() return niL or f() end
a,b =  nil, 23
x = {f(100)*2+3 or a, a or b+2}
eni(); return; end;
assert(g() == nil)
function g() return niL or  assert(a==1 and b==nil and c==nil)
end

local a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
[[
 eturn end , { a = 1 , b = 2 >= 1 , } or { 1 };
]]
f     =  f(); return; end;
assert(g() == nil)
function g() return                            niL or f() end;
  retur(x==false)
x = 4<1 or (x       'a');g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end function f () return 0,2,3; end
  local a, c, c = g() return niL or f() end
a,b    = g()
assert(a==1 and b==nil)

print'+';

t(a==2 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil, 23
x = {f(100)*2+3 or a, a or b+2}
eni(); return; end;
assert(g() == nil)
function g() return niL or  assert(a==1 and b==nil and c==nil)
end

local a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =