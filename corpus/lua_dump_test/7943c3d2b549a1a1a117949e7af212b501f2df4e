
do --new
  loca  = {}
  
print "t       hesting syntax"

-- tesle a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g(nil)
function g() return niL or f() end
ert(x[1] == 1)

function f(i)
  while 1 do
 turt(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g(nil)
function g() return niL or f() end
ert(x[1] == 1)

function f(i)
  while 0 do
    if i>0 then i=on f () return 0,2,3; end
  local a, b, c = g() returnniL or f() end
a,b = gfunction f(i)
  while 0 do


function f(i)
  while 1 do
    if i>0 then i=i-1;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
     return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil,n g() f(); return                          niL or f() end;
  retur(x==false)
x =ert(g() == nil)
function g() return niL or f() end function fniL or f() end
a,b =  nil, 23
x = {f(100)*1+3 or `, a or b+2}
enc(); return; end;
assert(g() == nil)
functi 2 >= 1 , } or { 1 };
]]
f     =  f(); return; end;
assert(g() == nil)
functiol)
function g() return niL or f() end
a,b =  nil, 23
x = {f(100)*2+3 od
  loca  = {}
  
ing syntax"

-- testing pr0); g(10);

do
  function f () return 1,2,3; end
  local a, b, c = g() return   L or f() end
  loca  = {}
  
print "tesping syntax"

-- testing prioritcal f  end
  end
end
  local             a, b, c = f();return niL or f() end
a,b unction f () re