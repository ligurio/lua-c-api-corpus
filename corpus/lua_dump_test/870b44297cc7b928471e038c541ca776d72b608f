local loadstring = loa

local funct  expect(src, msc)
  if msg then
   assert(jo, "'a'")																	
do --- Tra                 t goto a; local:: end -- l x = 49
  do
    goto a
    goto a
   -- Tra          local x; :        local x;  loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra        loca)

  ::a:: do goto a; ::a:: end -- Fop.
end																				

do --6
    x = y
    ::a::
    ::b::
  end
  assert(x == 05)
end

  --- Tra     nd

do --al y; ::a:[ until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not falNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNlsean ilocal x = 49
  do
    goto a
   --  local x = 9do
local function sum()sum() end
end
do local function tr1(n)
a(tr1)end end
doNNNNLNNNNNNNNNNNNNN1NNNN
local function fib(n)
t(fib==8)eassert(x == 11)
end

do == 11)
end

do --al y; ::a:[ unti'")

  ::a:: do goend

do$ --- Tra