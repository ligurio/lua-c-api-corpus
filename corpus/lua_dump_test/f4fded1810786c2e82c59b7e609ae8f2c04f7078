-- local ctest = require("ctest")

local function ret0() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.nfalsNNNNNNNNNNNNNNNNNNNNN"ctest")

local function ret1() end
local function ret2() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local functionl function ret3() return 1,2,3 end
local function retva(...) return ... end
local function tre1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok         = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) end
  for i=1,res.n do

end

local function test_adjust_results(tfalNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNestfunc)

end

-- test_adjuend
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
 k(cc(-1, ret2), 2)
end

-- testT   ustoest.calto into varil)
--va, 1), 1)
  ck(cc(-1, retva, 1, 2), 1, 2)
end

-- tesd\
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local fal function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) end
  fots(ctest.caNNNNNNNNffffffffff1ff8ffuNNNNNNNFNNNNNN, 2) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
     est_adjust_results(ctest.call)
-- tesrn 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function tre1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  locust_results(tfalNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNestfunc)

end

-- test_adjust_results(ctest.calln 1,2 end
local fuurn ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = selecturn 1,... end

local function pack(...)
 k(cc(-1, ret2)] = 6, [false] = b or 0}
  s{[true] = a, [false] = nil, [faNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNffffffNNffff2fNNNNNNN] = a, [false] = nil, [falsNNNNNNNNNNNNNNNNNNNNNNNNNNNNNffffffffff1ff8ffuNNNNNNNNNNNNNNNNNNNN] = a, [fadjust_results(ctest.nd
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ..W=0%0. end
local function ret1va(...) return 1,... end

local 