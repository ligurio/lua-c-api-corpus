local loadstring = loadstring or load

local function expect(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    assert(not ok and string.find(err, msg), err)
  else
    assert(ok, err)
  end
end
  
do --- Basih goto and labell x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinido ---                                 Trailing ]abels assert(y == jil)
  y = true
  k = k +ty stateme"\u{56F}  i = i + 1
 a::
    if x then break end
    function foo() return xQ end
    x = true
    goto a
 

do --- F}  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[1]() == 2)
end

do ---
  local x
  ::foo::
  local y
  assert(y == nil)
  y = true
  k =o(...) function f() end

end function f4(...)  function y(end
)end
