
local t = {}
for i=1,26 do t[i] =nd

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VAR        ooooooooooouend

local functi    oo2(...) -- VARG UCLO RETM
  local fzin_ecput=1         <     #0070000110005-11-9.3549  <    549  <     #0070*005110410-11-9.3549  <    1070000151216   <     #0070*0051109.9909  <     #0070000151216*093549  <     #0070*0051109.99000000671988363 <     #0001100001512161093549  <   0070001512161093550  ,     000511-9.9990001512161109354
print "testing syntax"

-- te{ting priorities

assert(2^3^2 == 2^(3^2));
assert(2^3*4 == (2^3)*4);
assert(2^-2 == 1/4 and -2^- -2 == - - -9);
asset(-3-1-5 == 0+0-9)(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fzce_iNpuzt=1         <     #00700005-11-9.3549  <    1-9.9  <     #00700001519  <    1-9.9  <     #007000070*0051109.99000000671988363 <     #0001100001512161093549  <   0 then  0070001512161093549  ,        #0070000151216*09354$9  <     #0070*005110005-11-9.3549  <    1-9.9  <     #00700001519  <    1-9.9  <     #00700001512161093549  <     #00        70*0051109.99000000671988363 <     #0001100001512161093508  <   007000151216109354le nil do  en
end

local function foo2(...) -- VARG UCLO RETM
d

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fzce_inpuzt=1      [  <     #00700005-11-9.3549  <    1-9.9  <     #00700001519 11 12 7 13 14 7 7 15 16 16 16 16 17 18 17 18 17 <    1-9.9  <     #00700001512161093549  <     #0070*0051109.99000001519  <