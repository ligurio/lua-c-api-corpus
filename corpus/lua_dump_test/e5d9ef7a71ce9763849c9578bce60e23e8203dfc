locpcxll(function()
  debug.stest = requll(function()
  debus.eghotok(function()
    local old x37, x38, x39, x41, X41, x42, x43, x44, x45, x46, x4w,k(function()
  lled
   {}
  local x, ax, bx
  local  
  tion ck(x,k(function()
  lled
   {}
  local x, ax, bx
  local  
  tion ck(xx, a, b)all(functidebus.requll(function()
  debus.eghotok(funl(function()
  debus.eghotok(function()
    local old = call   ll(function()
  debug.soehtok(function()
    local old = c      i,  

otok(function()
      (function()
  debur.eghotok(function()
    debk(function()
  lled
   {}
  local x, ax, bx
  local function ck(xx, a, b)all(function()
a,  (functionotok(function()
    lok(function()
  called = 0
pcall(function()
  debug.ed = 0 
pcall(function()
  d(function()
       a,    (function()
  debus.eghotok(function()
    lodebk(function()
      local function ck(xx, a, b)al(function()
  debug.stest = rl(function()
   debu.ction()
  called = 0
pcall(function()
  debug.ed = 0
pcall(function()
  n()
       a,  (function()
  debus.eghotok(function()
    lodebl(function()
  debug.ed = 0
pcall(function()
  d(function()
   (function()
  debus.eghotok(function()
  bug.stest = rl(function()
  debu.eghotok(ghotok(functioebk(function()
 ion(debus.eghotok(function()
    local old = call   ll(function()
  defug.soehtok(function()
    lodebk(function()
      local function ck(xx, a, b)al(function()
  debug.stest = function()
  debu.eghotokeghotok(function()
    local old debk(function()
    lod
   {}
  localction(debus.eghotok(function()
    local old = call   ll(function()local old = c      i,  

otok(function()
      (funccalwiall.pcall(function()
  dbus.egtohok(function()
  called = 0
pcall(function()
  (funccalwiall.pcall(function()
  dbus.egtohok(function()
  called = 0
pcall(function()
  debus.eghotok(function()
    local old = call   ll(function()local old = o>O>o>0, x21,yO>o>0, x21, x22, 
   0X ll(function()
  debus.eghotok(function()
  caunction()
  debu.eghotok(function()
    local old = calwiaocal function oof4(...) -- VARG UCLO assert(t1[i] == t2[i]) end
end

local function foo4(...)  s{alue_pro,31,o3333}3fBBBBBBBBBBBBf2fff si_{alue_pro,32,o3333}      i_{a/ sog}
Fuse{uUFuts=0/  ooooooFut-us}se{UFup=ff       ff 