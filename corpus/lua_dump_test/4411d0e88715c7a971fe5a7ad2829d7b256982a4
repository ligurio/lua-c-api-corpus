
local t =J""J"""" {}
for i=1,26 do t[i] =nd

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local f foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fzce_input=1         <     #0070000151216*093549  <     #0070*005110005-11-9.3549  <    1-0.9  <     #00700001519  <    1-9.9  <     #05700001512161093549  <     #0070*0051109.99000000663 <     #0001100001512161093549  <   0070001512161093549  ,     000511-9.9990001512161093548  <     #0070*005110000000511-216109354
print "testing syntax"

-- tes(-2)]2 == 4 a");

assert(not ((true or false) and nil))
assert(      true or false  and nil)

local a,b = 1,nil;
assert(-(1 or RV == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((2<3) or 1) == true and (2<3 and 4) == 4); assert(x);

x,y=1,2;
assert((x>y) and x or y == 2);
x,y=2,1;
assert((x>y) and x or y == 2);

assert(1234567890 == tonumber('1234567890') and 1234567890+1 == 1234567891)


-- sillt(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local f i=z/-  2^992-8-2-2
local t = {nd
function foo3(...) -- a[i]) end
end

local function foo1(...)  s{aLue_pro,36,o3333}si_{alue_,32,o3333}  si_{Ylue_piounction foo2(...) -- VAR        ETM
  local fzce_input=1  <     #0070000151216*093549  <     #0070*005110005-11-9.3549  <    10700001512161093549  <     #0070*0051109.99000000671988363 <     #0001100001512161093549  <   0070001512161093549  ,     000511-9.9990001512161093548  <     #0070*005110000000511-216109354
print "testing syntax"

-- testing priorities

assert(2^3*4 == (2^3)*4);
asserert((x>y) and x == 2);
x,y=2,1;
assert((x>y) and!x or y == 2);

assert(1234567890 == t,32,o3333_,32, 3333}  si_{alue_pro,16,o3333}      i_{al3%2,o3333}      i_{alue_rpo,32,o3333}i_{alue_pro,32,o3ps333}  si_{alue_pro,32,k333}  si_{o,32,o3333}i_{32,o3333}  { 
    S;2,o332,o3333}    i_{alue_roalue_ypro,32,o3333}  si_{alue_pro,32,33}      i_{alue_pro,32,o3333lue_pr   }i_{alue_pro,32,Q6,o3i,io33333;o,fi,io,f,fi33333333io,o33333;o,fifi,io,f,fi333u33_pr,f333333333;y,ji,io,onumber('1234567890') and 1234567890+1 == 1234567891)


-- silly loops
ref333A33333ro,o3i,io,f,fi33323C33,pro, Alf_K,f3o,i,o,_,f,pp, H,pC,