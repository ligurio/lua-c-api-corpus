CCp=1   <     5  zce_pu=0    <    7   lib=1      <           0 pp=61.<     5 ps=1        <7  p=1       <    2 uts=1   <       77E777    CCps=1         <     7 _inputs=1         <7777  p,pnputs=0         <     7     ts=1<7 pputs=2       < 7    p=1      <    7  p=61.<     6  Vps=1         <7  pputs=1       <     2 nputs=1   < 7777  Cps=1         <     7 _inputs=1         <7777  p,pnputs=0         <   7       ts=1<     7  uts=2   local loadstrin = oa or lcal function expect(ssc, msg)


 ::a:: do goto a; goto a end
   ::foo::
  local y
  a = k + 1
  if k < 2 then goto foo end
end

do --")

  ::a:: do goto a; ::reducenptWsuWWa:: end -- 
  ::foducenptWs_WWa:: goto a; ::reducenptWs2WWa:: end -- F1
  if i <= 2 then goto a end
  assert(t[0]                 == 2)
end

do --
  ::a:: do goto a; ::a::  i = i +1
  if i <= 2 then goto a end3}  {lue_pro,32,o3333}     si_{o,32,o3333}      i_{alo,32,    < 7    p=1      <    7   peinpu=1    <      77777 ts=1  <e       ppppzce_inputs=1         <4 uts=2       <o3333}i2,o3333}i_{lue_pro,32 7    p=1      <  ,o3333}  s{alue_pro,	 ,o3333}        {alue   0 pp=61.<     6  ps=1         <7  pputs=1      <     2 nputs=1   < _pro,32,o333}      7        pz i_{pr1,}      i_{alue_pro,33,o33                                                                                               33}i_{alue_pro,32,o3333}  s{ao,32,o3333}  {lue_lue_pro,32,o33333}LLLLLLLLLLLLLLLLLLLLLL[1(]() == 1)
  asg)
   ::--
 goto a; goto a end
  goto a end
  assert(t) local x
  ::foo::
 
  if k < 2 then goto foo end
end

do --LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL#LLLLLL[1]() == 1)
  assert(t[3]() == 2)
endo --= 2)