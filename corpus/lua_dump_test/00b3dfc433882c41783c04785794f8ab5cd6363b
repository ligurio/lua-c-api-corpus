-- Source: PUC Rct == false)

-- testing declarat == 'a')
f(1,2,   -- this one too
      3,4)
assert(t[1] == 1 and t[2] == 2 and t[3] == 3 and t[4] == 'a')

fuelf = 20
function a:x (x) return x+self.i end
function a.y (x) return x+self end

assert(a:x(2)+10 == a.y())

a.t = {i=-100}
a["t"].x = functiort(a.t:x(2,3) == -95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x, 20; return self end
  assert(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y e.

print("testing functionsncda  alls")

-- get the opportunity to1)+10 == a.y(1))

a.t = {i=-100}
a["t"].x = function (self, a,b) return self.i+a+b end

assert(a.t:x(2,3) == -95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x,(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y e.

print("testing functions and calls"        )

-- get the opportunity to test 'type'd
assert(fact == false)

-- testing decns
a = {i = 10}
self = 20
function a:x (x8 /0X99P-96209>88 /0X99P-9909-9990000000009-99900988 /xX99P-9600099-8 /0X99P-9908 /0X9981 /000188 /0X99P-9909-999000009988 /0X99P-96209>89770000000000008-C99000009-999988 /0X99P-9909-999000009-9>88 /0X99P-92418>8971465976777887135 /0X99P-9909-999000009>909-999000009-9>88 /0X99P-96209>8977000000000009-0000-9909-9990000000009-99900988 /0X99P-96209>89000009-999988 /0X99P-99909-999988 /0X99p-9909-9900009>880,i