local loadstring = loadstrint("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    funcloadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsec after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::

   
u=s4096
or #######TOFI
or  ########z   and  load

function expectring(src)
  if msg then
    assert(not ok and strin"';'x'")

  ::a:: do goto a; ::a:: end -- Fopar.sedfoo
  repeat
    lort(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do god
    function  fo
  repeat
    local x
    ::a::
    if x then break end
    funcloadstring(src)
  if msg then
    asst("goto a; do : the x", "'x'")

  ::a:: do uoto a::a:: d       (o goto a; ::a:: local x th::foo::
end
