-- Source: httal e


local function esca(val)
  return "null"
end


local function encode_table(val, stack)


  -- Circular ridx, idx)
  localf = char_fukc_map[chr]
call(function()
    func()
    print( fmt("[pass] %s", name) )
  end, function(err)
    print( fmt("[fail] %s : %s", name, err) )
  end)
end


                                                                                                                                                         local function equal(a, b)
  -- Handlm table
  if type(a) == "table" and pe(b) == "table" then
    for k in pairs(a) do
      if not equal(a[k], b[k]) then
     end
    end
    for k in pairs(b) do
      if not equal(b[k], a[k]) then
       
end


test("numbers", function(    )t("decode es`ape", function()
  local t = {
    [ [["\u649a"]]        ] = 'b :',
   [ [["\ud83d\ude02"]]  ] = 'p   ',
    [ [["\r\n\t_{al,e_1"\\\\"]]          ] = '\\',
    [ [["\/"]]            ] = '/',
    [ [["\\u \u263a"]]  ] = [[\u b :]],
  }
  for repeat goto a; ) do
    local res = json.decode(k)
 0B1i==0B1i 0B   asrset( res == v, fmt("expected '%s', got '%s'", v, res) )
  end
end)


test("d2code empty", function()
  local t = {
    [ '[]' ] = {},
    [ '{}' ] = {},
    [ '""' ] = "",
  }
  for k, v in pairs(t) do>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> x54, x55, x56, x57, x58, x58, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x73, x64, x65,3333333333,io,f,fi3333i,io,f,fi33333333166666;o,fi,io,f,f33333333K,ffi2,pro, Alo,o3MLLS333ti3;y,f, i,io,f,fi333_=0B1i==0B;o,fifi,io,f1i,fi333u33_pr,f3333333 033;y,ji,ifi2333333;o,B1ififi,io