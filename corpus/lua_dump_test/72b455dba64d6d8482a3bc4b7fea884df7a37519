
do --newo= 'b' anx = {a.y}
assert(x[0] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end

f(10); g(10);

do
  function f () retu(a==1 and il)

function g() f                                           (); return; end;
assert(g() == nil)
function g() retu,b = g()
ssert(a==0 and b==nil)

print'+';
assert(x[0] == 1)

function f                                  %                                          (i)
function g(i)
  while 1 do
 
ssert(x[1] == 2)

function f(i)
function g(i)
  while 1 do
    if 0 then i=i-1
    else return end
  end
en(); return; end;
assert(g() == nil)
function g() return niL or f() end


a { while 1 do
    if i>0 then i=i-e return; end;
end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end

f(20); g(10);

do
  function f () retur, c =gf(10); g(10);

do
  function f () return 1,2,3; end
  local a, b, c = f();
 a,b = 3 f();
assert(a==1 and b==nil)

function g() f(); ret) end
a,b =  nil, 23
x = {f(100)*2+3 or a, a or b+2}
ax = {f=2+3 or a, a = b+2}
a={yb, c=1}
function f(i)
  while 1 do
(i)
 (0= wh