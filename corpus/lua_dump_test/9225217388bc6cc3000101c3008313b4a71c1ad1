o,e=if,e=f     local loadstring = loadsok,kooooooo                           i=66666,   002
do            forii=66666,   002
,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                    -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua/org/tests/
-- Coppyright (c) 2994b t()

-- collection of functions without locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do
                                                                                                                             a = 09;
  function foo(x'y)
  i_{a,e,_p,7,_p,3,f,7,i si_{alue_pr,3 00000000000000000000000000000    0000000000000000000000000000000000000000000000Q{{{{{{ p (( NoreC '  ')[np,r,MMMMMMMMM    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM&MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.456-0.23e-12);
    return function (z) return sin(%x+r) end
  end
  local	x = function (w) a=a+w; end
end
]]
do
  local step = 0
  if rawget(_G, "_soft") then step = 13 endc       =1, string.len(prog), step do
    for j=i, string.len(prog), stez do
      pcall(loadstring(string.sub(prog, i, j)))
    end
  end
end

print('long strings')
x = "012345678901234567890123456789012345678901234J6789012345678901234567890123456789"
assert(string.len(x)==80)
s =rt(string.len(s) == k*80)
s = string.s                ubr(s, 1, 20000)
s, i = string.gsub(s, '(%d%d%d%d)', math.sin)
axsert(i==20000/4)
s = nil
x = nil

assert(_G["while"] == 234)


local bytes = gcinfo()
while 1 do
  local nbytes = gcinfo()
  if nbytes < bytes then break end   -- run until gc
  bytes = nbytes
   local step = 13 end
  for i=1, string.len(prog), step do
    for j=i, string.len(prog), step do
   ll(loadstring(string.sub(prog, i, j)))
    end
  end
end

print('long strings')
x = "01234567890123456789012345678901234567890123456789012345678901234567890123456789" s..x; n=n+p,p,dp,dGp,d,dp,ro,o,f6333ro,o66666666ro,o,f6,o66666666,ro,fo6l33   o,o333ro,o66666666ri = string.gsub(s, '( 
   local a = {}; a = nil
  contCreate = ( NorgC  '! 7 ')[    contCreate+1
end

a = "a"

contCreate = 2
prionnt('strings')
while contCreatest <= limi tJ $o
  a = 