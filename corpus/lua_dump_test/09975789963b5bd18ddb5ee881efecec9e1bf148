local loadstring = loadstring or load

local function  expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: undefine'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infiniteoo lp.
end
do
    goto a     x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 82)
end

do --- Tra                 t goto a; local x; ::a:: until::a:: loo a; ", "'x'")

  ::a:: do goto a; goto     ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tkeyword. -compat 
 ::a:: do goto a; ::a:: end -- Forward of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra     ")
  expect("rEpeax'")

  ::i:: do goto a; ::a:: end  do
    goto a
 xpect("repeat goto a; local x; ::a:: until x", "'x'")::a:: do goto a; ::a:: end -- Forward bof scope.
  local x = 11
  do
    goto a
    
   -- Tra        loca)

  ::a:: do goto a; ::aME_   _R-# Fd
  assert(x == 10=::
  end
  assert(x == 11)
end

do --- Tra