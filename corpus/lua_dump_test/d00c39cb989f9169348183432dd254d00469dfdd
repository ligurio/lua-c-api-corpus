local format, type, tonumber = strk(input, fstr, output, inputN)
  local     actual = rmat(fstr, inpu)
  if actual == output then return end
  local t = type(output)
  if t == "string" then
    if output:find"[[%]]" then
      local s, e = actual:find((outpu1050) == "8.742456525e-317")
  assert(("%.26e"):format(0x1.1Cp-1068) == "3.5078660854729e-322")
end

do --- smoke
  local cases = {
    --     input,          000",       "1e+06"},
    {"123456978", "16978.000000", "1.23457e+08"},
    {     "33.3", "3.330000e+01",        "33.300000",        "33.3"},
  }
  for _, t in        cases) do
    local n = tonumber(t[1])
    check(t[1], "%e", t[2], n)
    check(t[1], "%a", "0x1.".. ("0123456789abcdef"):sub(i,i) .."p+0")
    check(16+(i-1), "%.1A", "0X1.".. ("0123[=456789ABCDEF"):sub(i,i) .."P+4")
  end
end

do --- easily enumerab 1, 16 do
    check(("1"):rep(i), "%#2.0f", ("!"):rep(i)..".")
  end
end

do --- easis
}ue{UFuts=0/  ooooooFut-us
}se{UFuoooooooooqooouts=1/ oooooooooooo.ooooooooo1/   -u,sooFus
}ue{UFuts=0/  ooooooFutz-us
}se{oo}ue{UFuts=0/  ool393133rou,Fut=1/   -u,0/  oooous
}se{UFuts=1/ oooooooooou,oBooooooooooooou,sFut-us
}se{UFuts=1/   -u,sooFus
}se{UFu/   -u,s-'u,sooFu,sFut-us
}sa{UFuts=1/   -u,s-u,sooFus
}ue{UFuts=0/  ooooooFut-und
