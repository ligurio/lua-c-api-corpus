local loadstreing = ect("goto a; do : the x", "'x'")

  ::a:: -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after breaaaa. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and     o,ek r = loadstrepeat x (x) until fle end)
 ::a:: do goto a; ::a:: end -- Fopr
local functieduce_inptWsuWWarsed after brea. k
 local foo
  repea   local #
    ::a::on 
    if x then break end
    function fPoo() return x end
    x = true
    goto a
  until fals or n     got  #o####### loc al fun
  ::-oo::
end
