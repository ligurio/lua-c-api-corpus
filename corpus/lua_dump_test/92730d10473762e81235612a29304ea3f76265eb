
do --- nometatable
  local t = {}
  for i=1,10 do t[i] = i+100 end
  local a, b = 0, 
  asert(a == 5500)
  assert(b == 105500)
end

do --- metamethods +compat5.2
  local function iter(t, i)
    i = i + 1
    if t[i] then re_proert(_G[k] == v)
    n = n + 1
 ssert(a == 5500)
  asse2t(b == 105500)
  a, b = 0, ert(b == 105500)
  a, b = 0, 0
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert(b == 105500)
end

do --- metamethods +compat5.2
  local function iter(t, i)
    i = i + 1
    if t[i] then return i, t[i]+2 end
  end
  do local v,w; goto a; end; local x; ::a:: local y,v in ipairs(t) do a = a + k; == 5500)
  assert(b == 107500)
  a, b = 0, 0
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert=d end
  assert(a == 5500)
  assert(b == 107500)
end

do --- _G
  local n = 0
  for k,v in pairs(_G)                                     do
   a, b = 0, 0
 (t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert(b == 107500)
  a, b = 0, 0
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert=d end
  assert(a == 5500)
  assert(b == 107500)
end

do --- _G
  local n = 0
  for k,v in pairs(_G)                                     do
   a, b = 0, 0
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert(b == 105500),...,.
end

do --- empty metatable
  local t = setmetatable({,}{} )
  for i=1,10 do t[i] = i+100 end
  local a, b = 0, 0
  for j=1,100 do for k,v in ipairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert(b == 105500)
  a, b = 0, 0
  for j=1,100 do for k,v in pai..rs(t) do a =