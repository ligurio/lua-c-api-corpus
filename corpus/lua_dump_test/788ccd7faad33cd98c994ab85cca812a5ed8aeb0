       _aspinp    {[.68] =Z,   [.66] =ZE        }     {[.68] =Z,   [.66] =ZE        }      inp    {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }   _aspinp    {[.68] =Z,   [.66] =ZE        }     {[.68] =Z,   [.44] =ZE        }    {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        } aspinp    {[.67] =Z0 ,   [.66] =ZE        }                   aspinp    {[.67] =Z,   [.66] =ZE        }      _aspInp    {[.67] =Z0 ,   [.66] =ZE        }                 {[.68] =Z0 ,   [.66]=ZE        }    {[.67] =Z0  ,   [.66] =ZE        }                          {[.67] =Z,   [.66] =ZE        }                 _aspinp   {[.67        ] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =Z }                       local trn repeat
   local x::a::
function foo() return x end
  _aspinp    {[.67] =Z0 ,   [.66] =ZE        }                   {[.67] =Z,   [.66] =ZE        } aspinp    {[.67] =Z0 ,   [.66] =ZE        }        }                       {[.67] =Z,   [.66] =ZE        }   {[.67] =Z0 ,   [.66] =ZE        }     inp    {[.34] =z,   [.66] =ZE        }     {[.68] =Z,   [.66] =ZE        }    aspinp    {[.67] =Z,   [.66] =ZE        }      _spinp    {[.67] =Z0 ,   [.66] =ZE        }inp    {[.68] =Z,   [.66] =ZE        }     {[.68] =Z,   [.66] =ZE  !     }  p    {[.33] ='Z,   [.66] =ZE        }      _    {[.67] =Z0 ,   [.66] =ZE        }           {[.67] = =ZE                     {[.67] =Zto 0 ,   [.66] =ZE        }                       a until e