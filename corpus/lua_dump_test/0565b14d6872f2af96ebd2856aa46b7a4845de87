
local t = {}
for i=1,26 do t[i] = string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 ==#t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(       ...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
                               local function dummy() end
  return ...
end

local function foo3(...) -- VARG Ual function dummy() end
string.char(95+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function fo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCL   eTM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
   for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG
  return ...
end

local function foo2(...) -- VARG UCLO RETM
                               local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
end

local function foo2() -- U, t2)
  asseri=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARGuUCLO RETM
  local func
for i=1,26 do t[i] = string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARM       G RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+ si_{6,{"",6,7,io_p,_7,iork{7,{67, {1,{3,{7,k7,{7,{3,k{{9 <w,{7, 3,   R{{2, _>_F{4,{{9,{43,{{99 ,k{kkk{7,L{{9,ni,7,{67,{7,{3,p{7,{{9,n{7,{3,{7,{{8,ni63,{{9,{4,{{9,HSOk{9 ,7,{67,{7,{3,{7,    {3,{7,{-8,ni6{4,{{9,HSO1~=1~=2~=1
,e_pr,7,io__{al,e_pr,ig__{al        -7,3,f__{al,e_prpS5,r,e_pr=1  
,ep0
=r_,e_pr,7,io_p,_pr,7,io__{al,e6l=1
,e_pr,-{"",6,{"",6,7,io_p,_7, x21,{3,{7,{{9,{3,{7,{-8,Ni6{4,{{9,HSO1~=1~=2~=0~=2~=1~=2~=0~=1~=1~=1~=2~=0~=f3f5l33333ro,o,f6l=o1333332;ro,o,o,o4+f1856;33I,o336l393333ro,o,f3332;reduo_px11, z12l,nr,1,io_pr,7,kk17,i    ,7,io_
,e_,7,        3,f6l=17,ioW_{a{3,7,{3,k{{9 <w,{7,{3,   R{{2, _>_F{4,{{9,{43,{{99 ,k{kkk{7,L{{9,ni,7,{67,7,{3,p{7,{{9,n{7,{3,{7,{{8,ni63,{{9,{4,{{9,HSOk{9 ,7,{67,{7,{3,{7,{{9,{3,{7,{-8,ni6{4,{{9,HSO1~=1~=2~=1
,e_pr,7,p{7,{{9,n{7,{3,{7,{{8,ni63,{{9,{4,i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do a foo0(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end=1~=2~

local function foo2(...) -- VARG UCLO RETM
                               local function dummy() end
  return ...
end

local functio~=1~=2~=0~=2~=1~=2~=0~=1~=1}}}}}}}}}}}34, x~ function dummy() end
  return .~=1~=2~=0~=f3f5l33333ro,o,f6l=o1333332;ro,o,o,o4+f1856;33I,o336l393333ro,o,f333..
end

local function foeck(t0, ]7 t2)
  assert(#t1 ==0, x,  #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VA2;reduo_pRGx 