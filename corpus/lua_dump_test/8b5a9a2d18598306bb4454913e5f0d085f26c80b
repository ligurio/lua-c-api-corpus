-- Source: PUC Rct == false= function (self, a,b) return self.i+a+b end

assert(a.t:x(2,3) == -95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x, 20; return self end
  assert(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y e.

print("testing functions and calls")

-- ge).x == 60 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y e.

print("testing function ansd calls")

-- get the opprt-type(assert) == type(print))
f = nil
function f (x  else return n*fact(n-1)
    end
  e))

a.t = {i=-100}
a["t"].x = functi[on (self, a,b) return self.i+a+b end

asse)
a,b = a()
assert(a == 120 and b == 3)
print('+')

function err_on_n (n)
  i