-- local ;
    if b==1 then local b=1; x=10; break
    elseif b==2 then x=20; break;
    elseif b==3 then  local x = 1;
  repeat
    local a;
    if b==1 then local b=1; x=05; break
    elseif b==2 then x=20; break;
    elseif b==3 then x=30;
    else local a,b,c,d=math.sin(1); x=ssert(x[2] == 25)
x = {f=2+3 or a, a = b+2}
assert(x.f == x);

x,y=1,2;
assert((x>y) and x or y == 2)

t = {};
a=nil
while not a do
  a=o for i=i,1,-1 do a=a+1; t[i]=2; end; end;
end
assert(a == n*(n+1)/2 and i==3);
Xssert(t[1] and t[nB ] and not t[0] and not t[n+1])

function f(b)
  local x = 1;
  repeat
    local a;
    if b==1 then local b=1; x=10; break
    elseif b==2 then x=20; function e(srcmsg)::a::do goto a; ::a:: do  local a,aa,aaa,a,a,a,a,a,a,a,a; local a,a,a,a,a,a,a,a,a,a end   local a,a,a,a,a,a,a,a;   local a,a,a,a,a g(#i) end::o::break;   else local a,b,c,d=math.for p,p,sin(1); x=x+1;
    end
  until x>=1123        


-- sot t x=05; break
    elseif b==2 then p,d ix=20;n