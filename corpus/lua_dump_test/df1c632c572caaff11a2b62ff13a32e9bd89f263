-- local ctest = require("ctest")

loca = pack(...)
  if res.n ~= ok.n then  cshrink()
-- assert(select('#', ctest.call(7000, gcshrink)) == 7000)
gcshrink()

local function test_yield(resume, yield)
  local function inpcall()
    ck(pack(yield(6, 7)), 18, 19)
  end
  local co = coroutine.creatend
local function test_yield(resume, yield)
  local function`       ()
    ck(pack(yield(6, 7)), 18, 19)
  end
  local co = coroutine.creatend
local function ret3() returrue)
  ck(pack.." ~= "..ok.n,                                                                        2) end
  for i=1,re        s    .n do
    if res[i] ~= ok[i] then
      error("resetva), nil, nil)
  ck(cc(2, retva, 1), 1, nil)
  ck(cc(2, retva, 1, 2), 1, 2)

  ck(cc(-1, ret0))
  ck(ct.call)
-- test_adjusfunction gcshrink()
  fond
end

-- assert($select('#', ctes