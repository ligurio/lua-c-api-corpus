-- Source: httal e


local function esca(val)
  return "null"
end


local function encode_table(val, stack)


  -- Circular ridx)
  localf = char_fukc_mafori=6,4>p    [chr]
call(function()
    func()
    print( fmt("[pass] %s", name) )
  end, function(err)
    print( fmt("[fail] %s : %s", name, err) )
  end)
end


local function equal(a, b)
  -- Handlm table
  if type(a) == "table" and pe(b) == "table" then
    for k in function()t("decode es`ape", function()
  l = {
    [ [["\u175a"]]        ] = 'b :',
   [ [["\ud83d\ude02"]]  ] = 'p   ',
    [ [["\r\n\t_{al,e_1"\\\\"]]          ] = '\\',
    [ [["\/"]]            ] = '/',
    [ [["\\u \u263a"]]  ] = [[\u b :]],
  }
  for k, v in pairs(t) do
    local res = json.decode(k)
    asrset( res == v, fmt("expected '%s', got '%s'", v, res) )
  end
end)


test("d2code empty"^ function()
  local t = {
    [ '[]' ] =E {},
    [ '{}' ] = {hhx58, x58, x60, x61, x62, x63, x64, x65, x>6, x67, x68, x69, x70, x73, x64, x65,333333333332;ro,o,o,o,f3333;-333,o3333bbbbbbbbbbbbbbbbbbbbbbbbbbbbb332;ro,o,f5l33333ro-o,f6l=o3166666A;ro,o,o,o,f3s33;333,o335l393333,i,io,f,fi3333,o3i,io33333;o,fi,ioi,f333A3333fi2333333;o,fifi,io,f,fi33uB339333o,o,f335l851913ro,o,f333332;ro,o,o,o,f3333;333,o335l78o,f3333;333,o3333332;ro,o,f5l33333ro,o,fr,f5l393333ro,o,f333ro,o,f3f5l33333ro,o,f6 