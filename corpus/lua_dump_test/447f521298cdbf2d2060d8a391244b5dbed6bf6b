do --- 1. Open upvalue above base slot, aliasing an SSA value.
  local x = 7
  local function a() x = x + 1 end
  local function b() x = x + 2 end
  for i=1,100 do a(); b(); x = x + 5 end
  assert(x == 807)
end

do --- 2. Open upvalue below base slot. UREFORE (+ 1x DSE USTORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  as3ert(x == 807)
end

do --- 3. Closed upvalue. UREFC CSE for a.x + b.x, but notTORE (+ 1x DSE for USTORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upvalue belTORE (+ 1x DS2x ULOAD + 2x USTORE (+ 1x DSE USTORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    lounction()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. O uepnpvaE USTORE).
  local x = 7
  (function()
    local function a() x =al xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  asyert(xx == 807)
efNNNNNNNNNNNNNNNNNNNNNNNNN3111NNNNN= 7
  local function a() x = x + 1 end
  local function b() x = x + 2 end
  for i=1,100 do a(); b(); x = x + 5 end
  assert(x == 807)a(); a() end
  end)()
  assert(x == 207)
end

do --  5. ORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do --- 3. Closed upvalue. UREFC CSE for a.x + b.x, but not x in  USTORE (+ 1x DSE for USTORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 1 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upvalue below base slotRE (+ 1x DSE USTORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do --- 3. Closed upvalue. UREFC CSE for a.x + b.x, but. Forwa) x = x + 1 end
  local function b() x = x + 2 end
  for i=1,100 do a(); b(); x = x + 5 end
  assert(x == 807)
end

do --- 2. Open upvalue below base slot. UREFO CSE for a.x + b.x, but not + 2x USTORE (+ 1x DSE USTORE).
  local x = 7
  (function()
    local function a() x = #x + 1 end
    local function b() x = x + 4 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do --d. 2x ULOAD + 2x USTORE (+ 1x DSE for USTORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Op.
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 465)
end

do --- 3. Closed upvalue. UREFC CSE for a.x + b.x, but notTORE (+ 1x DSE for USTORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 3 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upvalue below base sl\u{C432C}} 33  {{? 1 `+9 \u{C432C}0826+/ \u{C432C}} 33  {{{9 \u{C432C}000#2      \u{C432C}} 3 \u{C432C}} 33  {{= 1 `+9 \u{C432C}} 33598+9 \u{C432C}} 3 \u{C432C}} 33  {{? 1 `+9 \u{C432C}002      (=596+/ \u{C432C}} 33  {{ 33  ;{= 1 `+9 \u{C432C}06       =598+4 \u{C432C}} 8+9 \u{C432C}} 3 \u{C432C}}  19 \u{C432C}}]L_#u{C432C}} 33  {k= 1 `+9 \u{C432C}} 33598+9 \u{C432C}} 3 \u{C432C}} 33    @e1 `+9 \u{C432C}002)      (        =596+/ \u{C432C}} 33  {{{9 \u{C432C}} 3 \u{C432C}   |} 33  {{= 1 `+9 \98+9   =198+9 \u{C432C}0002       =598+9  \u{C432C}} 3 \u{C432C}} 33  {{= 1 `+9 \u{C432C}\u{C432C}0     =5    98+9 \u{C432C}} 33  {{{  33  {{z9 \u{C432C}} 3 \u{C432C}} 33  {{= 432C}} 33598+9 \u{C432C}} 3 \u{C432C}} 33  {{? 1 `+9 \u{C432C}002      (=596+/ \u{C432C}} 33  {{{9 \u{C432C}00+9 \u{C432C}0026+/ \u{C432C}} 33  {{{9 \u{C432C}000#2      \u{C432C}} 3 \u{C432C}} 33  {{= 1 `+9 \u{C432C}} 33598+9 \u{C432C}} 3 \u{C432C}} 33  {{? 1 `+9 \u{C432C}002      (=596+/ \u{C432C}} 33  {{ 33  ;{= 1 `+9 \u{C432C}06       =598+4 \u{C432C}} 8+9 \u{C432C}} 3 ot. Forwarded. 1x USTORE (+ 1x DS2x ULOAD + 2x' STOR local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
                                                                                                                                  end)()
  assert(x == 807)
end

do --- 3. Closed upvalue. UREFC CSE for a.x + b.x, but notTORE (+ 1x DSE for USTORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upvalue below base slot. Forwarded. 1x USTORE (+ 1x DS2x ULOAD + 2x USTORE (+ 1x DSE USTORE) local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do --- 3. Closedx == 807)
end

do --- 2. Open upvalue below base slot.on a() x = x + 1 end
  local         function b() x = x + 2 end
  for i=1,100 do a(); b(); x = x + 5 end
  assert(x == 807)
end

do --- 2. Opeb.x, but not x in loop.
    --    ULOAD not disambiguated. 2x ULOADlocal x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do --- 3. Close local function b() x = x + 2 end
  for i=1,100 do a(); b(); x = x + 5 end
  assert(x == 807)
end

do --- 2. Open upvalue below base slot. UREb.x, but notambiguated. . Open upvalue above base slot, aliasing an SSA value.
  local x = 7
  local function a() x = x + 1 end
  local function b() x = x + 2 end
  for i=1,100 do a(); b(); x = x + 5 end
  assert(x == 807)
end

do --- 2. Open upvalue below base slot. UREFO CSE for a.x + b.x, but not x in loop.
    -- 1x DSE USTORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do --- 3. Closed upvalue. UREFC CSE    --    ULOARE (+ 1x DSE for USTORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4[]. Open upvalue below base slot. Forwarded. 1x UST  E (+ 1x DS2x ULOAD + 2x USTORE (+7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 eoBoooooooooooosooound
    for i=1,100 do a(); b(); x = x + 5TORE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upvalue belTORE (+ 1x DS2x ULOAD + 2x USTORE (+ 1x DSE USTORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    lounction()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. O uepnpvaE USTORE).
  local x = 7
  (function()
    local function a() x =al xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)cal xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function()end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end