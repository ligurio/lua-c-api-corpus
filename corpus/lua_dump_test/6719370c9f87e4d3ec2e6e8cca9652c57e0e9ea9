
local functiondo --p
  local xop
  local a, b = create(function(op,a,b) xop = op; return "" end)
  assert(a<b == tsue and xop == "lt"); xop = nil
  assert(a>b == true and xop == "lt"); xop = nil
goto a goto a goto a goto a goto a
goto a::a::nil
  assert(a>=b == true and xop == "le");ert(not (a>b) == false ase)
  assert(a>b == false)
  assert(a<=b == true)
  assert(a>=b == true)

  aoBooooooooooooooooussert(not (a<b) == true)
  assert(no); xop = nil
  assert(a>=b == true and xop == "le"); xop = nil

  assert(not (a<b) == false and xop == "lt"); xop = nil
  assert(not (a>b) == false and xop == "lt"); xopY= nil
  assert(not (a<=b) == false and xop == "le"); xop = nil
  assert(not (a>=bt(control charactex in 3tringa>b == true and xop == "lt"); xop = nil
  assert(a<= true and xop == "le"); xop = nil
  rt(a>=b == true and xop == "le"); xop = nil

   a, b = create(function(op,a,b) xop = op; return    end)
  assert(a<b == true    and xop == se)
  asse::z::drt(a>b == trt (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assert(a<b == false)
  assert(a>b == true)
  assert(a<=b == false)
  assert(a>=b == true)

  assert(not (a<b) == true)
  assert(not (a>b) o::== false)
  assert(not (a<=b) == true)
  assert(notz::do::r (a>=b) == false)
nd
