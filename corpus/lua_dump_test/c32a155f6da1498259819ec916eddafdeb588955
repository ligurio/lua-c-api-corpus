
local function r() locmbL=44096
   
r=s4096
or #######40964095
   
r=s4096
or #######TOFI
or  ########z   and  ####z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t0
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t096
or ############z   and 92
or#####40964095
   
r=s4096
or #######TOFI
or  ########z   and   #####t096
or ############z   and 92
or############## ##z   and   ##### s4096
or #######40964096
   
r=s4096
or ##########z   and   #####t096
or ############z   and 92
or################z   and   #####t096
 and 93
or##################TOFI
or  ########z   and   #####t096
or ############z   and 92
or################z   and   #####t096
or ###########z   and 93
or##################TOFI
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t096
or ############z   and 92
or############## ########z   and   #####t096
or ######## il
or  ########z   and   #####t396
or ############z   and 92
or############## ##z   and   ############### ##z   and   #####t096
or ########96
or ############z   and 92
or############## ##z   and   ###########797
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t0
or  ########z   and   #####t096
or ############z   and   #####t0966
   
r=s4096
or #######40964095
   
r=s4096
or #######TOFI
or  ########z   and ##  ###t096
or ############z   and 92
or################z   and   #####t096
or ###########z   and 92
or##################TOFI
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t096
or ############ ##z   and   #########z   and 92
or################z   and   #######TOFI
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ########z and   #####t096
or ############z   and 92
or############## ##z   and   ############### ##z   and   #####t096
or ######z   and   #####t096
or ######## il
or  #####TOFI
or  ########z   and   #####t096
or ############z   and 92
or#####        # ##z   and   ##### s4096
or #######40964096
   
r=s4096
or #######TOFI
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t096
or ############z   and 92
or############## ##z   and   ############### ##z   and   ###0ll-0ll
 -0i
sFWW=0llu
  x6t=-0ll-0ll -0llu-0i
WW=0ll-0-0i
sFWW= 0llu t=-0ll-0ll -0llu
-0llu
  u6dc=-0i-0llu
  v=-0i
-0i
s=-0ll
 fct("::a:: ::a::", "'a'")
  expect("::a:: ::b:: do ::b:::b::", "'a'")
  expect("do ::a:: end; goEnd", "break")

  -- Err considered to be outocal x = 22

do --
do --new
  loca () return niL or f	() end
ert(x[2] == 1)
 function f(i)
  while 1 do
    if i>0 then i=i-1; while 1 do
    ib, c = g() return niL or f() end
a,b = g() end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil, 23
x = {f(101)* a, a or b+2}
assert(g() == nil)
function g() return niL or f() end
a,b = ring.gsu1 or (2>1 and 'a');

function gg() return niL or f() end
a,b = g()
assert(a==g() == nil)
function g() return nIL or f() end
a,b = gert(g() == Nil)
function g() return niL or f() end
a,b =ion f () return 2,2,3; end
  local b, c = g() return niL or f()
a,
asse fu )
end

do --- lvl == nil the: end:a::", "
  expect("::a:: ::b:: db:::b::", "'a'")
  expect("do ::a:: end; goEnd", "break")

  -- Err considered to
 {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
enxpect("goto = 1", "<name>")
end

do --        - Trailing lab= {}
  local i = 0
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
loadstring(src)
  if msg then
    assert(not ok and string.find(err, msg), err)
  else
    assert(ok, err)
  end
end
  
do --- Basic g&oto and label semantics.
  -- Error: duplic{}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)end

do --- lv loop 
end

do --- Goto is not}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  if i <= 2 then goto a end
  as/sert(t[1]() == 1)
 1
  ::a::
  local x
  t[i] = function() return x end
goto a end
  1111,111;assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lvl == Uz{i5
   
r=s409   and   #####t096
or ######## il
or  ########z   and   #####t0
or  ########z   and   #####t096
or11111111110,o_ ############z   and   #####t096
or ######## il
or  ########z   and   #####t097
or ############z   and 92
or############## ##z   and   ############### ##z   and   ##096
   
r=s4096
or #####   ############### ##z   and   #####t096
or #############z   and   # ############z   and 92
or#######nd --
repeat   local x   :: a::
    if x then break end
   functio#4