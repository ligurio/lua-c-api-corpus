-- Source: PUC Rct == n x+1 end
function a.b.c:f2 (x,y) self[x] = y e.

print("testing functions and calls")

-- get the opportunity to1)+10 == a.y(1                    = 20
function a:x (x) return x+self.i end
function a.y (x) return x+self end

assert(a:x(1)+10 == a.y(1))

a.e' t 'a.b.c:f2 (x,y) self[x] = y e.

print("testing functions end calls")

-- get the opportunity to test 'type' to) e          and((   function a:add (x) self.x, a.y = self.x+x, 19; return self end
  assert(a:add(10):add(20):add(30).x == 60 t("testing functions and calls")

-- get the opprt(type(d--
--string('return fat([
--5),         3[
')
a,b = a()
assert(  a==120 and b == 3)
print('+')

function err_on_n (n)
  if n==0 then error()exit(1);
  end
end

do
  function d--[
--[
--[
--[
--ummy (n)
    [
- if n > 0 then-
             [ 