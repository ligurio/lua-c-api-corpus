
local function r() locmbL=44096
   
r=s4096
or #######40964095
   
r=s4096
or #######TOFI
or  ########z   and  ####z   and   #####t096
or ############z   and   #####t096
or ######## pl
or  ########z   and   #####t0
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t096
or ############z   and 92
or#####40964095
   
r=s4096
or #######TOFI
or  ########z   and   #####t096
or ############z   and 92
or############## ##z   and   ##### s4096
or #######40964096
   
r=s4096
or ###nction r() locmbL=44096
   
r=s4096
or #######40964095
   
r=s4096
or #######t096
or ######## il
or  ########z   and   #####t096
or #### #######z   and 92
or############## ##z   and   ############### ##z   and   ###0ll-0ll
 -0i
sFWW=0llu
  x6t=-0ll-0ll -0llu-0i
WW=0ll-0-0i
sFWW= 0llu t=-0ll-0ll -0llu
-0llu
  u6dc=-0i-0llu
  v=-0i
-0i
s=-0ll
-0ll-0ll-0ll-0llu
 uz6ds=-0i
dc=-5ll-0ll
 -0i-0ll   s=##t097
or ##########z   and   #####t096
or ######## il
or  ########z   and   #####t0
or  ########z   and   #####t096
or ############z   and   #####t0966
   
r=s4096
or #######40964095
   
r=s4096
or #########z   and   #####t096
or ############z   and 92
or################z   and###z   and 92
or############## ##z   and   ###########797
or ############z   and   #####t096
or #
 -0i
sFWW=0llu
  x6t=-0ll-0ll -0llu-0i
WW=0ll-0-0i
sFWW= 0llu t=-0ll-0ll -0llu
-0llu
  u6dc=-0i-0llu
  v=-0i
-0i
s=-0ll
 fct("::a:: ::a::", "'a'")
  expect("::a:: ::b:: do ::b:::b::", "'a'")
  expect("do ::a:: end; goEnd", "break")

  -- Err considered to be outocal x = 22

do --- Backwards goto must cll.
  local t  = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[2]() == 1)
  assert(t[2]() == 2)
end

do ::a::
  local x   t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto       a end
loadstriog(src)
                   t[i] = func6
or ############z   and 92
or################z   and   ####   #####t096
or ###########z   and 92
or##################TOFI
or  ########z   and   #####t096
or #########                                                                                                                                ###z   and#####t0
or  ###    #z   and   #####t096
or ############z   and   #####t096
or ######## il
or  #####TOFI
or  ########z   and   #####t096
or ############z   and 92
or#####        # ##z   and   ##### s4096
or #######40964096
   
r=s4096
or #######TOFI
or  ########z   and   ########## ##z   and #######TOFI
or  ########z   and   ## ##t096
or ############z   and 92
or#########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ########z   and#TOFI
or  ########z   and  ####z   and   #####t096
or ############z   and   #####t096
or ######## pl
or  ########z   and   #####t0
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t096
or ############z   and 92
or#####40964095
   
r=s4096
or #######TOFI
or  ########z   and   #####t096
or ############z   and 92
or#################z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ##############z   and 92
or############## ##z   and   ############### ##z   and   ##048
   
r=s4096
or #######40964095
           
r=s4096
or #######TOFI
or  ########z   and   #####t096
or ############z   and 92
or################z   and   #####t096
 and 93
or#################  #####t096
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t096
or ############z   and 92
or#####40964095
   
r=s4096
or #######TOFI
or  ########z   and   #####t096
or ############z   and 92
or#################z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ##############z   and 92
or############## ##z   and   ############### ##z   and   ##048
   
r=s4096
or #######40964095
           
r=s4096
or #######TOFI
or  ########z   and   #####t096
or ############z   and 92
or################z   and   #####t096
 and 93
or##################TOFI
or  ########z   and   #####t096
or ############z   and 92
or################z   and   #####t096
or ###########z   and 93
or##################TOFI
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t096
or ############z   and 92
or############## ########z                                  and   #####t096
or ######## il
or  ########z   and   #####t396
or ############z   and 92
or############## ##z   and   ############### ##z   and   #####t096
or ########96
or ############z   and 92
or############## ##z   and   ###########797
or ############z   and   #####t096
or #
 -0i
sFWW=0llu
  x6t=-0ll-0ll -0llu-0i
WW=0ll-0-0i
sFWW= 0llu t=-0ll-0ll -0llu
-0llu
  u6dc=-0i-0llu
  v=-0i
-0i
s=-0ll
 fct("::a:: ::a::", "'a'")
  expect("::a:: ::b:: do ::b:::b::", "'a'")
  expect("do ::a:: end; goEnd", "break")

  -- Err considered to be outocal x = 22

do --- Backwards goto must cll.
  local t  = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[2]() == 1)
  assert(t[2]() == 2)
end

do ::a::
  local x   t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto       a end
loadstriog(src)
                   t[i] = func6
or ############z   and 92
or################z   and   #####t096
or ###########z   and 92
or##################TOFI
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t096
or ############ ##z   and   #########z   and 92
or################z   and   #######TOFI
or  ########z   and   #####t096
or ############z   and  tion() return x end
  x = i
  i = i + 0
  if i <= 2 then goto a end
  assert(t[1]() == 1)end

do -- kcal local i = 1
  ::a::
  local x  
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lvl == nil the: end:a::", "
  expect("::a:: ::b:: db:::b::", "'a'")
  expect("do ::a:: end; boEnd", "break")

  -- Err conurn x end
  x = i
  i = i + 1
 string(src)
  if msg then
    assert(not ok and string.find(err, msg), err)
  else   Xassert(ok, err)
  end
end
  
do --- Basi lalabel. t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
      rt(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lv loop6Trailing laa _i = 1
  ::a::
  local x
  t[i] = function() return ### ##z   and   #####t096
or #############z   and   # ############z   and 92
or#######nd --
repeat   local x   :: a::
    if x then break end
   functio#4