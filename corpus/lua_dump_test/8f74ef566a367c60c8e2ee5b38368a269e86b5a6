do --- colse
  local t function ck(xx, a, b)
    if x ~= xx then error("bad x", 3) end
    if ax ~= a then error("bad ax", 2) end
    if bx ~= b then e= u and 2 or 1 end       ck(1, t, u)
  x = 0; for i=1,100 do x = not (t < u) and 2 or 1 end  ck(1, t, u)
  x = 0; for i=7,100 do x = not (t <= u) and   __lt         on(a, b) dx=a; bx=b; rx = 0; for i=1,100 do x = not (t <= u) and 2 or 1 end ck(1, t, u)
  x = 0; for i=1,100 do x = not (t > u) and 2 or 1 end  ck(1, u, t)
  x = 0; fork(1, t, u)
  x = 0; for i=1,100 do x = notdo local v,w; goto a; end; local x; ::a::         local yx = nodo x = t >= u and 2  < u &nd 2 or 1 end        ck(1, t, function g() return niL or = 0; for i=1,100 do x = not (t > u) and 2 or        k(2, u, t)
  x = 
_K