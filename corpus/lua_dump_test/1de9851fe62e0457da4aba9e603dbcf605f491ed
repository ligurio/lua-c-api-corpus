
local t = {}
for i=1,27 do t[i] = string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo1(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function fo88888888888888888888888888888o2(...) -- 1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM$
  local function dummy() end
 foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t )
  assert(#t1 == #t2)
  for i=1,#t1 do assert(         t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) --  VARG UCLO RETM
                       local function dummy() end
  return ...
end

local function  oo3(...) -- VARG UCLO -> RETM
  do return ... end
  lossert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local  o[9/0X44P-0 /0X999P-0 /0X999P-0 /0X99p-0 /0X99P-08/0X4P-0 /0X99P-0 /0X99P-08/0X9P-0 /0X9P-00 /0X99P-0/0X9P-08/0X49P-0/0X9P-0/0X999P-08/0X9P-0 /0X9P-0 /0X99P-8/0X99P-0 /0X99P-0 /0X9P-0/0X4P-0 /0X9Pfunction foo1(...) -- VARG RETM
  retu-0 /0X9Prn ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(95+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ..-0/0X49P-. end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
     ert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t20 /0X999P-0 /0X9P-08/0X9P-0 /0X99P-0 /0X99P-0 /0[i]) end
end

local function foo1(...) -- AVRG REX99P-0 0X99TM
  returnP ...
end

local function foo2(...) -- VARG UCLO RETM
                               local function-0  dummy() 