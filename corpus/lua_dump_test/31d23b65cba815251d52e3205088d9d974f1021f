forii=66, 0
dok=1ii.k, ii=o  ii.k ,ii=o  ii.	k,  ii=0  ii.k, iio,e=if,e=f     local loadstring = loadsok,koooooooooooosoooou      forii=66666,   002
do      forii=66666,   002
do                                                           forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do     i.k, iio,e=if,e=f     local loadstring = loadsok,koooooooforii=66666,   002
do      forii=26666,   002
do                                                           local ok, err = lo                       forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do     gcinfo()
  collectgarbage()
  collectgarbage"stop"
  repeat
    local a = {}
  until gcinfo() > 1000
  collectgarbage"restart"
  -- LuaJIT: Tarantool has"] = 234

limit =            5000



contCreate     = 4

print('tables')
while contCreate <= lim=1ii.k,ii=o  ii.	k,  ii=1zii.it do
  local a = {}; a = nil
  contCreate = contCres{} do	for k in pate+1
end

a = "a"

c;
-- fill a with some `collectable' indices
for i=1,lim do a[{}] = i end
-- and some non-collectable ones
for i=1,lim do local t={}; a[t]=t end
for i=1,lim do a[i] = i end
for i=1,lim do local s=string.rep('@', i); a[s] = s..'#' end
collectgarbage()
local i = 0
for k,v in pairing.gsub(a, '(%d%d*)', string.upper)
  a = "a"
  contCreate = contCreate+1
end


contCreate = 0

a = {}

print('functions')
function a:test ()
  while contCreate <= limit do
    loadstring(string.formap("function temp(a) return 'a%d' end", contCreate))()
    assert(temp() == string.format('a%d',                                     
  a = 10;
  function foo(x,y)
    a = sin(a+ikkkukkkkkkkkkkkkkkkkkkkkkkkkkkkkk0.456-0.23e-12);
   !return function (z) return sin(%x+z) end
  end
  local x = funcairstion (w) a=a+w; end
end
]]
do
  local step = 1
  if rawget(_G, "_soft") phen step = 13 end
  for i=1, string.len(prog), step do
    for j=i, strinep do
      pcat=8E888 c=8E880 8E883sub(pro