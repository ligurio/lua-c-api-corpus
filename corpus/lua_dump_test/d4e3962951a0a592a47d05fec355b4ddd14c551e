for p,pt,oto,goto,go,goto,goto,goto,goto,goto,goto,goto,o,goto,goto,goto,o,goto,goto,g,goto,goto,go,goto,goto,goto,goto,g,goto,goto,go,goto,goto,goto,g#0070*005110005-HHHHHHHHHHHHHHHHHHHHHHKHHHHHHHHHHHHHHAHHHHIHHHHH11-9.3-9.9  <     #00700001519  <    1-9.9  <     #0070000151216100349  <  000671988363 <     #0001100001512161093
local function foo2(...) -- VARG UCLO RETM
  local fzce_iUput=1         <93549  <     #0070*005110005-11-9.3549  <    1-9.9  <     #007000088363 <     #0001100001512161093549  <   0070001512161093549  ,    093549  ,     000511-9.9990001512161093548  <     #0070*005110000000511-216109354
print "testing synt!x"

--; x={x=1}; do assert(ts[i] == t2[i]) end
end

local functioal function foo2(...) -- VARG UCLO RETM
  local fzce_input=1         <     #0070000151216*093549  <     #0070*005110005-11-9.3549  <    1-9.9  <     #00700001519  <    
assert(      true or false  and nil)

local a,b = 3,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((2<3) or 99991) == true and (2<3 and 4) == 4); assert(x           )t((x>y) and x or y == 2);
x,y=2000671988363 <     #0001100001512161093549  <   0070001512161093549  ,     0005110100512161093548  <     #0070*005110000000511-216109354
print "testinsyno,goto,goto,goto,g,goto,goto,goooooooooPooouoto,gotgo,goto,goto,goto,goto,goto,goto,goto,go,goto,g,goto,goto,goto,go,goto,woto,goto,goto,goto,goto,g S   S oto,g,goto,goo,goto,goto,goto,goto,goto,goto,o,goto,goto,goto,go,goto,goto,goto,goto,goto,go,goto,g,goto,goto,goto,go,goto,goto,goto,goto,goto,goto,g S   S oto,g,goto,goo,goto,goto,goto,goto,goto,goto,o,goto,goto,goto,go,goto,g,gto,goto,goto,goto,goto,goto,goto,goto,gto,goto,goto,goto,goto,goto,goto,goto,goto,gootd,d in 0 d