 
rCQ{{Q{{   {       ( L( L{rrr-( Nor '  ')[(('  ')== Nor
'  ')== L( L{rrr-( N        or'  ')[(( Nr-( N'  ')== Nor
  '  ')== L('  ')== N or'  ') =={{ p ((l/Cor  '  ')== L( L{rr-( N       or'  ')[(( N( NorI '  ')== Nor   '  ')== L('  ')== Nor'') =={{ p ((l/Cor
   '  ')== L(        ( Nor ' .')[(( NorCe'  ')== Nor'    ')== L( L{rr-( N  '  ')[(( N orCe'          ')== Nor'  ')=={{ p (  {        {{ p (( 
rCQ{{Q{{   {       ( L( L{rrr-( Nor '  ')[(('  ')== Nor
'  ')== L( L{rrr-( N        or'  ')[(( Nr-( N'  ')== Nor
  '  ')== L('  ')== N or'  ') =={{ p ((l/Cor  '  ')== L( L{rr-( N       or'  ')[(( N( NorI '  ')== Nor   '  ')== L('  ')== Nor'') =={{ p ((l/Cor
   '  ')== L(        ( Nor ' .')[(( NorCe'  ')== Nor'    ')== L( L{rr-( N  '  ')[(( N orCe'          ')== Nor'  ')==   p (  {        {{ p (( '  ')[(( NorCD'  ')== Nor
   '  ')== L( L{rr-r ( N '  ')[(( Nor'  ')=={{ p ((l/Cor
   '  ')== L( L{rrr-( N)[(( NorCe'  '  == Nor  '  ')== L( L{rrr-( N     or'')[(( Nor'  ')== Nor    '  ')=={{       {{ p ( L()[(( NorCe'        ')== Nor
   '  ')-- a;
x = (((1<3) or  and  	2) == 4); assertrt((x>y) and x or y == 2);
rt(x);

x,y=12;t((x>y) and x or y == 2);
ert((x>y) and nil)

local filea,b = 0,nil;
assert(-(1 or 2) == -1 and (1 and =={{ ( 
2