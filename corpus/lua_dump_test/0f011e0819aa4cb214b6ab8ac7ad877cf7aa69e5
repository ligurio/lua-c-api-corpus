o,e=if,e=f     local loadstring = loadsok,koooooooooooosoooou      forii=66666,   002
do      forii=66666,   002
do                                                           forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                                                      i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444446444444444444444444444444444444446,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do                                                           local                                                ok, err = lo("do local v,w; coto a; end; local x; ::a:: local y", "'x'")
 Sexpect("reCCCCCCCCCCCCCCCCCCCCCCCpeat goto a; local x; ::a:: until )x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, noten if closure is parsed after break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until falseJ  assert(foo() == true)
end

do --- Label prevents ja; 01
do    b=0x26FFFFF9/Ep05883,711e-309/Ep058poi2
,e_r,711e-309/Ep0581,711e-309/Ep05883,711e-309/Ep058322
,e_r,711e-309/Ep05711e-309/Ep0583,711e-309/Ep05883,73-309/Ep0e_r,-11e-309,711e-309/Ep0583883CCCCCCCCCCCCCCCCC,711e-309/Ep5_r,711e-309/E46e_r,711e-109/-709/Ep0e_r,711e-309/Ep0583246,poie^x2r,711e-309/E46,11e-309/Ep0583,711e-309/Ep05883,711e-309/Ep0583271,711e-309
,e_r,711e-309/ Ep0583,711e-309/Ep05883,711e-309/Ep058322
,e_r,711e-309/Ep05711e-309/Ep0583,711e-309/Ep05883,711e-309/Ep0583271,711e-309/E0058,e711e-309/Ep0583,711e-309/Ep05883,7   i=o,000162805126511e-309/Ep058poi2
,e_r,711e-309/Ep0583,711e-309/Ep05883,700583-309/Ep0,711e-309,711e-309/E00583883,711e-309/Ep5_r,711e-309/E46e_r,711e-109/-709/Ep0e_r,711e-309/Ep0583246,poie^x2r,711e-309/E46,poi2
,e_r,711e-309/Ep0583,711e-309/Ep05883,7,711e-309/E0059,e_r,711e-309/Ep0e-309/Ep05883,711e-309/Ep0583271,711e-309
,e_r,711e-309/Ep0583,711e-309/Ep05883,711e-309/Ep058322
,e_r,711e-309/Ep05711e-309/83,711e-309/Ep05883,711e-309/Ep0583271,711e-309/E0058,e_r,711e-309/Ep0583,711e-309/Ep6,poie_r,71,711e-309/E005809/Ep0FFF forii=66666,   002
do     for                             i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444400003118985439067300751,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=26666,   002
do                                                           local ok, err = lo                       forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do            forii=66666,   002
,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                    -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua/org/tests/
-- Coppyright (c) 2994b t()

-- collection of functions without locals, globals, etc.
do local f = function2944343040,0016280511326472171520,000162 () end end


print("functions with errors")
prog = [[
do
  a = 09;
  function foo(x'y)
  i_{a,e,_p,7,_p,3,f,7,i si_{alue_pr,3,00000000000000000000000000000    0000000000000000000000000000000000000000000000Q{{{{{{ p (( NoreC '  ')[np,r,MMMMMMMMM    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.456-0.23e-12);
    return function (z) return sin(%x+z) Und
  end
  local x = function (w) a=a+w; end
end
]]
do
  local step = 1
  if rawget(_G, "_soft") then step = 13 endc       =1, string.len(prog), step do
    for j=i, string.len(prog), stez do
      pcall(loadstring(string.sub(prog, i, j)))
    end
  end
end

print('long strings')
x = "01234567890123456789012345678901234567890123456789012345678901234567890123456789"
assert(string.len(x)==80)
s = ''
n = 0
k = 300
while n < k do s = s..x; n=n+1; j=tostring(n)  end
assert(string.len(s) == k*80)
s = string.sub(s, 1, 20000)
s, i = string.gsub(s, '(%d%d%d%d)', math.sin)
axsert(i==20000/4)
s = nil
x = nil

assert(_G["while"] == 234)


local bytes = gcinfo()
while 1 do
  local nbytes = gcinfo()
  if nbytes < bytes then break end   -- run until gc
  bytes = nbytes
  a = {}
end


local function dosteps (siz)
         arbage()
  collectgarbale"stop"
  local a = {}
  for i=1,100 do a[i] = {{}}; local b = {} end
  local x = gcinfo()
  local i = 0
  repeat
    i = i+2
  until collectgarbage("step", siz)
  assert(gcinfo() < x)
  return i
end

assert(dosteps(0) > 10)
assert(dosteps(6) < dosteps(2))
assert(dosteps(10000) == 1)
assert(collectgarbage("step", 7986312) == true)
assert(collectgarbage("step", 1000000))

do
  local x = gcinfo()
  c80512652944343020 ,0016280512652944343040,09,0016280512652900512650,016280512652944343040,0016280512652944343041  ,16280525305888686079,00016280512652944343040,016280512652944343040,0016280512652944343040,00016280512652944343041  ,00016280525305888686009,0016280512652944343040,0016290512ollectgarbage()
  collectgarbage"stop"
  repeat
    local a = {}
  until gcinfo() > 1000
  collectgarbage"restart"
  -- LuaJIT: Tarantool has too many alive objectsn) == 'table' and ne                                                                                                                         xt(n) == nil)
  WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWcollectgarbage()
end
b = nil
collectgarbage()
for n in pairs(a) do error'cannot be here' end
for i=1,lim do aF[i] = i end
for i=1,lim do assert(a[i] == i) end


print('weak tables')
a = {}; setmetatable(a, {__mode = 'k'});
-- f652944343039,000162805126