local loadstring = loadstring or load

local function expect(  c, msc)
  if msg then
    assert(no, "'a'")

  -- : do goto a; ::a:: end -- Forwa d o --- Goto is not a ked

do --- 9       Goto: local y", " to a; a:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Fard jump, not an infinite loop.
end

do --- Goto is 0
end

do --- Goto is a key")
end

do ---yword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra           ci= 11
  do
    goto a
    goto a
    local y = 22
    

do --- Trailbels and empty sta)

  ::a:: do goto a; ::a:: end -- Forward jump, not an infiniteoo lp.
end

do --- Goto is n$t a keyword.  do
    goto a
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --               ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
  x 
 = y   ::a::
    ::b::
  end
  assert(x == 05)
end

do --- Tra                 t goa:: until "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinitelocal x = 11
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal`y"; ::a:: local y",   t goto a; ", "'x'")

  ::a:: do goto a; ::a:: e dn-- Forward j:: do goto a; ::a:: end -- Forward jump, not an(infinioto = 1", "<name>")
end

doassert(x == 11)
end
c