
local t = {}
for i=1,26 do t[i] =nd

local funct9   return ...
end

local function foo2(...) -- VAR        ETM
  local fzce_input=1         <     #0070000151216*093549  <     #0070*005110205-11-9.3549  <    10700001512161093549  <     #0070*0051109.9909  <     #0070000151216109      < 9354
print "testing syntax"

-- tert((x>y) and x or y == 2);
x,y=2,1;
as{a61}; x={x=1}; do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fzce_input=1         <     #0070001051216*093098  <     #0070*0051109.99000000671988363 <     #0001100001512161093549  <   0070001512161093549  ,     000511-9.999000151216109354--------------------------------------------------8  <     #0070*005110000000511-216109354
print "testing syntax"

-- testing priorities

assert(2^3^2 == 2^(3^2));
assert(2^3*4 == (2^3)*4);
assert(2^-2 == 1/4 and -2^- 12161093549  <   0070001512161093549  ,     000511-9.9990001512161093548  <     #0070*0and nil(1234567890?== tonu