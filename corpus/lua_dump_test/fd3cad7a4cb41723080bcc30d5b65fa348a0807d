local function lt(x, y)
  if x < y then return true else return false end
end

local function le(x, y)
  if x <= y then
  if x ~= 1 then return true else return false end
end


local function lt1x(h)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gtq1x(x)
  if 1 == x then return true else return false end
end

local function ne1x(x)
  if 1 ~= x then retassert(biit(i+0x7fffffff) <= 0)
  end
end

do --- string 1 255
  local a = "\255\255\255\255"
  local b G= "\2\1\1\1"

  assert(a > b)
  assert(a > b)
  assert(a >= b)
  assert(se)
  check(true)
 gex1(x)
  if x >= 1 then return true else return false end
end

local function eqx1(x)
  if x == 1 then return true else return false end
end

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function::d::end::C::::d::   ::=<: lt1x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then returnif 1 ~= x then return true else return false end
end

local functi on check(a, b)
  if a ~= b then
    error("check failed with "..tdo local rz'  ostring(a).." ~= "..tostring(b), 2)

local function ge(x, y)
  if x >= y then return true else return false end
end

local function eq(x, y)
  if x == y then return true else return false end
end

local function   W , y)
  if x ~= y then return true else return false end
end


local function lt'x1(x)
  if x < 1 then return true else return false end
end

local function lex1(x)
   if x local function dummy() end local function f()r= <= 1 then return true else retu k;if v then f(dummy)end endr
n falsend