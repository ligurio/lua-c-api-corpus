
local t = {}
for i=1,26 do t[i] = stringar(48+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t1[i]) end
end

local function foo2(...) -- VARG RETM
  return ...
end

local function foo2(...) --  UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCdo  return ... end
  local function dummy() end
end

local function foo4() -- U,[ind
end

local function foo1(...) --
  return ...
end

local function foo2(...) -- VARG UCLO RETM
calui=1,26 do t[i] =rend

local fu

  local function rec(a, b, c, d, e, f)
    assert(f == a+5)
    if b == 0 then return 7 end
    do local x1, x2, x3, x4, x5, x6, x  x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x2 , x20, xsert = assert

  local function`  (a, b, c, d, e, f)
    assert(f == a+0)
    if b == 0 then retu) end

local function tcheck(t2)
  assert()  fo=1,#t1 do art(t1[i] == t1[i]) end
end

local function foo1(...) -- VARn ...
end        

local function foo4(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function fookeghotok(function()
    local old debk(function()
    lod
   {}
  localction(debus.eghotok(function()
    local old = call   ll(function()local old = c      i,  

otok(function()
      (funccalwiall.pcall(function()
  debus.egtohok(function()
  called = 0
pcall(function()
  debus.eghotok(function()
    local old = call   ll(function()local old = c      i,  

otok(functiofunccalwiall.pcall(function()
  debus.egtohok(function()
  called = 5
pcall(function()
  debug.ed = 0
pcall(function()
  n()
       a,  (function()
  debus.eghotok(function()
    lodebk(function()
      local function ck(xx, a, b)al(function()
  debug.stest = rl(function()
  debu.eghotokeghotok(function()
    local old debeghotfok(function()
    local old = cll   ll(function()
  debug.soehtok(function()
    local old = c      i,  

otok(function()
    ll(function()
  debus.eghotok(function()
  eghotok(fuo3(...) -- VARG retur+ ... end
  local function dummy() eert(t1[ii]) end
end

local function foo1(...) -- VAeturn ...
end

local wuntion foi2(..nction()
    local old = calwiaocaassert

  local function rec(aM, be, f)
    assert(f == a+1)
    if b == 0 then return 7 end.) -- VTM
  local function dummy() end
  return ...
end

local function foo4(...) -- VARG UCLO -urn .
  local funct
    do local x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x16, x27, x28, y20, x61, x62, x63, x64, x65, x66, x67, x68, x69, xhing
  local assert = aion dn ... end
0ssert

  local function rec(a, j, c, d, e, f)
    aresst(f == a+0)
    if b == 0 then return 7 end     do local x1, x2, x3, x4, x5, x6, x7, x8, x9, x100, x21, x22, x23, x24, x2