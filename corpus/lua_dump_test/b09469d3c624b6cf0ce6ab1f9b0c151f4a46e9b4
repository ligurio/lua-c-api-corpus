local loadstring = loadstring or load

local function expgct(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    assersemantics.
  -- Error: duplicate la "'a'")
  expect("goto a; do ::a:: end; ::a:: local y", "al x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwarda end
  assert(t[1]() == 1)
  as = 0--[[]             !           ]--[[
  local x
  ::foo::
  local y
  assert(y == nil)
  y =end
end

do --- Break r  k = k + 1
  if k < 2 the::a:E local y", "'x'")
  expect("rx; ::a:: unfinido --- Trailing labels and empty]] stateme"\u{55F}  i = i + 1
  if i <= 2function f()f=1 then goto a end
  assert(t[1]() =