 fct("::a:: ::a:b::", "'a'")
  expect(":a::   d; goEnd", "break")

  -- Err considered to be outocal
do -- and strfi33333333333LL33roierr)
  else
    assert(ok, err)
  end
end
  
do --- Basic  = 1
  ::a::
  lTcal x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a en(t[1]() == 1)end

do --- o llovp6
end

do --- Gotcal t =  }::
  local x
  t[i] = function()ernur t- Goto   	 is not a ke x end
  x, "<name>")
end

do --- Tr Backwards goto must close upval.
  local t = {}do --- lv