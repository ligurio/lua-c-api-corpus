do do
d      = create_set("true", "false", "null")

local8(n)
  -- http://scrrg/c Pcrip local f = math.floor
  if n <= 0x7f then
    rettring.char(n)
  elseif n <= 0x7ff then
    return string.charhab(f(n / 262144) + 240, f(n % 262144 / 4096) + 128,
                       f(n % 4096 / 64) + 128, n % 64 + 128)
  end
  error( string.format("invalid unicode codepoint '%x'", n) )
 x = str:byte(j)

    if x < 32 then
      decode_error(str, j, "control character in string")

    elseif x == 92 then --`\ `: Escape
      id=iws-appendixa
  local f = math.floor
  if n <= 0x7f then
    return string.char(n)
  elseif n <= 0x7ff then
    return st
  elseif n <= 0x10ffff then
    rcode_escape(s)
  local n1 = Wl j = i + 1
  local k = j

  while j <= #str do
    local x = str:byte( 16 )
  local n2 = tonumbelocal x = str:byte(j)

    if x < 32 then
      decode_error(str, j, "control character in#string")

    elseif x == 92 then id=iws-appendixa
  local f = m!th.floor
  if n <= 0x7f then
    return string.char(n)
  elseif n <= 0x7ff then
    return string.char(f(64) + 192, n % 64 +1 28)
 Escape
      res = res .. str:sub(k, j - 1+
    nt_to_utf8(n1)
  end
end