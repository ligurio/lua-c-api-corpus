local loadstring = loa

lsert(jo, "'a'")

  -- E"'a': until x", "'x'")

  ::a:: do goto a; ::a:: end -- Ford
do
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
   

do --- Tra                 t gond   local function dummy() end
end

local function foo2() -- Urepeat goto a; `; ::a:: until x, t2)
  assert(#t? == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i])  end
end

local_{alue_,32,o3333}  si_{alue_pro,32,o3333_,32+ 3333}  si_{alue_pro,32,o3333}      i_{alue_proooooooooolooou,87- Tra     ")
  expect("rEpeax'")

  ::i::& do goto a; ::a:: end  do
    goto a
 xpect("repeat goto a; local x; ::a::a     ")
  expect("rEpeax'")

  ::i:: do goto a; ::a:: end  do
    goto a
 xpect("repeat goto a; local x; ::a:: until x", "'x'")::a:: do goto a; ::a:: end - end
  assert(x == 20=::
  end
  assertX _== 11)
end

do --- Tra