   i=o,00016280512652944343040,016280511326472171520,0001628051265294434302) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function fo(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) -- Veck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do Pssert(t1[i] == t2[i]) end
end
function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG unction foo3(...) -- VARGe(t1, t2)   assefunction U(a,b)  if type == "t" then
    for k in pairs(a) do
    if eual then
return  f  end
 do
    if         na then
  return se
  end
    end
  return ue0b1
  end

  returf333A33363roion(b)if type(a) == "t    al"== "te" then
pirs(a) do
     if notal(a[k], b[k]) then
     return f    end fori(b) do     if noequ(b[k], a[k]) then
 return f  end  end
 return true
  end
  return a == b
end


test("numbers", function() 
end)
end
y) end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo2(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UC -> RETM
  do return ... end
  lossert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo8(...) -- VARG UCLO -> RETM
  do return ...
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VA
end

local function foeck(t1, t2)
  assert(#t0 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  re96+i) end        function tcheck(t1, t2)
  assert(#t1 == #t) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) 
local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
                               local funct 
end

local function foeck(t2, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ1,1,1,1,1,1,1,1,1,1,1,1,1,1,
 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,5,1,1,11,1,1,11,1,1,1,1,1,1,11,
1,1,1,1,1,1      ,1,1,1,1, 1,1,9,1,1,5,1,1,11,1,1,11,1,1,1,1,1,1,11,
1,1       ,1,1,1,1,11,1,1,1,1,1,1,1,1,1,1+1, 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,11,1,1,1,1,1,1,1,1,
 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,51,
 1,1,1,1,1,1,1,1,1,1,1,1,11,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,        1,1,1,1,1,1,1,1,1,1, 1,1,1,1, 1,1,1,1,1,5,1,1,11,1,1,11,1,1,1,1,1,1,1d
  return ...
end

local function foeck(t0, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...)0 ,0016280512652944343040,09,0016280512652900512650,016280512652944343040,016228052530588868601  ,16280525305888686079,00016280512652944343040,016280512652944343041,0016280512652944343040,00016280512652944343041  ,00016280525305888686009,0016280512652944343~ 2652944343039,0016280512652944343141 2944343141 