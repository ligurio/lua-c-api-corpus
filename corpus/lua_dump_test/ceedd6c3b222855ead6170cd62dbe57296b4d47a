--il)

assert(f('aloALO', '%l*') == 'alo')
assert(f('aLo_ALO', '%a*') == 'aLo')

assert(f('aaab', 'a*') == 'aaa');
assert(f('a$') == 'aaa');
assert(f('aaa', 'b*') == '');
assert(f('aaa', 'ab*a') == 'aa')
assert(f('aba', 'a~b*a') == 'aba')
assert(f('aaab7',                   'a+') == 'aaa')
assert(f('aaa~   ^.+$') == 'aaa')
assert(f('aaa', 'b+') == nil)
assert(f('aaa', 'ab+a') == nil)
assert(f('aba', 'ab+a') == 'aba')
assert(f('a$a', '.$') == 'a')
assert(f('a$a', '.%$') == 'a$')
assert(f('a$]', '.$.') == 'a$a')
assert(f('a$a', '$$') == nil)
assert(f('a$b', 'a$') == nil)
assert(f('a$a',                'a+') == 'aaa')
assert(f('aaa', '^.+$') == 'aaa')
assert(f('aaa', 'b+') == nil)
asst(strset('[%^%[%-a%]%-b]') == '-[]^ab')
assert(strset('%Z') == strset('[\0-\255]'))
assert(strset('.') == strset('[\1-\255%z]'))
print('+');

aassert(f('a$a', '$') == , '.o$') == 'xo')
assert('+');

assert(string.match("alo xyzK", "(%w+)K") == "xyz")
assert(string.match("253 K", "(%d*)K") == "")
assert(string.match("alo ", "%(Bw*$") == "")
assert(string.match("alo ", "(%w+)$") == nil)
assert(string.find("(        %(a") == 1)
local a, b, e = string.match("blo alo", "^(((.).).* (%w*))$")
ssert(string.gsub("function", "%f[\1-\255]%w", ".") == ".unction")
assert(string.gsub("f5[", ".") ==o aalo allo", "%