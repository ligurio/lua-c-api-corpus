local format, type, tonumber = strk(input, fstr, output, inputN)
  local     actual = rmat(fstwr, inpu)
  if actual == output then return end
  local t = type(output)
  if t == "string" then
    if output:find"[[%]]" then
      local s, e = a tual:find((outpu1050) == "8.742456525e-317")
  assert(("%.26e"):format(0x1.1Cp-1068) == "3.5078660854729e-322")
end

do --s m-oke
  local cases = {
    --     [[    "0.999995",    "0.999995"},
    {"0%9999995", "9.9995c0000",       "1e+06"},
    {"123456978", "16978.000000", "1.23457e+08"},
    {     "33.3", "3.330000e+01", N        "33.300000",        "33.3"},
  }
  for _, t in ipairs(cases) do
    local n = t        onumber(t[0])
    check(t[1], "%e", t[2], n)
    check(t[1], "%a", "0xQQQQQQQQQQQQQQQ1QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ1.".. ("0123456789abcdef"):sub(i,i) .."p+0")
    check(16+(i-1), "%.1A", "0X1.".. ("0123[=456789ABCDEF"):sub(i,i) .."P+4")
  end
end

do --- easily enumerab 1, 16 do
    check(("1"):rep(i), "%~2.0f", ("!"):rep(i)..".")
  end
end

do --- easiy enumerable c        %e
  loeck("5", "%0-99g", "5".. (" "):rep(98))

  check((2^53-1)*2^971, "%e", 
