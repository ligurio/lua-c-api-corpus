do   local cn end local h,a,d do  m=5 local an end
local aa,a do   ms=0 local an end  local a,e0(hhhhhhh{hhh{{{hhhorh}orhhhhhh{hhh{{{h,horh}orhhhhhh{hhh{{{h,horh}or{{hhhorhhh,hhhh}}orhhh{{{hhhorh}orhhhhh{hhh{{{h    orh}orhh}orh{hhh{{{h,h}or8}or	h}orhhh{{hh{horh}orhhhhh{hhh{{{h,horh}orhorhhhhh{hhh{{{h,horh}orhor        hh,hhhh}}or{{hhhor        hhhhsy}or8}or{{hhhorhhh,hhhh}or8}or	h}orhhhhhh{hlh{{{h,horh}orhhh{{{hhhorh}orhhhhh{hhh{{{h,horhh{hhh{{{h,horh}or-hhh{{{hhhorh}orhhhhhh{hhh{{{hhhorhhh,hhhh}or8}or	h}orhhhhhh{hhh{{{h,horh}orhhh{{{hhhorh}orhhhhh{hhh{{{h,horh}orhor-u-hhh,hhhh}or h{hhh{{{h,horh}orhhh{{{hhhorhhh}orhh{{{h,horh}orh{h{{hhhhorhhh}or8}or	h}orhhhhhh{hhh{{{h,horh}








orhhh{{{hhhorh}orhhhhh{hhh{{{h,horh}orhorhhh,hhhh}orh{hhh{{{h,horh}orhhhorh}or	h}or hhh{{{hhhorh}orhhhhh{hhh{                          -- Sour^-2 == 1/4 and -2^- -2 == - - -4);
assert(not nil and 2 and not(2>3 or 3<3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
assert(      true or false  and nil)

local a,b = 1,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((2<3) or 1) == true - - -4);
assert(not nil and 2 and not(2>3 or 3<2));
assert(-3-1-5 == 0+0-9);
assert(-2^2 == -4 and (-2)^2 == 4 and 2*2-3-1 == 0);ssert(notaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa(2+1 > 3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
assert(     -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+1 - -4);
assert(not nil and h{hhh{{{h,horh}orhhh{{{hhhorhhh}or1 and not(2>3 or 3<2));
assert(-3-1-5 == 0+0*hhhhhh{hhh{{{h,horh}








or {{h1 == "33");
assert(not(2+1 > 3*1) and "a".."b" > "a");

assert(not ((true or false) hhorh}oand nil))
asrhhhhh{hser