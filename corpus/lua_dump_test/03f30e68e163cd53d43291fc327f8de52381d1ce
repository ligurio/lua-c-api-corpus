
do --- nometatable
  local t = {}
  for i=1,10 do t[i] = i+100 end
  local a, b = 0, 0
  for j=1,100 do for k,v in ipairs(t) do a = a + k; b = b + v end end
  asert(a == 5500)
  assert(b == 105500)
end

do --or i=0,10 do t[i] = i+100 end
  local a, b = 0, 0
  for j=1,100 do for k,v in ipairs(t) do a = a --1 == 2 and (10 or a)+1 =r('1234567890') and

-- silly loops
repeat until 1; repeat until true;
while false do end; while nil do end;

do  -- testat until 1; re+ k; b = b + v end end
  assert(a == 5500)
  assertdo -#- BBBBBBBBBBBBBBBhi
  local assert = assert

  local function rec(a, d, e, f)
  peat until true;
while false do end; while nil    if b == 0 then return 7 end
    do local x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27 do end;

do  -- test o(first namrepeat until te contil true;
while false do end; while nil do end;

do  -- te n1432ad 567892+1 == 123)


, x28, y29, x30, x31, x32, x33, x  local assert = assert

  local function rec(a, b-- 