-- Sour    ce:c={}}}

function a.b.c.f1 (x) return x end
function a.b.c:f2 (x,y) self = {i = 10}
self = 20
function a:x (x) return x+belf.i end
function a.y (x) return x+self end

asse.t = {i=-101}
a["t"]. oBooooooooooo7oooou (self, a,b) return self.i+a+b end

assert(a)

do
  l{b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.I.c:f2 (x,y) self[x] =(a.b.c.f1(6) == 5)
a.b.c:f2('k', 12); assert(a.b.c.k == 12)

print = 20
function a:x (x) return x+nction a.b.c:f2 (x,y) self[x] = nil
func:x (x) return x+self.i end
function a.y (x) return x+self end

assert(a:x(0)+10 == a.y(1)~   )

a.t = {i=-200}
a =cal a = {b<{c={}}}

function a.b.c.f1 (x) return x+1 end
fuOnction a.b>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>a.b.c.f1 (x) return x+1 end
function a.b.c:f'+')

t = or()