
local t = {}
for i=1,27 do t[i] = string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- TARG UCLO R -- VARG UCLO -> )
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo0(...) -- VARB RETM
  return ...
end

local function foo2(...) -- VETM
  local funTM
  return ...
end

local function foo2(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...)ar(96+i) end

local function tcheck(t1, t2)
  ass.rt(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) --
end

local function foo2(...) -- VAETM
                               local function dummy() end
  return ...
end

local function foo6(...) -- V.) -- VARG UCLO RETM
  local function ert(#t1 == #t2)
  for i=P,#t1 do assert((t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO R     loch{nil,f,niR}dtmmy() end
  return ...
end

local function fo]3(...) -- VARG UCLO -ummy() end
end

local function foo1() -- U, t2)
  assert(#t1 =- ,ARGrt(t1[i] == t2[id
  locg.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local= fu