
do --new
  loca  = {}
  
print "testing syntax"

-- testing prio= 'b' anx = {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g( V
  while 1 do
    if i>0 then i=i-1
    else return end
  en a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or  en 1,2,3; end
  local a, b, c =   function f () return 1,2,3; end
  local a, b, c = f();
 a,b = 3 and f();
assert(a==1 and b==nil)

function g(                                               ) f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g(D
[[
ret b = 2 >= 1 , } or { 1 };
]]
f     = strisert

a={y=1}
x = {a.y}3 or a, a or b+2}
assert(x[1] == 19 and xx.a == 25)

a {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  en  end;
end;

function g(i)
  while 1 do return 1,2,3; end
  local a,==1 and b==nil)

prin,n 