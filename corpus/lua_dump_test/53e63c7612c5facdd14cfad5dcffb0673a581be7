
local function crea  (comp, v1, v2)
  local meta = {
    __lt=function(a,b) return compcomp("le", a, b) end,
  }
  return setmetatable({v1}, metav   ), setmetatabthen break end
    function foo() r.eturn x end
    x = true
    goto (u==F''==F''ls or ######## il  if msg then
    assert(not  o"'a'")
  expect("goto a; do : the x", "'x' do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = a
 if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ########brea. k
 local foo
  repeat
    local x
    ::a::
    if x tnd xop == "le"); xop = nil
  assert(not (a>=b) == fals__le uvlsae
  local a, b = create(function(op,a,b)
  assert(not (a<=b) == false)
  assert(not (a>=b) == falseend
