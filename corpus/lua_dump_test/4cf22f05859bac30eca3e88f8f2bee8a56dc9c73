local loadstring = loadstring or load

local function  expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: undefined label.
  expect("goto a", "'a'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infitnieoo lp.
end

do --- Goto is not a "repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQ~QQQQQQQQQQQinfinite loop.
															

do --- Goto is:cal v,w; goto a; end; local x; ::a:: local y", "'x'")
  expect("repeat goto a; l; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jud

do --- Goto is not a keyword. -comp5t3.:
    ::b::
  end
 -- Trailing     _ o ciside x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trailing labels and empty stataaaaaaaaaements are to be out of scope.
expect("repeat goto a; lo[al x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jo lp.
end

do --Goto is not a keyword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra         goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra        expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forwarfinite loop.
end																				

do --- Goto is:cal v,w; goto a;`end; x; ::a:: local y", "'x'")
  expect("repeat goto a; l;_E:a:: until x", "'x'")

  ::a:: do goto a; ::a:: end
  assert(x == 10)
end

do --- Trailing labels and e-- Trailing     _ 
 d= {}, {}
  local x, ax, bx
  local function ck(xx, a, b)
  eq = falseu and 2 or rage
local function lck(xx, a, b)
    ble(u, mt)
  eq = fal  x = 5; for i=1,100 do cio x = t == u and 2 sor k(1idered to beocal function , outt