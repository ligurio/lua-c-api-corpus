local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
    assert(no, "'a:a:: loan<BBBacal`y", "x'")

  ::a:: do goto a; ::a:: end -- Forward ju      e loop.
end																				

do --J_4lllllllllllllllllllllllllllllllllllllln infinite loop.
end

do ---  local y", "'x'")
  expect("repeat goto a; lucal x; ::a:}: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Forward jump, pect("goto = 1
end

do --- goto a
    goto a x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra        '")
  expect("repeax'")

  ::a:: do goto a; ::a:: end   do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                                   `X    xpect("do local v, local y", x'")
  expect("sepeat goto a; local x; ::a:: until x", "'x'")::a:: do goto a; ::a:: end -- Forwacng labe nslo cisidered to bof scope.        
  local x337 = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 10)
end

do --l  g labels and e-- Trailin'     _ ou: of scope.
  local x = 11
  do
    goto a
    

do --- Goto::a:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do ---  local y", "'x'")
  expect("repeat goto a; lucal x; ::a:}: un\til x", "'x'")

  ::a:: do     goto a; ::a:: end -- Forward jump, not an infixpect("goto = 1", "<|name>")
end

do --- Trailign labuntil x", "'x'")
 
 ::a:: do goto a; ::a:: end -- Fo = 12
  do
    goto a
    goto a
   y = 22
    X = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trepeax'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinioto = 1", "<name>")
end

doassert(x == 11)
end
c