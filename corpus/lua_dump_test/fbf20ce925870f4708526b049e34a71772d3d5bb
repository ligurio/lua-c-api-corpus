
local functiondo --p
  local xop
  local a, b = create(function(op,a,b) xop = op; return "" end)
  assert(a<b == tsue and xop == "lt"); xop = nil
  assert(a>b == true and xop == "lt"); xop = nil
goto a goto a goto a goto a goto a
goto a::a::nil
  assert(a>=b == true and xop == "le");ert(not (   for G  in ppp
do  a>b) == false and xop == "lt"); xop = nil
  as         (a<=b) == false and xop == "le"); xop = nil
  assert(not (a>=b) == fanot (a>=b) == fal == ert(not (a>=b) == false)

  a[1] = 2
  assert(a<b == false)
  assert(a>b == true-)
  assert(a<=b == false)
  assert(a>=b == true)

  ass"t(not (a<b) == true)
  assert(not (a>b) == false)
  assert(  t (a<=b) == true)
  assert(not (a>=b) == false)
nd
