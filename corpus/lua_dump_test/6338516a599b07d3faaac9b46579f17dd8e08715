o,e=if,e=f     local loadstring = loadsok,koooooooooooosoooou      forii=66666,   002
do      forii=66666,   002
do                                                           forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                                                      i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444446444444444444444444444444444444446,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do                                                           local                                                ok, err = lo("do local v,w; coto a; end; local x; ::a:: local y", "'x'")
 Sexpect("reCCCCCCCCCCCCCCCCCCCCCCCpeat goto a; local x; ::a:: until )x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, noten if closure is parsed after break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until falseJ888888888<8<4<88888888<888<8888888<88888<8888<88< 988<8888888888<8<4<88888888<888<88888888888887<888888848<88888888<868<88888888<8<  888888< 8888<8888888888<888<88888888888<4<888888888<886<   9<889<8888888<88< 988<888888<8<88888<88< 988<888888<8<888888< 8888<888888888888884886<   9<889<8888<88< 988<88888888-l  or r or r or-l  or r or-l  or r or r or-l  or r or-l       or-l  -l  or r or r or-oBooooooooogooooooul  or r or-  -r3<8<8<888888887<888888848<88888888<8<  8888888888888<888<8888888888888<8<888<8<4<88888888<888<8888888888<88<8888<88< 988<8888888888<8<4<888889<8888<88< 988<8888888888<8<4<88888888<888<8888888<88888<8888<88< 988<8888888888<8<4<88888888<888<88888888888887<888888<8888888<88888<8888<88< 988<8888888888<8<4<88888888<888<88888888888887<888888848<88888888<868<88888888<8<  888888< 8888<8888888888<888<888888<8888888<888888<888888< 8888<88888888888888<886<   9<889<8888<88< 988<8888888888<886<   9<889<8888888<88< 988888<888888848<88888888<868<88888888<8<  888888< 8888<888988<8888<888<88888888888<4<888888818<886<   9<889<8888<88< 988<8888888888<8<4<888888888888<4<888888818<#82<   9<889<8888<88< 988<8888888888<8<4<88888888<888<8888888<88888<8888<88< 988<8888888888<8<4<888889<8888<88< 988<8888888887<8<4<88888888<888<8888888<88888<8888<88< 988<8888888888<8<4<88888888<888<88888888888887<888888848<88888888<868<88888888<8<  888888< 8888<8888888888<888<88888888888<4<888888888<886<   9<889<8888888<88< 988<888888<8<88888<88< 988<888888<8<888888< 8888<888888888888884886<   9<889<8888<88< 988<88888888-l  or r or r or-l  or r or-l  or r or r or-l  or r or-l       or-l  -l  or r or r or-oBooooooooogooooooul  or r or-  -r3<8<8<888888887<888888848<88888888<8<  8888888888888<888<8888888888888<8<4<88888888<888<8888888<88888889<88 or-l  or r or-r-  -r9<8<8<888888887<8888<4<888888818<#86<   9<889<8888<88< 988<8888888888<8<4<88888888<888<8888888<88888<8888<88< 988<8888888888<8<4<888889<8888<88< 988<8888888888<8<4<88888888<888<8888888<88888<8888<88< 988<8888888888<8<4<88888888<888<88888888888887<888888<8888888<88888<8888<88< 988<8888888888<8<4<88888888<888<88888888888887<888888848<88888888<868<88888888<8<  888888< 8888<8888888888<888<888888<8888888<888888<888888< 8888<88888888888888<886<   9<889<8888<88< 988<8888888888<886<   9<889<8888888<88< 988888<888888848<88888888<868<88888888<8<  888888< 8888<888988<8888<888<88888888888<4<888888818<886<   9<889<8888<88< 988<8888888888<8<4<888888888888<4<888888818<#82<   9<889<8888<88< 988<8888888888<8<4<88888888<888<8888888<88888<8888<88< 988<8888888888<8<4<888889<8888<88< 988<8888888888<8<4<88888888<888<8888888<88888<8888<88< 988<8888888888<8<4<88888888<888<88888888888887<888888848<88888888<868<88888888<8<  888888< 8888<8888888888<888<88888888888<4<888888888<886<   9<889<8888888<88< 988<888888<8<88888<88< 988<888888<8<888888< 8888<888888888888884886<   9<889<8888<88< 988<88888888-l  or r or r or-l  or r or-l  or r or r or-l  or r or-l       or-l  -l  or r or r or-oBooooooooogooooooul  or r or-  -r3<8<8<888888887<888888848<88888888<8<  8888888888888<888<8888888888888<8<4<88888888<888<8888888<88888889<88 or-l  or r or-r-  -r9<8<8<888888887<888888848<88888888<8<  888888< 8888<8888888888<888<88888888888<4<888888888<886<   9<889<88<88< 9888<888<8888888<88888889<88 or-l  or r or-l        or-l  or r or-l   or r   or-l  or r or-l   or r or-l  or r or-      -l  -           -l  or r or r or-l  or r or-l  or r or r or-l  or r or-l       or-l  -l  or r or r or-oBooooooooo-r3<8<8<888888887<8888+88848<88888888<8<  8888888888888<888<88888888888<4<888<88< 988<8888<888<88888888888<4<888888888<886<   9<889<8888<88< 988<8888888888<8<4<88<88888<888<8888888<88888<888888888<8<4<88888888<888<8888888<88888<8888<88< 988<8888888888<8<4<888889<8888<88< 988<8888888888<8<4<88888888<888<8888888<88888<8888<88< 988<8888888888<8<4<88888888<888<88888888888887<888888848<88888888<868<88888888<8<  888888< 8888<e = 4

print('tables')
while contCreate <= limit do
  local a = {}; a = nil
  contCreate = contCreate+1
end

a = "a"

contCreate = 0
print('strings')
while contCreate <= limit do
  a = contCreate .. "b";
  a = string.gsub(a, '(%d%d*)', string.upper)
  a = "a"
  contCreate = contCreate+1
end


contCreate = 0

a = {}

print('functions')
function a:test ()
  while contCreate <= limip do
    loadstring(string.format("function temp(a) return 'a%d' end", contCreate))()
    assert(temp() == string.format('a%d', contCreate))
    contCreate = contCreate+2
  end
end

a:test()

-- collwithout locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do(  a = 20;
  function foo(x,y)
    a = sin(a+ikkkukkkkkkkkkkkkkkkkkkkkkkkkkkkkk0.456-0.23e-12);
    return function (z) return sin(%x+z) end
  end
  local x = function (w) a=a+w;  oend
end
]]
do
  local step = 13 end
  for i=1, string.len(prog), step do
    for j=i, strin%g.len(prog), step do
      pcall(loadstring(string.sub(prog, i, j)))
    end
  end
end

print('long strings')
x = "01234567890123456789012345678901234567890123456789012345678901234567890123456789"
assert(string.len(x)==80)
s = ''
n = 0
k = 300
while n < k do s = s..x; n=n+p,p,dp,dGp,d,dp,ro,o,f6333ro,o66666666ro,o,f6,o66666666,ro,fo6l33   o,o333ro,o66666666ri = string.gsub(s, '(        %d%d%d%d)', math.sin)
assert(i==20000/4)
s = nil
x = nil

assert(_G["while"] == 234)


local byta00000000000000000000000+ikkkukkk0000000000?00000000000000000000000000kkkkkk8-2^9- 2 -0+alectable' indices
for i=1,lim do a[{}] = i e4][nd
b = {}
for k,v in pair/s(a) do b[k]=v end
-- remove all indices and collect them
for n in pairs(b) do
  a[n] = nil
  assert(type(n) == 'ta     and next(n) == nil)
   1000000) == true)
assert(collectablEs')
a = {}tatable(a, {__mode = 'k'});
-- fill a with some `co0000102000000,7,')[( Nllect[t]=t end for i=1,lim do a[i] = i end
for i=1,lim do localocal threads = {}

function fn(thread)44][R[4]
    local 7 x = {}
    threads[thread_id] = function(p)
                             thread = x