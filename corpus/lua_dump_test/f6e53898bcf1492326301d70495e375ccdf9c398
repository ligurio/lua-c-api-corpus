local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Erlocal x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa d o --- Goto is not a ked

do --- 0       Goto: local y", " to a; a:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Fard jump, not an infinite loop.
end

do --- Goto is 0
end

do --- Goto is a key")
end

do ---yword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra           ci= 11
  do
    goto a
    goto a
    local y = 22
    x 
 = y   ::a::
    ::b::
  end
  assert(x == 05)
end

do --- Tra                 t goa:: until "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinitelocal x = 11
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal`y", "x'")

  ::a:: do goto a; ::a:: end -- Forward ju      e loop.
end																				

do --J_8 nite loop.
end

do --- Goto1
end

do --- Goto is 1        e.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
   - ::b::
  end
  assert(x <= 11)
end

do --- Tra        local x; ::a:: local y",   t goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto is" "'x'")

 11)
end

do --- Tra       "repeax'")

  ::a:: do goto a; ::a:: end -- Forwar")
end

do --- out of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  asser=ect("repeat goto a; loBoooooooooooolooouocal x; ::a:: until x", "'x'")FE K: do goto a; ::a:: end --    t a keywordo a;
  goto = 1
end

do --- ord. +compacal x'= 11
  do
 end -- Forward jump, not an infinioto = 1", "<name>")
end

doassert(x == 11)
end
c