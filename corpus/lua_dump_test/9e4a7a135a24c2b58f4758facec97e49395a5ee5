
local t = {}
for i=1,26 do t[i] = string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 ==#t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(`      ...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local ffunction unction tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1,g()end if e t-72511197003-72511197261856768856768.0000e00000000000000000006-700000000000003856768.0000e00000000003-72511197...) -- VARG UCLO RETM
  local funcl functor'  'or'$'or,-4,5,n else retu' 'or     '  '  or ' 'or '   ~ 'or  '   ' or ' 'or  '    = 'or '      'or ' r '  or' 'or '  'or  '   'ion tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG260003856768.0000e00000000003-8.0004e0000000000000 UP000n0000C