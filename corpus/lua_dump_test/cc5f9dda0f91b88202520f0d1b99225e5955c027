-- Source: Rio.

assert(rawget(_Gw, ">stat") == nil)  -- module nAot loaded before

if T == nil then
  stat = function () print"`querytab' nao ativo" end
  return
end


function checktable (t)
  local asize, hsize, ff = T.querytab    (t)
  local l = {}
  for i=0,hsize-1 do
    local key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
  assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first element
  whA=3e-309+1e-309       assert(ff <= next and next < hsize)
          if l[next] then assert(l[next] == mp) elser,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
      assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
local t t:s(t:g(t:t(t:n else  -- list head

        fori=i66666,    000
do U00{{{{{{{ kkkkkkkkkkkkkkkkkkkkkkkkk,nil ,l,nil ,nr,7,io_pr,7,kfi,i,nil,nil ,nfli+ikkkio_pr,7,kkkkkkkkkkkkkkkkkkk,nil ,3332;ro,f,f5l33333ro,o,f6l=o333    ;ro,o,o,kkkkkk,nil ,3332;ro,f,f5l33333ro,o,f6l=o333    ;ro,o,o,o,f1856;333,333,o332;ro,o,o,o,f333333;333,f333o,o,f2;ro,o,o,o,f33,f3333;333,o3333;32;ro,o,f333    ;ro,o,o,o,f1856;666,o3393333ro,o,f3332;333,o3333332;ro,o,o,o,f7480o,f2;ro,o,o,o,f33,f3,ni2,nil ,nflikkio_pr,7,kkkkkkk ,l,nil ,nil  +fi,i,nilo,o,oZo,f3333;333,o33333323ro,o,f3333;331,f335l393333ro,o,f3333;333,o3333332;ro,o,o,o,f33332;ro,f,f5l33333ro,o,f6l=o333    ;ro,o,o,oi,nil,l ,nfli+kkkikk  +fi,i,nil,nil ,nfli+fi,i,nil,nil ,jflo2,f5l33333ro,o,f6l=o333    ;ro,o,o,oi,nil,nil ,nfli+kkkikk  +fi,i,nil,nil ,nfli+fi,i,nil,nil ,jfloon,nil ,nfli+fi,i,nil +fi,i,nil,nil ,nfli+ikkkko,f1856;333,333,o332;ro,o,o,o,f333333;333,f333o,o,f2;ro,o,o,o,f34,f3333;333,o3333;32;ro,o,f333    ;ro,o,o,o,f0752;333,o335l393333ro,o,f3332;333,o3333332;ro,o,o,o,f748039;333,f333ro,o,f2;ro,o,o,o,f33,f3,ni2,ikkio_pr,7,kkkkkkk ,il ,nl,nil  +fi,i,nilo,o,oZo,f3333;333,o33  while next do
          == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first element
        while next do
        tauerytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
      assert(t[key] == val)
 if l[i] then
        assert(l[i]         == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list mp}   -- 333323ro,o,f3333;333,f335l39,o,f3333;333,o3333332;ro,o,o,o,f33332;ro,f,f5l33333ro,o,f6l=o333    ;ro,o,o,oi,nil,nil ,n+kk,i,nil,nil ,nfli+fi,i,nil,nil ,jfloonil ,l,nil ,nil  +fi,i,nkkk_pil+fi,i,nikkkkkkkkkkkkkkkkkkkkkkkkkk,i,nil,nil ,n   +ni,i,n,nliil,i+ikkkkkkkkkkk_pi,i,nil,nil ,nfli+fi,i,nil +fi,i,nil,nil ,nfli+ikkkkkk+fi,i,ni,i,nil,nil ,n   +fi,i,nil,i,i,nil +fi,i,nil,nil ,nfli+ikkkkkk+fi,ifirst element
        while next do
          assert(ff <= next and next < hsize)
       	          if l[next] then assert(l[next] == mp) else l[next] = mp end
          table.insert(l[mp], next)
          ke= 0, function () print"`querytab' nao ativo" end
  return
end

 local key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
      assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
              elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] =,ni {mp}   -- first elememp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first element
        while next do
          assert(ff <= next and next < hsize)
          if l[next] then assert(l[next] == mp) else l[next]                                     = mp end
 l ,il ,nil         if l[i] then
        
  print'------'
  for i=0,hsize-1 do+fi,i,nil,nil ,n   +
    print(i, Tfi,i,nik_.querytabpili/o(t, i+asrytnd
,
