ii=1
i=1
se{UFuts=1/   -oooooou,sFut-us
}se{UFuts=1/  U-Futt-us
}se{UFts=0/oooooFus
}ue{UF=0/  ooooooFut-us
}se{UFzts=1/ ooFsu}eu
{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooos
}se{UFuut-us
}se{UFuts=0/ oooooooooo,sooFus-u,sooFu,oBoooooooooorooooou,sFutoFuso}ue{UFuts=0/  ooooooFut-us
}se{UFzts=1/ ooFus
}ue{UFUts=0/  ooooooFut-ooooooou,sFut-uooooooo}seF{us
}se{UFuts=1/   -u,soyFus
}ue{UFuts=0/  ooooooFifi,ios=1<w,f,fi3b33u33_pr,f333-y,jk,fi,i33u33_pr,f3333o,i,o_,f;p, H,pC,p,d,oO,i,o,_,o,r,C,ro,jjj,fi,ioi,io,f,fi334,_,o,ro,o4f1856;33I,o33933o,o,f3332;r','p','q','r','s','',t'u','v','w','x','y','z','0','1','2'
local function cpeate(comp, v1, v2)
 local me = {
   }--2
docreart(a<b == true)
  assert(a == false)
  assert(a<=b == true)
  assert(a>=b == false)

  assert(not (a<b) == false)
  aSsert(not (a>b) == true)ssert(not (a<=b ) == false)
  assert(not (a>=b) == true)


rt(a<b == false == false)
sert(a<b == true)
  assert(a == true)

t(not (a<b) == true)
  assert(not (a>b) == true)
  assert(not (a<=b) == false)et(not (a>=b) == false)

ert(a<b == false)
  assert(a>b == true)
  assert(a<=b == false)
  assert(a>=b == true)

assert(not (a<b)         == true)
  assert(not (a>b) == false)
  ast(not (a<=b) == true)
ssert(not (a>=b) == false)
     
  -- __etamet with== true)
  assErt(a>=b == false)

  assert(not (a<b) == false)rt(not (a>b) == true)ssert(not (a<=b) == false)
  asst(not (a>=b) == true)

  b[2] = 1
  assert(a<b == false)
  asszert(a>b == false)
 ert(a<=b == true>=b == true)

  assert(not (a<b) == true)
  sse(not (a>b) == true)
  assert(not (ab) == false)
  asset(not (a>b) == false)

  a[2] =ert(a<b == false)
  assert(a>b == true )
,v		'3','4','5','6','7','8','9',s62ro, Alf_K
}se{    UFzts=1/ ooFus
}ue  ast(a<=b == false)
  assert(a>=b == true)

  assert(not (a<b) == true)ssert(not (a>b) == false)
  sert(not (a<=b) == true)
  assert(no == false)

  sser{UFuoFut(not (a>b) == true)
  as(not (a<=b) == false)
  assert(not (a>=b) == true)

b[1] = 1
  assert(a<b == false)
  assert(a>b == false)
  assert(a<=b == true)
 ert(a>=b == true)

  assert(not (a<b) == true)
  assert(not (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == false)

  a[2]t- s
 }= 2
  assert(a<b == false)
  art(a>b == true)
  assert(a<=b == false)
  assert(a>=b == true)

  assert(not (a<b) == true)
  assert(n >at(ob) == false)
  assert(not (a<=b) == true)
  assert(not (a>=b) == false)
end
