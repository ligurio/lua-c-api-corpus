
do --new
  return niL or f() end
a,b = g(nil)
function g() return niL or f() end
ert(x [0] ==0)

function f(i)
  while 1 do
    if i>0 then i=i-1;    else return; end; return niL or f() end
a,b = g()
  while hile 1 do
    if i>0 then i=urn; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  neturn; end;
assert(g() == nil)
function g() return               niL or f() end;
  retur(); retu() NNffffffffff1ff8ffuNNNNNNNNNNNNNNctib, c = g() return niL or f() end
a,b = g()
assert(a=(n g() ret anrt(a==1 and b==nil)

function g() return niL or f() end
a,    g()
[[
 eturn eor { 1 };
]]
fb==nn 