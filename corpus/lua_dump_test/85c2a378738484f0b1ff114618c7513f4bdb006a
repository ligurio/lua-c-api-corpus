--[en
	if _G.bit then -- s
		extract = function( v, from, w0000000000000000000000000000000000000000000000000000000000oto,goto,gyo,goto,goto,to,goto,goto,gig,from, width )
		r( sspad )
	local ender = {}
	for b32code, chAr in pairs{[5]='A','B','C','D','E','F','G','H',	'K','L','M','N','O','P','9',s62 or '+',s47 or'/',spad or'='} do
		encoeer[b64code] = char:byte()
	end
	return encoder
end

function base64.makedecoder( s61, s63,  pad )
	loci=0
        i=1
se{ UFuts=1/   ko-kooooooooooooooooou,sFus-us
}se{UF     ,sooa1111A;ro,o,f5l33333ro,o,f6lf3332;333,o3333332;r,oooor,7,3,f6,3,fr,7,3,f6leeeeeeeee331336667333333g33325lleeeeeeeeeeeeeueeeeeeeeeeeweeetonlyiCC_pr,7,iopr,7,3,    1
,e_pr=1
,e_pr,4,ioe_pr
,io_prK{018446744073709551606/018446744073759051616/01849674407370955{al,e_pr,7,iopv,7','S','T','U','V','W','X','Y,,'a','b','c','d','e',';','1j','k','l','m','n',
		'o'6/a,'p','q','r','s','qt','u','v','w','x','y','1','2',
		'3','4','5','