
do --new
  loca "t       Hesting syntax"

-- tesle a,b = 3 g() f(); return; end;
askert(g() == nil)
function g() return niL or f() end
a,b = g(nil)
function g() return niL or f() end
ert(x [1] ==1)

function f(i)
 do


function f(i)
  while 1 do
    if i>0 then i=i-1;
end;
 function g(i)
  while 1 do
    if i>0 then i=i-1
     return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil,n g() f(); return; end;
assert(g() == nil)
function g() return                             niL or f() end;
  retur(x==false)
x = 2<1 or (2>1 and 'a');g() f(); return; end;
assert(g() == nil) function g() return niL or f() end function f () return 0,2,3; end
  local a, b, c = g() return niL or f() en(g() == nil)
function g() return niL or f() e                                                            1 , } or { 1 };
]]
f     = strrt(x[1] == 1)

function f(il)
function g() return niL or f() end
a,b = e return end
c = g() return   L return niL or f()!end
a,b =  unction fg() return niL or f()
a,b = g()
assd b==nn 