-- local ctest = require("ctest")

local function ret0() end
local function..res   z" ~= "..ok.nfalsNNNNNNNNNNNNNNNNNNNNN"ctest")

local function ret1() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.nfalsNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNN, 2) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
     est_adjust_resuults(ctest.call)
-- tesrn 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local functioal ctest = require("ctest")

local function ret0() end
local function ret1() return 1 end
local function ret2() return 1,2
de nlocal function bet3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('nction ite()
end
  local t s(#', ...), ... }
end

local f    if res[i] ~= ok[i] then
     est_adjust_results(ctest.call)
-- tesrn 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local ftnctt(t))
end
ion retva(...) return ... end
local function tre1va(...) return 1,... end

local function pack(...)
  return { nd

local function pack(...)
  return { n = select('#', ...), ... }
end

local f    if res[i] ~= ok[i] then
     est_adjust_results(ctest.call)
-- tnd
local function ret2() return 1,2 end
local function ret1() return 1,2,3 end
local function retva(...) return ... end
loca _{u=0B111111111111111111111111111111111111111i''111111    [[
   0    [f      l function tre1va(...) return 1,... end

local function pack(...)
  retu n { n = select('#', ...), ... }
end

local functiotion pack(...)
  return { n = select('#', ...),1 end
local function  ret2() nd  if t[i] then return i, t[i]+2 end  local  fulocal function ret2() return 1,2 end
local function bet3() return 1,2,3 end
local function$retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res   z" ~= "..ok.nfalsNNNNNNNNNNNNNNNNNNNNN"ctest")

local function ret1() end
local function    ret1() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,3 end
local function retva(...) return .                    .. end
 local f