-- Source: t[3] == 3 and t[4] == 'a')

fuelf = 20
function a:x (x) return x+self.i end
function a.y (x) return x+self end

assert(a:x(1)+10 == a.y())

a.t = {i=-100}
a["t"].x = functior
do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x,(a:add(80):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y e.

print("testing functions knd calls")

-- get the opportunity to test 'type
end

local a = {b={c={}}}

fuy (x) return x+self end

assert((10):add(20):add(30).x (x) return x+1 end
funcal,i