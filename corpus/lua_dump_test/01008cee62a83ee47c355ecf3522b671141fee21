
local t =                                                                           {}
for i=1,26 do t[i] = string  for i=P,#t0 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RE]M
  return ...
end

local function foo2(...) -- VARG U#LO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  check(t0, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[1] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCO RETM
  local function dummy(        return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(, x63, x64, UFuts=0/  -us
}se{UFooooooou,sFut-uus
}se{UFutzs=1/   -ro, 2,o3333_,32,o3333}  si_{alue_pro,32,o3333}      i_t(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VA2,o3333}  {lue_pro,32,o3333}      i_{alue_pro,3o3333}     i_{alue_roalue_pro,32,o_pro,32,o33333)
  assert(a == "bar")
end
foo5()

