localloadstring = loadstring or load

local function expect(src, ms)

  -- 3rror: goto i=tocal fooo333K3333330333332o
  repeat
                ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until(foo() ==true)
end

do --- L
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals  repeat
    local x              ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do ---1L p l;a::a:: until  `oo00019174o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until rt(foo() == true)
end

do --- Laboal fkoo33333333330333332o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
  goto a
  until false assert(foo() == true)
end

do --- L        vents ruj dmp, noten if closure is parsed after break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  asser(foto() == true)
end

do ---L ae
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
      goto a
  until false
  assert(foo() ==e)
end

do ---  si_{alue_pr,f1i333333333333w30333332o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return;y,ji,io,f333A33333ro,o3i,io,f,fi333333,pro, Ali,io,f,ff,fi333333333oi,i,fi,io,f,fi33333333333o,o,fi,io,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi33333333io,o33333;o,fifi,io,f,fi333u33_pr,f3ro,o3i,io33,o3333333333;o,fi,i,f,fi333333,pro, Alf_K,ffi2333333;o,fifi,io,f,f33a,a,a,a,aJ ,a,a,a,a,a,a,a,a;a,a,a,a x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do --- Label prev  ts joining", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jre is pad after break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false        t(foo() == true)
end

do --- La foo
  repeat
    local x
    ::a::
    if x then break end
    function fo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do --- Lab p tct("; ::a:: until x", "'x'")

  ::a:: do 
  local foo530381349o
  repeat
    local x
    ::a::
    if x then break end
  function foo() return x end
    x = true
    goto a
  until false
  ssert(foo() == tque)
end
i=u==no1==n33333332o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
-- Labcal foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until falseN{9,fi333333,pro, 3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,-fi33333333io,33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi3u33_pr,f3;o,fi,io,f,fi33333333io,o33333;o,fifi,o,fi,ioi,io,f,fi3333,o1i,io33333;o,fi,iofi3333,o3i,io33332;o,fi,io,f,fi33333333io,o33333;o,fifi,io,f,fi333u33_pr,f33333,io,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi3333333io,o33333;o,fifi,io,f,fi333u33_pr,f333333333;y,jii,o,f333A33333ro,o3i,io,f,io,f,fi333u33_p+r,f3333
  asser(foto() == true)
end

do --- Label previ: end", 
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = te
    goto a
  until false
  assert(foo() == true)
end

do ---  si_{ ::a:: dd jump, noten if oo
  repeat
   33333;ya,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a,a,a,a,aa,a,aa,a,a,a,nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnna,a,a,a,a,aJ ,a,a,a,a,a,aa,aa,a,a,a,a,a,a,a,a33,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi33333333io,o33333;o,fifi,io,f,fi333u33_pr,f3ro,o3i,io33,o3333333399-9.990-8.99-9.995-9.9911-9.26  <5.11/-9.99-9.990-8.99-9.99   <  10.05-9.99 -9.99, #509.911-9.95-1.992< 7.04-9.933;o,fi,i,f,fi333333,pro, Alf_K,ffi2333333;o,fifi,io,f,f33a,a,a,a,aJ ,a,a,a,a,a,a,a,a;a,a,a,a,a,a,a,a,aa,a,a,a,a,a,a,a,a,a,a,aa,a,aa,a,a,a,a,a,a,a,a,aJ ,a,a,a,a,a,aa,aa,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a, local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until false
  assert(foo() == true)
end

do ---d -- Forward juoten if closuresed aft9o
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until falsa,a,a,a,a,a,a,a,ae
 ,a,a,a,a334,o3i,io,f,fi3333i33333333 
 pect333;o,fi,io,f,fo,f,(f