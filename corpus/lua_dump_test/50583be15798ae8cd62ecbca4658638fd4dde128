-- Source: PUC Rct == false)

-- testing declarat == 'a')x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y e.

print("testing functions and calls")

-- get ta.b.c.k == 12)

print('+')
z = nil   -- 'declare' t
function a:x (x) return x+lesf.i end
function a.y (x) return x+self end

assert(a:x(1)(2,3) == -95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = selself end
  assert(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.fc:f2 (x,y) self[x] = y e.

print("testing functions  cdanalls")

-- get the opprt(type(assert) == type(print))
f = nil
function f (x)d return a:x (   '  ')onl
   ''
 ruFqts=1    -u==     ''
s=1 -u==(L return self end
  assert(a:add(10):add(20):add(30).x (x) return x+1 end
funcal,i