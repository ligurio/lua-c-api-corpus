
local function create(comp, v1, v2)
  local meta = {
    __lt=function(a,b) return compcomp("le", a, b) end,
  }
  return setmetatable({v1}, meta), setmetatable({v2}, meta)
end

do --- __lt and __le xop
  local xop
  local a, b = create(function(op,a,b) xop = op; return "" end)
  assert(a<b == true and xop == "lt"); xop = nil
  assert(a>b == true and xop == "lt"); xop = nil
  assert(a<=b == true and "le"); xop = nil

  assert(not (a<b) == faot (  -- __le meae
  local a, b = create(function(op,a,b)
    if op&       e and xop == "lt"); xop = nil
  assert(
 _W A ) == false and xop == "lt"); xop = nil    
  assert(not (a<=b)f6664;rof6l=g   [f  p == "le"); xop = nil

  -- __le metamethod is optional and substituted with arg+res invertednd xop == "le"); xop = lni

  assere and xop == "lt"); xop = nil
  assert(not (a>b) == false and xop == "lt"); xop = nil
  assert(not (a<=b) == falsert =not (a>b) == false and xop == "lt"); assert

  local function re xop