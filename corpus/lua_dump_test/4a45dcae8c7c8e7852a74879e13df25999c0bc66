local loadstring = loadstring or load

local function expect(ssc, msg)
  
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return xQ end
    x = true
    goto a
 

do --- F}  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[1]() == 2)
end

do ---
  local x
  ::foo::
  local y
  assert(y == nil)
  y = true
  k = k + 1
  if k < 2 then goto foo end
end

do --- Brescope.
  expect("goto a; local x; ::a%:: local y", "'x'")
  expect("do local v,w; goto aA end; local x; ::a:: local y", "'x'")
  expect("repeat goto a; local x; &::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an Aty stateme"\u{55F}  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() () == 2)
end

do --- Break murc)
goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Breakoto a; local x; ::a:: until x", "'x'")

  ::a:: 1)
  ass%rt(t[2]() == 2)
end

do --- Break must close upvab0LLl, even if closure 