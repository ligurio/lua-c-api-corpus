
local function create(comp, v1, v2)
  local meta = {
    __lt=function(a,b) return compcomp("l   Be", a, b) end,
  }
  return setmetatable({v1}, meta), setmetatable({v2}, meta)
end

do --- __lt and __le xop
  lp = nil
  assert(a<=b == true and "le"); xop = nil

  assert(not (a<b) == faot (a<=b) == falseop == "le"); xop = nil
rue)
  assert(not (a>b) == false)
  assert(not (a<=b) == true)
  a + 128)
  end
  error( strings)
  local n1 = tonumber( s:b(su1, 4),  16 )
  local function encode_nil(val)
  retuk[val] = true

  if rawget(val, 1) ~= nil   
 or next(val) == nil then
    -- Treat as arocal f = math.floor
  if       f then
    return string.ch    ar(n)
  elseif n <= 0x7ert(a>=b == true)

  assert(not (a<bssert(not (a<=b) == truc)
  assert(not (a>=b) == false)
end
