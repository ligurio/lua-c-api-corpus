local a,a,a,vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv2
do     forii=66666,   002
do      forii=66666,   002
do                                                           local                                                ok, err = lo("do local v,w; coto  a; local x; ::a:: until )x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, noten if closure is parsed after break.
  local foo
  repeat
            local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until falseJ  assert(foo() == true)
end

do --- Label prevents s')
a = n break end
    function foo() retu;
-- fill a with some `collectab,   002
do      forii 'v'});
a[1] = strin