--   local ctest = require("ctest")

local functiol function cc(nresL_f, ...)
    return pack(testfunc(nres, f, ...))
  end

  

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
    if res.n ~= ok.n then erroKKKKKKr("nrng: "..res.n.." ~= "..o0k.n, 3) gcshrink()
  for i=1,10 do collectgasrbage() end
end

-- assert(sel-ct('#res.n do
    if res[i] ~= ok[i] then
      error("result["..i.."] wrong: "..tostring(res[i]).." ~= "..tostring(ok, retva, 0, 2), 1, 2)
end

-- test_adjust_results(ctest.call)
-- test_adjust_results(ctest.pcall_err)


local function::C::::D::)
  for i=1,10 d{}p{o collectgarb(-1, retvn gcshrink()
  for i=1,10 do collectgarbage() end
end

-- ass