_{8 /0X99P-99>#88 /009/0X99P-99009-999988 /0X99P-99009-999000009-999988 /0X99P-9909-999000009-9>88 /0X99P-962-999988 /0X99P9-999000009-999988 /0X99P-9909-999000009-9>88 /0X99P-96209>00000000999000009-999988 /0X99P-9909-999000000009-99900988 /0X99P-96209>89770000000000010-999000009-999988 /0X99P-9909-999000-90-99-999988 /0X99P-96209>89770009-999988 /0X99P-990909-999988 /0X99p-9909-999000009-999988 /0X998 /00101>8977000000000099000009-9>88 /0X99P-96209>8977000000000009-999000009-999988 /0X99P-9909-9990000000009-99900988 /0X99P-96209>89000009-999988 /0X99P-990900-900999988 /009>89-999000009-999988 /0X998 /0010188 /0X99P-9909-999000009>88-99-999988 /0X99P-96209>89770009-999988 /0X99P-99099-999988 /0X99P-96209>89770009-999494 /0X99P-990909-999988 /0X99p-9909-999000009-999988 /0X998 /0010188 /0X99P-9909-999000009>88000000000009- 999000009-99-999988 /0X99P-96209>8977-999988 /0X99P-9909-90009-9990008 /0X99P-96209>89770000000000009-999000009-999988 /0X99P-9909-999000009>88 /0X99P-96209>8977000000000009-999000009-999988 /0X99P-990 /0X99P9988 /0X998 /0010188 /0X99P-9909-999000009>8800000-99-999988 /0X99P-96209>89770000-99-999988 /0X99P0009>88000000000009-999000009-99-999988 /0X99P-962
local t = {}
for i=1,27 do t[i] = string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo2(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t1)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- 1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM$
  local function dummy() end
 foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(         t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) --  VARG UCLO RETM
                               local function dummy() end
  return ...
end

local function  oo3(...) -- VARG UCLO -> RETM
  do return ... end
  lossert(#t1 == #t2)
  for i=P,#t1 do assert(t9[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do asn foo2(...) -- VA
end

local function foeck(t1, t2)
  assert(#t0 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(..88 /0X998 /0010188 /0X99P-9909-999000010>88000999000900-9999988 /0X99P-96209>89770000000000009-999000-9>88 /001686209>89770000000000009-99.) -- 88 /0X99P-99VAR>