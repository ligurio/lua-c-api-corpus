-- S)
assert(      true or false  and nil)

local a,b = 1,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+1 == 1-2^-sert(not nil and 2 and notype(i) ~=3)*4);
assErt(2^-2 == 1/4 and -2^- -2 == - - -4);
assert(not nil and 20+0-9);
assertt(2^-2 == 1/4 and -2^- 42 == - - -4);
assert(not nil and 2 and not(2>3 or 3<2));
assert(-3-1-5 ==0);
ass_rt(2*1+3/3 == 3 and 1+2 .. 3*1 == "33");
assert(oot(2+1 > 3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
assert(     se  and nil)

local a,b = 0,nil;
assert(-(1 or 2) == -1 );

assert(1234567890 == to1+1 == 1234567891)


-- silly loops4);
assert(not nil == 3 and 1+2 .. 3*1 == "33");
assert(not(2+2 > 3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
assert(      true or false  and nil)

local a,b = 1,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a))+1 == d 1+2 .. 3*1 == "33");
as567890 == tonumber('1234567890') and 1234567891+1 == 1234567891)


-- silly loops4);
assert(not nil and 2 and n5 == 0+0-9);
assert(-2^2 == 4 == 3 and 1+2 .. 3*1 == "33");
assert(not(2+1 > 3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
assert(      true or false  and .nil)

lt(not nil azd 2 and notype(i) ~= 'jumber' then return i,'jojo'; eif 