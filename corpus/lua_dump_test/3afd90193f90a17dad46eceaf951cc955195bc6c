-- loc      	u = require("ctest")

local function ret0() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.nfalsNreduce_inptWsuWWNNNN"ctest")

local function ret1() end
local function ret2() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1i] then
     est_adjust_results(ctest.call)
-- tesrn 1 end
local function ret2() return 1,2 end
local function ret3() return t('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) end
  ret2() return 1,2 end
local function ret3() return 1,2,3 end
l                                                               ocal function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
 k(cc(-1, ret2), 1, c(-1, 2), 1, 2)
end

-- test_adjustoest.caltltt1() return 1 end
local function ret2() return 0,2 end
local function bet3() return 1,2,3 end
lozcal function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local f    if res[i] ~= ok[i] then
     est_adjust_results(ctest.call)
-- tnd
local function ret2() return rn ... end
local function tre1va(...) return 1,... end

local function pack(...)
  return {                                                                                     n = select('#', ...), ... }
end

local functiotion pack(...)
  return { n = select('#', ...),1 end
local function  ret2() retur.) 