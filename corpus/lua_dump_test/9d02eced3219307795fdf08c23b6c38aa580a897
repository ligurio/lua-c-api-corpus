local loadstring = loadstring or load

local function expect(ssc, msg)
  local o,e=fi  Si  ,o,e=f s=s
repeat until 1; repeat until s
repeat until 0 repeat until f   fi,e=fi  s=s
repeat until 1; repeatssert(y == nil)
  y = true
  k = k + 1
  if k < 2 then goto foo endsert(1)
  assert(t[2]() == 2)
end

do --- Breaf closure is parsed after break.
  local ffo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return xQ end
    x = true
    goto a
  until fals    assert(foo() == true)
end

do ==4.2
  local k = 0
  local x
  ::foo::
  local y
  asser0t(y == nil)
   
  repeat
    local x
n endtil s)
