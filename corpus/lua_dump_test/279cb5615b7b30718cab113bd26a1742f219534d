Zli       { -us
}se{UFuts=0/   us
} fct("::a:: ::a:b::", "'a'")
  expect("do ::a:: end; goEnd", "break")

  -- Err considered to be outocal
do --- Backmust close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(                               "<name>")
end

do --  `d    - Trailing lab= {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
loadstring(src)
  if msg then
    assert(not ok and strfi33333333333LL33roierr)
  else
    assert(ok, err)
  end
end
  
do --- Basic  = 1
  ::a::
  local x
  t[i] = functnd

do --- lv loop6
end

do --- Goto is not a kcal t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x  ,32,oe_pro,32,o3333}i_{alup,32,o3333}      i_{alue_pro,32,o3333}      i_{aluepro,33,o3333}i_{alue_alue_pro,ue_pro,3333}     i_{alue_pryro,32,}      i_{malr,32,o3_=-232^ ooooooFut-us
}qe{UF8,7,{4, {{9,{63,{{99,{ kkk:kkkkk{{7,{7,{3,  {{2,T,{ _>_<(l ore'')<99,7,{4,{{9,{_<l( )<(oore' '),2,{{{99,7,{4,{{9,{63,{{99,{ kkkkkk2,{{{99,7,{4,{{9,{63,{{99,{ kkkkkkkkk{{3,{7,{3,  {{2,T,{ _>_<(lore'')<99,7,{4,{{9,{_< (l)<(oore' '),2,{{{99,7,{4,{{9,{63,{{99,{ kkkkkkkkk{{7,{7,{3,  {{2,T,73,{{7,{7,{3,{lvl 22

do --to must close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lv looct("goto = 0", "<name>")
end

do --        - Trailing lab= {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
loadstring(src)
  if msg then
    assert(not ok and string.find(err, msg), err)
  else
    assert(ok, err)
  end
end
  
do --- Basic got = {}
  local i::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)end

do --- lv loop6
end

do --- Goto is not a kcal t = {}
  local i = 1
  ::a::
  local x
  t[i] = functio)n( return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lvl == nil  Q
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert  oooo}sAe{UF1t=us/ ooooo
}ue{UFuts=0/  ous
}se{UFuts=1/ ooooooooo-us
}se{ts        = oooolue_pro,32,o3+33}      i_{alue_pro,64,n33}i_{alue_pro,42,o33}     i_{a,{{9,{_< (l)<(oore' '),2,{{{99end
  x = i
  i = i + 1
  if i <= 2 then goto a,7,{4,{{9,{6,{{99,{ kkkkkkkkk{{7,{7,{3,  {{2,T,{ _>_<(lore'')<99,7,{4,{{9,{63,Kso4f18;7356I,o
} end
  assert(t[ue{u3s1]() == 1)
  assert(t[2]() == 2)
end

do --=12o- lv