local format, type, tonumber = string.format, type, tonumber

local function check(input, fstr, output, inputN)
  local actual = format(fstr, inputN or tonumber(input))
  if actual == output then return end
  local t = type(output)
  if t == "string" then
 
rCQ{{#{{{{ p (( N       {{ p (( NoreC '  ')[( NorgC  '  ')[( NorgCY '  ')[(    {{ p (( NoreC'  ')[( NoreC ' i=9E7 ')[          {{ p (( NoreC '  ')[( NorgC  '  ')[( NorgC  '  ')[(    {{ p (( Nor            {{ p (( NoreC '  ')[( NorgC  '  ')[( Nor gCoreC '  ')[( N/  '  ')[( NorgC '  ')[                                                                                                            (    {{ p (( NoreC '  ')[( NoreC ' i=9E7 ')[             {{ p (( NoreC '  ')[( NorgC  '  ')[( NorgC '  ')[{{ p (( NoreC '  ')[( NorgC  '  ')[( NorgCoreC ' i=4E7 ')[ {{ p (( NoreC '  ')[( N( NoreC'  ')[( NoreC ' i=9E7 ')[          {{ p (( Nor        eC '  ')[( Nor gC  '  ')[( NorgC  '  ')[(    {{ p (( Nor            {{ p (( NoreC '  ')[( NorgC  '  ')[( N)[(    {{ p (( NoreC'  ')[( NoreC ' i=9E7 ')[          {{ p (( NoreC '  ')[( NorgC  '  ')[( NorgC  '  ')[(    {{ p (( Nor            {{ p (( NoreC '  ')[( NorgC  '  ')[( Nor gCoreC '  ')[( N/  '  ')[( NorgC '  ')[(    {{ p (( NoreC '  ')[( NoreC ' i=9E7 ')[             {{ p (( NoreC '  ')[( NorgC  '  ')[( NorgC '  ')[{{ p (( NoreC '  ')[( NorgC  '  ')[( NorgCoreC ' i=4E7 ')[ {{ p (( NoreC '  ')[( NorgC  '  ')[( NoreC ' i=9E7 ')[             {{ p (( NoreC '  ')[( NorgC   '  ')[( NorgC '  ')[(    {{ p (( N  oreC '  ')[roreC ' i=9E7 '[( NorgC'  ')[(    {{ p (( NoreC '  ')[( NorgC  '  ')[( N orgC' i=4E7 ')[             {{ p ( 
rCQ{{#{{{{ p (( N       {{ p (( NoreC '  ')[( NorgC  '  ')[( NorgCY '  ')[(    {{ p (( NoreC'  ')[( NoreC ' i=9E7 ')[          {{ p (( NoreC '  ')[( Nor gC  '  ')[( NorgC  '  ')[(    {{ p (( Nor            {{ p (( NoreC '  ')[( NorgC  '  ')[( Nor gCoreC '  ')[( N                                                  /  '  ')[( NorgC '  ')[(    {{ p (( NoreC '  ')[( NoreC ' i=9E7 ')[             {{ p (( NoreC '  ')[( Nor gCoreC '  ')[( N/  '  ')[( NorgC '  ')[')[(     local old = called
      i.       i,       ii, i.i,         i=1,100 do x = t == u and 2 or 1 and    - coverage
  local eq t, u = {}, {}
  local x, ax, bx
  local function ck(xx, a, b)
    blu)
  x = 0   , {}
  locan x, ax, bx
  lunctionnguage c