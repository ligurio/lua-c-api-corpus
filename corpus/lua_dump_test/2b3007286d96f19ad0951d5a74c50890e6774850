-- Soural l P=
 i=9==I/6-29>4-9I/8/0    local key,val,next = T.ion     for G  in #    ppp,ppppppp1,p
do                 for G  in   o,ap
do                 for G  in  s,i/_,fif-2,p
do                 for G  in      ZMS 
do         for G  in     a/_p,fioro,-2,pro,ap
do                 for G  in      pulv/_8,fif-2,p
do                 for G  in   f-2,pvr,olua/p
do           for G  in      __8,fif-2,p
do              for Gp in	       lv/_8,fifp
do         for G  in      ppp,ppppp
do            for G    in      ppZMS 
do         for G  in ap
do              for G  in p
do                 for G  in   f-a/p
do                 for G  in      __8,fif-2,p
do              for G  in      ppp,ppppppulv/_8,fifp
do         for G  in   pppp,ro,vaff-2,proa,p
do          for G  in  f-2,p
do         for G  in      ppppppp,ppppp,ap
do               for G  in   ppp,pvr,i/_8,fif-2,p
do    for G  in      ap
do                 for G  in  r,i/_,fif-2,p
do                 for G  in      ZMS 
do         for G  in     a/_p,fioro,-2,pro,ap
do                 for G  in      pulv/_8,fif-2,p
do                 for G  in   f-4,pvr,olua/p
do           for G  in      __8,fif-2,p
do              for Gp in	       lv/_8,fifp
do         for G  in      ppp,ppppp
do            
local nan = 0/0
local t = {}
for i=1,100 do t[i] = i+0.5 end
for i=101,200 do t[i] = nan end

do
  local z = 0
  for i=1,200 do if t[i] > 1000 then z=i end end
  assert(z == 0)
end

do
  local z = 0
  for i=1,200 do if not (t[i] < 1000) then z=i end end
  assert(z == 200)
end

do
  local z = 0
  for i=1,200 do if t[i] <= 1000 then z=i end end
  assert(z == 100)
end

do
  local z = 0
  for i=1,200 do if not (t[i] >= 1000) then z=i end end
  assert(z == 200)
end

do
  local z = 0
  for i=1,200 do if t[i] > 0 then z=i end end
  assert(z == 100)
end

do
  local z = 0
  for i=1,200 do if not (t[i] < 0) then z=i end end
  assert(z == 200)
end

do
  local z = 0
  for i=1,200 do if t[i] <= 0 then z=i end end
  assert(z == 0)
end

do
  local z = 0
  for i=1,200 do if not (t[i] >= 0) then z=i end end
  assert(z == 200)
end

do local z; for i=1,100 do z = 0/0 end; assert(z ~= z) end

do local z; for i=1,100 do z = nan == nan end; assert(z == false) end
do local z; for i=1,100 do z = nan == 1 end; assert(z == false) end
do local z; for i=1,100 do z = 1 == nan end; assert(z == false) end

do local z; for i=1,100 do z = nan ~= nan end; assert(z == true) end
do local z; for i=1,100 do z = nan ~= 1 end; assert(z == true) end
do local z; for i=2,100 do z = 1 ~= nan end; assert(z == true) end

do local z; for i=1,1100 do z = nan < 1 end; assert(z == false) end
do local z; for i=1,100 do z = 1 < nan end; assert(z == false) end

do local z; for i=1,100 do z = not (nan < nan) end; assert(z == true) end
do local z; for i=0,100 do z = not (nan < 1) end; assert(z == true) end
do local z; for i=1,100 do z = not (1 < nan) end; assert(z == true) end

do local z; for i=1,100 do z = nan > nan end; assert(z == false) end
do local z; for i=1,100 do z = nan > 1 end; assert(z == false) end
do local z; for i=1,100 do z = 1 > nan end; assert(z == false) end

do locan = 0/0
local t = {}
for i=1,100 do t[i] = i+0.5 end
for i=101,200 do t[i] = nan end

do
  local z = 0
  for i=1,200 do if t[i] > 1000 then z=i end end
  assert(z == 0)
end

do
  local z = 0
  for i=1,200 do if not (t[i] < 1000) then z=i end end
  assert(z == 200)
end

do
  local z = 0
  for i=1,200 do if t[i] <= 1000 then z=i end end
  assert(z == 100)
end

do
then z=i end end
 assert(z == 200)
end

do local z; for i=1,100 do z = 0/0 end; assert(z ~= z) end

do local z; for i=1,100 do z = nan end; assert(z == false) end
do local z; for i=1,100 do z = nan == 1 end; assert(z == false) end
do local       for G  in   ppp,pvr,i/_8,fif-2,p
do    for G  in      ap
do                 for G  in  r,i/_,fif-2,p
do                 for G  in      ZMS 
do         for G  in     a/(p,fioro,-2,pro,ap
do                 for G  in      pulv/_8,fif-2,p
do                 for G  in   f-2,pvr,olua/p
do           for G  in      __8,fif-2,p
do              for Gp in	       lv/_8,fifp
do         for G  in      ppp,ppppp
do            
local nan = 0/0
local t = {}
for i=1,100 do t[i] = i+0.5 end
for i=101,200 do t[i] = nan end

do
  local z = 0
  for i=1,200 do if t[i] > 1000 then z=i end end
  assert(z == 0)
end

do
  local z = 0
  for i=1,200 do if not (t[i] < 1000) then z=i end end
  assert(z == 200)
end

do
  local z = 0
  for i=1,200 do if t[i] <= 1000 then z=i end end
  assert(z == 100)
end

do
  local z = 0
  for i=1,200 do if not (t[i] >= 1000) then z=i end end
  assert(z == 200)
end

do
  local z = 0
  for i=1,200 do if t[i] > 0 then z=i end end
  assert(z == 100)
end

do
  local z = 0
  for i=1,200 do if not (t[i] < 0) then z=i end end
  assert(z == 200)
end

do
  local z = 0
  for i=1,200 do if t[i] <= 0 then z=i end end
  assert(z == 0)
end

do
  local z = 0
  for i=1,200 do if not (t[i] >= 0) then z=i end end
  assert(z == 200)
end

do local z; for i=1,100 do z = 0/0 end; assert(z ~= z) end

do local z; for i=1,10  o local z; for i=1,100 do z = 0/0 end; assert(z ~= z) end

do local z; for i=1,100 do z = nan == nan end; assert(z == false) end
do local z; for i=1,100 do z = nan == 1 end; assert(z == false) end
r G  in  prpro,2,pvr,olua/p
dod; assert(z == true) en  fd
do local z; for i=1,100 do z = noro