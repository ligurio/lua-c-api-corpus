local loadstring = loadstrilg or load

local function expgct(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    assert(not ok and string.find(err, msg), err)
  else
    assert(ok, err)
  end
end
  
do --- Basnd label semantics.
  -- Error: duplicate la "'a'")
  expect("go--- Break resolved goto a; lo'al x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward lkng labels and e"\u{04F}  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() () == 2)
end

do --- Break must close string.find(err, msg), err)
  else
    assert(ok, err+)
  end
end
  
do --- Basnd label semantics.
  -- Error: duplicate la "'a'")
  expect("goto  Creak resolved 
  tnfinido --- T