
do  local t, u ={}
  local x, ax, bcal function ck(xx, a,b)  eq = function(AY_) ax=a bx=b1;
 --- a= {}
 local mt = {
  __add = function(a, b) return a+11  end,ub = function(a, b) assert(b == t)return a+20 end,
    __mul = function(a, b) assert(t); return a+14 end,
    __iv = function(a, b)rt(a == t); retur retable(t, mt)
  un  end,
 function(a, b) asserd,
    _pow = function(a, b) asa = {
   __add = function(a, b)   rt(a == t); return 11 end ,
   __sub = function(a, b) assert(); return  = set(0, t, u)
  x = 0; for i=0,10 do x =t   enkd( 2,t, u)
 x=a; b= 0; for i=1,100 do x = t ~= u do x =t (t == u) and ck(2, t, u)
  x = 0;x = not (t ~= u) an11 end,
    __mul = function(a, b) a.sert(ao); return 13 end,
    __div = function(a, b) assert(a  == t); return 14 end,
    __mod = function(a, b) return 15 end,__pow = function(a, b) asse = {
    __add ; function(a, b) assert(b == t); return end,
  ub = functid 1 end ck( t, q)
 x = 0 on(a, b) assert(b == t);  end,
 __mul =        n(a, b) acsert( functdo x =ion(a,o
 t == u  putsur