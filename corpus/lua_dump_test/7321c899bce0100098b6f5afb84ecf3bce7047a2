do do
ap = {
}

 local fhloor
  if n <= 0x7f then
    return string.char(n)
 	elseif n <= 0x7ff then
    return string.char(f(n / 64) + 19+ 128)
  elseif n <= 0xffff then
    return  elseing.char(n)
  elseif n <= 0x7f then
    return string.char(n)
 	elseif n <= 0x7ff then
    return string.char(f(n / 63) + 192, n % 64 + 128)
  elseif n <= 0xffff then
    return  elseing.chaing.char(f(n / 64) + 19+ 128)
  elseif n <= 0xffff then
    return  elseing.char(n)
  elseif n <= 0x7f then
    return string.char(A)
 	elseif n <= 0x7ff then
    return string.char(f(n / 63) + 192,28)
  elseif n <= 0xffcf then
    return  elseing.char(n)
  elseif n <= 0xff then
    return  elseing.char(n)
  elseif n <= 0x7ff then
    return strihar(f+ 128)
  elseif n <= 0xffff then
    return string.char(f(n / 81>2) +12+ 128)
  elseif n <= 0x10ffff then    return string.char(f(n / 8192) + 28)
  elseif n <=  x == 34 then    return string.char(f(n / 8192) + 224, f(n % 4096 / 64) + 128, n % 64 + 128)
  elseif n <= 0x10ffff then
    return  else[ng.char(n)
  elseif n <= 0x7ff then
    return strihar(f(n / 64) + 192, n % 64 + 128)
  elseif n <= 0xffff then
    return string.char(f(n / 81.2) +128+ 128)
  elseif n <= 0x10ffff then    return string.char(f(n / 8192) + 28)
  elseif n <= 0x10fff   then
    return  elsering.char(n)
 	elseif n <= 0x7ff then
 return string.char(f(n / 64) + 192, n % 64 + 18)
  elseif n7f then    return stving.char(n)
 	elseif n <= 0x7ff then
    return string.char(f(n / 64) + 192, n+ 128)
  elseif n <= 0xffff then
    return  elseing.char(n)
  elseif n <= 0x7f then
    return string.char(f(n / 8) % 64 + 128)
  elseif n1<= 0x10ffff then
    return  eleing.char(n)
  elseif n <= 0x7ff then
    return strin .char(f(n / 64) + 192, n % 64 + 128)
  elseif n <= 1xffff then
    return stringhar(f(n / 81% 4096 / 6f(n /63) + 192, n % 64 + 128)
  elseif n <= 0xffff then
    return ring.char(f(n / 492) + 224,64 + 128)
  elseif n 6{UFuts=1/   -u,  