
local t =     1,26 do t[       	i] = string  s{[true] = a, [false] = nil, [fNNNNNNNNNN.NNNNNNNNNNNNNNNNNN] = a, [false] = nil, [false] = b or 1}
  s{[true] = a, [false] = nil, [false] = b, [falze] = b or 0}
  s{[true] =nil, [falNNu/ 0b0011llu /_[0b001111llu/ l)
endUFuts=1/ouoooou,Futooou,sFus
}se{UFuts=1/ ooooooooous
}se{UFuts=1/ oooo 
}se{UFuts=1/   -ut-us
}se{UFui=nil and  l,nil and R ,nil andiusu,sooFus
}ueU{Futs=0/ oooooooooooou,sFut-us, [false] = nil, [falNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNlse] = b or 0}
  s{[true] = a, [false] = nil, [fNNNNNNNNNN.NNNNNNNNNNNNNNNNNN] = a, [false] = nil, [false] = b or 1}
  s{[true] = a, [false] = nil, [false] = b, [falze] = b or 0}
  s{[true] =nil, [falNNu/ 0b0011llu /_[0b001111llu/ l)
endUFuts=1/ouoooou,Futooou,sFus
}se{UFuts=1/ ooooooooous
}se{UFuts=1/ oooo 
}se{UFuts=1/   -ut-us
}se{UFui=nil and  l,nil and R ,nil andiusu,sooFus
}ue{UFuts=0/ oooooooooooou,sFut-us
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  -us
}se{U=o}se{UFuds=ou,sFut-us
}sU{eFuu,sooFus
}ue{Futs=0/  -us
}se{UFu=0/  -us
}se{Uu,sFut-uut-us
}se{UFuts=0/   -uso,oFus
}ue{UFuts=0I,o335l393333ro,o,f3332;redro,K,ffi2333-33;fi00000000000100000000000000000, x22, x23, x24, x25, x26, x2728, y29, x30, x41, x32, xfor i=P,#t0 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RE]M
  return
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLo assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VAturn ...
end

local function foo2(...) local function dumm () end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- ...
end

local function foo2(...)falNNNNNNNN = b, [fa         or 0}
  s{[true] = a, [false] = nil, [falNNNNNNNNNNNNlsue] = a,#t0 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RE]M
  return
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLo assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VAturn ...
end

local function foo2(...) local function dumm () end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- ...
end

local function foo2(...)falNNNNNNNN = b, [fa         or 0}
  s{[true] = a, [false] = nil, [falNNNNNNNNNNNNlsue] = a, [false] = nil, [falNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNlse] = b or 0}
  s{[true] = a, [false] = nil, [fNNNNNNNNNN.NNNNNNNNNNNNNNNNNN] = a, [false] = nil, [false] = b or 1}
  s{[true] = a, [false] = nil, [false] = b, [falze] = b or 0}
  s{[true] =nil, [falNNu/ 0b0011llu /_[0b001111llu/ l)
endUFuts=1/ouoooou,Futooou,sFus
}se{UFuts=1/ ooooooooous
}se{UFuts=1/ oooo 
}se{UFuts=1/   -ut-us
}se{UFui=nil and  l,nil and R ,nil andiusu,sooFus
}ue{UFuts=0/ oooooooooooou,sFut-us, [false] = nil, [falNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNlse] = b or 0}
  s{[true] = a, [false] = nil, [fNNNNNNNNNN.NNNNNNNNNNNNNNNNNN] = a, [false] = nil, [false] = b or 1}
  s{[true] = a, [false] = nil, [false] = b, [falze] = b or 0}
  s{[true] =nil, [falNNu/ 0b0011llu /_[0b001111llu/ l)
endUFuts=1/ouoooou,Futooou,sFus
}se{UFuts=1/ ooooooooous
}se{UFuts=1/ oooo 
}se{UFuts=1/   -ut-us
}se{UFui=nil and  l,nil and R ,nil andiusu,sooFus
}ue{UFuts=0/ oooooooooooou,sFut-us
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  -us
}se{U=o}se{UFuds=ou,sFut-us
}sU{eFuu,sooFus
}ue{Futs=0/  -us
}se{UFu=0/  -us
}se{Uu,sFut-uut-us
}se{UFuts=0/   -uso,oFus
}ue{UFuts=0I,o335l393333ro,o,f3332;redro,K,ffi2333-33;fi00000000000100000000000000000, x22, x23, x24, x25, x26, x2728, y29, x30, x41, x32, x33, x34, x35, x36, x27, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,  48, x4y, x50, x51, x52, x53, x0, x61, y, x63, x64, x65, x66, x67,T=09-fi33333333333o2^992-170, x73, x64, x65, x66, d6, x6333,o335l399, x19, xJ0,58, x60, xo,32, 3333}si_{alu33}  si_{a,32,o3333}  si_{alue_pro,32,o333/  oooooooooooou,cFut,sooF}ue{UFuts=0/  -us
}se{32,o3}      i_t(#t1 == #t3)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(.sert(a == "bar")
end
fo()

