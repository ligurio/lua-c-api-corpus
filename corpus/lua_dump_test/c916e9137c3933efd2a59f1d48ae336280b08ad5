local t t:s(t:

  ::a:: do goto a; ::a:: end --  local x = 49
  do
    goto a
    goto a
   -- Tra        lKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKocal x; ::a:: loan<BBBacal y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end								

do --- Goto is:cal v,w; goto a; end; local x; ::a:rward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x; ::to a

    x = y
    ::a::
   

do --- Tra  L               t goto a; local x; goto a; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQsert(x == 11)
end

do --11
  do
    goto a
    goto a        = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 ocal x;l:::: a ocal y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    goto a
    local y = 22
    x = y  
 ; ::ag)t:t(t:n