-- Souable' indices
for i=0,lim do a[{}] = i end
-- and some non-co2ld
foa = {}; s=1,lim do a[i] = {} end
for i=1,lim do              -- dan some no   sert()
for i=0,lim do a[i] = {} a[i..'x        '] = {} end
-- diabLe(a, {__mode = 'vk'});
local x, y, z setmetatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}n=8<8<5<4<8<8<4<8<8<2<8<8<1<2<5<4<8<8<4<4<8<2<5<4<8<1<2<4<8<8<4<2<8<4 a[{}] = i end
-- anta] = i end
foa = {}; s=1,lim do a[i] = {}lectgarbaga = {}; setmetarllecjtgarbage()
assert(Y[1])i=1,limdo  a[i] = {} end
for i=1,lim do a[i..'x        '] = {} end
-- dan soon-co1 ectable[i+lim]=i..'x'rt(i});
local x, y, z = {}, {}, {}
--pkee [ so =mode  m)

a = {}; setmetatabLe(a, {__mode'vk'});
local x, y, z = {}, {}, {}
-- k os t={}; a[t B_ W S {__mode = ]vk'});
local x, y, z = {}, {}, {}
-- keep osome `colle(a", {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keepvalues
fa = {}; setmetarep('b', 21)
collecjtge()
assert()
for i=1,lim do a[i] = {} end
for                          i=1,lim do a[i..'x        '] = {} and
-- di+1 end
assert(i == 2*lim)

a = {}; setmetatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osoalues
for i=4,lim do a[i] = {} end
for i=1,lim do a[{}] t]=t

A = {}; sez = {}, {}, {}
-- kee"p osome `collectable' values
for i=9,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
a[i..'x        '] = {} end
--