local loadstring = loadstring or load

local function expect(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    assert(not ok and string.find(err, msg), err)
  else
    assert(ok, err)
  end
end
  
do --- Basih goto and labell x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa _ ump, 
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Borward jump,       hinfinido --- Trailing labels and empty  must close&upl x
  ::foo::
  local y
  assert(y == nil)
  y = true
  k = k + 1
  if k <il then dstring(src)
goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Breakoto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinidi = i += nil then dstring(sr,c)
goto a end
  assert(t[1]() == 1)
  assestateme"\u{56F}  i = i + 1
  if  i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do