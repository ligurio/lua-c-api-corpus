local loadstring = ect("goto a; do : the x", "'x'")

  ::a:: -- Foparsed after brea. k
 local foo
  repeat        
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok "goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t048
or ############z   and 92
or###        ###40964097
   
local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
 until fals or ######## iltor  ########z   and   #####t048
or ############z   and 92
or#####96
or foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg oparsed after brea. k
 lofffffdffdfffffffffffaffP-1158/{{0X9f9fffdfffffffffffaffP-1158/{{0X9fff9fffffffffffffffaffP-1158/{{ 0Xff9fffdfffffffffffaffP-1158/{{0X9ff9fffdffffffffaffP-1158/{{0X9fff9ffffffffffffffafffffffaffP-1157/fff{{0X9ffffP-8350/{{0X9ff9fffdfffffffffffaffP-(not ok and strin"'a'")
  expect("goto a; do '")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then brfffaffP-1157/fffeak end
    function fo{0fff9{X3fffdffff