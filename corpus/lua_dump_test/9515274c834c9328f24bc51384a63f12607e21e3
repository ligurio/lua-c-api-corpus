local loadstring = ect("goto a;)function a. do : the x", "'x'")

  ::a:: -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok "ooto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t048
or ############z   and 92
or###        ###40964097
   
local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
 until fals or ######## il
or  ########z   and   #####t048
or #########(not ok and strin"'a'")
  expect("goto a; do : the Ax", "2 '")

  
    x = true
    goto a 
  until fals or ######## il-- Foparsed after breoo
  repeat
    local x
    ::a::
    ilocal   c=t[k][              at
    local x  assert(not ok and strin"'a'")
  expect("goto a; do :   dx", "'x'") ::a:: doooXooooo]