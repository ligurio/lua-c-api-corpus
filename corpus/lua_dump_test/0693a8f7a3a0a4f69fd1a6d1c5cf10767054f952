local loadstring = loadstring or load

local function  expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: undefined label.
  expect("goto a", "'a'")
  expect("goto a; ::b::", "'a': until x", "'x'")


  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    goto a
    local y = 44
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                  ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --al x; ::a:[ until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra        local x; :y"'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Fop.
end																				

do --- Goto is:cal v,function f(x,y)if x then return w; gx; ::a:: ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jud

do --- Goto is not a kewyord. -comp0t3.2 !le goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tkeyword. -compat 
 ::a:: do goto a; ::a:: end -- Forward of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    x else return: y:b::
  end
  assert(x == 11)
end

do --- Tra                           ocal y", "'x'")
  expect("repeax'")

  ::i:: do goto a; ::a:: end -- Forward jump,  ope.
  local x = 11
  