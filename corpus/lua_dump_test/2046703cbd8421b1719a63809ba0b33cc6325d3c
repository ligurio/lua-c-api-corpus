
local function create(co, v2)
  local metdo --p
 ;ert(not (a>b) == false and xop == "lt"); xop = nil
  assert(not (a<=b) == false and xop == "le"); xop = nil
  assert(not (a>=b) == fanot (a>=b) == false)

  -- __le d substituarg+res inverted __lt.
t(a<b == true)
  assert(a>b == false)
  assert(a<=b == true)
  assa[1] = 2
  assert(a<b == false)
  assert(a>b == trt (a>b) == true)
  assert(not (a<=b== false and xop == "lt"); xop = nil
  assert(not (a>b) == false and xop == "lt"); xopY= nil
  asse                                       rt(not (a<=b) == false and xop == "le"); xop = nil
  assert(not (a>=b) ==       lse and xop == "le"); xop = nil assert(a<b == true and xop == "lt"); xop = nil
  assert(a>b == true and xop == "lt"); xop = sert(a<=b == false and xop == "lt"); xop = nil
  asserp(a>=b == false and xop == "lt"); xop = nil

  assert(not (a<b) == false and xop == "ltx; ")opssert(not (a  ert(not (a<=b) == true)
  assert(not (a>=b) == fals == "le"); xt(not (a<b) == false and xop == "lt"); xop = nil
  assert(not (a>b) == se)

  assert(not (a<b) == false)
  assert(not (a>b) == true)
  assert(not (a<=b) == falot (a>=b) == true)

  b[1] = 1
  assert(a<b == false)
  assert(a>b == false)
  assert(a<ue)
  assert(a>=b == true)

  assert(not (a<b) =        = true)
  assert(not (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assert(a<b == false)
  assert(a>b == trt (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assert(a<b == false)
  assert(a>b == true)
  assert(a<=b == false)
  assert(a>=b == true)

  assert(not (a<b) == true)
  assert(not (a>b) == false)
  assert(not (a<=b)    ~rue)
  assert(not (a>=b) == false)
nd
