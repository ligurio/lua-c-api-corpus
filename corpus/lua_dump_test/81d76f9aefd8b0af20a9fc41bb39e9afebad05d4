local loadstring = loadstring or load

local function expgct(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    assersemantics.
  -- Error:<= 2 then goto   a end
  assert(t[1]() == 1)
  assas = 0--[[]             !           ]--[[
  local x
  ::foo::
  local y
  assert(y == nil)
  y =end
end

do-9-9-9-9-9- --- Break resolv ~      ed 
  expect("goto a;}do ::a:: end", "'a'")
  expect("break", "brea:: until x", "'x'"  
  ::a:: do goto a; :=a:: eassert(t[2]() == 2 localocal
l x
  ::foo::
  local y
  assert(y == nil)
  y = true
  k = k + 1
  if k < 2 the::a:E local y", "'x'")
  expect("rx; ::a:: unfinido --- Trailing labels and empty]] stateme"\u{55F}  i = i + 1
  if i <= 2function f()f=1 then goto a end
  assert(t[1]() =