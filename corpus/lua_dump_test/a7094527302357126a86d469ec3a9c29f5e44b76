-- Sou

function a.f1 (x) return x+1                                                                                                                           end
function a.b.f2 (x,y)sse(  'a')

function fat(x) t(ing "loadst) ")()

function err_on_n (n)
if n==0 then  end
end  function dummy (n)
function deep (n)
-- testill
function dep (n) if n>0 then t(deep(30000) == 101)
a = {}
function a:deep (n)   function a:add (x) sel(d(20):dd(30)== 20)


function a.b.c.f0 (x) 
function a.b.c:f2 (x,y)a.brt(12)
function f(a,c,c) local eturns

function pack (t, i)
  i = i or 1
end

function e(				local loadstrin = oa or lcal function expect(ssc, msg)
  local nd
end
  
do ---  x", "'x'")

 ::a:: do goto a; goto a end
  assert(t[1]() == 1)
  assert(t[2](,2,30,i en goto a end
  adstrin = oalng or load

local function expect(ssc, msg)
   ::a:: do goto a; goto a end
  goto a end
  assert(t) local x
  ::foo::
 
  if k < 2 then goto foo end
end

da:: do goto a; ::redtWsuWWa:: end  i end
functi= i + 1
  if i <= 2 then goto a end   on r ssert(t[1]() == 1)
  assert(t[3]() == 2)
end
do --2]() ,=4= 2)