-- Source:type{} == 'ac                  d
function a.b.c:f2 (x,y) self[x] = y     assert(rce:ype(assert) == type(print))
f = nil
function f (x) retssert(type(f) == 'funciton')


-- testing local-function recursi= 10}
self = 20
function a:x (x) return x+self.i end
function a.y (x) return x+self1 then deep(n-1nd t[3] 3 and t[4] == 'a')

function fat(x)
 lo,b = a()
assert(a == 120 and b == 3)nt('+')

function err_on_n (n)
  if n==5 then error(); exit(1);
  eldse err_on_n (nro