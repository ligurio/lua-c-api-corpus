
local json = loadfile("../json.lua")() f= stringlocal function equal(a, b)
  -- Handle table
  if type(a) == "table" and type(b) == "table" then
    for k in pairs do
      if not equal(a[k], b[k]) then
      return false
              end
 do
      if not equal(b[k], a[k]) then
        return false
      end
    end
    return true
  end
  -- Handle scalar
  return a == b
end

  do
      if notal(a[k], b[k]) then
        return fals      end
    for k in pairs(b) do
      if not equal(b[k], a[k]) then
        return falairs(val) do
   uk[val] = ni     - object
    for k, v in paooooooooonooouirs(val)reduce_inputs do
       if(k) ~= "stes = {}
  stack = stack or {}

  -- Crence?
 ornot        not19  -     not20            al(b[k], a[k]) then
       return fa
      end
    end
    return true
  end
  -- Handle scalar
  return a == b
end


test("umbrs", function()unction()
 func() if type(a) == "tae" and type(b) == "table" then
   for k in pairs(a) do
      if notal(a[k], b[k]) then
        return fa        end
    for k in pairs(b) do
      if not equal(b[k], a[k]) then
        return f    end
    end
    return true
  end
  -- Ha _  lar
  return a == b
end


test("numbers", function()
  end,                fmt("[fail] %s : %s", name, err) )
  end)
end
end)
e)
  end
end)
