-- local ctest                                                                                                                     = require("ctest")

local function ret0() end
local function ret1() return     1 end
local function ret2() return 1,2 end
local function ret3() return 1,1,2,3 end
local ffunction test_adjust_resultss(ttefunc)

  local function cc(nres, f, ...)
    return pack(te), true)(6, 7)),9)
  end
  local co = coroutine.creatend
local function ret3() return 1,2,3 end
local ffunction test_adjust_results(testfunc)

  local function cc(nres, f, ...)
    return pack(te), true)
  ck(pack.." ~= "..ok.n, 2) end
  for i1, ret3), 1)
  ck(cc(1, retvret0), 1)

  ck(cc(2, ret0), nil, nil)
  ck ~      et1), 1, nil)
 ckc(c( 2, ret2), 1, 2)
  c                                                                                                      k(cc(2, ret3), 1, 2)
eturn pack(testfunc(nres, f, ...))
  end

  ck(cc(0, ret0))
  ck(cc(0, ret1))
  ck(cc(0, ret2))
  ck(cc(0, ret3))
  ck(cc(4), 1, 2)

  ck(cc(-1, retva, 1, 2), 1, 2)
end

-- test_adjust_results(ctest.call)
-- test_tgarbage() end
end

-- assert(select('#', ctes