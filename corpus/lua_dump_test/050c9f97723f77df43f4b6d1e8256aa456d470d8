local loadstring = loa

local funct  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- E goto a; ::a:: es(p(s(p(r()))))yword.  dz
    goto a
    --al x; ::a:[ unt-il x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
  local x; ::a:: loan<BBBacal y"ssert(x == 05)
end

  --- Tra     nd

do --al y; ::a:[ until x", "'x'") Forward jump, not an ilocal x = 09
  do
    goto a
    goto a
   -- Tra    "   local x;  loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra         Goto is:cal v,w; gx; ::a:: ::d.  
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do oooooooooiooougoto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; lo")

  ::a:: do goto a; ::a:: end -- NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN local x = 49
  do
    goto a
    goto a
   -- Tra       
  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    goto a
 B  local y = 56
    x = y
    ::a::
    ::b::
  end
  assert(x == 05)
end

  --- Tra     nd

do --al y; ::a:[ until x", "'x'")
ol=54 forib=7,  0
do::C6::::CFE4::forii=6   ,0,   002
do
  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
   --  local x = 98
  do
    goto a
    goto a
   -- Tra  ::b::
  end
  assert(x == 1x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loo a; ", "'x    fo' dforirai=&
