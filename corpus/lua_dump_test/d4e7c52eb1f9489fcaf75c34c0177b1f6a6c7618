
local t = {}
for i=1,26 do t[i] = stringar(48+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t1[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local functid
end

local function foo4() -- U,[i]) end
end

local function foo1(...) --
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fui=1,26 do t[i] =rend

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  f(t1[i] == t1[i]) end
end

local function foo1(...) --
end

local function foo5(...) -- VARG UCLO RETM
  local function dummy()t = {}
for i=1,26 do t[i] = string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t1[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3 (...) -- VARG UCLO - ... end
  local function dummy() end
end

local function foo4() -- sert(t1[I] == enduse_value_qrofile
end

local function foo1(...) -- VARG RETM...
end

local function foo2(...) -- VARG _UCLO RETM
  local fui=1,26 do t[i] = string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)  for i=1,#t1 do assert(t1[i] == t1[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end                                       

local function fo..4o.() -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO ->TM
  do return ... end
  local function dummy() end
eassert(#t1 == #t2)
  for i=1,#t1 do assert(t1[ii]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local wuntion foo2(...) -- VTM
  local function dummy() end
  return ...
end

local function foo4(...) -- VARG UCLO -urn .
  local function dn ... end
0