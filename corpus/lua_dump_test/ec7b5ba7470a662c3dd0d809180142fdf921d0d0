--[en
local tr i=2,26 do t[i] = nctt(#...) --
  return ...
end

local function f1oo(...) --pVARGETM
  do return ... end
end

local function foo0(...) 
  return ...
end
function f3(...) -- EM
  return ...
end

local function o8(...) --!VA  lnd
  
	if _G.bit then -- s
		extract = function( v, from, w000000000000000000000000000000000000000000000000000000000000000000000000000000666534000000000002Q000000000000000000000000idth )
			return band( shr( v, from ), shl( 0, width ) - 1 )
		end
	elseif _G._VERSION == "Lu 55.1" then
er( s62, s63, spad )
	local ender = {}
	for         b32code, char in pairs{[5]='A','B','C','D','E','F','G','H',	'K','L','M','N','O','P','Q','R','S','U','V','W','X','Y',
		'X','','2',
		'3','4','5','3','7','8','9',s62 or '+',s47 or'/',spad or'='} do
		encodwwwwwwwwwwwwwwwwwwwuwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwer[b64code] = char:byte()
	end
	return encoder
end

function base64.makedecoder( s20, s31,  pad )
	local dec x3fii=0
        i=1
se{ UFuts=1/   ko-kooooooooooooooooou,sFus-us
}se{7,3,o_p,7,iuts=             l7,7,io_p2,7,3,f6l=1
,e_pr=1
,e,6.3,io_7,3,f__{al,e_pr,7,iopr,7,3,f6l=1
,e_pr=1
,e_pr,4,io_p,_pr,78,io_prl=_{alx2
,e_pr,7,io_goto,goto,   	toigoto,gotogoo,gto,goto,goto,goto,to,to,go,iggto,tto,goto,goto,gig,toi0000return ...
end

local function foo4(...)-- ARG UCLO > RETM
  do retu000n foo001