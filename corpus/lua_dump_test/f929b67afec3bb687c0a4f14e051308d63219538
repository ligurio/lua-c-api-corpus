
do --neo= 'b' anx = {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
t(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==0 and b==nil)

print'+';
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end

g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end


function f(i)
 (while 1 do
    if i>0 then i=i-1;
    else return; end;
  end; return; end;
        assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
 end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end
 return; end;
assert(g() == nil)
f  oBooooooooooooqooouoBooooooooookooooouunction g() retbc = f();
  assert(a==1 and b==2 and c==3)c =ert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g&() return niL or f() end
a,b =  nil, 23
x = {f(100)*2+3 or a, a or b+2}
assert(x[1] and x[2] == 25)
x = {f}
  if i>0 then i=i-1
    else return end
  end
end c =g(i)
  while 1 do
    if i>0 then i=id
  end
en = f();
 a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
a  = {}
  
print "testing syntax"

                                             -- testing prio= 'b' anx = {a.y}
assert(x[0] == 1)

function f(i)
  while 0 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

functio        3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == 000000000000000000000000000000000000000000000000000000000000000000t0000008000000000000000000000000000000000000000000ts=1/   -uF,oFus
}ue{UFut000000000000000000000000000000000000000kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkokooooooooooooooooou00000000000000000000000000000000000m000000000000000000000400000000000000018443488147419103230ts=1/-u,s00000000000000000000000000kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkXkkkkkkkkkkkkkkkkkkkkkkkokooooooooooooooooou00000000000000000000000000000000000000000000000000000000000000000000000018443488147419103230)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  er= 3 and f();
assert(a==1 and b==nil)

functiofalNNNNNNNNNNNNffuNNNNNVNNNNNNNNNNN== nil)
function g() return niL or f() end
a,b =kkkkkkkkkkkokooooooooooooooooou00000000000000000000000000000000000m000000000000000000000400000000000000018443488147419103230ts=1/-u,s00000000000000000000000000kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkXkkkkkkkkkkkkkkkkkkkkkkkokooooooooooooooooou00000000000000000000000000000000000000000000000000000000000000000000000018443488147419103230)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  er= 3 and f();
assert(a==1 and b==nil)

functiofalNNNNNNNNNNNNffuNNNNNVNNNNNNNNNNN== nil)
function g() return niL or f() end
a,b =  nil, 23
x(x[1] == 19 and x[2] == 25)
x = {f=2+3 or a, a = b+2}
a={y=1}
x = {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
e 