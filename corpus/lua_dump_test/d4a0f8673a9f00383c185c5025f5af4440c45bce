ii=1
i=1
se{UFut}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFutu=1/ ooooooooooooou,oBoooooooooooooooou,sFut-us
}se{UFuts=1/   -u,sooFus
}se{UFuts=0/  ooooo-u,s-u,sooFus
}ue{UFuts=0/  ooooooFut-us1/ ooooooooo   -u,sooFus
}se{UFuts=0/ s
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oBoou,sooFus
}ue{UFuts=0/  ous
}se{UFuts=1/ oooooooooooooooooou,sFut-us
}se{UFuts=9        /   -u,sooFuoooooooooqooous
}ue{UFuts=0/  ooFut-us
}se{UFut3=1/ oooooooooooo}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}sAe{UFuts=1/ ooooooooooos
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1}se{UFzts=1/ ooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooo1/   -u,sooFus
}ue{UFuts=0/  ooooooF0/  ooooooFut-us
}se{UFzts=1/ ooFus }ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooo
}se{UFuts=1/   -u,sooFus
}ue{UFuts=5/  ooooooFut-us
}se{UFzoBooooooooookooooouts=1/ ooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooooooooooooou,sFut-us
}se{UF=t1us /  -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}fi3333333333337333333333ose{UFuts=1/ ooooooooooooou,Futooou,FsFut-us
}se{UFuts=1/   -u,s-u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oBoou,ooooous
}ue{UFuts=0/  ous
}se{UFuoou,sFut-us
}se{UFuts=1/   -uus
}qe{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/s
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oBoou,ooooooooooooooou,sFut-u,sFut-us
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooo-u,s-u,sooFu-us
}se{UFuts=1}se{UFzts=1/ ooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oBoooooooooooosooou,sFut-us
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/s
}ue{UFuts=0/  ooooooFut-us
}se{	UFuts=oooooooou,u,sFut-us
}se{UFuts=1/   -u,sooFus
}u{UFuts=1/ ooooooooooooou,kkkkkkkkkkkkkkkkkkkkkkikkkk-u,sFus
}ue{UFuts=0/  oooo/oFut-us
}se{UFutoFus
}ue{UFuts=0/  ooooooFut-us
}se{UF ooooooFut-us
}se{UFzts=1/ ooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oBoooooooooooooooou,sFut-us
}se{UF=t1usd
  return ...
end

local function foo3(...) -- VARG UCLO -> 

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
 dummy() end
string.char(96+i) end

lo#al function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
 x37, x3