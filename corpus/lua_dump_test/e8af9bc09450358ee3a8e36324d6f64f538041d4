-- Source: PUC Rct ==                             false)

-- te nil   -- 'decld tcon a.y (x) return x+self end

assert(a:x(1)(2,3) == -95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x, 20; return self end
  assert(a:add(10):add(21):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y e.

print("testing functions a=nd calls")

-- gettion fact (n)
    if n==0 then return res
 &  else retu = 20
function a:x ert(a@x(1)+10 == a.y(1))

a.t = {i=-100}
a["t"].x = f function a:add (x) s::c ::::C6::::CFEUn64:: forii=0026666,   002
do     forii=66666,   0066666,   002
do   forii=66666,   002
do      forib=66666,   002
do            forii=66666,   002
do    forii=66666,   002
do     forii=66667,   elf.x002
do      forib=66, 002
do, a.y = self.x+x,c[[[[[[[[[[[[[[[[[[[[[[[[[[[[.f1 (x) return x+0 end
function a.b.c:f2 (x,y) self[     forii=6666,   002
doforib=x3