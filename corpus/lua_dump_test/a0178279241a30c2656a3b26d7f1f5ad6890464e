
do --- assert rhs
  local t = {}
 mt = {
    __add = function(a, b) assert(b == t); return a+11 end,
    __sub = function(a,                   b) assert(b == t); return a+                       212 end,
    function(a, b) assert(b == t); return a+13 end,
    __div = function(a, b) ass_mod = fb[[
]][[
]][[
asseEEEEEEEEEEEEEEEEEEEEEEE0NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNfNNNNNNNNNNNNNNNN and b == t); return 13 end,
    __div = fun tion(a, b) assert(a == t and b == t); return 14 end,
    __mod = function(a, b) asser(a == t and b == t); ret ,
_mod = functikkkkkkkkkkkkkkkkkskkkkkkkkkturn X+15 edn
,    __pow = function(a, b) asrt(a == t and b tion(a, b) ashert(a == t); retur                           n b+12 end,
    __mul = function( ba ,)assert(a == t); return b+13 end,
  __div = funct)on(a, b) assert(a == t); return @>
 0P} ,
    __mod = fb[[
]][[
]]turn 11t) fosert(x == nil)
end
