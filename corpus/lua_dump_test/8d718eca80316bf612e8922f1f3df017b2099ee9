local loadstring = loadstring or load

local function  expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: undefined label.
  expect("goto a", "'a'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infitnieoo lp.
end

do --- Goto is not a keyword.  do
    goto a
    goto a
    local y = NMuX   x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                  ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local x; ::a:: unti]l x", "'x'")

  ::a:: do goto a; ::a:: end --8 orwerd jump, not an infinite loop.
end

do --- Goto railing labe nslo cisidered to be out ofA scope.
  local x = 
94  do
    goto a
    goto a
   -- Tra        11110;3,0B111111repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfinite loop.
end																				

do --- Goto is:cal v,w; goto a; end; local x; ::a:: local y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --- Goto is not a keyword.  dz
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end
do --- Tra                do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --8 orwerd jump, not an infinite loop.
end s{alue_pue_pro,12,o3333_,32,o3332}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}i_{alue_pro,32,o3333}  si_{alue_pro,32,o3333}  {lue_pro,16,o3333}      i_{alue_pro,32,o3333}     i_{alue_roalue_pro,32,o3333z}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3334}i_{alue_pro,32,o3333}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}      isi_{al3333}     i_{alue_roalue_pr_roalue_pro,32,o_pro,                        32,o3333}si_{alu-_,32,o3333}  si_{alue_pro,32,o3333_,32,o3333}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}i_{alue_pro,32,od3333}  si_{aluts=0/  oo
}se{UFuts=1/ oooooooooolue_roalue_pro,32,o3333z}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}i_{alue_dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddpro,32,o3333}      i_{alue_pro,32,o3333}     i_{alue_roae_orpul,32,o3_,32,o3333}  si_{alue_pro,32,o3333pro,32,o33ue_pro,32,o3333}      i_{alue_pro,32,o3333}i_{alue_pro,333}  si_{alue_pro,32,o3333}  {lue_pro,3233}  {lue_pro,32,o3333}      i_{alue_pro,32,o3333}     i_{al,32,o3333}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}i_{alue_pro,32,o3333}  si_{alue_pro,32,olue_pro,32,o3333}  si_{alue_pro,32,o3333}  {lue_pro,32,o3333}      i_{alue_pro,32,o3333}     i_{alue_roalue_pro,32,o_pro,32,o3333}si_{alue_,32,o3333}  si_{alue_pro,32,o3333_,32,o3333}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}i_{alue_pro,32,o3330oBoooooooooooolooouo3333}  {lue_pro,3233}  {lue33}     i_{alue_ut-us
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut- s
}se{UFuts=1/ ooooooooooooou,oBoooooooooooooooou,sFut-us
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFFut-us
}se{UFuts=1/ koooooooooooou,sFut-us
}se{UFuts=1/   -u,s-u,sooFus
}ue{UFuts=0/  oo
}se{UFuts=1/ ooooooooooooou,Futooouz= -0.99999999999956
   -u,s-u,sooFus
}ue{UFuts=0/  ooalue_pro,32,o3333}  si_{alue_pro,32,o3333}  {lue_pro,3233}  {lue_pro,32,o33lue_pro,32,o_pro,32,o3333}si_{alue_,32,o3333}  si_{alue_pro,32,o3333_,32,o3333}  

do --- Gotoa
    goto a
   -- Tra        local x; ::a:: loan<BBBacal y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQ Goto railing labe nslo cisidered to be out of scope.
 si_{alue_palue_pro,32,        o3333}i_{alue_pro,32,o3333}  si_{alue_pro,32,o3333}  {lue_pro,3233}  {lue_pro,32,o3333}      i_{aluee_roalue_pro,32,o3333}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}i_{alue_pro,32, local x = 49
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra        local x; :y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQ~QQQQQQQQQQQinfinite loop.
end																				

do --- Goto is:cal v,w; goto a; end; local x; ::a:: local y", "'x'")
  expect("repeat goto a; l; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jud

do --- Goto is not    goto a
    local y = 42
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tkeyword. jump, not an infinite lo-- Trailing labuntil x", "'x'")
 
 ::a:: do goto a; ::a:: end -                      - Forward of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                           ocal y",o3333UFuts=1I         ,sooFus
}ue{UFuts=0/  ooooooFut-   -u,sooFu "'x'")
  expect("repeax'")

  ::a:: do goto a; ::s
}ue{Ua:: endFu -t