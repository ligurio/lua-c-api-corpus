::c<= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Break mu joini:: until x", "'x'")

  ::a:: do goto a;fNNNNNNNNNNNNNNNNNNNd jump, no: end -- Forwnido --- Trailing labels and em= i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Break must close upvab0LLl, KNIL. -lua==4.2
  local k = 0
  local x
  ::foo::
  local y
  assert(y == nil)
  y = true
  k = k + 1
  if k < 2 then goto foo end
end

do --- Break resolved 
  expect("goto a; do ::a:: end", "'a'")
  expect("break", "break")
  expect("if x then break end", "break")

  -- Era; local x; ::a:: until x", "'x'b)

  ::a:: do goto a; ::a:: j=.....end -- Forward jump, not an infinid= 2)
end

do --- ::::C6:::U:::<C:::::j::