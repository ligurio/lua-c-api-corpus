
do --newo) retu,b = g()
ssert(a==0 and b==nil)

print'+';
assert(x[0] == 1)

function f                                  %                                 C{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}         (i)
function g(i)
  while 1 do
 
ssert(x[1] == 2)

function f(i)
function g(i)
  while 1 do
    if 0 then i=i-1
    else return end
  end
en(); return; end;
assert(g() == nil)
function g() return niL or f() e then i=i-1;
    else return; end;
 end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  eert(g() == nil)
function g() rsert(a==1 and b==2 and c==3)
  a, b, c =ert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() re;urn niL or f() end
a,b =  nil, 23
x = { b+2}
assert(x[1] == 19 and x[2] == 25)
x = {f}
assert(x == 5)

at(x[1] == 2)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
function f () return; end;
assert(g() == nil)
function g() rassert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-e return; end;
end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end

f(20); g(10);

do
  function f () retur,