-- Soua.y (x) return x+self end

assert(a:x(1)+10 == a.y())

a.t = {i=-100}
a["t"].x = functiort(a.t:x(2,3) == -95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x, 20; return self end
  assert(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
functia["t"].x = function (self, a,b) return self.i+a+b end

assert(a.t:x(2,3) == -95)

do
  local a = {                                                                             x=0}
  function a:add (x) self.x, a.y = self.x+ type(print))
f = nil
function f (x) return a:7testing local-fuN}nction recursiosting decl                                                                                             arat10}
self = 20
functiodn a:x 
(x)