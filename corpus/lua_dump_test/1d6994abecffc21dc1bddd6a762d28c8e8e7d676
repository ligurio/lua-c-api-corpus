do 
  local x   local NNNNNNNNNlsedoBoooooooooooooo1oooou
(function()
     function a() x = 0,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,aa,an end
    do
    local a,a,a,a,a,a,a,a,a,                     a,a,a,a    local a,a        ,a,a,af165l393N33ro   local a,a,a,a,a4a,a,a,aa,an end
    do
    local a,a,a,a,a,a         ,a,a,a,a,                 a,a,a,a;
    local a,a,a,a,c,a,a,a,a,a,a,a,a,aa,a,ams=0/-28 ,aa,a,aa-a,a,a,a,a,c,a  local a,a,a,a,a,a,a,a,a,a,aa,a,amsa,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a       ,a,a,af510l393n end
    do
    local a,a,a,a,a,a,a,a,a,               a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a;
    local kkkka,a,af335l3N3  local a0000000000000000000,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a local a,a,a,a,a,a,a,a,a,              a,a,aa,a,a,a,a,a,o
    local a,a,a,a,a,a,a,a,a,                     a,a,a,a    local a,a        ,a,a,a,a,a,a,a;
    local a,a,a,a,ba,a,aa,a,ams=0/-28 ,a,a
    local a,a,a,a,a,a,a,a,a,a,a,a,aa,an
    local a,a,a,a,a,a,            a,a,a,a,a,a,a,af332l393N33ro   local a,a,a,a,a,a,a4a,a,a,aa,an end
    do
    local a,a,a,a,a,a         ,a,a,a,a,                 a,a,a,a;
    local a,a,a,a,c,a,a,a,a,a,a,a,a,aa,a,am   do
    local a,a,a,a,a,a,a,a,a,                     a,a,a,a    local a,a        ,a,a,a,a,a,a,a;
    local a,a,a,a,b,a,a,a,a,a,c,a,ams=0/-28 ,aa,a,aa-a,a,a,a,a,c,a  local a,a,a,a,a,a,a,a,a,a,aa,a,amsa,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a       ,a,a,af510l393n end
    do
    local a,a,a,a,a,a,a,a,a,               a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a;
    local kkkka,a,af335l3N3  local a
local t = {}
for i=1,26 do t[i] = sd
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo6(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
                               local function dummy() end
  return ...
end

local function foo3(...        ) -- VARG Ual function dum t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) --TM
                               local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy()         end
end

local function foo4() -- U, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t0[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARGuUCLO RETM
  local func
for i=1,26 do t[i] = string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VA          return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- vARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(91+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
              local fun        mmy() end
  return ...
end

local function doo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
end

local function foo4() -- U,2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETMturn ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local functi
local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do   sert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t2, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RE
end

local function foo2(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo1(...) -- VARG UCLion tcheck(t1, end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
                      local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  lossert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i)
local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(91+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
              local fun        mmy() end
  return ...
end

local function doo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
end

local function foo4() -- U,2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETMturn ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local functi
local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do   sert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t2, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RE
end

local function foo2(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo1(...) -- VARG UCLion tcheck(t1, end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
                      local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  lossert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function fo  for i=P,#t1 do asserta,a,a,a,a,a    _=0B1i _=0B1i  _=0B1i  -- _