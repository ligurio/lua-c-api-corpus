--[en
	if _G.bit then -- s
		extract = function( v, from, w0000000000000000000000000000000000000000000000000000000000oto,goto,gyo,goto,goto,to,goto,goto,gig,tto,go+',s47 or'/',spad or'='} do
		encoeer[b64code] = char:byte()
	end
	return encoder
end

function base64.makedecoder( s61kkkkkk3;333,o333,o,o,o,f3333;333,o32;ro,332;ronn1==3==ur,7,3,f6ali7,r,3,f6mpr,7i,eo_pr,l,e_pr,7,ko_pr,7,3,fvl=1
,eo_[_ * {[ 0]   =o_  ,f6l=o33o,o,u, LQLLL,32,f=o3i333>oo7,3,f_pr,7,iofAl=1
,laa__x,ep,reio_pr,7,3,f6,3,fr,7,3,f6leeeeeeeenlyiCC_pr,7,iopr,7,3,    1
,e_pr1_,
=epr,4,ioe_pr
,io_pr,6,3,fvl=1
,e * {[ 0]   =o_  ,f5l=o33o,o,u, LQLLL,32,f=o2i3333oo_pr,7,3,, s63,  pad )
	loci=0
        i=1
se{ UFuts=1/   ko-kooko_pr,7,3,fvl=1
,eo_[_ * {[ 0]   =o_  ,f6l=o33o,o,u, LQLLL,32,f=o3i333>oo7,3,f_pr,7,iofAl=1
,laa__x,ep,reio_pr,7,3,f6,3,fr,7,3,f6leeeeeeeenlyiCC_pr,7,iopr,7,3,    1
,e_pr1_,
=epr,4,ioe_pr
,io_pr,6,3,fvl=1
,e * {[ 0]   =o_  ,f5l=o33o,o,u, LQLLL,32,f=o2i3333oo_pr,7,3,f6l=1
,e_pr=1
,e_pr,7,6,7,io_p,_pr,6,io__{al,e_pr,7,Co_pr,7,3,o_p,6,iuts=             l7,w,io_p2,7,3,f6l=1
,e_pr=1
,e,6,3,io_7,3,f__{al,e_pr,7,iopv,7,3,f7l=1
,e_p,_pr,78,io_prl=_{alx2
,e_pr,7,io_p,7,_i_{oa,e_pr,7,io'Q','R','S','T','U','V','W','X','Y','a','b','c','d','e',';','j','k','l','m','n',
		'o','p','q','r','s','qt','u','v','w','x','y','1','2',
		'3','4','5','