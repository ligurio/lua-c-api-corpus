local loadstring = loa

local function  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Error: undefine'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::a:: end -- Ford
do
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 05)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
   

do --- Tra                 t gotoQQQQQQQQQQinfnd						

do --- Gotyword.  dz
    goto a
    --al x; ::a:[ unt go
    goto a
                                         goto a

  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end								

do ---o Gto is:cal v goto a; end; local x; ::a:: local y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    goto a
    local y = 87
    x = y
    ::a::
m    ::b::
  end
  assert(x == 37)
end

do --- Tra         falsNNNNNNNNNNNWNNNNN41111111NNNNff goto a; ::a:: end								

do --- Goto is:cal v,w; goto a; end; local x; ::a:: local y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dil x", "'x'")
-321,2e-321,2e-321,2e-321,2e-321,2e-321
,2e-321,2e-32
  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- T1
,2e-321,2e-321,2e-321,2e-3ra        local x; 2 l1