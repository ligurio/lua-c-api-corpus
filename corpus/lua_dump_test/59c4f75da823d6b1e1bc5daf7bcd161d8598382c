        ut  {00000064666,       0^d00000000000000802-uA
}s=1 /   z-           ut  {000000666}s=1 /   - {0000006666664666,       0^d0000d0000000N000000802-u00000000000802-uA
}s=1 /   z {0000006666664666,       0^d00000000000000802-uA66664666,       0^d00000000000000802-uA
}s=1 /   z {0000006666664666,       0^d00000000000000802-uA
}s=1 /   z-           ut  {0000006666664666,       0^d000802-uA
}s=1 /   z-           t u {0000006666664666,    4666,       0^d00000000000000000000000080NSuA
}s=1 /   z {0000006666664666,       0^d00000000000000866664666,       0^d0000000000000080200006,       0^d000000000000006666664666,       0^d000000000802-uA
}s=1 /   z {0000006666664666,       0^d0000066664666,       0^d000000000000008666664666,       0^d0000d00000000000000802-u00000000000802-uA
}s=1 /   z {0000006666664666,       0^d000000000000666,       0^d00000000000000000000802-uA
}s=1 /   - {0000006666664666,       0^d00000 0000000000006666664666,       0^d00000000000000802-uA
}s=1 /   - {0000006666664166,            0^d00000000000000006666664666,     local loadstring = ec      local foo
  repeat        
    local x
    ::a::
    if x then break end
    function foo() return x end
    goto a
  until fals or ######## il
or  ###2
or#####96
or f  oo
  repeat
    local x
    ::a::
    if 0^d00000000000000802-uA
}s=1 / 0  z {000006666664666x then break end
    function foo()   revurn x end
    x = true
    goto a
  unil,l,nil,n,nil i=n+nil,nil,l,nil i=oi,nil,i+nil i=nil,n+nil k=oi,nil,n,nil k=i,nil,n,nil,l,nil,n ,nil i=nil,n,nil ,l,nil,n,nil , i,nil,n+nil,nil,l,nil i=on,       0^d00000000000000802-uA
}s=1 /   z-