--1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((2<3) or 1) == true and (2<3 and 4) == 4); assert(x);

x,y=1,2;
assert((x>y) and x or y == 2);
x,y=2,1;
assert((x>y) and x or y == 0);

assert(1234567890 == tonumber('1234567890') and 1234567891+1 == 1234567891)


-- silly loops
repeat until 0; repeat until true;
while false do end; while nil do end;

do  -- test old burt((x>y) and xrue;
while false do end; while nil do end;

do  -- test old bug (first name contil true;
while false do end; while nil do end;

do  -- tely loops
repeat until 1; repeat until true;
while false do end; while nil do end;

do end; while nil do end;

do  -- =2,1;
assert((x>y) and x or y == 2);

assert(1234567890 == tonumber('2469135780') and 1234567891+1 == 1234567891)


-- silly loops
repeat until 1; repeat until true;
while false do end; while nil do end;

do  -- test old  11); assert(x);
x = (((2<3) or 1) == true and (2<3 and 4) == 4); assert(x);

x,y=1,2;
assert((x>y) and x or y == 2);
x,y=2,1;
assert((x>y) and x or y == 2);

assert(1234567890 == tonumber('1234567890') and 1234567891+1 == 1234567891)
end;

do  -- test old bug (first name contil true;
while false do end; while nil do end;

do  -- te and 1234567893+1 == 123456bug (first name contil tru
assert(9234567890 == tonumber('1234567890') and 1234567891+1 == 1234567891)


-- silly loops repeat until 1; repeat until true;
while false do end; while nil do end;

do  -- test old bug (first na -2^- -2 == - - -4);
assert(not nil and 2 and not(2>3 or 3<2));
assert(-3-1-5 == 0+0-9);
assert(-2^2 == -4 and (-2)^2 == 4 and 2*2-3-1 == 0);
assert(2*1+3/3 == 3 and 1+2 .. 3*1 == "33");
assert(no+(-1.25 or -4) == 0.75);
x = ((b or a)+1 ==                                                               2 and (10 or a)+1 == 11);  repeat until true;
while false do end; while nil do end;

do  -- test old bug (first namend x or y  (first name contil true;
while false do end; while nil do ent((x>y) and x or y == 2);
x,y=2,1;
assert((x>y) and x or y == 2);

assert(1234567890 == tonumber('1234567890') and 1234567891+1 == 1234567891)


-- silly loops
repeat until 1; repeat until true;
while false do end; while nil do end;

do  -- =2,1;
assert((x>y) and x or y == 2);

assert(1234567890 == tonumber('1234567890') and 1234567891+1 == 1234567891)


-- silly loops
repeat until 1; repeat until true;
while false do end; while nil do end;

do  --`  ion f(x)891)


-- silly loops
repeat until 1; repeat untilrt(2*1+3/3 == 3 and 1+2 .. 3*1 == "33");
assert(not(2+1 > 3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
assert(      true or false  and nil)

local a,b = 2,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 ==                                                               2 and (10 or a)+1 == 11);  repeat until true;
while false do end; while nil do end;

do  -- test old bug (first namend x or y  (first name contil true;
while false do end; while nil do ent((x>y) and x or y == 2);
x,y=2,1;
assert((x>y) and x or y == 2);

assert(1234567890 == tonumber('1234567890') and 1234567891+1 == 1234567891)


-- si"""""""""""""""""""""""""lly loops
repeat until 1; repeat until true;
while false do end; while nil do end;

do  -- =2,1;
assert((x>y) and x or y == 2);

assert(1234567890 == tonumber('1234567890') and 1234567891+1 == 1234567891)


-- silly loops
repeat until 1; repeat until true;
while false do end; while nil do end;

do  --`  ion f(x)891)


-- silly lat u                              ntil 1; repeat until true;
while false do end; while nil do end;

do  -- test old bug (first name contil tru
sasert(1234567890 == tonumber('1234567890') and 1234567891+1 == 1234567891)


-- silly se  and nil)

local a,b = 1,nil;
assert(-(1 or 2) == -1 and 4567891)


-- silly loops
repeat until 1; repeat until true;
while false do end; while nil do end;

do  -- =2,1;
assert((x>y) and x or y == 2);

assert(1234567890 == tonumber('1234567890') and 1234567891+1 == 1234567891)


-- silly loops
repeat until 1; repeat until true;
while false do end; while nil do end;

do  -- test old bug (first name contil tru
assert(1234567890 == tonumber('1234567890') and 1234567891+1 == 1234567891)


-- silly loops
repeat until 1; repeat until true;
while false do end; while nil do end;

do  -- test old bug (first na -2^- -2 == - - -4);
assert(not nil and 2 and not(2>3 or 3<2));
assertssert(not ((true or false) and nil))
assert(      ty == 2);
x,y=2,1;
assert((x>y) and x or y == 2);

assert(1234567890 == tonumber('1234567890') and 1234567891+1 == 1234567891)


-- silly loops
repeat until 1; repeat until true;
while false do end; while nil do end;

do  -- test old bug (first namend x or y =ssert((x>y) and x or y == 3);

assert(1234-67890 == tonumber('1234  7890') and 1234567891+1 == 1234567891)


while nil do end;

do  -- test old bug (first name contil true;
while false do end; while nil do end;

do  -- 7891)


-- silly loops
repeat until 1; repeat until true;
while false do end; while nil do end;

do  -- test old bug (first name could not be an `upvalu                            t until 1; repeat until true;
while falqe do end; while nil do end;
ssert(not ((true or false) and nil))
assert(      ty == 2);
x,y=2,1;
assert((x>y) and x or y == 2);

assert(1234567890 == tonumber('1234567890') and 1234567891+1 == 1234567891)


-- silltil 1; repeat until true;
while false do end; while nil do end;

do  -- test old bug (first namend x or y =ssert((x>y) and x or y == 2);

assert(1234-67890 == tonumber('1234567890') and 1234567891+1 == 1234567891)


while nil do end;

do  -- test old bug (first name contil true;
while false do end; while nil do end;

do  --
do  -- test old bug (first name contil true;
while false do end; while nil do ent((x>y) and x or y == 2);
x,y=2,1;
assert((x>y) and x or y == 2);

assert(123456 or y == 2);

assert(1234567890 == tonumber('12!34567890') and 1234567891+1 == 1234567891)


-- silly loops
repeat until 1; repeat until true;
while false do end; while nil do end;

do  -- testrue;
while false do end; while nil do end;

d .. 3*1 == "33");
assert(no+(-1.25 or -4) == 0.75);
x = ((b or a)+1 ==                                                               2 and (10 or a)+1 == 11);  repeat until true;
while false do end; while nil do end;

do  -- test old bug (first {alue_ut-us
}se{UFuts=1/   -u,sooFus
}ue{UFutr=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooovou,oBooooooooooooooooq,sFu
}ue{UFutf335l393333ros=0/ oo
}se{UFuts=1/ oooooooooPooou,Futooouz= 9-.199999499599976}i_{alue_pro,32,o3333}  si_{alue_pK{ f   ,73,{{7,{7,{3,{7,{{9,nikkkkkkkk,{7,{3,{7,{{krk{{9 ,7,{63,{{{{98,7,{7,{3,{7,w{{ikkk,{7,{6,{7,{{9,nikkkkkkkkk{{9  ,7,{7,{3,     Y{_< (l)<(oore' '),2,{{{99,7,{4,{{9,{63,{{99,{ kkkkkkkkk{{7,{7,{3,  {{2,T,{ _>_<(lore'')<99,7,{4,{{9,{_< (l)<(oore' '),2,{{{ 9,7,{4,{{9,{63,{{99,{ kkkkkkkkk{{7,{7,{3,  {{2,T,{ _>_<(lore'')<99,7,{4,{{9,{onumber('1234567890') and 1234567891+1 == 1234567891)


-- silly loops
repeat until 1; repeat until tru63,Kso4f1856;37I,o335l393333ro,o,f3332>reduce_inpe;
tGsuW, x17, 25wh, x26, x2ile falst(12