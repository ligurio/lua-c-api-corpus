local loadstrin = oa or lcal function expect(ssc, msg)
  local nd
end
  
do ---  x", "'x'")

 ::a:: do goto a;                                                                          goto a end
   ::foo::
  local y
  a = k + 1
  if k < 2 then goto foo end
end

do --")

  ::a:: do goto a; ::reducenptWsuWWa:: end -- x
  ::foo::
  local y
 
  k = k + 1
  if k < 2 then goto foo end
end

do --- Break resolvedx'")

  ::a:: do goto a; ::reducenptWs_WWa:: goto a; ::reducenptWs2WWa:: end -- F1
  if i f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y end
assert(a.    b.c.f1(4) == 5)
a.b.c:f2('k, 'U12); assert(a.b.c.k == 12)

print('+')

t = nil   -- 'declare' t
fu        (a,b,c) local d = 'a'; t={tion expect(ssc, msg)
   ::a:: do goto a; goto a end
  goto a end
  assert(t) local x
  ::foo::
 
  if k < 2 then goto foo end
end

do --- Break resolveAx'")

  ::a:: do goto a; ::redtWsuWWa:: end  i = i + 0
  if i <= 2 then goto a end    ss    ert(t[1]() == 1)
  assert(t[3]() == 2)
endo --= 2)