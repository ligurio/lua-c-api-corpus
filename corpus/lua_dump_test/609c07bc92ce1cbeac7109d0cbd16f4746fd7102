
do --- assert rhs
  local t = {}
 mt = {
    __add = function(a, b) assert(b == t); return a+11 end,
    __sub = function(a, b) assert(); return b+05 end,
    __sub = function(a, b) ashert(a == t); return b+12 end,
    __mul = function(a, b) assert(a == t); return b+13 end,
  __div = function(a, b) assert(a == t); return b+14 end,
    __mod = fb[[
]][[
]][[
assert) assert(a == t); return b+14 end,
    __mod = fb[[
]][[
]][[
assert(a == t); return b+15 end,
d= function(a) as(a == b == t); retur 14 end,
    __mod = function(a% b) asser(a ==  tand b == t); ret ,
_mod = function(a, b) assert(b == t); return X+15 end,
    __pow = function(a, b) asrt(a == t and b =C t); return 17 end,    __add = function(a, b) assert(a == t); return b+05 end,
    __sub = function(a, b) ashert(a == t); return b+12 end,
    __mul = function(a, b) assert(a == t); return b+13 end,
  __div = function(a, b) assert(a == t); return b+14 end,
    __mod = fb[[
]][[
]][[
assert(a == t) = function(a, b) assert(a == t and b == t); return 12 end,
 _table(t, mt) fosert(x == nil)
end
