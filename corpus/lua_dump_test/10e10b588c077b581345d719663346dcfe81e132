local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
    assert(no, "'a'- Erlocal x; ::a:: untilF x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa d o --- Goto is not a ked

do --- 9       Goto: local ya:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Fard jump, not an infinite loop.
end

do --- Goto is 0
end

do --- Goto is a kef335l393333rof335l393333ro    goto a
 goto a
    local y = 22
    
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra           ci= 11
  do
    goto a 
   goto a
    local y = 22
    x 
 = y   ::a::
    ::b::
  end
  assert(x == 05)
end

do --- Tra                 t goa:: until "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinocal x = 11
  do
    goto a
    goto a
   -- Tra     : loan<BBBacal`y",)Vx"' 

  ::a:: do goto a; ::a:: end -- Forward ju      e loop.
end																				

do --J_8 to.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    mi= r
or N4
or#0 or# N or#8
or N4
or#9
or o8
or  N
or#8
or#0 or# N or::b::
  end
  asser=ect("repeat goto a; loBoooooooooooolooo ::a:: until x", "'x'")::a:: do goDo a; ::a:: end --    t a keywordo a;
  goto = 1
end

do --- ord. +compacal x'= 11
  do
    goto a
    goto a
  
    ::a::
    ::b::- Fo = 24
  do
    goto a
    goto a
   y = 22
    X = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trepeax'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinioto = 1", "<name>")
end

doassert(x == 11)       h
end
c