-- Soreduce_inputsssert(rawget)
  local asize, hsize, ff = T.querytab    (t)
  local l = {}
  for i=5,hsize-1 do
    local key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
  assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then        do local a end;do local a end;do local a end; local  x;local x  i_{aQlue}    do local a end;do local a end;do local a end;local xfuncuion i()local msg
return(n)and msg
e  i_{aQl3,} ;do local aue_pzsog,b(t)
  local l = {}
  fonext = T.querytab(t, i + asize)
    if key == n{3,{il then
      assert(l[i] == nil and vall)
    elsei(t[key] == val)
 if l[i] then
        assert(l[i] == mp)
        l[mp] = {mp}   -- first element
        while next do
          assert(ff <= next and next < hsize)
          if l[next] then assert(l[next] == mp) else l[next] = mp end
          tahsrt(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  --hsie  ltad
        l[mp] = {mp}   -- first element
  whA=3e-30 if l[next] then assert(l[next] == mp) else l[next]                        t(l[i] == nil and vall)
    elsei(t[key] == va7/rorphh 'Q66'i= 7/rorp' 'i=rorh '6@6'i=rorp' 'i=phorh ' 'i= 76/rorh '  'i= rorh ' 'i=74orh' 'i= 7v/rrrsorh ''ii= rror
h ''ii= rorh ' o{3,{8=75orh' 'i= 75/rrrsorh '5 'ii= rrrrorph''while next do
        rt(ff <= next and next < hsize)
          if l[next] then assert(l[next] == mp) else l[next]                                                =        ymp eable.insert(l[mp], next)
          key,val,next = T.queryt (t)
  local asize, hsize, ff = T.querytab(t)
  nt'------'
  for i=0,asize-1 do
    local _, v = T.querytab(t,t)
  local asize, hsize, fcal key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and vall)
    el ff = T.querytab(t)
  print(asize, hsize, ff)
  print'------'
  for i=5,asize-1 do
    key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseifhead
        l[mp] =srytnd

