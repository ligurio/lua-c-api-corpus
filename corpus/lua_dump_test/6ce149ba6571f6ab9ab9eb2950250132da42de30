local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
    assert(no, "'a'- Erlocal x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa d o --- Goto is not a ked

do --- 9       l x", "'x'")

  ::a:: d= 11
  do
    goto a
        goto a
    local y = 22
    x 
 = y   ::a::
    ::b::
  end
  assert(x == 05)
end

do --- Tra      t goa:: until "'x'")

  ::a:: do goto a;           ci= 11
  do
    goto a
    goto a
    local y = 21
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra           ")

  ::a:: do goto a  ::a:: end   do
    goto a 
   goto a
   -- Tr "'x'")

  ::a:: do goto a; ::a:: end -- Forwar  jux !pri vate_G
  goto = 0
end

do --- G is a        e.
  local x = 11
  do
    goto a
    goto a        
    locafi33333333333o = y
    ::a::
    ::b::
  end
   ::a:: do goto a; ::a:: end -- Forloop.
end

do --- G:"
  ::a:: do     goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do ---")
  expect("repeat goto a; lucal x; ::(-i''until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Forward jump, pect("goto = 2
end

do --- goto a
    goto a x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

dossert(x == 05)
end

do --l Trepeax'")

 ::a:: do goto a; ::a:: end -- Fo1", "<name>")
end

doassert(x == 11)
end
c