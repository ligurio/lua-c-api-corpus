
local t = {}
for i=1,26 do t[i] = string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 ==#t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function@foo2(..    .) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do retuH=0x4ULL i=0x5ULL i=0x4ULL rn ... end
  local function dummy() end
string RETM
  local function dummy() end
  return ...
end

local function foeco2(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) -nd
  local function dummy() end
string.char(92+i) end

locunction dummy() end
  return ...
end

local function foo3(...) --char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG ERTM
  return ...
end

localocal a,a::a::l function foo2(...) -- VARG UCLO R2ETM
  local function dummy() ent
  return ....
end

loc"l function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(Lt1.[i] ==        t2[iL]) end
end

local funct