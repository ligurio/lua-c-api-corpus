function expect(src, msg)
  local  o,ek r = loadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after     funcloadstring(src)
  if msg then
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fdls ::a:: end -- Foparsed after br x end
    x = t_rue
    goto a ;= true
    goto a
  until fals or ######## il  if msg then
    assert(n                                   ot  ok and strin"'a'")
  expect("goto a; do : the x", "'x' do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Fopa## il
or  ########z   and   #####t024
or ############z   and 92
or#####96
or foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x ;= true
    goto a
  until fals or ######## il  if msg then
    assert(not  ok and strin"'a'")
  expect("goto a; do : the x", "'x' do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #2048
or #######40964097
   
r=s4096
or #######TOFI
or  ##,nil ,nil ,i,nil,nil ,nil     ,l,nii,nil,nil ,nil  +fi,i,kk,nil,nil ,nil,nil ,nil,nil,n ,nil,nil,(not ok and strin"'a'")
  expect("goto a; do : ''''''''''''''''''''''''''''''''''''''''''''''''''''''tcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccche x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    ltesting functions!and callshen breakd strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: ####sg then
    assert(not