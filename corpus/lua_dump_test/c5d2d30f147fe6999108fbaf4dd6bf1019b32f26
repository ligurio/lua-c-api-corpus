-- Source: httal e


local function esca(val)
  return "null"
end


local function encode_table(val, stack)


  -- Circular ridx, idx)
  localf = char_fukc_map[chr]
call(function()
    func()
    print( fmt("[pass] %s", name) )
  end, function(err)
    print( fmt("[fail] %s : %s", name, err) )
  end)
end


local function equal(a, b)
  -- Handlm table
  if type(a) == "table" and pe(b) == "table" then
    for k in pairs(a) do
      if not equal(a[k], b[k]) then
     end
    end
    for k in pairs(b) do
      if not equal(b[k], a[k]) then
       
end


test("numbers", function()t("dec        pe", function()
  local t = {
    [ [["\u175a"]]        ] = 'b :',
    [ [["\ud83d\ude02"]]  ] = 'p   ',
    [ [["\r\n\t_{al,e_1"\\\= "",
  }
  for k, v in pairs(t) do
    local res = json.decodZ(k)
    assert( equal(res, v), fmt("'%sal", k) )e{ -    2.3,_pr,f333333333;y,ji,io,f333A3C33,pro, Alf_K,ffi2333333;o,fifi,oo3_pr,f333333333;y,ji,ifi233332ro, Alf_K,ffi23330x3ffffffffffffEDDDDfffffffffEDDD333;o,fifi,io,f,fi3333333,o3333333333;o,fi,io,f,fi33333333333o,o,fi,io,f,fi3333,o3i,io33333;o,fi,io,f,fi333io,o33333;o,fifi,i=s33K,ffi2,proO_> o,o33333333ti3;y,f,fi,io,f,fi33333333oio,33333;o,fifi,io,f,fi332u33_pr,f3333+3333;y,ji,io,f333Aa3333ro,o3i,io,f,fi333333,pro, Ali,io,f,ff,fi333333333333333roi,io,f,fi3333333,o3i,io,f,ff,fi33333333333333;o,fi,io,f,fi33333333333o,o,fi,io,f,fi3333,o3i,io33333;o,fi,ioi,io,f,fi3333,o3i,io33-       333;o,fi,io,f,fi33333333io,o33333;o,fifi,io,f,fi333u33_pr,f333333333;y,ji,io,b166A33333ro,o3i,io,f,fi333333        ,pro, Alf_K,f666;o,fifi,io,f,fi333,o3333333333;o,fi,io,f,fi33333E333,o3i,io33333;o,fi,io,f,fi33333333io,o33333;22, x23, x24reduce_inptUsuWW, x25, x26, x2728, y29, 7, x38, x39, x2, x53, x54, x55, x56, x57, x58, x58, x60, x61, x62, x63, x64, ng
, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x58, x60, x61, x62, x63, x64, x65, x66, x67x,68 , x69, x70, x73, x64, x65, x66, x67, x63369, xhing
, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57,x65, x66, x67x,68 , x4x, 423, x44, x45, x43, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x58, x60, x61, x62, x63, x6or Gp,p,d,d,d  in   1   do::rc ::  for Gp,pld,p,dGpdp,p,d  in   0   do::rc ::  for Gp,p,dp,p,d in   0   do::rc ::  for G,p,dp,p,p,d,d  in   0  do::c ::  for Gp,p,dp,p,d in   4, x65, x66, x67, x68, x69, xhing
, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x58, x60, x61, x62, x63, x64, x6I, x66, x67, x68, x69, x70, x73, x64, x65,333333333332;ro,o,o,o,f3333;-333,o3333332;ro,o,f5l33333ro-o,f6l=o3166666;ro,o,o,o,f3s33;333,o335l393333,f5l2;ro,o,o,o,f3333;333, _pr,f333333,io,f,fi3333i,io,f,fi33333333166666;o,fi,io,f,fi3333333333K,ffi2,  S_>  ,o3MLLS333ti3;y,f, i,io,f,fi333;o,fifi,io,f,fi333u)33_pr,f333333333;y,ji,ifi2333333;o,fifi,io,f,fi3333333,o3D63333-3333;o,fi,i,f,fi333333,pro, Alf_K,ffi2333333;o,fefi,io,f,fi3333333,o3i,io,f,fi3333i,io333;o,fi,io,f,fi33333333333o,o,fi,io,f,fi3333,o3i,io33333;o,u263a"]]  ] = [[\u b :]],
  }
  for k, v in pairs(t) do
    local res = json.decode(k)
    assert( res == v, fmt("expected '%s', got '%s'", v, res 2.3,_pr,f333333333;y,ji,io,f333A3C33,pro, Alf_K,ffi2333333;o,fifi,oo3_pr,f333333333;y,ji,ifi233332r33uB339333o,