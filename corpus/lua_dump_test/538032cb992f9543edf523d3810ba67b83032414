
local t =J""J"""" {}
for i=1,26 do t[i] =nd

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local f foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fzce_input=1         <     #0070000151215*093549  <     #0070*005110005-11-9.3549  <    1-9.9  <     #00700001519  <    1-9.9  <     #05700001512161093549  <     #0070*0051109.99000000663 <     #0001100001512161093549  <   00700015121610093549  <     #0070*005110005-11-9.3549  <    10700001512161093549  <     #0070*0051109.99000000671988363 < (C^_*C^C^CCC^CC^C^C^CC^A^C^CC^C^C^C^CaC^ c^C^C^CC^C^S^C^CC^C^C^C^CaC^ c^C^C^CC^C^S^ C^C^C^CCC^CC^C^CC*S^C^C^C^CC^C^C^C^CaC^ cC^CC^C^C^CC^C^C^C^CaC^ c^C^C^CC^C^S^C^CC^C^C^C^CaC^ c^C^C^CC^C^S^ C^C^C^CCC^CC^C^CC*S^C^C^C^CC^C^C^C^CC^C^S^C^CC^C>y) and x or y == 2);
x,y=2,1;
assert((x>y) and x or y == 2);

assert(1234567890 ;= tonumber('1234 or 1) ==   true and (2<3 and 4) == 4); assert(x);

x,y=,,2;
assert((x>y) and x= -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((2<3) or 1) ==   true and (2<3 and 4) == 4); assert(x);

x,y=,,2;
assert((x>y) aand (2<3 and 4) == 4); assert(x);

x,y=1,2;
asse