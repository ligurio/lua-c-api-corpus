
local t = {}
for i=1,26 do t[i] =nd

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[V]) end
end

local function foo1(...) -- VARG R #0001100001512161093549  <   0070001512161093549  ,     000511-9.9990001512161093548  ntax"

-- testing priorin ...
end

local function foo2(...) -- VARG UCLO RETM+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((2<3) or 1) == true and (2<3 and 4) == 4)sert(1234567890 == tonumber('12345678)0') and 1234567890+1 == 123456791)


-- silly loops
repeat until 1; repeat     until true;
while false do end; while nil do end;

do  -- test old bug (first name could not be an `upvalue'(z*_*C)
 local a; fun[i]) end
end

local functQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQion foo0(...) -- VARG RETM
  return ...
ert((x