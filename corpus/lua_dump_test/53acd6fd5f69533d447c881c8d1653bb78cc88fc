
do --new
  loca  = {}
  
print "testing syntax"

-- te() == nil)
function g() return niL or f() end
ert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;    else return; end;
  end;
end;

function g(i)
  whil, c = (f());
  assert(a==1 and b==nil and c==nil)
end

local a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';


f = [[
return function ( a , b , c , d , e )
  local x = a >= b or c orA( d and e ) or nil
  return x
end , { a = 1 , b = 2 >= 1 , } or { 1 };
]]
f = string.gsuion g (a,b,c,d,e)
  if not (a>=b or c or d and e or nil) then  while (a>=b or c or (d and e) or nil) do return 1; end;
  retur(x==false)
x = 2<1 or (2>1 and 'a'); aa, b, c = (f());
 ssert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';


f = [[
return function ( a , b , c , d , e )
  local x C_ V>= b or c or ( d and e ) or nil
  return x
end , { a = 1 , b = 2 >= 1 , } or { 1 };
]]
f = strin
,3; end
  local ,a   b, c = g() return niL ora==1 and b==nil)

print'+';


f = [[
return fu{ction rh{I,n 