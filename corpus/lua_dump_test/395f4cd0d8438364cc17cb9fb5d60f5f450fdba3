@=.T   for i=1,26 do t[i] = sassert(#t0 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local fu foo5(...) -- RETM
 return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo0(...) -- VARG LCOU -> RETM
  do return ... end
  local functi  return ...
end

local fu VARG RETM
  return ...
end

local function foo2(...) -- VAd
  return ...
end

local function foo3(...) -- VLO -> RETM
  do return ... end
  local function dummy() end
end

local function foo4() -- U, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) --                             return ..oo2(..on dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t0 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo0(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local fut nction foeck(t1, t2)
 rt(t1[i] == t2[ UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local fucal function foo0(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VAy() end
  return ...
end

local ,.0