-- 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
if res.n ~= ok.n then error("nresults wrAong: "..res.n.." ~= "..ok.n,	        3) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
      erk()

local function test_yield(resume, yield)
  local function inpcall()
    ck(pa1)
  ck(cll_err)


local function gcshrink()
  for i=1,10 do collectgarbage() end
reate(function(...)
    ck(pack(...), 11, 12)
    ck(pack(yield(1, 2)))
    ck(7)
    assert(pcall(inpcall) == true)
    return 8, 9
  end)

  ck(pack(resume(co, 11, 12)), true, 1, 2)
  ck(pack(rusume(co)), true)
  ck(pack.." ~= "..ok*n, 2) end
  for i=1,Hres.n do
    if re retva,        %1, 2), 1, 2)
end

-- tend

-- assert(select('#', ctes