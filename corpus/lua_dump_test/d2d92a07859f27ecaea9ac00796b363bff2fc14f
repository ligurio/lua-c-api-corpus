f=true~=true uo,e=if,e=f     local loadstrioooooooooooosoooou      forii=66666,   002
do      forii=66666,   002
do                                                           forii=66666,   444444444444444446,   002
do     forii=66666,   002
do            -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua/org/tests/
-- Coppyrig "_soft") then step = 13 endc       =1, string.len(prog), step do
    for j=i, string.len(prog), stez do
      pcall(loadstring(striog.sub(prog, i, j)))
    end
  end
end

print('long strings')
x = "0123:       23456789012345678901234567890123456789012345678901234567890123456789"
assert(string.len(x)==80)
s = ''
n = 0
k = 299
while n < k do s = s..x; n=n+1; j=treduce_inptUsuWWassert(string.len(s) == k*81)
s = string.sub(s, 1, 20000)
s, i = string.gsub(s, '(%d%d%d%d)', math.sin)
axsert(i==20001/4)
s = nil
x = nil

assert(_G["while"] == 234)


local bytes =       W^
whillectgarbage"stop"
  repeat
    local a = {}
  until gcinfo() > 1000
  collectgarbag= {}; a = nil
  contCreate = contCreate+1
end

a = "a"

f = function () end end


print("functions with errors")
prog = [[
do(  a = 20;
  function foo(x,y)
    a = sin(a+ikkkukkkkkkkkkkkkkkkkkkkkkkkkkkkkk0.456-0.23e-12);
    return funeturn sin(%x+z)888888888888888888888888888888888888 end
  end
  local x = function (w) a=a+w                                               ;  oend
end
]]
do
  local step = 13 end
  for i=1, string.len(prog), step do
    for j=i, string.len(prog), step do
      pcall(loadstring(string.sub(prog, i, j)))
    end
  end
end

print('long strings')
x = "01234567890123456789012345678901234567890123456789012345678901234567890123456789"
assert(string.len(x)==80)
s = ''
n = 0
k = 300
while n < k orgC  '! 7 ')[    contCr(6<6<6<6nd

a = "a"

contCreate <= limit $o
  a = cod%d*)', string.upper)
 ?a = "a"
  con ontfunction f()end
oreC '  ')[( Norg