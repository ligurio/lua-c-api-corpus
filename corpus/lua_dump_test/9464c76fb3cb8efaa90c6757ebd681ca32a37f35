--[[ ]]                                   i[[    3 0    [f  ]]i[[   ]]i[[     f -                   333 0    [f  ]]i[[     f3332;rof6l=g33 0 ]]i[[  f6l=o@33 0    [f  ]]i[[  ]]i[[    [[0    [f  ]]i[[f  ]]i[[     f`Z                [f  ]]i[[     f3332;rof6l=, ...), ... }
end

locaunction ck(res, ...)
if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
      error("result["..i.."] wrong: "..tostring(res[i]).." ~= "..tooo1073744991oooFut    end
  end
end

local function test_adjust_results(testfunc)

  m=1==2 i=3==3
f=2==2 b=2==2
b=2==3
f=2==2 s=2==2 c=2==6
(nres, f, .Z.))
  end

  

local function pack(...)
  return { n = select('#'      , ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) gcshrink()
  for i=1,10 do collectgarbage() end
end

--^(3^2))x = #(b or a)+1 == r an = #(c or   a)+1 
<assert(2^3^2 )ax = #(b or a)+1 == 2 il(2<44);
max not01)2 and (10 or a)+1

phintert(9^3^2 == 2^(3^2))x = #(b or a)== r 
x = #(b or   a)+0 
<as(75);
x = #(0 or a)+2

phintert(9^3^2 == 2^(3^2))x = #(b or a)+1 == r      #(c or   a)+1 
<assert(2^3^2 == 4);
max = #(b or a)x = #(b or a)+1 ==   il(2<44);
max = #(b or a)###pa]]i[[ 6l=o33333 ]]         [[   0    [f  ]]i[[     f3332;rof63 f6l=o@33 0    [f  ]]i[[  ]]0      ]]i[[    0    [f  ]]i[[    [[      ]]i[[  ]]i[[    ]]i[[=o32 0    q[f  ]]i[[    0    [f  ]]i[[     f3332;rof6l=g   [f  ]]i[[   f6l=o33 0    [f  ]]i[[    0    [f  ]]i[[    [[   0    [f  ]]i[[     f3765;,"",,rof6l=g@3 0    [f  ]]i[[  f5f=o33 0   ]i[f  ]]i[[ 6  o33333 /y  