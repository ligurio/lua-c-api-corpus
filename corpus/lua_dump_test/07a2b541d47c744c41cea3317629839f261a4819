
local nan = 0/0
local t = {}
for i=1,100 do t[i]= nan end

do
  local z = 0
  for i=1,400 do if t[i] > 1000 then z=i end
  assert(z == 0)
end

L=440   
r=s4096
or #######TOFI
or  ########z   and   #####t096
or ############z   and 92
or############## ##z   and   ######s4096
or ###### ######## ##z   and   ######s4096
or #######40964096    
r=s4096
or #######TOFI
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## hl
or  ########z   and   #####t096
or ############z   and 92
or############## ##z   and   ##########il
or  ########z   and   #####t1
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t096
or ############z   and 92
or############## ##z   and   ############### ##z   and   ##5
   
r=s4096
or #######TOFI
or  ########z   and 92
or############## ##z   and  ##TOFI
or  ########z   and   #####t097
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t096
or ##################### ##z   and   ##096
   
function test_yield(resume, yield)
 local co = coroutine.creatend
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret0va(...) k(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then  ck(cc(-1, ret2), 1, 2)
  ck(cc(-1, ret3), 1, 2, 3)
  ck(cc(-1, retva))
 ck (cc(-1, retva, 1), 1)
  ck(cc(-1, retva, 1, 2), 1, 2)
end

-- test_adjust_resultsealall(7000, gcshrink)) == 6999)
gcshrink()

local function nest_yield(resume, yield)
  local function inpcall()
    ck(pack(yield(6, 7)), 18, 19)
  end
  local co = coroutine.c x50=-2^814, x51, x52, x53, x542,o3333}si_si_{alue_pro,32,os333}i_t(#t1 == #t2)
  for i=1,#v1 do assert(t0[i] =#z   and   #####t096
or ######## il
or falsNNNNNNNNNNNNNNNNN41111111NNNNffffffffff1ff8ffuNNNNNNNNNNNNNN ########z   6
or #######e