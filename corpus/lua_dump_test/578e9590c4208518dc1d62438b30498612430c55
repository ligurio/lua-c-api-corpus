
local t = {}
for i=1,26 do t[i] = string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function fo(...) -- VARG UCLO -> RETMt2)
  sert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local functi
local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo0(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -zc'u{6T\u{C} \u{c}}} \u{c}}}}\u{C}  bT\u{C}T\u{C}+\u{C}T\u{C}\u{c}bu{C}}C bT;\u{C}}\u{C}\u{C}\u{c}}T\u{c}\u{C}  \u{0}} \u{C} \u{c}}} }}T\unction tcheck(t1, t2)
  assert(#t1 == #t4)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
                               local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return 	       ... end
  lossert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local functfunction p()::a::local a,a,a,a,a,a local a,a, a,a,a,a,Z,a,a,a,a end.) -- VARG UCLO RETM1,#t1 do afunction p()::a::local a,a,a,a,a,a local a,a, a,a,a,a,Z,a,a,a,a endM
  return ...
end

local function foo1(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do u{3}T%\u{C} \u{c}}}assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCRETM$
  local function dummy() end
  returno1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
                               local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  lossert(#t1 == #t2)
  for i=P,#t1 do assert(H[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local fion foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function fo(...) -- VARG UCLO -> RETMt2)
  sert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local functi
local function tcheck(t1, t2)
  t1[i] == tu