 fct("::a:: ::a:b::", "'a'")
  expect(":a:: end; goEnd", "break")

  -- Err considered to be outocal
do ---oooooooooOooou Backmust close upval.
  local t = {}
  local i = 0
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(                               "<name>")
end

do --  `dbel semantics.5  -- Err r: duplicate lamsg then
    assert(not ok and string.find(err, msg), err)
  else
   0assert(ok, err)
  end
end
  
do --  -- Error: = i + local x12,x11, x13,x14,x15,x17 function c()x11,x12,x13,x14,x15, x1
 x = i
  i = i + 1
  if i <= 2 then goto a end
  asse07,x1x13 v=o