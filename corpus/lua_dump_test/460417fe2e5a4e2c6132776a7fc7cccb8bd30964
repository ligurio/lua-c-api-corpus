 fct("::a:: ::a:b::", "'a'")
  expect("do ::a:: end; goEnd", "break")

  -- Err considered to be outocal
do --- Backmust close upval.
  local t = {}
  local i = 1
  ::a::
  loc        [i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(                          "<name>")
end

do --  `d    - Trar, msg), err)
  else
    assert(ok, err)
 on() return x end
  x = i
  i sic got = {}
  local i = 1
  ::a::
  local x
  t[i] i=0/-  2^99l2-8-2-2
local t = {}
for i=1,26 do t[i] = string  for i=P,#t0 do assme(...) -- VARGT V foo
end
                                                                                                                              local function foo1(...)  s{alueooooC33,pr,ffi233o,i,o,_,f;p, H,pC,p,d,oO,i,o,_33roi,io,f,fi3333333,o3i,io,o,r,C,ro,jjjjjjjjjp,fio,o,f_K,ffi0,fo,lap,o,o,i,o,tf670l39333ooou~= -1.9999999919199953}i_{alue_pro,32,o3333}  si_{alue_pK{ f   ,73,{{7,{7,,f,ff,f{3,{7,{{9