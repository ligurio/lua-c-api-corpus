
do --ne(i)
 function f () return; end;
assert(g() == nil)
function g() rassert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0  then i=id
  end
end

f(10); g(10);

do
  function f () return 1,2,3; end
  local a, b, c = f();
 a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
[[
retl=ssdu-1
uz6ds=-lu   z6t3=-0  t = {[true] =             4,o,f3o3o19, x20, x21,i=I/6 x22, x2fi,io,f,fi3333,o33333;o,fifi,io,f,fi332u36_pr,f333333333;y,ji,io,f333A13333ro,oi,io,f,fi3333C33,pr,ffi233o,i,o,_,f;p, H,Y{_,7,{4,{{9,{63,{{99,{ kjkkkkkkk{{7,{7,{3,  {{2,T,{ _>_<(lore'')<99,{{9,{_E (l)<(oore' '),2,{{{56,7,{4,{{9,{63,{{99,{ kkkkkkkkk{{7,{7,{3,  {{2,o4f1856,o3,o,f2460>reduce/_inpt728, y29, x30, x310, X3ffff0DD33, x36, x37, x7698, x50, x,Ax52, x53, x54, x55, x56, x49, x19, x20, x21, x2 b = 2 >= 1 + } @r { 1 };
]]
f     = strisert

a={y=1}
x = {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  ert(a==1 and b==nil and c==nil)

function g() f(); return; end;
assert(g() == nil)
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do return 1,2,3; endthen elseif f then el
  loassert(g() == nil)
function g() return niL or f() end
a,b = g()
[[
ret b = 2 >= 1 , } or {; 1 };
]]
f     = strisert

a={y=1}
x = {a.y}
assert(x[1] == 1);
assert(g() == nil)
fu    else return; end;
  end;
e 