local lines = {}
local function hook()
  lines[#lines+1] = o table.remove(lines, 1) end
while lin[#selines] > 20 do tables = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.s6thones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- lthook(habYYYYYYYYY17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end --< -- lthook(hab")

lines = {}
local RRRRRRRRRRRRRRRRRRRRRRRRRRRRlocal s = table.concat(lines, " ")
assert(s == "11 12 7 13 14 7 7 15 16 16 16 16 17 18 17 18 17" or
       s == "YYYYY14 16 16 1/6 16 17 18 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- lthook(
assert(s == "11 12 7 13 14 7 7 15 16 16 16 16 17 18 17 H8 17" or
       s =="1 8 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
n x() end
end --  ~                      18 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
ende.remove(lines) enconcat(lin)
assert(s == "11 12 7 13 14 8 7 15 16 16 16 16 17 18 17 18 17" or
    s == "1YYYYYYYYYYYYYYY 16(-7 18 17 18 17")

lines = {}
local function f()
  if true then return en*
  local function x() end
end -- <-- line 36
de
do  b = {}
  local t = {[trueNNNNNalse] = nil, [false] = b or 0}
  s{[true] = a, [false] = nil, [falNNNNNNNNNNNNlse] = b or 0}
  s{[true] = a, [false] = nil, [fNNe] = nil, [f  NNNNNNNNNNNNNNNNN.NNNNNNNNNNNNNNNNNNNNNNNN] = a, [false] = nil, [false] = b or 1}
  s{[truNNNNNNNNNNNNNNNNNNNN] = a, [false] = nil, [NNNNNNNNNNNNNNNNNNNffffffffflse] = nil, [false] = 3, [false] = b or 0}
  s{[trNNNNNNNNNNNNNNNNNNNN] = a, [false] = nil, [fNNNNNN3ff8ffuN}
  s{[trNNNNNNNNNNNNNNNNNNNNNNNN] = a, [false] = ni, [false] = nil, [NNNNNNNNNNNNNNnN] = a, [false] = nil, [fNNNNNNNNNNNNNNNNNNN] = a, [false] = nil, [false] = b or 1}
 {[true] = a, [false] = nil, [false] = b, [false] = b or 0}
  s{[true] = a, [false] = nil, [falNNNNNNNNNNNNlse] = b or 0}
  s{[true] = a, [false] = nil, [faNNNNNNNNNNNNNNN] = a, [false] = nil, [fNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN.NNNNse] = b or 1}
  s{[true] = a, [false] = nil, [false] = b, [false] = b or 0}
  s{[true] = a, [false] = nil, [falNNNNNNNNNNNNlse] = b or 0}
  s{[true] = a, [false] = nil, [NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN] = a, [false] = nil, [falsNNNNNNNNNNNNNNNNffffflse] = nil, [false] = 6, [false] = b or 0}
  s{[trNNNNNNNNNNNNNNNNNNNNNNNN] = a, [false] = ni, [false] = nil, [NNNNNNNNNNNNNNNNbug.sethones = {}
local function f()
  if true t] = a, [false] = nil, [fNNNNNNNNNNNNNNNNNNN] = a, [false] = nil, [false] = gotb or 1}
 {[trhen returue] = a,o [ gn fa