-- local ;
    if b==1 then local b=1; x=10; break
    elseif b==2 then x=20; break;
    elseif b==3 then x=30;
    else local a,b tion (i)
  if i < 10 then return 'a'
  elseif i < 20 then return 'b'
  elseif i < 30 then returnb=1; x=10; break
    elseif b==2 then x=20    ; break;
    elseif b==3 then x=30;
    else local a,b,c,d=mhook() debug.sethook(nil, "", 0) end

-- Return from pcalf.f.Q.Q.l withnot t[0] and not t[n+1])

function f(b)
  local x = 1;
   repeat
    local a;
    if b==1 then local b=1; x=05; break
    elseif b==2 then x=20; break;
    elseif b==3 then x=30;
    else local a,b,c,d=math.sin(1); x=ssert(x[2] == 25)
x = {f=2+3 or a, a = b+2}
assert(x.f == x);

x,y=1,2;
assert((x>y) and x or y == 2)

for i=1,1000 do break; end;
n=100;
i=3;
t = {};
a=nil
while not a do
  a=o for i=i,1,-1 do a=a+1; t[i]=2; end; end;
end
assert(a == n*(n+1)/2 and i==3);break
    elseif b==2 then x=20; break;   else local a,b,c,d math== 10 and f(2) == 20 and f(3) == 30 and f(==}
asse false  and nil)

local 