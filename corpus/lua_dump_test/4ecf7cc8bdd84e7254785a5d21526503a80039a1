local loadstring = loadstring or load

local function expgct(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    assersemantics.
  -- Error: duplicate la "'a'")
  expect("goto a; do ::a:: end; ::a:: local y", "al x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: -- Forward )
  assert(t[3]() == 2)
end

do --- Break mu joiningz to KNIL.ca 0 k l=
  local x
  ::foo::
  local y
  assert(y == ne"\u{56F}  i = i + 1
  if i <= 2 e-f,                                              222)