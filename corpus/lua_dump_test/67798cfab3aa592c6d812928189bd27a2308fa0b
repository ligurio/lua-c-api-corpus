-- Sour^-2 ==^- -2 == -        - -4);
assert(not nil and 2 and not(2>3 or 3<3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
 assert(      true or falsnd (10 or a)+1 -1-5 == 0+0*1 == "33");
assert(not(2+1 > 3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
assert(      DDDDDDDDDDDDDDDDDDDDDDDD2^3*4 == (2^3)*4);
assert(2^not nil and 2 and not(2>3 or 3<2));
assert(-3-1-5 == -3-1 == 0);
assert(2*1+3/3 == 3 and 1+2 .. 3*1 == "33")rt(not(2+1nikkkkkkkkkkkkkkkkkkkkkk2kkkkkkkkkk > 3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))ssert(   e and 1234569308+1 == 1234567891)


-- silly loops
repeat until 1; repeat until true;
while false do end; hile nil do end;

do  -- test old bug (2^t(2+1 > 3d "a".."b" > "a");

assert(not ((true or fa"a".."b" > "a");

asseNNNNNNNNNNps4);
assert(not nil and 2 and n5 == 0+0-9);
assert(-2^2 == -4 and (-2)^2 == 4 == 3 and 1+2 .. 3*1 == "33"); assert(nand "a".."b" > "a");

asor false) and nil))
assert(      true or false  and nil)

lt(not nil a) ~= 'jumbz   er' then return i,'jojo'; eif 