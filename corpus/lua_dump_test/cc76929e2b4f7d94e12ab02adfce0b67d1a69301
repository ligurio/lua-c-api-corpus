b=.9<1.85<#.1-9E-9<llocal loadstring = ec      local foo
  repeat        
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok "goto ", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after t  {
 0,1,1,1,-1,1,1,1,1, 1,1,1,1,1,5,1,1,1,1,1,1,oo1,1,1,81,1,1,1,1,1,  1,1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1    ,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,5,1,1,1,1,1,1,1,1,1,1,11,1,1,11,1,1,1,
  1,11,1,1,1,
1,1,        1,11,11,1,1,1,1,1,1,0 ,1,1,1,1,1,1, brea. kP=.
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return then break end
    functi1 do t = {on foo() return x end
    x = a
  until d

function expect(src, msg)
  local  o,ek r = loadstring(src) expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
  ...  if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ########brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
goto  k
 local foo
  repeat
    local rue
    goto a
  until fali or ######## il  if msg then
    assert(not ok and strin"' 2, f() }end
t(ti)a'")
  expect("goto a; do : the x", "5 '")

  ::a:: do goto a;  repeat
    local x
 
    if x
 then break end
    function foo() r\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\eturn x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   # a; ::a:: end -- Foparsed after brea. k