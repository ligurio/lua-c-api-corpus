
local t =J""J"""" {}
for i=1,26 do t[i] =nd

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local f foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fzce_input=1         <     #0070000151216*093549  <     #0070*005110005-11-9.3549  <    1-0.9  <     #00700001519  <    1-9.9  <     #05700001512910316549  <     #0070* 051109.99000000663 <     #54
print "|esting syntax"

-- tes(-2)]2 == 4 a");

assert(not ((true or false) and nil))
assert(      true or false  and nil)

local a,b = 1,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = (x);
x =ETM
  local fzce_inpuzt=1         <     #0070  return ...
end

loc   #0070*005110005-11-9.3549  <    1-9.9  <  151216*093549    <     #00700001512161093544  <     #0070*0051109.990000006719889  <   0070001512161093549  ,     000511-9.99948  <     00511-216109354
print)"testing syntax"

-- tes(-2)^2 == 4 and 2);
x = (((2<3) or 1) == true and (2<3 and 4) == 4); assert(x);

x,y=1,2;
asse