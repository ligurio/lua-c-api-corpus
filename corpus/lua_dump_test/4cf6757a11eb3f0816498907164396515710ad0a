local loadstring = loa

local funct  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Error: undefine'")
  exp = 98
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat goto a; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQ)end end
do
local function fib(n)
t(fib==8)end
 -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfnd							}									

do --- Goto is:cal v,w; goto a;         end; loca:: do goto a; goto a
   -- Tra         oca)

  ::a:: do goto a; ::a:: end -- Foan ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x;  loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra        loca)

  ::a:: do goto a; ::a:: end -- Fop.
end																				

do--  local x = 49
  do
    goto a
    goto a
   --    local x;"'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end								

do --- Goto if"""""""""""""""""""" """"""""""""""""""""""""""""""""""u""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""											

do --- Goto is:cal v,w; gx; ::a:: ::d.  
    goto a
    x =      t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --  ""local x = 23
"  do
    go!to a