b=.9<1.85<#.1-       Ncal loadstring = ec      local foo
  repeat        
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  uafl intls or ######## il  if msg then
    assert(not ok "goto ", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea.  loca
lk foo
  repeat
    local x
    ::a::
    if x then break end
    function  oo() return x en                                     d
  then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not  o"'a'")
  expect("goto a     : the x", "'x' do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = a
  until d

function expect(src, msg)
  local  o,ek r = loadstring(src) expect("goto a; do : the x", "'xl fals or ######## il-- Foparsed after breoo
  repeat
~            +.]+5i    ::a::
    if x then break end
    function foo() retgurn x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and########z   and   #####t048
or ############z   and 92
or###        ###40964097
   
local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
 until fals or ######## il
or+5 q p  ########z   a'x'")

  ::a:: do goto a; ::a:: /fbbbb,ocal