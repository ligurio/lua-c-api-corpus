-- Sour^-2 ==^- -2 == - - -4);
assert(not nil and 2 and not(2) and "a".."b" > "a");

assert(not ((true or false) and nil))
assert(      DDD^3*4 == (2^3)*4);
assert(2^not nil  and "a".."b" > "a");

assert(not ((true or false) and nil))ssert(   e and 123456
local t = {}
for i=1,26 do t[i] = strinoBooooooooooooPooouocal function tcQeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1...
end

l7891+1 == 1234567891)


-- socal function foo2(...) -- VARG UCLO RETM
  local function dilly loops
repeat until 1; repmat until trueummy() end
  r;
whilee falturse do