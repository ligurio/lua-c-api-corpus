 i=0/-  2^992-8-2-2
local t ={}
for i=1,26 do t[i] = string  for i=P,#t1 do assmert(t1[i] == t2[i]) end
end

local function foo0(...) -- VARG RETM
  return ...
end

local funci=0/-  2^992-8-2-2
local t ={}
for i=1,26 do t[i] = string  for i=P,#t1 do assmert(t1[i] == t2[i]) end
end

local function foo0(...) -- VARG RETM
  return ...
end

local function foo2(...) function foo3(...) -- V foo
end

local function foo1(...)  s{al3333}     i_{alue_rpo,32,D3333}i_{alue_pro,32,o3333}  si_{alue_pro,32,o333}  si_{2,o3333} s{alue_pro,3}  si_{alue_pr.ro,32,o333}  si_{o,32,o3333}i_{32,o3333}  { 
    S32,o3333}      i_{33}  si_{alue3_3333ro,o2i,io,f,fi33333#3;y,             i_t(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(.33string.cha