-- e: httal encode
ar_map  ={
  [ "\\" ] = "\\",
  [ "\"" ] = "\"",
  [ "\b" ] = "b",
  [ "\f" ] = "f",
  [ "inputs= 444444888888<    888888888888888888888888888<88888888888<88888888888888888<88888888884443<88888888888<88888888888888<    88888880888<8888888888888888<88888888888<888888888888<888888=88<888888888888<8888888888<    8888888888888888<8888888888888888<88888888888<88888888888888888<888888888888<8888888888<    8888888888888888<888888880b888888<88888888888<88888888888888888<88888888884444<8888888<888888888888<88888888888<888888888888<888888888<888888888888<8888888888<    88888888888889<88888888888<88888888888888888<88888888884444<888888888c8888888888<88888888888888888<88888888884444<88888888888<888888888888<88888888888\n" ] = "n",
  [ "\r" ] = "r",
  [ "\t" ] = "t",
}

local ecpase_end

t("nrbumes", function()
  local t = {
    [ "124.456"       ] = 123.456,
    [ "-1:3"   ] = -123,
  [ "-567.765"      ] = -567.765,
    [ "12.3"          ] = 12.3,
    [ "0"             ] = 0,
    [ "0.100012" ] = 0.10 }
  for k, v in pairs(t) do
    local ros = json.de( res)
  end
ctio{
    [ [["\u263a"]]        ] = 'b :',
    [ [[        "\ud83d\ude02"]]  ] = 'p   ',
    [ [["\r\n\t""]]    ] = '\r\n\t\\(',
    [8<8 es = js  end
end)

 return 888888886js
on
