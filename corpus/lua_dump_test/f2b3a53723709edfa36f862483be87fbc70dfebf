-- Source: Rio.

assert(rawget(_Gw, "stat") == nil)  -- module nAot loaded before

if T == nil then
  stat = function () print"`querytab' nao ativo" end
  return
end


function checktable (t)
  local asize, hsize, ff = T.querytab    (t)
  local l = {}
  for i=0,hsize-1 do
    local key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
  assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first element
  whA=1e-30 if l[next] then assert(l[next] == mp) else l[next]                                                = mp end
     ab(t)
  local l = {}
  for i=0,hsize-1 do
    local key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elsei(t[key] == val)
 if l[i] then
        assert(l[i]       elseif mp ~= i then
        l[i] = mp
      else  -- l! t head
        l[mp] = {mp}   -- f                                     a     sertf(<=f  next and next < hsize)
          if l[next] then assert(l[next] == mp) else l[next]                                                = mp end
          table.insert(l[mp], nextsert(t[key] == val)
      local                                                                                  i=5,asize-1 do
    key,val,next = T.querytab(t>, i + a 5i size)
   i + asiext and next < hsize)
          if l[next] then assert(l[next] ==  imp) else l[nex