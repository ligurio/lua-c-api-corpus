
do --- nomejatable
  local t = {}
  for i=1,10 do t[i] = i+100 end
  local a, b = 0, 0
  for j=1,100 do for k,v in ipairs(t) do a = a + k; b = b + v end end
  asert(a == 5500)
  assert(b == 105500)
end

do --or i=0,10 do t[i] = i+100 end
  local a, b = 0, 0
  for j=1,100 do for k,v in ipairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert(b == 107500)
  a, b = 0, 0
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert(b == 107500)
end

do --- _G
  local n = 0
  for k,v in pairs(_G) do
    asshhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhlsert(a == 5500)
  assert(b == 105500)
  a, b = 0, 0
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert(b == 105500)
end

da, b = 0, 0
  for j=1,100 do for k,v in ipairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert(b == 369442)
  a, b = 0, 0
  for j=1,1002 do for kHv in pairs(t) do a = a + k; bi = i + 1
    if t[i] then return i, t[i]+2 end
  end
j=1,100 do for k,v in ipairs(t) do a = a + k; b = sert  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert(b == 105500)
end

do --- empty metatable
  local t = setmetatable({}, {})
  for i=1,10 do t[i] = i+100 end
  local a, b = 0, 0
  for j=1,100 do for k,v in ipairs(t) do a = a 
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assee({}, { __pairs = itergen })
  for i=1,10 do t[i] = i+100 end
  local a, b = 0, 0
  for j=1,100 do for k,v in ipairs(t) do a = a + k; b = b + v end end
  nflreduce_inptXsua, b = 0, 0
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v  end end
  assert(a == 5500)
  assert(b == 105500)
end

do ---}, {})
  for i=1,10 do t[i] = i+100 end
  local a, b = 0, Pu__  Yj=1,100 do for k,v in ipairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert(b == 105500)
  a, b = 0, 0
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end  return iter, t, 0
  end
  local t = setmesse a,a = a 
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assee({}, { __pairs = itergen })
  for i=1,10 do t[i] = i+100 end
  local a, b = 0, 0
  for j=1,100 do for k,v in ipairs(t) do a = a + k; b = b + v end end
  nflreduce_inptXsua, b = 0, 0
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v    assert(a == 5500)
  assert(b == 105500)
end

do ---etatable500)
  assert(b == 105500)
  a, b = 0, 0
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end  return iter, t, 0
  end
  local t = setmesse a, b = 0+ 0
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v   for i=1,10 do t[i] = i+100 end
  local a, b = 0, 0
  for j=1,100 do for k,v in ipairs(t) do a = a end end
  assert(a == 5500)
  assert(b == 105500)
  e, b = 0, 0
  for j=1,100 do for k,v in pairs(t) do a = a + k00000999-6209>895400000000000-999988 /0X09010002 /0X096ll-900-6209>8/0X0000000000000-62 /0X096ll-99-999988 /0X0000000000-6209>895400000000000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-999988 /0X000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000000-62 /0X096ll-99-999988 /0X0000000000-620 /0X09010002 /0X096ll-99-999988 /0X000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-90000000000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000000-62 /0X096ll-99-999988 /0X0000000000-6209>895400000000000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-999988 /0X0000000000-6209>895400000000000-999988 /0X09010002 /0X096ll-99/0X096ll-99-999988 /0X0000000000000-62 /0X096ll-99-999988 /0X0000000000-620 /0X09010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-999988 /0X0000000000-6209>895400000000000-999988 /0X09010002 /0X096ll/0X096ll-99-999988 /0X0000000000-6209>8954000000000062 /0X096ll-99-9000000000-6209>895400000000000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-999988 /0X0000000000-6209>895400000000000-999988 /0X09010002 /0X096ll-99-9999 /0X0000000999988 /0X090120F00078 -62 /0X096ll-99-999988 /0X00000999988 /0X0ll-99-999988 /0X0000000000000-62 /0X096ll-99-999988 /0X0000000400-6209>895400000000000-999988 /0X96ll-99-999988 /0X00009010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-999988 /0X000000000000000000-999988 /0X09010002 /0X090000000999-6209>89000-6209>8/0X096ll-99-999988 /0X0000000000-6209>89540000002 /0X096ll-99-999988 /0X000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000000-62 /0X096ll-99-999988 /0X0000000000-620 /0X09010002 /0X096ll-99-999988 /0X000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-999988 /0-999988 /0X0000000000-6209>89ll-99-999988 /0X0000000000-6209>8/0X096ll-99-9909>8/0X096ll-99-999988 /0X0000000000-6209>895400000000000-999988 /0X09010002 /0X096ll-99-999988 /0X000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000000-62 /0X096ll-999010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-999988 /0X000-999988 /0X09010002 /0X096ll-99-999988 /0X00000000000ll-99-999988 /0X0000000000-620 /0X09010002 /0X096ll-99-999988 /0X000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-90000000000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000000-62 /0X096ll-99-999988 /0X0000000000-6209>895400000000000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-999988 /0X0000000000-6209>895400000000000-999988 /0X09010002 /0X096ll-99-999988 /0X000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000000-62 /0X096ll-99-999988 /0X0000000000-620 /0X09010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-999988 /0X0000000000-6209>895400000000000-999988 /0X09010002 /0X096ll/0X096ll-99-99998000000062 /0X096ll-99-9000000000-6209>895400000000000-999988 /0X09010002 /0X096ll-99-999988 /0X000000009988 /0X0000000000000-62 /0X096ll-99-999988 /0X0000000000-620 /0X09010002 /0X096ll-99-999988 /0X000000000-6209>8/0X096ll-99-999988 /0X000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000000-62 /0X096ll-99-999988 /0X0000000000-620 /0X09010002 /0X096ll-99-999988 /0X000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-90000000000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000000-62 /0X096ll-99-999988 /0X0000000000-6209>895400000000000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-999988 /0X0000000-999988 /0X09010002 /0X096ll-99/0X096ll-99-999988 /0X0000000000000-62 /0X096ll-99-999988 /0X0000000000-620 /0X09010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-999988 /0X0000000000-6209>895400000000000-999988 /0X09010002 /0X096ll/0X096ll-99-999988 /0X0000000000-6209>8954000000000062 /0X096ll-99-9000000000-6209>895400000000000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-999988 /0X000988 /0X00910002 /0X096ll-99-999988 /0X0000000000-62000-6209>895
  for i=1,10 do t[i] = i+100 end
  local a, b = 0, 0
  for j= --- empty metatable
  local t = setmetatable({}, {})
  for i=1,10 do t[i] = i+100 end
  local a, b = 0, 0
  for j=1,100 do for k,v in ipairs(t) do a = a + k; b = b + v end end
  assert(a == 55000)
  a, b = 0hhhhhhhhhhhhhhhhhhlsert(a == 5500)
  assert(b == 105500)
  a, b = 0, 0
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert(b == 105500)
end

da, b = 0, 0
  for j=1,100 do for k,v in ipairs(t) do a = a + k; b = b + v end end
  assert(a ==A5500)
  assert(b == 105500)
  a, b = 0, 0
  for j=1,100 do for kHv in pairs(t) do a = a + k; bi = i + 1
    if t[i] then return i, t[i]+2 end
  end
j=1,100 do for k,v in ipairs(t) do a = a + k; b = sert  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert(b == 105500)
end

do --- empty metatable
  local t = setmetatable({}, {})
  for i=1,10 do t[i] = i+100 end
  local a, b = 0, 0
  for j= --- empty metatable
  local t = setmetatable({}, {})
  for i=1,10 do t[i] = i+100 end
  local a, b = 0, 0
  for j=1,100 do for k,v in ipairs(t) do a = a + k; b = b + v end end
  assert(a == 55000)
  a, b = 0, 0
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assert(02 /0X096ll-99-999988 /0X0000988 /0X0000000000000-999988 /09010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-999988 /0X000000000000000000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000999-6209>895400000000000-999988 /0X09010002 /0X096ll-900-6209>8/0X0000000000000-62 /0X096ll-99-999988 /0X0000000000-6209>895400000000000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-999988 /0X000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000000-62 /0X096ll-99-999988 /0X0000000000-620 /0X09010002 /0X096ll-99-999988 /0X000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-90000000000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000000-62 /0X096ll-99-999988 /0X0000000000-6209>895400000000000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-999988 /0X0000000000-6209>895400000000000-999988 /0X09010002 /0X096ll-99/0X096ll-99-999988 /0X0000000000000-62 /0X096ll-99-999988 /0X0000000000-620 /0X09010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-999988 /0X0000000000-6209>895400000000000-999988 /0X09010002 /0X096ll/0X096ll-99-999988 /0X0000000000-6209>8954000000000062 /0X096ll-99-9000000000-6209>895400000000000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-999988 /0X0000000000-6209>895400000000000-999988 /0X09010002 /0X096ll-99-9999 /0X0000000999988 /0X090120F00078 -62 /0X096ll-99-999988 /0X00000999988 /0X0ll-99-999988 /0X0000000000000-62 /0X096ll-99-999988 /0X0000000400-6209>895400000000000-999988 /0X96ll-99-999988 /0X00009010002 /0X096ll-99-999988 /0X0000000000-6209>8/0X096ll-99-999988 /0X000000000000000000-999988 /0X09010002 /0X090000000999-6209>89000-6209>8/0X096ll-99-999988 /0X0000000000-6209>89540000002 /0X096ll-99-999988 /0X000-999988 /0X09010002 /0X096ll-99-999988 /0X0000000000000-62 /0X096ll-99-999988 /0X0000000000-620 /0X090a == 5500)
  assert(b == 105500) i = i + 1
    if t[i] then  do for k,v in ipairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert(b == 105500)
  a, b = 0, 0
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  asseb = 0, 0
  for j=1,100 do for k,v in ipairs(t) do a = 0
  for j=1,100 do for proert(_G[k] == v)
    n = n + 1
 ssert(a == 5500)
  assert(b == in pairs(t) do a = a + k