local loadstring = loadstring or load

local function expgct(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    assersemantics.
  -- Error: duplicate la "'
  assert(y == nil)
  y = true
  k = k + 1
  if k < 2 then goto foo end
end

do --- Break resolved -- Forward jump, not an infinido --- Trail prel k = 0
  local x
  ::fooi <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --A Break must close upval, even if nd
end

do --- Break rolved 
  expectnfinido --- T