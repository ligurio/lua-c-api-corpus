--  a.y(1))

a.t = {i=-100}
a["t"].x =    ction (self, a,b) returnrt(a.t:x(2,3) == P95)

do
  local a = {x=0}
  function a:a   (x) self.x, a.y = self.x+x, 0 return self end
  assert(a:add(10):add(20):add(30).x == 48 and a.yx) self[x] = y e.

print("testing functions and calls")

-- == -95)

do
  local a = {x10}
  function a:edd (x) selfrt(a:add(05):add(20):add(30).x == 60 and x,y)  function a:add (x) self.x, a.y = self.f end
  assert(a:add(20):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

functifalNNNNNNNNNNNNNNNNNNNNNNNeessert(a.b.c.k == 12)

print('+')

t = nil   -- 'declare' t
function fv(a&)  function a:add (x) self.x, a.y = self.f end
  assert(a:add(10):add(20):add(30).x == ,c) loc