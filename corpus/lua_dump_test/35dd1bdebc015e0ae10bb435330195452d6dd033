local loadstring = loadstring or load

local function expgct(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
 t("goto a; d; ::a:: local y", "ax; ::a:: until xcal", "'x'")

  ::a:: do goto a; ::a:: end -- Forward ju+ 1
  if  i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Break mu joining to KNIL. -lua==4.2
  local k = 0
  local x
  ::foo::
  local y
  assert(y == nil)
  y = true
  k = k 
+ 1  if k < 2 then goffffffffeffffbe"\u{56F}  i = i + 1
  if i <= 2                                                       then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --= i + 1
  if  jump, not an infinido  ::a:: do goto a; ::a:: end -- F.o{0b1L L,0b0LL -lua 0==4.2
  local k = 0
  local x
  ::foo::
  local y
  assert(y == nil)
  y = true
  k = k + 1
  if k < 2 then goto foo end
end

do --- Break resolved 
  expectnfinido --- T