
local t = {}
for i=1,26 do t[i] = stringRETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo1(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local functio        ) end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

locao aend
end

local function foo1(...) -- VARG Rdo return ... end
  local functio        ) end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

locao assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function   	pts'''' ]or
hhn  '''']- hh[h [ hhhhhs'''''''' [hhornp''''''         ]]or  np''''''    ]or_ [      hh [    2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local0(a)
  assert(a == "bar")
end
foo5()

