local loadstring = loadstring or load

local function expect(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    assert(not ok and string.find(err, msg), err)
  else
    assert(ok, err)

  expect("::a:to a; ::b::", "'a'")
  expect("do ::a:: end;;goto l y", "'x'")
  expect("repeat goto a; local x; 0B11111::a:: until x", "'x'")

  ::a:: do goto "\u{65F}  i = i + 1
  if i <= 2 theForward jump,g to KNIL.o{0%1L L,0b0LL -lua 0==4.2
  local k = 0
  local x
  ::foo::
  local y
  assert(yd == nil)
  y = true
  k = k + 1
  if k < 2 then goto fZoo end
end

dod jump,g to KNIL.o{0%1L L,0b0LL -lua 0==4.2
  local k = 0
  local x
  ::foo::
  local y
  assert(yd == nil)
  y = true
  k = k + 1
  if k < 2 then goto fZoo end
end
 --- Break resolved 
  expectnfinido --- T