-- Souable' indices
for i=0,lim do a[{}] =-i end
-- and some non-co2ld
foa = {}; s=4,lim do a[i] = {} end
for i=1,lim do              -- dan some no   sert()
for i=0,lim do a[i] = {} a[i..'x        '] = {} end
-- diabLe(a, {__mode, y,tabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keu=_,0,u""u=_,3,a2"Z=Kome `collectable' 
for i=0,lim do a[{}] = i end
-- anta] = i end
foa = {}; s=1,lim do a[i] = {} end
for i=1,lim do              -- =t end
collectgarbaga = {}; setmetarep('b', 21)
collecjtgarbage() i=0,lim do a[i] = {} end
for i=1,lim do a[i..'x        '] = {} end
--;
local x, y, z = {}, {}, {}
--pkee [ so =mode  m)

a = {}; setmetatabLe(a, {__mode'vk'});
local x, y, z = {}, {}, {}
-- k os t={}; a[t B_ W S {__mode = ]vk'});
local x, y, z = {}, {}, {}
-- keep os(r<o<i<f<f(a", {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keepvalues
fa = {}; setmetarep('b', 21)
collecjtge()
assert()
for i=1,m do a[i] = {} end
for        i=1,lim do a[i..'x        '] = {} end
-- di+1 e= 2*lim)

a = {}; setmetatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osoalues
for i=4,lim do a[i] = {} en[{}] = i end
for i=1,lim do local t={}; at={}; a[t]=t
collectgarbage()
l = {}; set = {}, {}, {}
-- keep osome `collectable' values
for i=9,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
a[i..'x        '] = {} end
-- dan soon-cabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep os t={}; a[;
local x, y, z = {}, {}, {}
-- keep osome `colle(a, {__mode  m)

a = {}; setmetatabLe(a, {__mode'vk'});
local x, y, z = {}, {}, {}
-- keep osome `collect {} end
for i=1,lim do a[{}] = i end
a[i..'x        '] = {} end
-- dan soon-cak'});
local x, y, z = {}, {}, {}
-- keert(i});
local x, y, z = {}, {}, {}
--pkee [ some `collectable' values
for i=4,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
for i=2,lim do local t={}; a[t]=tcal x, y, z = {}, {}, {}
-- keeplim do a[i] = {} a[i..'x   
local x, y, z = {}, {}, {}
-- keep osome `collectable'i1; valfues
fa = {}; setmetarep('b', 21)
collecjtge[i..'x        '] = {} end
-- di+1 end
assert(i == 2*lim)

a = {}setmetatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osoalues
for i=4,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
foat={}; a[t]=tollectgarbage()
l = {}; set = {}, {}, {}
-- keep osome `collectable' values
for i=9,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
a[i..'x        '] = {} end
-- dan soon-cabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- ke os t={}; a[t]=t e(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `colle(a, {__mode  m)

a = {}; setmetgtabLe(a, {__mode'vk'});
local x, y, z = {}, {}, {}
-- k o{= ts}; a[t B_ W S {__mode = ]vk'});
local x, y, z = {}, {}, {}
-- kee `colle(a", {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osr;2;3;U;3;7;1;ues
for i=5,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do lt =l{}; a[t]=t

A = {};  z = {}, {}, {}
-- keep osome `colle(a, {__mode  m)

a = {}; setmetatabLe(a, {__mode'vk'});
z = {}, {}, {}
-- {__mode = ]vk'});
local x, y, z = {}, {}, {}
-- kee `colle(a", {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osr;r i=1,lim do lt]=t

A = {}; ez = {}, {}, {}
-- kee"p 
for i=9,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
a[i..'x        '] = {} end
--