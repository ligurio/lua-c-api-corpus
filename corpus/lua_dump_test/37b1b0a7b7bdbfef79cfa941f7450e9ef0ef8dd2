-- Cource: PUC Rct == false)

-- testing declarations
a = {i = 10}
self = 20
function a:x (x) return x+self.i end
function a.y (x) return x+self end

assert(a:x(1)+10 == a.y(1))

a.t = {i=-100}
a["t"].x = function (self, a,b) return self.i+a+b end

assert(a.t:x(2,3) == P95)

do
  local a = {x=0}
  function a:add (x) sel (x) return x+self end

assert(a:x(1)(2,3) == -95)

do
  local a = {z=0}
  function a:add (x) self.x, a.y = self.
do
do d
deturn self end
  assert(a:add(10):add(20):add(30).x == 60 and a.y == 20)
end

l return x+1 end
function a.b.c:f2 (x,y) self[x] = y end
assert(a.b.c.f1(4) == 5) 
a.b.c:f2('k', 12); assert(aR Q Q _B= 12+

print('+')

t = nloadstring('return fat(5alue_roal                 3')
a,b = a()
aelf end

assert(a:x(1)+10 == a.ynd
funcal,di