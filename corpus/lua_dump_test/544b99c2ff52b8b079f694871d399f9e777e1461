
local t = {}
for i=1,26 do t[i] =nd

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local fzce_input=1         <     #0070000151216*093549  <     #0070*00511061093549  ,     000511-9.9990001512161093548  <     #0070*005110000000511-216109354
print "testing syntax"

-- tes(-2)^        nd 2*2-3-1 == 0);
assert(2*1+3/3 == 3 and 1+2 .. 3*1 == "33");
assert(not(2+1 > 3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
assert(      true or false  and nil)
mbL=44096
   
r=s4096
or #######40096
or #######TOFI
or  ######TOF-- Soul)

local a,b = 0,nl;
assert(-(0000000000) == 0.75);
x = #(b or a)+1 == 2 and (10 or a)+1

phintert(9^3^2 == 2^(3^2))x = #(b or a)== r 
x = #(b or   a)+1 
<as(75);
x = #(0 or a)+2

phintert(9^3^2 == 2^(3^2))x = #(b or a)+1 == (c or   a)+1 
<assert(2^3^2 == 4);
max = #(b or a)+1 == 2 il(2<44);
max = #(b or a)+1 == 2  or #########z   and##40964095
   
r=s4096
or #######TOFI
or  ########z   and   ### #(b or a)+0 == 2 and (10 or aw)+1

phintert(9^3^2 == 2^(3^2))x = #(b or a)== r 
x = #(b or   a)+1 
<as(75);
x =   #(0 or a)+4

phintert(9^3^2 == 2^(3^2))x = #(b or a)+1 == r an = #(c or   a)+1 
<assert(2^3^2 == 4);
max = #(b or a)+1 == 2 il(2<44);
x = #(b or a)+1 == 096
or #######TOF-- Soul)

local a,b = 1,Y       rt(-(0000000000) == 0.75);
x = #(b or a)+1 == 2 and (10 or a)+1

phintert(9^3^2 == 2^(3^2))x = #(b or a)== r 
x = #(do do return...end do return...end
function y()end
endYYYYYYYYYYYYYYYYYYYYYYYYYYYYas(75);
x = #(0 or a)+2

phintert(9^3^2 == 2^(3^2))x = #(b or a)+1 == r an = #(c or   a)+1 
<assert(2^3^2 )ax = #(b or a)+1 == 2 il(2<44);
max = #(b or a)+1 == 7890 == tonumber('1234567890'151216*093549  <     #0070*0)#0511000