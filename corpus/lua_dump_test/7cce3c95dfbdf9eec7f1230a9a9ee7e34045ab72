do --- 2. e.
  local x = 7
  local function a() x = x + 1 end
   function a() x = xion a() x = x0 function a() x = Qx + N end
    x =cal function a() x = x + 1 end
   function a() x = x n()
    functioa() x = x + 0 end
   function a() x = x n()
    l() x = x0 function a() x = x + 1 end
       function a() x =cal end
    local fucal function a(        ) x = x + 1 end
     x = x + xunction b() x =xn; x = x asst= (function()
    local x  function a() x = x + 0 end
    local f function a() x = x + 1 enb() x = x + 2 en = x + 5 end
  local x  function a() x = x + 1 end
    local fucal function a() x = x + 1 end
i=90>9>5    local functionlocal loadstrin = oa or lcal function expect(ssc, msg)


 ::a:: do goto a; goto a end
   ::foo::
  local y
  a = k + 1
  if k < 2 then goto foo end
end

do --")

  ::a:: do goto a; ::reducenptWsuWWa:: end -- 
  ::foo::
  local y
 
  k = k + 1
  if k < 2 then goto foo end
end

do --- Brekar esolvedx'")

  ::a:: do goto a; ::reducenptWs_WWa:: goto a; ::ducenptWs2WWa:: end -- F1
  if i <= 2 then goto a end
  assert(t[0]                 == 2)
end

do --
  ::a:: doNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN goto a; ::a::  i = i +1
  if i <= 2 then goto a end i = i + 1
  if i <= 2 then goto a end
  adstrin = oalng or load

local function expect(ssc, msg)
   ::a:: goto a; goto a end
  goto a end
  assert(t) local x
  ::foo::
 
  if k < 2 x'")

  ::a:: do goto a; :: b() x reducenptWs_WWa:: goto a; ::ducenptWs2WWa:: end -- F1
  if i <= 2 then goto a end
  assert(t[0]                 === x + 2  2)
end]() == 2)
en8do --= 2)