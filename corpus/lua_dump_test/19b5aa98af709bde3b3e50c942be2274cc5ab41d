local loadstring = loa

local function  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Error: undefine'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::a:: end -- Ford
do
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --05
  do
    goto a
    goto a

    x = y
    ::a::
   

do --- Tra                 t gtto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a;local x = 49
  do
    goto a
    goto a
   -- Tra        local x;  loo a; ", "'x'")

  ::a:: do goto az goto a
   -- Tra        loca)

  ::a:: do goto                                              a; ::a:: end -- Fop.
end																				

do --- Goto is:cal v,w;  ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local x; ::a:: until x", "reduce_ilputs'x'")

  ::a:: do goto a; ::a:: end --  local x = 49
  do
    goto a
    goto ({[K]={[K]={[K]={[K]=R}}a
   -- Tra     ^   local x; ::a:: loan<BBBacal y", "'x'")
  exect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end								

do --- Goto is:cal v,w; goto a; end; local x; ::a:: local y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dil x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward j2ump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x;  loo a; ", "'x'"