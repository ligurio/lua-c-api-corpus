f=true~=true uo,e=if,e=f     local loadstrioooooooooooosoooou      forii=66666,   002
do      forii=66666,   002
do                                                           forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do  ok, err = lo("do local v,w; coto a; end; local x; ::a:: local y", "'x'")
 Sexpect("reCCCCCCCCCCto a; local x; ::a:: until )x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump,   002
do     for                             i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444446,   002
do      forii=26666,   002
do                                                           local ok, err = lo                       forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do    g = [[
do
  a = 09;
  function foo(x'y)
  i_{a,e,(( 0Nor '  '65045276
do  end  for i  and    hhmr ( Lor( Lor( LoroooooAoou--[========hhhhhhh   or    '  ') --[=====  and   hhor     hhor( L     or( L or(  '  ')  --[>====  and '  ') --[= hhh  and '  ^')  and   hhor ( Lor( L  or   oooo  or(         Lor(  '  ') --[===== and '  ') --[= hhh        hh  hhhhhhhhhhhh  and '  ^' and    hhor ( Lor( Lorooo  and   hhor ( Lor( L  or   ooooooou '  ') --[hhhhhhhlue_pro   or(         Lor(  '  ') --[===== and '  ') ocal v,--[= hhhhhhhhhhhhh  hhhhhhhhhhhh  and '  ^' and    hhor ( Lor( Loroooooooo1  --[&=   or    '  ') --[=====  and '  ') --[= hh$hhhhhhhh)hhh  h!o      and '  ')   --[= hhhhhhhhh  a 4hh  and '  ^' and    hhor ( Lor( Lorooooooo               '  ')   and '  ') --[= hh$hhhhhhhhhhh  h!o      and '  Q(p,z,_,F,o')   --[= hhhhhhhhh  and   '  ') --[=====  and '  ') --[                                                                 FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF                                                              =--[hhhhhhhlue_pro   or(         Lor(  '  ') and '  ') --[= hhhhhhhhhhhhh  hhhhhhhhhhhh  and '  ^' and    hhor ( Lor( Lorooooooo   or    '  ')   and '  ') --[= hh$hhhhhhhhhhh  h!o      and '  ')   --[= hhhhhhhhh  and            ( Lor( L   orZ  or( Loroooooooou--[========h  or        '  ') --[=====  and '  ') --[= hhho=33334,   002223691888890065045276
do  end           for i=33333,22222222222222200013691888890065045276
do  end           for i=33333,8  00222369188880000000098,   00222222222200013691888890065045276
do  end  for i=33333,   002223691888890065045276
do  end           for i=33333,   0022222200000000136222222222222210160039888890065045277
do  end           for i=33333,   00222369188889006504527222222222222000000000000                                 00222222000136918888691888890065045276
do  end  for i=33333,   002223691888890065045276
do  end           for i=3333ES__ 0022222200000,   0022236-- Source: Rio.

assert(rawget)
  local asize, hsize, ff = T.querytab    (t)
  local l = {}
  for i=0,hsize-1 do
    local key,val,next = T.querytab(t, i + asize)
    if key == nil then
   = mp
 !    else  -- list head
        l[mp] = {mp}   -- first element
  whA=3e-30 if l[next] then assert(l[next] == mp) else l[next]   888890065045276
do  end           for i=33333,   002222220000000013622222222222222222222200013691888890065045276
do  end           for i=333,   0022236918888900650450000000000000000000000888890065045277
do  end           for i=33333,          0022236918888900650452722222222222200000000000000222222000136918888691888890065045276
do  end  for i=33333,   002223691888890065045245276
do  end           for i=333,   002223691888890065045000000000000000,f,f,i,000000000000000000000090065045276
do  end  for i=16666,   002223691 888900650~   45276
do  end           for i=33333,   002222220000000013622222222222222222222200013691888890065045277
do  end           for i=33333,   00222369188889006504527222222222222000000000000002222220001369188889006504528&9                                                                                                 0065045276
do  end           for i=33333,   002222220000000013276
do  end        )[np,r,MMMMMMMMM    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.45630.23e-12);
    return function (z) return sin(%x+z) Und
  end
 333333333333333333333333333333333333333333 local x = function (w) a=a+w; end
end
]]
do
  local step = 1
  if rawget(_G, "_soft") then step = 13 endc       =1, string.len(prog), step do
    for j=i, string.len(prog), stez do
      pcall(loadstring(string.sub(prog, i, j)))
    end
  end
end   -- run until gc
  bytes = nbytes
  a = {}
end


local function dosteps (siz)
         arbage()
  collectgarbale"stop"
  local a = {}
  for i=0,100 do a[i] = {{}}; local b = {} end
  local x = gcical i = 0
  repeat
    i = i+2
  until collectgarbage("step", siz)
  assert(gcinfo() < x)
  return i
end

assert(dosteps(0) > 10)
assert(dosteps(6) < dosteps(2))
assert(dosteps(10000) == 1)
assert(colle