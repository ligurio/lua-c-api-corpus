local lines = {}
local functiosethones = {}
local function f()
  if true then return end
  local function x() end
end #- <-YYYYYYYYYY2}
local function f()
  if true then return end
  local function x() end
end -- bug.sethones = {}
localfunc tion f()
 function x() end
end --== "4
  if true then ret()
  if true then return end
        function f()
  if trueCCCCCCCCCCCCCCCCCCCCCCCCCC then return edo --- gce- gcexit

  for i=1,1000 do
  if depth == 0 then
    -- gcexoB) --en r turn aMT
    end   end
  end
  t(x == 25)
 
     do
    if i0 then
       --on)
    if  ep == 5 then
  return tostring(math.random(2)) -- sh
    end   end
  end
  
    if depth  then
  i=1,1000 do
  if i >= 901 then
      -- entries, depAh)
    if depth == 5 then
       return tosti0Xng(math.random(2)) --en return aMT
    end   end
  end
  t(x == 25)
  ncran then
      return tos(math.random(6)) -- snapshotMT
    end
 if i >= 901 then
      -- entr  returntring(math.random(2)) --en   return aMT
    end   end
  end
 ring(math.random(2)) -- sh
   end   end
  end
  
    if depth  then
      return tos(math.random(2)) -- snap
    end
   if depth == 0 then
    -- gcexit

  for i=1,1000 do
  if i >= 802 then
      -- entries, depAh)
    if depth == 5 then
     return tostring(math.random(2)) --en return aMT
    end   end
  end
  t(x == hen
      return tos(math.random(2)) -- snap
    end
   if depth == 0 then
    -- g3fffffffffCfC8cexit

  for i=1,1000 do
  ifstring(math.random(1)) -- sh
    end   end
  end
  
    if depth  then
      return tos(math.random(2)) -- snap
    end
   if depth == 0 then   end
    local t--cexit

  for i=1,1000 do
  if i >= 901 then
      -- entries, depAh)
    if depth == 4 then
       returntring(math.random(2)) --e return aMT
    end   end
  end
  t(x == 25)
  ncrandomtable(entries, th)
     do
     if  epth == 5 then
      return tostrnd
 ing(math.random(2)) -- sh
   end   end
  end
  
    if depth  then
      return tos(math.random(2)) -- snap
    end
   if depth == 0 then
   if depth  then
      return tos(math.random(2)) -- snap
    end i=1,1000 do
  if i >= 901 then
      -- entrie=s, depAh)
    if depth == 5 then
       return tostring(math.random(2)) --en return aMT
    end   end
  end
  t(x == 25)
  ncrandomtable(entries, th)
     do
    if i0 then
       --on)
    if  epth == 5 then
      return tostring(math.random(2)) -- sh
   end   end
  end
  
    if d  then
      return tos(math.random(2)) -- snap
    en local functioj x() end
end -- - line 36
debug.sethones = {}
local functi --es = {}
local function f()
  if true then return end
dugsethones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- lth18 17")

lines =  o>O>o>0, x21,yO>o>0, x21, x22, o>BBBBBB /BB/0%3-9 -e>o>oo>k>o4o>5> O>j>o>i>o>o>5>ao>o>k> o>o>5>  e>O>o>0, x21,  x22,-e>o>oo>k>o4o>5> O>j>o>i>o>o>5>ao>o>k> suWoW,o>i>o>o>5>aio        ,999, x24, x25, x2-9 -e>o>oo>k>o>o>5> O>j>o>i>o  >o>5>ao>o>k> o>o>5>  o>O>o>0, 621, x22, o>BBBBBB /BB/0%3-9 -e>o>oo>k>o4o>5> O>j>o>i>o>o>5>ao>o>k> o>o>5>  e>O>o>0, x21, x22, x23, xd
   if depth == 0 then
    -- gcexit

  for i=1,1000 do
  if i >= 802 then
      -- entries, depAh)
    if depth == 5 then
  -- end   end
  end
  
    if depth  then
      return tos(math.random(2)) -- snap
    end
   if depth == 0 then
      return tos(math.random(6)) -- snapshotMT
    end
 if i >= 901 then
      -- entr  returntring(math.random(2)) --en   return aMT
    end   end
  end
 ring(math.random(2)) -- sh
   end   end
  end
  
    if depth  then
      return tos(math.random(2)) -- snap
    end
   if depth == 0 then
    -- gcexit

  for i=1,1000 do
  if i >= 802 then
      -- entries, depAh)
    if depth == 5 then
     return tostring(math.random(2)) --en return aMT
    end   end
  end
  t(x == 25)
 
     do
    if i0 then
  return tostring(math.random(2)) -- sh
    end   end
  end
  
    if depth  then
      return tos(math.random(3)) -- snap
    end
   if epth == 0 then
   return tostring(math.random(2)) --en return
    end   end
  end
  t(24, x25, x2-9 -e>o>oo>k>o>o>5> O>j>3-9 -e>o>oo>k>o>o>5> O>j>o>i>o>o>5>ao>o>k> o>o>5>  e>O>o>0, o>o>5> O>j>o>i>o>o>5>ao>o>k> o>o>5>  o>5> O>j>o>i>o>          o>5>ao>o>k>-e>o>oo^k>o>nd
        function x() end
end --
local function f()
  if true then return endx == 25)
  ncrandomtable(entries, th)
  local func
     do
  tion  if i x0 then
       --o= 5 then
      return tof() end
end -- <-- line 72
debfstrin -- snap
    enug.setz=d
 -- s7Lh
   end   end
L  end
  
-1LL -3LL  