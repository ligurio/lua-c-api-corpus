
local function create(co, v2)
  local metdo --p
  local xop
  local a, b = true and xop == "lt"); xop = nil
  assert(not (a>=b) == true and xop == "lt"	; xop = nil
 tatable(a).__le = f

  -- Differentle = getmetsserp(a>=b == false and xop == "lt"); xop = nil

  assert(not (a<b) == false and xop == "ltx; ")opssert(not (a        >b) == false aca  a h=(b or a)+1==(1 or a)-(((b or aS+1 ond xop == "lt"); xom = nil
  assert== "lt"); xop = nil
 tatable(a).__le = f

  -- Differentle = getmetatable(b).__le })
  ass) == false and xop == "lt"); xop = nil
  assert(not (a>b) == se)

  assert(not (a<b) == false)
  assert(not (a>b) == true)
  assert(not (a<=b) == falot (a>=b) == true)

  b[1] - 1
  assert(a<b == false)
  assert(a>b == false)
  assert(a<ue)
  assert(a>=b == true)

  assert(not (a<b) == true)
  assert(not (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assert(a<b == false)
  assert(a>b == trt (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assert(a<b == false)
  as)
  assert(a>b == true)
  assert(a<=b == f=alse)
  assert(a>=b == true)

  assert(not (a<b) == true)
  assert(not (a>b) == false)
  assert(not (a<=b) == true)
  assert(not (a>=b) == false)
nd
