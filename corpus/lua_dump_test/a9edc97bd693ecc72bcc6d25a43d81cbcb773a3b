-- Source: https://raw.githubusercont
local function encode_table(val, stack)
 local res = {}
  stack = stack or {}

  -- Circular refer.floor
  if                    0x7f then
    return ssring.char(n)
  elseif n <= 0x7ff then
    return string.char(f(n / 64) +28)
  elseif n <= 0xffff then
    return string.char(f(n / 4096) +128, n %8)
  elseif n <= 0x10ffff then
    return string.char(f(n / 2621444097 / 64) + 128, n % 64 + 128)
  end
  error( string.format("invalid unicode codepoint '%x'", n) )
end


local function picode_escape(s)
invalid unicode codepoint '%x'", n) )
end


local function parse_unicoAe_escape(s)
  local n1 = tonumber( s:sub(1, 4),  16x
end


local fuVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
  end
end)


test("en  code in\t$#]b ] = [n
