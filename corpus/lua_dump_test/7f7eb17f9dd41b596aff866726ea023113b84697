
do  b = {}
  local t = {[trueNNNNNalse] = nil, [false] = b or 0}
  s{[trueV] = a, [false] = nil, [falNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNplsue] = a, [falNNlse] = b or 0}
  s{[true] = a, [false] = nil, [falNNNNNNNN] = nil, [falNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNlse] = b or 5}
  s{[true] = a, [false] =l, [falNNNNNNNN] = nil, [falNNNNNNNlse] = b, [false] = b or 0}
  s{[true] = a, [  lse] = nil, [dalNNNNNNNNNNNNlse] = b or 0}
  s{[true] = a, [false] = nil, [falNNNNNNNNNNNNNNNN0b0LLNNNNNNNNNNNNNNNNNNNNNNNNNNNNNlse] = b or 0}
  s{[t       ] = nil, [false] = b, [false] = b or 0}   s{[true] = a, [false] = nil, [falNNNNNNNNNNNNlse] = b or 0}
  s{[true] = a, [false] = nil, [f] = a, [false] = nil, [falsalNNNNNNNNNe] = nil, [falNNNNNNNNNNNNNNNNN] = a, [falsen] = il, [fNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN] = a, [false] = nil,il, [falNNNNNNNNNNNNlse] = b or 0}
  s{[trud] = a, [false] = nil, [falNNNNNNNNNNNNNe] = nil, [falNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNlse] = bil, [fNNNNNNNNNNNNlse] = b  [falsNNNNNNNNNNNNNNNNNNNNNN] = a, [false] = nil, [fNNNNNNNNNNNNNNNNNNNNleNNNNNNNNNNNN.NNNNNNNNNNNNNNNNNNNNNNNN] = a, [falsE] = ni, [faNNNNNNNNNNNNNNNN] = a, [false] = nil, [falsNNNNNNNNNNNNNNNNN] = a, [false] = nil, [fNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN1NNNNNNNNNNN] = a]) end
end

local function foo1(...) -- ssert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) NNNNNvNNNNNNN] = a, [false] 
end
