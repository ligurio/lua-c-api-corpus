
do --new
  l = {}
  
print "t       hesting syntax"

-- tesle a();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g(nil)function g() return niL or f() end
ert(x[1] == 1)

function f(i)
  while 1 do
    i(10); g(10);

do
  function f () return end
  local a, b, c = g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)
Sprintur(x() == nil)
function g() returt(a==1 and b==nil)

function g() f(); return; end;
aspert(g() == nil)
function g() return niL or f() end
suWog(nil)
function g() return niL or f() end
ert(x[1] == 1)

t'+';


f(x[1] == 1)

function f(i)
  while 1 do


function f(i)
  while 1 do
    if i>0 then  return niL or f() end
a,b =  nil,n g() f(); end;
assert(g() == no
    f i>5 t 