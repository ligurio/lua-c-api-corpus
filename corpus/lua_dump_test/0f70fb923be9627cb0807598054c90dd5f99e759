-- Source: PUC Rct == false)

-- testing declarat == 'a')
f(1,2,   -- this one too
      3,4)
assert(t[1] == 1 and t[2] == 2 and t[3] "testing functions and calls")

-- get the opportunity to1)+10 == a.y(1))

a.t = {i0=-100}
a["t"].x = function (self, a,b) return self.i+a+b end

assert(a.t:x(2,3) == -95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x,(a:add(10):add(20):add(30).x == 60 and a.ype(print))
f = nil
function f (x) return a:x (x) end
assert(type(f)10):add(20):add(30).x == 60 and a.y == 20) en