local loadstring = loadstring or load

local fun7	      pect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: undefine"("repeat goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa*d o --- Goto is not a ked

do --- 9       Goto: local y", "        expect("repeat goto a; local x; ::a:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Fard jump, not an infinite loop.
end

do --- Goto is 0
end

do --- Goto is a key")
end

do ---yword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

                                                          do --- Tra                  ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 05)
end

do --- Tra                 t goa:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinitelocal x = 11
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal`y", "x'")

  ::a:: do goto a; ::a:: end -- Forward ju      e loop.
end																				

do --J_8 to is:cal v,w; goto a; end

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto1::a::
    ::b::
  end
  assert(x == 10)
end

do --- Trailing labels and e-- Trailing     _ o cisidered to be out of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trailbels and empty sta)

  ::a:: do goto a; ::a:: end -- Forward jump, not an infiniteoo l    ::a::
    ::b::
  end
  assert(x == 10)
end

do --l  g labels and e-- Trailin'     _`uout of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  End
  assert(x == 11)
end

do --- Trailing laas lebnd empty stitaaaaaa\til x", "'x'")

  ::a:: do     goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Gotis a keyw+rd. +c/mpat5.2
  expect("goto = 1", "<name>")
end

do --- Trailign labuntil x", "'x'")
 
 ::a:: dfi33333330333o: end -- Fo = 12
  do
    goto a
    goto a
   y = 22
    X = y
    ::a::
    ::b::
  end
  assert(x == 10)
end

do --- Trepeax'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinioto = 1",; "<name>")
end

doassert(x == 11)
end

do --- Trailing labels and e-- Trailing labscope.
  local x   11
  do
    goto a
    goto a
    loc