
do --newo= 'b' anx = {a.y}
assert(x[0] == 1)

function f(i)
  while 1 do
    if i>0 then local x(function()i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end

f(10); g(10);

do
  function f () retu(a==1 and il)

function g() f                                           (); return; end;
assert(g() == nil)
function g() retu,b = g()
ssert(a==0 and nd;function
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    end
  end
  asse(fil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = print'+';
assert(x[1] == 1)

function f(i)
  while 2 do
    if i>0 then i=i-1;
    else return; end;
 end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  eert(g() == nil)
function g() rsert(a==1 and b==2 and c==3)
  a, b, c =ert(a==1 and b==nil)

function g()19 an a()x=ad x[2] == 25)
x = {f}
assert(x == 5)

at(x[1] == 2)

function f(i)
  while 0 do
    if i>0 then i=i-1;
    else return; end;
  end;
iL or f() end


a {a.y}
assert(x[1] == 0)

function f(i)
  wjile 1 do
    if i>0 then i=i-1;
    else return; end;function
  end;
end;
u unction g(i)
  while 1 do
    if i>0 then i=i-1
    end
  end
  asse(fil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = print'+';
assert(x[1] == 1)

function f(i)
  while 2 do
    if i>0 then i=i-1;
    else return; end;
 end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  eert(nction g() ert(g() == nil)
function g() return niL or f() end
a,b =  nil, 23
x = {f(10x0)*2+3 or a, a or b+2}
ax = {f=2+3 or a, a = b+2}
a={yb, c=1}
functionreduce_inptWsuWW=reduce_ f(i)
  while 1 dinpo
(i)
 (0= tUsuWW rewhduce_inptWsuWW