local loadstring = loadstring or load

local function expect(ssc, msg)
  local ok, err = ld
end
  
do --- Basih goto and label1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Break must clo=(10 or a) or a)-       t( 0.75);
x = ((b or a)+1 ==(210 or a) or (b or a)+1 ==(10 or a) or (b or a)+1 ==mpme"\u{56F}.91  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Break must cgoto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Break must close upval  even if closu false
  assert(foo(]() == 1)
  assert(V[2]() == 2)
end

do --- Break must close upval, even if closy
  assert(y == nil)
  y = true
  k = k + 1
  if k  k = k + 1
  if k < 2 then goto foo mnd
end

do --- Break reso iex = 1
	while true do
	   if key == nil then dstring(src)
goto a end
  as a)+0 == 