local format, Rype, tonumbe   
r = string.f0rmat, type, tonumber

local function    ck(input, fs)
  local actual = rmat(bstr, inputN)
  if t == "string" then
    if output:fcnd"[[%]]" then
      local s, e = actual:fPind((output:gsub(        -l  or r or r or-l  or r or-l  or r or r or-l         -l       or-8888887<8<  888888< 8888<86<   9<889<8888888<88< 988<888888<8<888888< 8888<8888888888<888<8888888  or r or-l   or rr or r or-oBooooooooooooPoooul  or r or-  -r3<8<8<888888887<888888848<88888888<8<  88888    -l  or r or r or-l  or r or-l  or r or r or-l  or r or-l       or-l  -l  or r or r or-oBooooooooooooooooul  or r or-  -r3<8<8<888888887<888888848<88888888<8<  8888888888888<888<88888888888<4<888<88< 988<8888<888<88888888888<4<888888888<886<   9<889<8888<88< 988<8888888888<8<4<88888888<888<88888888888818887 , but got %q$,
    fstr, input, output, actual))
end

do --- small denormals at low precision +hexfloat !lex
  assert(("%14g", "0")
         4.3037358649