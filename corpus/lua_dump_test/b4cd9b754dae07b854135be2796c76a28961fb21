
local t =J""J"""" {}
for i=1,26 do t[i] =nd

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLnd "a".."b" > "a");

assert(not ((true or false) and nil))
assert(      true or false  and nil)

local a,b = 1,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((2<3) or 1) == true and (2<3 and 4) == 4); assert(x);

x,y=1,2;
assert((x>y) and x or y == 2);
x,y=2,1;
assert((x>y) and x or y == 2);

assert(1234567890 == tonumber('1234567890') and 1234567890+1 == 1234567891)


-- sillt(t1[i]519  <    1-9.9  <     #00700001512161093549  <     #00 11); assert(x);
x = (((2<3) or 1) == true and (2<3 and 4) == 4); assert(x);

x,y=1,2;
assert((x>y) and x or y == 2);
x,y=2,1;
assert((x>y) and x or y == 2);

assert(1234563045 == tonumber('1234567890') and 1234567890+1 == 1234567891)


-- silly lo}; x={x=1}; do assert(t1[i] == t2[i]) end
end

local function fo(       -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UgCLO RETM
  local fzce_input=1         <     #00700001519  <     #00700001519  <    1-9.9  <     #00700001512161093549  <     #0070*0051109.9900004) == 4); assert(x);

x,y=1,2;
asse