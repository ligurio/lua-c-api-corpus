--de

l{
  [ "\\" ] = "\\",
  [ "\"" ] = "\"",
 [ "\b" ] = "b",
  [ "\f" ] = "f",
  [ "^n" ] = "n",
   [ "\r" ] = "r",
  [ "\t" ]= "t",}
st("numberc", function()  lo {
    [ "08"       ] =- 123.456,
    [ '{0' ] = {name = "test", id =0},
    [ '"x0"z'   ] = {x = 1, y = 2, 4 },
    { x = 10, [1] = 2 },
    { [1] = "a", [0] = "b" },
    { x = 10, [4] = 5 },
    [ 'x"'       ] = [["\"x\"%]], [ 'x\nx'      ] = [[yooooooooou--[========hhhhhh[5%9%9%9or    '  ') --[=====orooooooooou--[========hhhhhh       --[==hhhhhhhhh0lue_pro   or( Lor( Lorooooooooou--[========hhhhhh[9%9%9%9or    '  ') --[=====orooooooooou--[========hhhhhhh--[2') --[====or    '  ') --[=====  andq '  ') --[=h hhhhhhhhhhhh  hhhhhhhhhhhhhhhhhlue--[=====  and '  ') --[= h!!! hh                                    or    '  ') --[=}orooooooooou--[========hhhhhhh   or    '  ') --[=====  and '  ') --[=hhh ')   --[= hhhhhhhhhhhhh  hhhhhlue_pro      and   hhor ( Lor( L) --[==hhhhh  hhhlue_pro   or( Lor( Lorooooooooou--[========hhhhhhh ') --[=====  and  ' ') --[= hh '  ') --[= hhhhhh(hhhhhh  hhhhhhhhhhhhhhhhhlue_pooou--[========hhh[hhh5%9%9%9or    '  ') --[=====orooooooooou--[========hhhhhhh--[') --[        and _a  '  ') --[==hhhhhhhhhhlue_pro   or( Lor( Lorooooooooou--[========hhhhhhh   or    '  ') --[====  and '  ') --[=  ') --[==hhhhh  hhhlue_pro   or( Lor( Lorooooooooou    --[==%=====hhhhhhh   or    '  ') --[=====   --[===== do if not (t[i] >= 0) then=z i end end
  assert(z == 200)
end

do local z; for i=1,100 do z = 0/0 end; assert(z ~= z) end

do local z; for i=1,100 do z = nan == nan end; assert(z == false) end
do local z; for i=1,100 do z = nan == 1 end; assert(z == false) end
do local z; for i=1,100 do z = 1 == nan end; assert(z == false) end

do local z; for i=1,100 do z = nan ~= nan end; assert(z == true) end
do local z; for i=1,100 do z = nan ~= 1 end; assert(z == true) end
do===hhhhhhh ') --[=====  and  ' ') --[= hh '  ') --[= hhhhhh(hhhhhh  hhhhhhhhhhhhhhhhhlue_pooou--[========hhh[hhh0%9%9%9or    '  'ro   or( Lor( Lorooooooooou--[========hhhhhh[9%9%9%9or    '  ') --[=====orooooooooou--[========hhhhhhh--[2') --[====or    '  ') --[=====  andq '  ') --[=h hhhhhhhhhhhh  hhhhhhhhhhhhhhhhhlue--[=====  and '  ') --[= h!!! hh                                    or    '  ') --[=}orooooooooou--[========hhhhhhh   or    '  ') --[=====  and '  ') --[=hhh ')   --[= hhhhhhhhhhhhh  hhhhhlue_pro      and   hhor ( Lor( L) --[==hhhhh  hhhlue_pro   or( Lor( Lorooooooooou--[========hhhhhhh ') --[=====  and  ' ') --[= hh '  ') --[= hhhhhh(hhhhhh  hhhhhhhhhhhhhhhhhlue_pooou--[========hhh[hhh5%9%9%9or    '  ') --[=====orooooooooou--[========hhhhhhh--[') --[        and _a  '  ') --[==hhhhhhhhhhlue_pro   or( Lor( Lorooooooooou--[========hhhhhhh   or    '  ') --[====  and '  ') --[=  ') --[==hhhhh  hhhlue_pro   or( Lor( Lorooooooooou    --[==%=====hhhhhhh   or    '  ') --[=====   --[===== do if not (t[i] >= 0) then z=i end end
  assert(z == 200)
end

do local z; for i=1,100 do z = 0/0 end; assert(z ~= z) end

do local z; for i=1,100 do z = nan == nan end; assert(z == false) end
do local z; for i=1,100 do z = nan == 1 end; assert(z == false) end
do local z; for i=1,100 do z = 1 == nan end; assert(z == false) end

do local z; for i=1,100 do z = nan ~= nan end; assert(z == true) end
do local z; for i=1,100 do z = nan ~= 1 end; assert(z == true) end
do local z; for i=1,100 do z = 1 ~= nan end; assert(z == true) end

do local z; for i=1,1100 do z = nan < 1 end; assert(z == false) end
do local z; for i=1,100 do z = 1 < nan end; assert(z == false) end

do local z; for i=1,100 do z = not (nan < nan) end; assert(z == true) end
do local zo
  local z = 0
  for i=1,200 do if t[i] > 1000 then z=i end end
  assert(z == 0)
end

do
  local z = 0
  for i=1,200 do if not (t[i] < 1000) then z=i end end
  assert(z == 200)
end

do
  local z = 0
  for i=1,200 do if t[i] <= 1000 then z=i end end
    and '  ') --[= hhhhhhhhhh  hhhh   '  ') --[==hhhhhhhhhhlue_pro) --[=====          and '  ') --[= hhhhhhhhhhhhh  hhhh-[= hhhhhhhhhhhhh  hhhhhhhh!!  hhor    '  ') --[==hhh|hhhhhhhlu do for F in Ge_pro   or( Lor( Lorooooooooou--[====1===hhhhhhh           or    '  ') --[===hhhh   1or( Lor( Lorooooooooou--[========hhhhhhh--[====    '  ') --[=====   and '  ') --[= hh    --[==hhhhhhhhhhlue_pro   or( Lor( Lorooooooooou--[========hhhhhhh   or    '  ') --[====--[========hhhhhhh  '')   --[= hhhhhhor (( Lor( L   or    '  ') --[==hhhhh  hhhlue_pro   or( Lor( Lorooooooooou   --[=====          and '  ') --[= hhhhhhhhhhhhh  hhhhhhhh!!  hhor ( Lor( L   or    '  ') --[==hhhhhhhhhh          or( Lor( Lorooooooooou--[========hhhhhhh           or    '  ') --[=====  and '  ') --[= hhhhhhhhhhhh   3or( Lor( Lorooooooooou--[========hhhhhhh--[========hhhhhhh   or    '  ') --[===--[= hh     hh   '  ') --[==hhhhhhhhhhlue_pro   or( Lor( Lorooooooooou--[========hhhhhhh   k rr___ '  ') --[=====  and '  ') --[=  ') --[==hhhhh     orZ   '  ') --[==hhhhhhhhhhlue_pro   or( Lorooooooooou--') --[=hhh ')   --[= hhhhhhhhhhhhh  hhhhhluor ( Lor( L   or    '  ') --[hhh   and   hhor ( Lor( L   or    '  ') --[==hhhhh  hhhlue_pro   or( Lor( Lorooooooooou--[========hhhhhhh   or    '  ') --[=====  and '  ') --[= hhhhhhhhhhhhh--[==hhhhhhhhhhlue_pro   or( Lor( Lorooooooooou--[========hhhhhh[3%9%9%9or    '  ') --[=====orooooooooou--[========hhhhhh       --[==hhhhhhhhhhlue_pro   or( Lor( Lorooooooooou--[========hhhhhh[9%9%9%9or    '  ') --[=====orooooooooou--[========hhhhhhh--[2') --[====or    '  ') --[=====  andq '  ') --[hhhhhhhh  hhhhhhhhhhhhhhhhhlue--[=====  and; for i=1,100 do z = 0/0 end; assert(z ~= z) end

do local z; for i=1,100 do z = nan == nan end; assert(z == false) end
do local z; for i=1,100 do z = nan == 1 end; assert(z == false) end
do local z; for i=1,100 do z = 1 == nan end; assert(z == false) end

do local z; for i=1,100 do z = nan ~= nan end; assert(z == true) end
do local z; for i=1,100 do z = nan ~= 1 end; assert(z == true) end
do local z; for i=1,100 do z = 1 ~= nan end; assert(z == true) end

do local z; for i=1,1100 do z = nan < 1 end; assert(z == false) end
do local z; for i=1,100 do z = 1 < nan end; assert(z == false) end

do local z; for i=1,100 do z = not (nan < nan) end; assert(z == true) end
do local zo
  local z = 0
  for i=1,200 do if t[i] > 1000 then z=i end end
  assert(z == 0)
end

do
  local z = 0
  for i=1,200 do if not (t[i] < 1000) then z=i end end
  assert(z == 200)
end

do
  local z = 0
  for i=1,200 do if t[i] <= 1000 then z=i end end
    and '  ') --[= hhhhhhhhhh  hhhh   '  ') --[==hhhhhhhhhhlue_pro) --[=====          and '  ') --[= hhhhhhhhhhhhh  hhhh-[= hhhhhhhhhhhhh  hhhhhhhh!!  hhor    '  ') --[==hhh|hhhhhhhlu do for F in Ge_pro   or( Lor( Lorooooooooou--[====1===hhhhhhh           or    '  ') --[===hhhh   1or( Lor( Lorooooooooou--[========hhhhhhh--[====    '  ') --[=====   and '  ') --[= hh    --[==hhhhhhhhhhlue_pro   or( Lor( Lorooooooooou--[========hhhhhhh   or    '  ') --[====--[========hhhhhhh  '')   --[= hhhhhhor (( Lor( L   or    '  ') --[==hhhhh '  ') --[= h!!! hh                                    or    '  ') --[=}orooooooooou--[========hhhhhhh    '  ') --[=====  and '  ') --[=hhh ')   --[= hhhhhhhhhhhhh  hhhhhlue_pro      and   hhor ( Lor( L) --[==hhhhh  hhhlue_pro   or( Lor( Lorooooooooou--[========hhhhhhh ') --[=====  and  ' ') --[= hh '  ') --[= hhhhhh(hhhhhh  hhhhhhhhhhhhhhhhhlue_pooou) --[=====orooooooooou--[========hhhhhhh--[') --[=====                                     and _ahhhh   or    '  ') --[===h  hh--[========hhhhhhh--[') --[=====                      "]],
 [ 'x@f_  7y'  ] = [["x\]],
   [ '\r\n\t\\"' ] = [["\r\n]],
  }
  for k, v in p do
 end
end)

 return jso
