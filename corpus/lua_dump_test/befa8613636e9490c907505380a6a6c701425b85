f=true~=true uo,e=if,e=f     local loadstrioooooooooooosoooou      forii=66666,   002
do      forii=66666,   002
do                                                           forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                                                      i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444446444444444444444444444444444444446,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do                                                           local                                                ok, err = lo("do local v,000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000/00000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000{{= 1 `+9 \u{C432C}} 33598+9 \u{C432C}} 3 \u{C432C}} 33  {{? 1 `+9 \u{C432C}002      (=596+/ \u{C432C}} 33  {{ 33  ;{= 1 `+9 \u{C432C}06       =598+4 \u{C432C}} 8+9 \u{C432C}} 3 \u{C432C}}  19 \u{C432C}}]L_#u{C432C}} 33  {k= 1 `+9 \u{C432C}} 33598+9 \u{C432C}} 3 \u{C432C}} 33    @e1 `+9 \u{C432C}002)      (        =596+/ \u{C432C}} 33  {{{9 \u{C432C}} 3 \u{C432C}   |} 33  {{= 1 `+9 \98+9   =198+9 \u{C432C}0002      432C}} 33  {{ 33  ;{= 1 `+9 \u{C432C}06      w; coto a; end; local x; ::a:: local y", "'x'")
 Sexpect("reCCCCCCCCCCCCCCpeat goto a; local x; ::a:: until )x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, noten if closure is parsed after break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until falseJ  assert(foo() == true)
end

do --- Label prevEnts ja; 02
do    b=0x26FFFFFFFF forii=66666,   002
do     for                             i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444400003118985439067300751,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=26666,   002
do                                                           local ok, err = lo                       forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do            forii=66666,   002
,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                    -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua/org/tests/
-- Coppyright (c) 2995b t()

-- collection of functions without locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do
  a = 09;
  function foo(u'y)9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
  i_{a,e,_p,7,_p,kkkkkkkkkkkkkkkkkkkkkkHkk  LS SH]i si_{alue_pr,3,00000000000000000000000000000    0000000000000000000000000000000000000000000000Q{{{{{{ p (( Nor '  ')[np,r,MMMMMMMMMor _][2
or _    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.45630.23e-12);
    return function (z) return sinlocal _ _[2
or _][2
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{= 1 `+9 \u{C432C}} 33598+9 \u{C432C}} 3 \u{C432C}} 33  {{? 1 `+9 \u{C432C}002      (=596+/ \u{C432C}} 33  {{ 33  ;{= 1 `+9 \u{C432C}06       =598+4 \u{C432C}} 8+9 \u{C432C}} 3 \u{C432C}}  19 \u{C432C}}]L_#u{C432C}} 33  {k= 1 `+9 \u{C432C}} 33598+9 \u{C432C}} 3 \u{C432C}} 33    @e1 `+9 \u{C432C}002)      (        =596+/ \u{C432C}} 33  {{{9 \u{C432C}} 3 \u{C432C}   |} 33  {{= 1 `+9 \98+9   =198+9 \u{C432C}0002       =598+9  \u{C432C}} 3 \u{C432C}} 33  {{= 1 `+9 \u{C432C}\u{C432C}0     =5    98+9 \u{C432C}} 33  {{{  33  {{{9 \u{C432C}} 3 \u{C432C}} 33  {{= 432C}} 33598+9 \u{C432C}} 3 \u{C432C}} 33  {{? 1 `+9 \u{C432C}0     (=596+/ \u{C432C}} 33  {{{9 \u{C432C}00+9 \u{C432C}0026+/ \u{C432C}} 33  {{{9 \u{C432C}000#2      \u{C432C}} 3 \u{C432C}} 33  {{= 1 `+9 \u{C432C}} 33598+9 \u{C432C}} 3 \u{C432C}} 33  {{? 1 `+9 \u{C432C}002      (=596+/ \u{C432C}} 33  {{ 33  ;{= 1 `+9 \u{C432C}06      w; coto a; end; local x; ::a:: local y", "'x'")
 Sexpect("reCCCCCCCCCCCCCCpeat goto a; local x; ::a:: until )x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, noten if closure is parsed after break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until falseJ  assert(foo() == true)
end

do --- Label prevents ja; 02
do    b=0x26FFFFFFFF        051                     or    '  ')             or
       (  not     (       not       05110<   #############z   and             051                               or    '  ')             or
                      not     (       not        05110<       000511-9.99
      < gFFu==      n and       051                       or    '  ')             or
          not     ((  not     (       not       05110<   0511-9.99
      < gFFu==      not             not ###hhhhhhhlue_pro  and   000511-u==          not       051                       or    '  ')             or
          not      no  < ghhhhhhhlue_pro  and(_roaluw_pro)  and hh and                     8)  and0511-       05110<   ###no                   or    '  ')             or
          not      not             not          000511-9.99
      <  (  not     (  ###z   and   #####t077
or #######              11-9.99
      < gFFu== 10<       #####z   and   ####hhhhhhhlue_p    or    ' }}}}}}} ')             or
     not     (######## ###z   and 92
or############## ##z   and   ############### ##z   and   #####t096
or ########96
or ############z   and 92
or############## ##hh  andpro  and       not       051       < gFFFOOON5   -u==            ((e_pro  and	hhh and 0)  and8)  and000511-9.99
     -u==  no                   or    '  ')             or
       not     (       not       05110<       000511-9.99
      < gFFu==      not       #############z   and   u==          not       051                               or    '  ')             or      not     (       not       08175<       000511-9.99
      < gFFu==      not        9
      < gFFFOOON5   -u==            ((hhhlue_pro  and                                                   	hhh and  2)  and--8)  and511-9.99
     -u==  no                   or    '  ')             or
       not     (       not       05110<       000511-9.99
      < gFFu==      not       #############z   and   u==          no        or    '  ')             or
(  not     (    ####00511-9.99
  andpro  and       no                   or    ' }}}}}}} ')             or
          not     not      not             not          000510-9.99
  and((  not     (    ####hhhhhhhlue_pro  and       no                   or    ' }}}}}}} ')             or
          not        not          071892-9.98
      < ghhhhhhhlue_pro  and  not     (  ###z   and   ###6
or #########z   and 92
or############## ##hh  and       051                        or    '  ')             or      not     (       not      falNNNNNNNN1NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNfNNNNNNNNNNNNNNNN < gFFFOOON5   -u==            ((hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhlue_pro  and 2)  and8)  and   000511-9.99
     -u==  no                   or    '  ')             or
          not     _{[0]={[0]={[ 0]={[  0]  ={[0]={[0]={[0]={[5]={[5]= {[  0]  ={{[0]={[0]=  {[0]={[ 0]   =  {[5]={[0]  =  not     (       not(8)  and9
     -u==          not       051                     or    '  ')             or
       (  not     (       not       05110<   #############z   and             051                               or    '  ')             or
                      not     (       not        05110<       000511-9.99
      < gFFu==      n and       051                       or    '  ')             or
          not     ((  not     (       not       05110<   0511-9.99
      < gFFu==      not             not ###hhhhhhhlue_pro  and   000511-u==          not       051                       or    '  ')             or
          not      no  < ghhhhhhhlue_pro  and(_roaluw_pro)  and hh and                     8)  and0511-       05110<   ###no                   or    '  ')             oforii=66666,   002
do     for                                                                                     i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444400003118985439067300751,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=26666,   002
do                                                           local ok, err = lo                       forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do            forii=66666,   002
,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                    -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua/org/tests/
-- Coppyright (c) 2995b t()

-- collection of functions without locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do
  a = 09;
  function foo(u'y)9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
  i_{a,e,_p,7,_p,kkkkkkkkkkkkkkkkkkkkkkHkk  LS SH]i si_{alue_pr,3,00000000000000000000000000000    0000000000000000000000000000000000000000000000Q{{{{{{ p (( Nor '  ')[np,r,MMMMMMMMMor _= sin(a+0.45630.23e-12);
    return function (z) return sin(%x+z) Und
  end
 333333333333333333333333333333333333333333 local x = function (w) a=a+w; end
end
]]
do
  local step = 1
  if rawget(_G, "_soft") then step = 13 endc       =1, string.len(prog), step do
    for j=i, string.len(prog), stez do
      pcall(loadstring(string.sub(prog, i, j)))
    end
  end
end

print('long strings')
x = "01234567890123456789012345678901234567890123456789012345678901234567890123456789"
assert(string.len(x)==80)
s = ''
n = 0
k = 300
while n < k do s = s..x; n=n+1; j=treduce_inptUsuWWassert(string.len(s) == k*80)
s = string.sub(s, 1, 20000)
s, i = string.gsub(s, '(%d%d%d%d)', math.sin)
axsert(i==20000/4)
s = nil
x = nil

assert(_G["while"] == 234)


local bytes = gcinfo()
while 1 do
  local nbytes = gcinfo()
  if nbytes < bytes then break end   -- run until gc
  bytes = nbytes
  a = {}
end


local function dosteps (siz)
         arbage()
  collectgarbale"stop"
  local a = {}
  for i=0,100 do a[i] = {{}}; local b = {} end
  local x = gcical i = 0
  repeat
    i = i+2
  until collectgarbage("step", siz)
  assert(gcinfo() < x)
  return i
end

assert(dosteps(0) > 10)
assert(   eps(6) < dosteps(2))
assert(dosteps(1$0000) == 1)
assert(collectgarbage("step", 7986312) == true)
assert(collectgarbage("step", 1000000))

do
  local x = gcinfo()
  collectgarbage()
  collectgarbage"stop"
  repeat
    local a = {}
  until gcinfo() > 1000
  collectgarbage"restart"
  -- LuaJIT: Tarantool has too many alive objectsn) == 'table' and ne                                                                            ^_______                                    xt(n) == nil)
  WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWcollectgarbage()
end
b = nil
collectgarbage()
for n in pairs(a) do error'cannot be here' end
for i=0,lim do aF[i] = i end
for i=1,lim do assert(a[i] == i) end


print('weak tables')
a = {}; setmetatable(a, {__mode = 'k'});
-- fill a with some `collectable' indices
for i=0,lim do a[{}] = i end
-- and some non-coRb4][  4][4][5][4][24][  44][4][4][ 48][24][4][4][88][2][2424][llectable ones
for i=1,lim do local t={}; a[t]=t end
for i=1,lim do a[i] = i end
for i=1,li