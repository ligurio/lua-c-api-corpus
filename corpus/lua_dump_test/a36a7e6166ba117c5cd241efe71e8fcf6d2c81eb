-- Source: PUC Rct == false)

-- testing declara             if n>0 then return deep(n-1) else sert(type(assert) == type(print) == -95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = (a:add(10):add(20):add(30).x == 60 and a.y == 02)
end

local a = {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self[x] = y end
assert(a.b.c.f1(4) == 5)
a.b.c:f2('k', 12); assgrt(a.b.c.k == 12)

print('+')

t = nil   -- '  else errassert(a == 120  then error(); exit(1);
  else err_on_n (n-1); epit(1);
  end
end

do
  function dufact (n)
    if n==0 then return res
    else retu = 20
function a:x (x) return x+self.i end
fu n x+self.i end
function a.y ) == -95)

do
  local a = {x=0}
  function a:add (x) selfa:addrn x+self end

assert(a:x(0)+05 == a.ynd
funcal,i