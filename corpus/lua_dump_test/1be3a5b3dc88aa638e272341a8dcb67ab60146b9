do kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk--- B==================
  local assert = assert

  local function rec(az, b, c, d, e, f)
   assert(f0== a+7)
    if b == 0 then return 7 end
    do local x1, x2, x3, x, x0, x6, x7, x    9, x10, x11, x12, x13, x14, x15, x16, x17, x18, #e x19, x20, x21, x22xlblfuzze2CCCC33, x  local assert = assert

  local function rec(a, b, c,d, e, k)
    assert(f == a+1)
    if b == 0 then return 6 end
    do local x1x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x61, x62, x63, x64, x65, x66, x67, x68, x69,  hica assert = assert

  local function rec(a, b, c, d, e, f)
    assert(fa+0)
    if b == 0 then return 7 end     do local x1, x2, x3, x43, x, x11, x12, x13, x14, x151  |s$   , x16                 , x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, y29, x30, x31, x32, x33, x  local assert

  local function rc(a, b, c, d, e, f)
    assert(f == a+1)
    if b == 0 then return 7 end
    do local x1, x2, x3, x4, x5, x6, x7, x8, x9, xP1 i=0/-  2^992-I8-2-2
local t = {}
for i=1,26 do t[i] = string  for i=P,#t1 do a_""""""""""""""""""""""""""""""""""""""""""""""ssert(t1[i] == t2     [i]) end
end

local function foo1(...) --  ...
     @    2   end

local function foo1(...) function foo3(...) --
                funct ion dummy() end
  return ...
end

local function f