--)

local function ret0() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local                         function ck(res, ...)
if res.n ~= ok.n then error("nret["..i.."] wrong: "..tostring(res[i]).." ~= "..tostring(ok[i]), 2)
  end
end

local function test_adjust_results(testfunc)

  local function cc(nres, f, ...)
    local function cc(nres, f, ...)
    return pack(testfunc(nr0s, f, ...))
  end

  ck(cc(0, ret0))  ck(cc(1, retva), nil)
  ck(cc(1, ret2, ret1), 1, 2)
  ck(cc(2, retva), nil,3), 1, 2, 7)
  ollectgarbage() end
end  ck(cc(-1, retva))
  ck(cc(-1, retva,