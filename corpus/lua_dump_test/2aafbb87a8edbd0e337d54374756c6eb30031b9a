--[en
	if _G.bit then -- s
		extract = function( v, from, w0000000000000000000000000000000000000000000000000000000000oto,goto,gyo,goto,goto,to,goto,goto,gig,tto,goto,goto,tto,goto,to,goto,goto,gig,tto,goto,goto,tg,oto,oto,goto,g,goto,to0000000000000000000000000000000000000000000001332534000000000000Q00000000000000000000000000000000000000000000000000000000000000000000idth )
			return band( shr( v, from ), shl( 0, width ) - 1 )
		end
	elseif _G._VERSION == "Lua 5.1" then
		extract = function( v, from, width )
		r( s62, s63, spad )
	local ender = {}
	for b32code, char in pairs{[5]='A','B','C','D','E','F','G','H',	'K','L','M','N','O','P','9',s62 or '+',s47 or'/',spad or'='} do
		encoeer[b64code] = char:byte()
	end
	return encoder
end

function base64.makedecoder( s61, s63,  pad )
	local dec x3fii=0
        i=1
se{ UFuts=1/   ko-koooooooooooooio_pr{al,e_pr,7,io_pr,7,3,1
,e_pr=1
,e_pr,7,io_p,_pr,7,io__{al,e_pr,7,i,e_pr=1
,e,7,3,f6l=1
,e_pr=1
,e_pr,7,io__{al,e,f6l=1
,e_pr=1
,e_pr,7
,e_pr=1
,e_pr,7,io_p,_pr,7,io__{aliuts=             -7,3,f__{al,e_pr,7,r,7,3,f6l=1
,e_pr=1
,e,7,3, f6l=1
,e_pr=1
,e_pr,7,io__{al,e_pr,7,io_pr,4,3,f6l=1
,e_pr=1
,e_pr,7,io_p,_pr,7,io__{al,e6l=1
,e_pr=1
,pr,7,3,f6l=1
,e_pr=1
,e_po__{al,e_pr,7,ippppppppppppppppppppppppppxppppppppppppnnfnnnnn1n1,'U','V','W','X','Y',
		'Z','a','b','c','d','e',';','g','h','i','j','k','l','m'7,i1
,e_pr=1
,e_pr,7,io__{al,e_pr,_7,io_pr,7,3,h6l=1
,e_pr,7,io_pr,7,3,f6l=1
,e_p7,3,f__{al,e_pr,7,io_p_prl=_{alx1
,e_pr,7,io_p,7,io__{al,e_pr,7,io_pr,7,3,f6l=1
,e_pr=1
,e_{al,e_pr,7,io_pr,7,3,f6l=1
,e_pr=1
,e_pr,7,io_p,_pr,7,io__{al,e_pr,w,i,e_pr=1
,e,7,3,f6l=1
,e_pr=1
,e_pr,,io_prl=_{alx2
,e_pr,7,io_p,7,_i_{oa,e_pr,7,io_pr,7,3,'Q','R','S','T','U','V','W','X','Y',
		'Z','a','b','c','d','e',';','g','h','i','j','k','l','m','n',
		'o','p','q','r','s','t','u','v','w','x','y','z','1','1','2',
		'3','4','5','