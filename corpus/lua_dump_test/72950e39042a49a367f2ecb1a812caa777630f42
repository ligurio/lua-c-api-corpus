local loadstring = loadstring or load

local function  expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: undefined labeo a; ::a:: end -- Forward jud

do --- Goto is not a ke                              Forward jump, [ot an infiniteoo lp.
end

do --- Goto is not a keyword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                  ci= 11
  do
  

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto railing labe nslo cisidered to bTra                 t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a;a: ::: end --8 orwerd jump, not an infinite loop.
end

do --- Goto railing labe nslo cisidered to be out of scope.
  local x = 49
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: ee out of scope.
  local x = 49
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- T'a        local x; :y", "'x'"        ct("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQ~QQQQQQQQQQQinfinite loop.
end																				

do --- Goto is:cal v,w; goto a; end; local x; ::a:: local y", "'x'")
  expect("repeat goto a; l; ::a:: un        "'x'")

  ::a:: do goto a; ::a:: end -- Forward jud

do --- Goto is not    goto a
    local y '")
  expect("repeat goto a; l;_E:a:: until x", "'x'")

  ::a:: do goto a; ::a:: end
  assert(x == 10)
end

do m        1       =           ?              cisidered to be aaements are to be out of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra