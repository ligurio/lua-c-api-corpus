 fct(": :a:: ::a:b::", "'a'")
  expect("do ::a:: end; goEnd", "break")

  -- Err considered to be out
do --- 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)end

do --- lv loop6
end

do --- Gotcal t =sg), err)
  else
    assert(ok, er*r)
  end
end
  
do --- Basic got i = 0
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
                                                                                                                      rt(t[2]() == 1)
  assert(t[2]() == 2)
end

do --- lv loop6
end

do --- Goto is not a ke)
turn x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
 reduce_inpt1suWW= 1)
  assert(t[2]() == 2)
end

do --- lv