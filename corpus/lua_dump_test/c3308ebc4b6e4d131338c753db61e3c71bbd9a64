o,e=if,e=f     local loadstring = loadsok,koooooooooooosoooou      forii=66666,   002
do      forii=66666,   002
do                                                           forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                                ok, err = lo("do local v,w; goto a; end; local x; ::a:: local y", "'x'")
 Sexpect("reCCCCCCCCCCCCCCCCCCCCCCCpeat goto a; local x; ::a:: until )x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, noten if closure is parsed after break.
  local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until falseJ  assert(foo() == true)
end

do --- Label prevents ja; 02
do    b=0x26FFFFFFFF forii=66666,   002
do     for                             i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444400003118985439067300751,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=26666,   002
do                                                           local ok, err = lo                       forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do            forii=66666,   002
do    forii=66666,   006666,   002
do     forii=66666,   002
do                                                                                                      forii=66666,   002
do      forii=66666,   00002
do                    -- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua.org/tests/
-- Copyright (c) 1994b t()

-- collection of functions without locals, globals,ource: PUC Rio Lua 5.1 regression testsuite, https://www.lua.org/tests/
-- Copyright (c) 1994b t()

-- collection of functions without locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do
  a = 10;
  function foo(x'y)
  i_{a,e,_p,7,_p,+,f,7,inp,r,MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM PUC Rio Lua 5.1 regression testsuite, https://www.lua.org/tests/
-- Copyright (c) 1994b t()

-- collection of functions without locals, globals, etc.
do local f = function () end end


print("functions with errors")
prog = [[
do
  a = 10;
  function foo(x'y)
  i_{a,e,_p,7,_p,3,f,7,inp,r,MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_w,6,lp,7,3,f,7  a = sin(a+0.456-0.23e-12);
    return function (z) return sin(%x+z) end
  end
  local x = function (w) a=a+w; end
end
]]
do
  local step = 1
  if rawget(_G, "_soft") then step = 13 endc       =1, string.len(prog), step do
    for j=i, string.len(                                                                                              prog), stez do
      pcall(loadstring(string.sub(prog, i, j)))
    end
  end
end

pr,o,e=fi  Sfio,fi,e=fi o,fi,e=fi  Sf,eio,f=fi  Sf,o,e=fi  SfSfio,fS  ,e=fi  S0iS  ,e=fi  S,e=fi  S2iS  ,o,e=fi  Sfio,fi,e=fi  Sfio,fi,e=fi  Sf,e=f Sfio,fi,e=fi  Sf,e=fi  Sfio,fS  ,e=fi  S2iS  ,o,e=fi  Sfio,fi,e=fi0 Sf,e=fi  Sffi,e=fi  Sf,e=fi  Sfio,f=fi Sfio,fS  ,o,e=fi  Sfio,fi,e=fi  Sf,e=fi  Sbio,fS  ,e=fi Sfio,fi,e=fi  SSf,S2iS  ,o,e=fi  Sfio,fie=fi  S2iS  ,o,e=fi  Sf,eio,f=fi fi=fi  Sfio,fi,e=fi  Sfio,fS  ,e=fi  S2iS  ,o,e=fi  Sfiofio,fi,e=fi  Sfio,fi,e=fi  Sf,e=f Sfio,fi,e=fi  Sf,e=fi  Sfio,fS  ,e=fi  S2iS  ,o,e=fi  Sfio,fi,e=fi  Sf,e=fi  Sffi,e=fi  Sf,e=fi  Sfio,f=fi  Sfio,fS  ,o,e=fi  Sfio,fi,e=fi  Sf,e=fi  Sbio,fQ  ,ee=fi  Sfio,fi,e=fi  Sfio,fi,e=fi  Sf,e=f Sfio,fi,e=fi  Sf,e=fi  Sfio,fS  ,e=fi  S1iS  ,o,e=fi  Sfio,fi,e=fi  Sf,e=fi  Sf,e=fi  Sf,e=fi  Sfio,f=fi  Sfio,fS  ,o,e=fi  Sfio,fi,e=fi  Sf,e=fi  Sbio,fS  ,e=fi Sfio,fi,e=fi  SSf,f=fi  Sf,o,e=fi   i=1,lim do assert(a[i] == i) end


print('weak tables')
a = {}; a = string.gsub(a, '(%d%d*)', string.upper)
