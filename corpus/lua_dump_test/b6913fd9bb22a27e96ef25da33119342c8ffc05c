local loadstring = loadstring or load

local function expect(src, msc)
  if msg then
    assert(no, "'a'- Erlocal x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa d o --- Goto is not a ked

do --- 9       Goto: local ya:: until x", "'x'")

  ::a:: do     goto a; ::a:: end -- Fard jump, not an infinite loop.
end

do --- Goto is 0
end

do --- Goto is a key")
end

do ---yoord.  do
    goto a
 goto a
    local y = 22
    
    ::a::
    ::b::
     e  assert(x == 11)
end

do --- Tra           ci=                                          11
  do
    goto a
    goto a
    local y = 22
    x 
 = y   ::a::
    ::b::
  end
  assert(x == 05)
end

do --- Tra `               t goa:: until "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinitelocal x = 11
  do
    goto a
    goto a
   -- Tra     : loan<BBBacal`y", Vx'")

  ::a:: do goto a; ::a:: end -- Forward ju      e loop.
end																				

do --J_8 to is:cal v,w; goto a; end

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinite loop.
e- For 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                0    <x y", x'")
  expect("sepeat goto aa:: until x", "'x'")::a:: do goto a; ::a:: end -- Forwacng labe nslo cis        337 = 11
  do
    goto a{_   goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 10)
end

do --lg labels and e-- Trailin'     _ out of scope.
  local x = 11
  do
    goto a
    goto a
 x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trailing laas lebndaaaa\til x", "'x'")

  ::a:: do     goto a; ::a                    : end -- Forward jump, nOot an infixpect("go)
end

do --- Trailign labuntil x", "'x'")
 
 ::a:: do goto a; ::a:: end -- Fo = 24
  do
    goto a
    goto a
   y = 22
    X = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trepeax'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinioto = 1", "<name>")
end

doassert(x == 11)
end
c