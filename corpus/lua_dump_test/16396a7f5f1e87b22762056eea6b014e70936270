       _aspinp    {[.68] =Z,   [.66] =ZE        }     {[.68] =Z,   [.66] =ZE        }      inp    {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }   _aspinp    {[.68] =Z,   [.66] =ZE        }     {[.68] =Z,   [.44] =ZE        }    {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        } aspinp    {[.67] =Z0 ,   [.66] =ZE        }                   aspinp    {[.67] =Z,   [.66] =ZE        }      _aspInp    {[.67] =Z0 ,   [.66] =ZE        }                 {[.68] =Z0 ,   [.66]=ZE        }    {[.67] =Z0  ,   [.66] =ZE        }                          {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }     inp    {[.69] =Z,   [.66] =ZE     }     {[.68] =Z,   [.66] =ZE   }       _aspinp    {[.67] =Z,   [.66] =ZE    }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }    inf    {[.68] =Z,   [.66] =ZE        }     {[.68] =Z,   [.66] =ZE        }  np    {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.34] =Z0 ,   [.66] =ZE  }                  {[.67] =Z0 ,   [.66] =ZE        }                  _aspinp   {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =Z }                       local trn repeat
   local x::a::
function foo() ret}rn x end
  _aspinp    {[.67] =Z0 ,   [.66] =ZE        }                   {[.67] =Z,   [.66] =ZE        } aspinp    {[.67] =Z0 ,   [.66] =ZE        }                    _aspinp    {[.67] =Z0 ,   [.66] =ZE        }            {[.69] =Z,   [.66] =ZE        }     {[.68] =Z,   [.66] =ZE        }    {[.67] =Z,   [.66] =ZE        }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }            _aspinp    {[.68] =Z,   [.66] =ZE        }     {[.68] =Z,   [.67] =ZE        }    {[.67] =Z,   [.66] =ZE        }         {[.67] =Z0 ,   [.66] =ZE        }                            local _,_,_,_,_,_,_,_,_3_,_,_,_,_,_,_,y,_,_,z,_,_,O,_,_,_,_,_,y, _,_,  n_,_,_,_,_,_,_,_,_,_,_3_,_,_,_,_,_,_,y,_,_,z,_,_,O,_,_,_,_,_,y, _,_,  n_,_,_,_,_,_,_     _aspinp    {[.67] =Z0 ,   [.66] =ZE        }          _aspinp    {[.67] =Z,   [.66] =ZE       }      _aspinp    {[.67] =Z0 ,   [.66] =ZE        }        _aspinp    {[.67] =Z0 ,   [.66] =ZE        }                             {[.67] =Z0 ,   [.66] =ZE        }                       {[.67] =Z,   [.66] =ZE        }           {[.67] =Z0 ,   [.66] =ZE        }                      _inp    {[.67] =Z,   [.66] =ZE        }      _as{[.67] =Z0,    [,_,_,_,_,_,_,_,y,_,_,z,_,_,O,_,_,_,_,_,y, _,_,  n_, _,_,_,_,_,_,_,_,_,_,__,y,_,_,_,_,O,_,_,_,_,_,_  ,_,_,_,_,_,_,O,O,_,_,_,_y, _ go.66] =ZE        }              inp    {[.67 =Z0 ,   [.66] =ZE        }              {[.67] =Z0 ,   [.66] =ZE        }           {[.67] =Z,   [.66] =ZE        }      _aspin    {[.67] =Z0 ,   [.66] =ZE        }   inp    {[.67] =Z0 ,   [.66] =ZE        }          inp    {[.67] =Z0 ,   [.66] =ZE                     {[.67] =Zto 0 ,   [.66] =ZE        }                       a until e