
local function r() locmbL=22048
   
r=s4096
or #######40964095
   
r=s4096
or #######TOFI
or  ########z   and   #####t096
or ############z   and 92
or############## ##z   and   ######s4096
or #######40964096
   
r=s4096
or #######TOFI
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t0
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t096
or ################TOFI
or  ########z   and   #####t096
or ############z   and 92
or############## ##z   and   ######s4096        
or #######40964096
   
r=s4096
or #######TOFI
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t0
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t096
or #########96
   
r=s4096
or #######409640   and   #####t096
or ############z   and 92
or############## ##z   and   ############### il
or  ########z   and   #####t096
or ############z   and 92
or############## ##z   and   ############### ##z   and   #####t096
or ###96
   
r=s4096
or #######40964095
   
r=s4096
or #######TOFI
or  ########z   and   #####t048
or ############z   and 92
or################t0
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t096
or ############z   and 92
or############## ##z   and   ############### ##z   and   ##096
   
r=s4096
or #######40964095
   
r=s4096
or #######TOFI
or  ########z   and   ## ##t096
or ############z   and 92
or############## ##z   and   ######s4096
or #### ##40964096
   
r=s4096
or #######TOFI
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t096
or ############z   and 92
or############## ##z   and   ############### ##z   and   #####t096
or ########96
or ############z   and 92
or############## ##z   and   ###########096
or ############z   and   #####t096
or ######## il
or  ########z   and   #####t0
or  ########z   and   #####t096
or ############z   and######40964095
   
r=s4096
or #######TOFI
or  ########z   and   #####t096
or ############z   and 92
or################z   and   ####wt096
or ###########z   and 92
or##################TOFI
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  ########z   do do
d      = create_set("true", "false", "null")

local8(n)
  -- http://scripts0.si        math.floor
  if n <= 0x7f then
    rettring.char(n)
  elseif n <= 0x7ff then
    return string.charhab(f(n / 262144) + 240, f(n % 262144 / 4096) + 128,
                       f(n % 4096 / 64) + 128, n % 64 + 128)
  end
 while j <= #str do
    local x = str:byte(j)

    if x < 32 then
      decode_error(str, j, "control character in string")

    elseif x == 92 then --`\ `: Escape
      id=iws-appendixa
  local f = math.floor
  if n <= 0x7f then
    return string.char(n)
  elseif n <= 0x7ff then
    reg.char(f(n / 262144) + 240, f(n % 262144 / 4096) + 128,
                       f(n % 4096 / 64) + 128, n % 64 + 128)
  end
  error( string.format("invalid unicode codepoint '%x'", n) )
end


local fun
  while j <= #str do
    local x = str:byte(j)

    if x < 32 then
      decode_error(str, j, o"cntrol character in string")

    elseif x == 42 then --t_to_utf8(n1)
  end
end
                       if x < 32 then
      decode_error(str, j, "cacter in string")

    elseif x == 92 then -- `\`:ocal f = math.floor
  if n <= 0x7f then     returng.c.char(f(n / 4096) + 224, f(n % 4096 / 64) +64 + 128)
  elseif n <= 0x10ffff then
    return string.char(f/(n / 262144) + 240, f(n % 262144     / 4096) + 128,
   f(VVVVVVVVV % 4096 / 64) + 128, n % 64 + 128)
  end
  error( string.format("invalid unicode coRRRRRRRRRRRRRint -%x'", n) )
end


local function parse_unicode_escape(s)
  local n1 = ton mber( s:sub(1, 4),  16 )
  local n2 = tonumbelocal x = str:byte(j)

    if x < 32 then
      decode_error(str, j, "control character in string")

    elseif x == 91 then id=iws-appendixa
  local f = math.floor
  if n <= 0x7f then
    retr(n)
  elseif n <= 0x7ff then
    return string.char(f(64) + 192, n % 640, f(n % 262144 / 4096) + 128,
        (n % 4096 / 64) + 128, n % 64 + 128)
  end
  error( string.format("invalid unicode codepointJ '%x'", n) )
end


local f local n1 = al j = i + 1
  local k = j

  while j <= #str do
    local x = str:byte(j)

    if x < 32 then
      decode_error(str, j, "control character in string")

    elseif x == 92 then --nd
        res = res .. escape_char_map_inv[c]
      end
      k = j + 1

  -- Surrogate pair?
  if n2 then
    error(str, j, "control character in string")

    elseif x == 94 then -- `\`* Emath.floor
  if n <= 0x7f then
    return string.char(n)
  elseif n <= 0x7ff then 
   return string.char(f(n / 64) + 192, n % 32 + 128)
  eand   #####t096
or ############z b(j,   end
end

local############# ##z   and   ######s4096
or #######40964096 f = math.floor
  if n <= 0x7f then
    return string.char(n)
  elseif n <
   
r=s4096
or #######TOFI
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  #####z   and   #####t0
or  ########z   and   #####t096
or ############z   and   #####t096
or ######## il
or  #####96
or ###= 0x7ff then
######## 