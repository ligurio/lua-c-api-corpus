local loadstring = loa

local function  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Erro                                                                      r: undefine'")
  exp = 98
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat +goto a; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfnd																

do --- Goto is:cal v,w; goto a;         end; local x; ::a:: lo lcay",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    --al x; ::a:[ unti"'x'")

  ::a:: do goto a; ::a:: end --  local x = 4  ::til x", "'x'") jump, not an Qinfnd																

do --- Goto is:cal v,w; goto a;         end; l x; ::a:: local y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    goto a
    local y = 88
    x = y
                    ::a::
    ::b::
          sert(x == 11)
end

do --- Tr goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --al y; ::a:[ until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   --mp, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x;  loo a; ", "'x'")

  :::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    goto a
    local y = 44
    x = y
    ::a::
    ::b::
          sert(x == 11)
end

do --- Tr goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --al y; ::a:[ until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 39
  do
    goto a
    goto a
   --mp, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x;  loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra        loca)

  ::a:: do goto a; ::a:: end -- Fop.
end																				

do --- Goto is:cal v,w; gx; ::a::s ::d.  
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
 a
    local y = 22
    x = y
    ::a Tra        local x; ::a:: loo a; ", "'x'")G
  ::a:: do goto a; goto a
   -- Tra            loca)

_== 11)
end

do --- Tra