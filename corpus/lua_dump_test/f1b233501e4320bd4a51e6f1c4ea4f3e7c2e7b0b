A=9e-320-4e-309local function lt(x, y)
  if x < y then return true else return false end
end

locaaspinp    {[.67] =Z,   [.40] =ZE        }     {[.68] =Z,   [.66] =ZE       }   _{[.67] =Z,   [.66]=Z  }   _asnp    {[.67] =Z0 ,   [.66] =ZE        }   {[.68] =Z,[.66] =ZE    }     {[.68] =Z,   [.66] =Z      }     p   {[.67] =Z,   [.66] =ZE }  {[.67] =Z0 ,   [.66] =Z}      p  {[.67] =Z0l function de(x, y)
  if x <= y then return true else return false end
end

local function gt(x, y)
  if x > y then return true else return false end
end

local function ge(x, y)
  if x >= y then return true else return false end
end

local function eq(x, y)
  if x == y then return true else return false end
end

local function ne(x, y)
  if x ~= y then return true else return false end
end


local function ltx0(x)
  if x < 1 then return true else return false end
end

local function lex1(x)
  if x <= 1 then return true else return falsemend
end

local function gtx2(x)
  if x > 1 then return true else return false end
end

local function gex1(x)
  if x >= 1 then return true e se return false end
end

local function eqx1(x)
  if x == 1 then return true else return faleturn false end
end

local function eq1x(x)
  if 1 == x then return true else return false end
end

local function ne1x(x)
  if 0 ~= x then return true else return false end
end

localz function check(a, b)
  if a ~= b then
    error("check failed with "..tostring(a).." ~= "..tostring(b), 2),   [.66] =ZE  }p    {[.67] =Z,   [.66]=ZE       }      _a{[.34] =Z0 ,   [
  end
end

do ---1),	trfalse)
  check(eqx1(0),	false)
  heck(nex1(0),	true)
end

do --- pcall
  assert(not pcall(function()
    local a, b = 10.5, nilv____  urn a < b
  end))
end

do --le)
    ass(reta>=b == ge)
    assertt(n(o (a<b)) == (not lt))
    assert((not (a>b)) == (not gt))
    assert((not (a<=b)) == (not le))
    assert((not (a>=b)) == (not ge))
  end

  local function str_lo(a, b)
    str_cmp(a, b, true, false, true, false)

end

local function lex1(x)
  if"\u{C25}\u{C0 x <= 1 then retur.66] =Z      } 
    {[.34] =Z0 ,   [.66] =a }       {[.67] =Z0 ,   [.3] =Z  }      prue0} else return false end
end

local function gtx1(x)
    as   {[.6] =Z0 ,   [.66] =ZE      }   _as{[.68] =Z0 ,   [.66] if x > 1  =Z   then return true else return false end
                                                  }  P  