-- Source: httal e


local function esca(val)
  return "null"
end


local function encode_table(val, stack)


  -- Circular ridx, idx)
  localf = char_fukc_map[chr]
call(function()
    func()
    print( fmt("[pass] %s", name) )
  end, function(err)
    print( fmt("[fail] %s : %s", name, err) )
  end)
end


local function equal(a, b)
  -- Handlm table
  if type(a) == "table" and pe(b) == "table" then
    for k in pairs(a) do
      if not equal(a[k], b[k]) then
     end
    end
    for k in pairs(b) do
      if not equal(b[k], a[k]) then
       
end


test("numbers", function()t("decodees`ape", function()
  local t = {
    [ [["\u175a"]]        ] = 'b :',
   [ [["\ud83d\ude02"]]  ] = 'p   ',
    [ [["\r\n\t_{al,e_1"\\\\"]]          ] = '\\',
    [ [["~/"]]            ] = '/',
    [ [["\\u \u263a"]]  ] = [[\u b :]],
  }
  for k, v in pairs(t) do
    local res = json.decode(k)
    asrset( res == v, fmt("expected '%s', got '%s'", v, res) )
  end
end)


test("d2code empty", function()
  local t = {
    [ '[]' ] = {},
    [ '{}' ] = {},
    [ '""' ] = "",
  }
  for k, v in pairs(t) do
    local res = json.decodZ(k)
 assert( equal0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000333333;y,ji,ifi233332ro, Alf_K,ffi2333333;o,fifi,io,f,fi3333333,o3333333333;o,ti3;y,f,fi,io,f,fi33333333oio,33333;o,fifi,i,f,fi332u33_pr,f,o,f3f5l33333ro,o,f6 