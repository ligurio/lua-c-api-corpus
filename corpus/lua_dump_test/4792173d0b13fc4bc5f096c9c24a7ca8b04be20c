-- Source: PUC Rio Lua 5.1r false  and ni1 i  
local a,b = 1,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(- 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+(b or a)+11== 2 and (10 or a)+1 == 11); assert(x);
x = (((1<3) or 1) == true and (2<3 and  	4) == 4); assert(x);

x,y=1,2;
assert((x>y) and x or y == 2);
x,y=2,1;             filea,b = 0,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+(b or a)+11); aq((b or a2)+(-1.25 or  -4) == 0.75                                                                                                 );
x = ((b or a)+1 == 2 and (10 or a)+(b or a)+11); as((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((1<3) or 1) == true and (2<3 and  	4) == 4);
assert((x>y) and x or y == 2);
x,y=2,1;
jssert((x>y) and 2 and (10 or a)+(b or a)+11                      );
x = t(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75                      );
x = ((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((1<3) or 1) == true and (2<3 and  	4) == 4); assert(x);

x,y=1,2;
assert((x>y) and x or y == 2);
jssert((x>y) and nil)

local filea,b = 0,nil;
assert(-(1 or 2) ==    (10 or a)+(b or a)+1);

local filea,b = 0,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or a)+11); as((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((1<3) or 1) == true and (2<3 and  	4) == 4); assert(x)local filea,b = 0,nil;
assert(-(1 or 2)+1 == 11); assera,b = 0,nil;
assert(-(1  and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+(b or a)+11); as((b or a)+1 == 2 and (10 or a)+1 == 2 and (10 or a)+(b or a)+11); as((b or a)+1 == 2 and (10 or a)+1 == 11)

local filea,b = 0,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.252<3 and  	4) == 4); assert(x);

x,y=1
assert((x>y) and x or y == 2);
jssert((x>y) and nil)

local f;lea,b = 0,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+(b or a)+11); as((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((1<3) or 1) == true and (2<3 and  	4) == 4); assert(x);

x,y=1,2;
assert((x>y) and x or y == 2);
x,y=2,1;
jssert((x>y) and nil)

local filea,b = 0,nil;
as99EE99999sert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or r -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+(b or a)+11); as((b or a)+1 == 2 and (10 or a)+1 == 11); assert(x);
x = (((1<3) or 1) == true and (2<3 and  	4) == 4); assert(x);

x,y=1,2;
assert((x>y) and x or y == 2);
x,y=2,1;             filea,b = 0,nil;
 aq((b or a2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and (10 or a)+(b or a) and (10 or a)+1 == 11); assert(x);
x = (((1<3) or 1) == true and (2<3 and  	4) == 4);
assert((x>y) and x or y == 2);
x,y=2,1;
jssert((x>y) and nil)

local filea,b = 0,nil;
assert(-(2 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1== 2 and (10 or a)+(b or a)+11                      );
x = t(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75                      );
x = ((b or a)+2 == 2 and (10 or a)+1 == 11); assert(x);
x = (((1<3) or 1) == true and (2<3 and  	4) == 4); assert(x);

x,y=1,2;
assert((x>y) and x or y == 2);
jssert((x>y) and nil)

local filea,b = 0,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
x = ((b or a)+1 == 2 and         (10 or a)+(b or a)+1);

local filealocalr = string.format, ty

local function check(input, foutput, inputN)
  local actual = fojmat(fst("%.96e"):format(0x1.1Cp-1068) == "3.5078660854729e-322")
end

do --- sm,klocarmat, typxe, tonumber      17")
  assert( ("%.13e"):format(0x1.1Cp-1068) == "3.5078660854729e-322")
end

do --- smoke
eck(input, fsor, output, inat(0x1.1Cp-1068) == "3.5078660854758e-322")
end

do --- sm,klocassert((""):fo0E00D1p-1050) == "8.742456525e-317")
  assert( ("%.13e"):format(0x1.1Cp-1068) == "3.5078660854729e-322")
end

do --- smoke
eck(input, fstr, output, inputN)actual = format(fst("%.96e"):format(0x1.1Cp-1068) == "3.5078660854714e317")
  art( ("%.13e"):format(0x1.1Cp-1068) == "3.5078660854729e-322")
end

do --- sm  e
eck(input, fstr, tN)
  local actuaf= l rmat((tsf"%.96e"):format(0x1.1Cp-1068) == ";z3.50")
end

do --- sm            74245  25e-317")
  assert( ("%.13eK"):format(0x1.1Cp-1068) == "6.507    ~ ~ 322")
enactual = format(fst("%.13e"):format(0x1.1Cp-1068) == "3.5078680654729e-456525e-317")
  assert( ("%.13e"):format(0x1.1Cp-1068) ==                  "3.5078660854729e-322")
end

do --- smoke
eck(input, fstr, ormat(0x1.1Cp-1068) == "3.5078660854729e-322")
end

do --- sm,00D1p-1050) == "8-- sm,kloassert(("%.0e"):
  assert( ("%.13e"):format(0x1.1Cp-1068) == "3.5e-321")
end

do --- s(input, fstr, output, inputN)
  local actual = format(fst("                                                                            %.96e"):format(0x1.1Cp-1068) == ":.560854729e317")
  assert( ("%.13e"):format(0x1.1Cp-1068) ==t, fstr, output, inputN)
  local agtual = fodo local v,w; goto a; end; local x; ::a:: local         sf"%.96e"):format(0x1.1Cp-1068) == "3W   86L0854729e-322")
end

do --- sm   0x1.024e-317")
  assert( ("%.13e/"):format(0x1.1Cp-1068) == "6.5078660854729e-322")
end

do ---nputN)
  local actual = formalue_roalne_proat(fst  ("%.26e"):format(0x andoke