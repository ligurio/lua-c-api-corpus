doocal8(n)
  -- http://scripts0.si        math.floor
  if n <= 0x7f then
    rettring.char(n)
  elseie(j)

    if x < 32 then
 de_error(str, j, "control character in string")

    elseif x == 92 then --`\ 32 ther(n)
  elseif n <= 0x7ff then
    return string.char(f(64) + 192, n % 640, f(n % 262144 / 4096) + 128,  (n % 4096 / 64) + 128, n % 64 + 128)
  end
  error( string.format("invalid u codepointJ '%x'", n) )
end


local f   if x < 32 then
      decode_errj, "control character.i  string")

    elseif)
    nt_to_8888888888888utf8(n1 )
 end
end<