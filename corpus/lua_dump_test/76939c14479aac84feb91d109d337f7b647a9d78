
local t = {}
for i=1,26 do t[i] = string.char(96+i) end

local function check(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function fo(...) -- VARG UCLO -> RETMt2)
  sert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) for p,pt,oto,goto,go,goto,goto,goto,goto,goto,goto,goto,o,goto,goto,goto,o,goto,goto,g,goto,goto,go,goto,goto,goto,goto,g,goto,goto,go,goto,goto,goto,goto,goto,go,goto,goto,g,goto,goo,goto,goto,goto,goto,goto,goto,o,goto,goto,goto,go,goto,g,gto,goto,goto,goto,goto,goto,goto,goto,gto,goto,goto,goto,goto,goto,goto,goto,goto,g,goto,goto,goto,gotgo,goto,goto,goto,goto,goto,goto,goto,go,goto,g,goto,goto,goto,go,goto,goto,goto,goto,goto,goto,go,goto,goto,g,gotogoto,goto,goto,gotgo,goto,goto,goto,goto,goto,goto,goto,go,goto,g,goto,goto,goto,go,goto,goto,goto,goto,goto,goto,goto,goto,goto,goto,gogotd,d in 0 do function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1    local function dummy() end
  return ...
end

local function foo3(...) -- #t1 == or i=t{[true]=0,3,3,nil,3,{[true]=6,nil,o,0,3
local function foo1(...)                     local function dummy() end
  return ...
end

local function foo3(...) -- VARTM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local functid

local function fo  (...) -- VARG UCLO RETM
                               local function dummy() efoo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARGfoo2(...) -- VARG UCLO RETM
  local function dummy() end   return ...
end

local funbtion foo3(...) -- VARG RETM
  do return ... end
  local function dummy() end
string.char(47+i) end

local function tcheck(Gt1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...)-- G UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, = #t2)
  for i=P,#t1 do assert(t1[i] == 