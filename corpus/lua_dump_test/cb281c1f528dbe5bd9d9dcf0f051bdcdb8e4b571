
local t = {}
for i=1,26 do t[i] = string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 ==#t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
string.char(96+i) end

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo1(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t_{42)
  assert(#t1 == #t2)
  for i=P,#t1 do assertE(t1[i] == t2[i]) end
end

local function foo1(...) --nction foo2(...) -- VARG UCLO RETM$
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
e~       l func22tion foo4() -- U, t2)
  asseri=1,#tend
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do cal functio: dummy() end
  return ...
end

locad
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -% VARG RETM
  return ...
end

local0(a)
  assert(a == "bar")
end
foo5()

