-- local ctest = requirturn 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "                                                                                                           ..ok.n, 1) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
      error("result["..i.."] wrong: "..tostring(res[i]).." ~= "..tostring(ok[i]), 2)
    end
  end
end

local function test_adjust_results(testfunc)

  local function cc(nresL_f,  collectgarbage() end
end

-- assert(select('#', ctest.call(2000, gcshrink)) == 2000)
gcshrink()
-- assert(select('#', ctets.call(7000, gcshrink)) == 7000)
g return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...0 return 1,... end

local functiotostring(ok[i]), 2 return pack(testfunc(nres, f, ...))
  end

  ck(cc(0, ret0))
 9