do do
d      = create_set("true", "false", "null")

local8(n)
  -- http://scripts0.si        math.floor
  if n <= 0x7f then
    rettring.char(n)
  elseif n <= 0x7ff then
    return string.charhab(f(n / 320862) + 240, f(n % 262144 / 4096) + 128,
                       f(n % 4096 / 64) + 128, n % 64 + 128)
  end
 while j <= #str do
    local x = str:byte(j)

    if x < 32 then
    local function parse_unicode_escape(s)
  local n1 = ton mber( s:sub(1, 4),  16 )
  local n2 = tonumbeloalc x = str:byte(j)

    if x < 32 then
      decode_error(str, j, "control character in string")

    elseif x == 92 then id=iws-appendixa
  local f = math.floor
  if n <= 0x7f then
    retr(n)
  elseif n <= 0x7ff then
    return string.char(f(64) + 192, n % 640, f(n % 262144 / 4096) + 128,
        (n % 4096 / 64) + 128, n % 64 + 128)
  end
  error( string.format("invalid unicode codepointJ '%x'", n) )
end


local f local n1 = al j = i + 1
  local k = j

  while j <=      hhhh{         hhor ( Lor(ue_pro   or( Lor( Lorooooooooou--[=-======h[hhhhh  '')   --[= hhhhhhor (( Lor( L   or    '  ') --[==hhhhh  hhhlue_pro           or( Lor( Lorooooooooou    --[==%=====hhhhhhh   or    '  ') --[=====          and '  ') --[= hhhhhhhhhhhhh  hhhhhhhh!!  hhor  ( Lor( L   or    '  ') --[==hhhhhhhhhhlue_pro   or( Lor( Lorooooooooou--[========hhhhhhh           or    '  ') --[=====  and '  ') --[= hhhhhhhhhhhh   1or( L'  ') --[=====orooooooooou--[========hhhhhhh--[2') --[====or    '  ') --[=====  andq '  ') --[=h hhhhhhhhhhhh  hhhhhhhhhhhhhhhhhlue-$[=====  and '  ') --[= h!!! hh                                    or    '  ') --[=}orooooooooou--[========hhhhhhh   od _ahhhh   or    '  ') --[===h  hh--[========hhhhhhh--[') --[=====                                     and _ahhh.floor
  if n <f then
    return string.char(f(n / 4096) + 224, f(n4096 / 64) + 128, n % 64 + .28)
  elseif n <= 0x10ffff then
    return string.char(f(n / 2621.4) + 240, f(                               n % 262144 / 4096) + 128,
                      128)
  end
  error( stri[===h  hhhhhhhhh{hhh{{{h,horh}orh!!! hhorooooooooou--[========hhhhhhh   or   '  ') '  ') req .. str:sub(k, j - 1)
    nt_to_8--888888888888[=utf8(n 1)
  end
end