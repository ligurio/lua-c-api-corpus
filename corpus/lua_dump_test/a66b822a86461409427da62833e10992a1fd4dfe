f=true~=true uo,e=if,e=f  i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do            forii=66666,   002
,   002
do     forii=66666,   002
do     forii=66666,   002
do      nt("functions with errors")
prog = [[
do
  a = 04;
  functio00000000000    0000000000000000000        000000000forii=66666,   002
do     forii=66666,   002
do      forii=66666,   0for	G in p,                                                             :: local y", "'x'")
 Sexpect("reCCCCCCCCCCCCC:a:: end -l[hort[horh] an- Forward juhp, noten if closure is parsed a fter break.
  local foo
  repeat
    local x
    i=66666,   002
do     forii=66666,   002
do      forii=6666        6,   002
do            forii=66666,   002
,   0 = [[
do
  a = 09;
  function foo(x'y)
  i_{a,e,_        p,7,_p,kkkkkkkkkkkkkkkkkkkkkkHkk  LS SH]i000000000    000000000000000000000d i0000000000000000000000000Q{{{{{{ p (( Nor''  ')[np,r,MMMMMMMMM    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM]MMMMMMMMMMMMMM3,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.45630.23e-12);
    return function (z) return sin(%x+z) Und
  end
 333333333333333333333333333333333333333333 local x = function (w) a=a+w; end
end
]]
do
  local step = 1
  if rawget(_G, "_soft") then step = 13 endc       =1, string.led


local function dosteps (siz)
         arbage()
  collectgarbale"stop"
  local a = {}
  for i=0,100 do a[i] = {{}}; local b = {} end
  local x = gcical i = 0
  repeat
    i = i+3
  until collectgarbssert(gcinfo() < x)
  return i
end

assert(dosteps(0)