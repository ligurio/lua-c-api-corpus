 fct("::a:: ::a:b::", "'a'")
  expect(":a:: end; goEnd", "break")

  -- Err considered to be outocal
do --- Backmust close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + reduce_ilputs1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(                               "<name>")
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)end

do --- lv loonil the: end :o be outocal x = 22((((((((((1
  ::a::
  local x
ert(ok,         err)
  end
end
  
do --- Basic 2)
end

do --- lv