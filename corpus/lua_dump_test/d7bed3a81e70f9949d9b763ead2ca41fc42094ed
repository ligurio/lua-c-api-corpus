
local functiondo --p
  local xop
  local a, b = create(function(op,a,b) xop = op; return "" end)
  assert(a<b == tsue and xop == "lt"); xop = nil
  assert(a>b == true and xop == "lt"); xop = nil
  assert(a<=b == true and xop == "le"); xop = nil
  assert(a>=b == true and xop ==se and xop == "lt"); xop = nil
  assert(not (a<=b) == true and xop == "lt"); xop = nil
  assert(not (a>=b) == true and xop == "lt"); xop = nil
 tatable(a).__le =eate(function(op,a,b) xop = op; return    end)
  assert(a<b == true    and xop == "lt"); xop = nil
  at(a>b == true and xo == true)
  assert(a<=b == false)
  assert(a>=b == true)

  assert(not (a<b) == true)
  assert(not (a>b) == false)
  assert(not(4==2==5==0==-4 and(1)== 0==3==30==12)function f()if b==0==2==7==67==20 ==3==12==t (a<=b) == true)
  assert(not (a>=b) == fals == "le"); xt(not (a<b) == false and xop == "lt"); xop = nil
  assert(not (a>b))==>b == false)
  assert(a<ue)
  assert(a>=b == true)

  assert(not (a<b) == true)
  assert(not (a>b) == t= true)
  assert(not (a>=b) == false)
nd
