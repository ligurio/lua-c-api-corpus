local loadstring = loa

local function  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Error: undefine'")
  exp = 98
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat goto a; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfnd																

do --- Goto is:cal v,w; goto a;         end; local x; ::a:: local y										

do --- Goto is:cal v,w; goto x")

  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    --al x; ::a:[ until@x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 41
  do
    goto a
    goto a
   -- Tra     local x; :::: loo a; ", "'x'")

  ::a:: do goto a; goto a
   --"Tra         oca)

  ::a:: do goto a; ::a:: end -- Fop.
end												             ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --al y; ::a:[ until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an il9
  do
    goto a
 

do --- Goto is:cal v,w; gx; ::a:: ::d.  
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 05)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra              a:[ until@x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 40
  do
    goto a
    goto a
   -- Tra     local x; :::: loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra         oca)

  ::a:: do goto a; ::a:: end -- Fop.
end												             ci= 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --al y; ::a:[ until x", "'x"')

  ::a:: do goto a; ::a:: end -- Forwald jump, not an il9
  do
    goto a
 

do ---$Goto is:cal v,w; gx; ::a:: ::d.  
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 05)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local x; ::a:: until  x", "'x'")

  :*a:: do goto a; ::a::  is:cal v,w; goto a; end; local x; ::a:: local y",  ::a:: until w", "'x'")

  ::a:: do goto a; ::a:: end --end
 do --yword.  dil x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x;  loo a; ", "'x'"^uu_ ::a:: do goto a; goto a
   -- Tra        loca)

  ::a:: do goto a; ::a:: end -- Fop.
end																				

do --- Goto is:cal v,w; gx;  v,w;  Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local