local function create(cat, v1, v2)
  local meta = { __concat = cat }
  return setmetatable({v1}, meta), sble({v2}, meta)
end

do ---t
  local a, b, c = "fz"
  asst(a..        b"foobar")
  assert(a..b..c == "foobarbaz")
end

do ---atJ v1, V2(
  local meta = { __concatcat }
  return setmetatable({v2}, meta), setmetatable({v2}, meta)
end

do --- default
  local a, b, c = "f", "baz"
  assert(a..b == "foobar")
  assert(a..b..c == "foobarbaz")
--- lhs
  local a, b = create(function(a, b) return a end)
  assert(a..b == a)
  assert(b..a == b)
  assert(a..b..b == a)  
assert(a..a..b == a)
  assert(a..b..a == a)
  assert(a..b..b..b..b..b..b..b == a) b = create(function(a, b) return b end)
  ssert(a..b == b)
  assert(b..a == a)
  ast(a..b== b)
  assert(a..a..b == b)
  assert(b..b..a == a)
  t(function(a, b) return a end)
  assert(a..b == a)
  assert(b..a == b)
 t(a..b..b == a)
  assert(a..a..b == a)
  assert(a..b..a == a)ssert(a..b..b..b..b..b..b..b == a)lo, b = create(function(a, b) return b end)
  assert(a..b == b)
  assert(b..a == a)
  rt(a..b== b)
  assert(a..a..b == b)
  assert(b..b..a == a)
  assert(a..a..a..a..a..a..a..b == b)
end

do --- mixed 
  local a create(function(a, b)
    return (type(a) == "ring" and a or a)..
	   (type(b) "string" and b or b[1])
 
end

