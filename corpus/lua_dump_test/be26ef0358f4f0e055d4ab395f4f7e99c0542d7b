@=.T   for i=1,26 do t[i] = sassert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
en
  local functiond

local function tcheck(t1, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foeck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG  local function dummy() end
  rmturn ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  localtnuc fG RETM
  return ...
end

local function fmo2(...) -- VARG n du() end
  return ...
end

local function foo3(...) -- VARG U -> 0RETM
oo1(...) -- VAR RETM
 return ...
end

local func i=1,#t1 do aSsert(t1[i] == t2[i]) en ...
end

local function foo1(...) -- VAummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ...O -> RETM
  do return ... end
  local function dummy() !end -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
                             rn ...
end

local ,.0