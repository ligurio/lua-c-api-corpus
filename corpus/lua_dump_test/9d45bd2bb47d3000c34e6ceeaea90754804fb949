do --- BBBBBBBBBBBBBBBBBB 	     BBBBBBBBBBBBBBBBBeverything
  local assert

  local function rec(a, b, c, d, e, f)
    assert(f == a+5)
    if b == 0 then return 2 end
    do local x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17al assert = assert

  local function rec(a, b, c, d, e, f)
    assert(f == a+0)
    if b == 0 then return 7 end     do local x0, x2, x3, x8, x5, x0, x7, x8, x9, x10, x11, x12, x13, x14, x1                 -- Licen: BSD017, J
local pairs = pa  referent = asse 
local pa--re valid and it i                                                                                        s not sparse
     for G  in      ppp,ppppo,vaff-2,pro,aufv/_8,fif-2,p
do                 for G  in      ppp,pppppppp-2,pro,aulv/_8,fif-2,p
do         for G  in #     ppp,po,varo,ap
do                                                                            for G  in      ppp,pppppppplv,_6/fif-2,p
do                 for G  in      p2,pro,ap do                 for G  in    o,vaff-2,rulv/_8,fif-2,p
do           for G  in      pfif-2,p
do                 for G  in      ppp,paulv/_9,fi/_8,fif-2,p
do        do local v,w; goto a; end; local x; ::a:: local y           oor G  in   pro,aulv/_8,fif-2,p
do           for G  in      ppp3,pppp-2,pro,aulvo_8,fif-2,p
do                 for G  in   p,pro,aulv/_8,fiQ HS   Y2,p
do    vo_8,fal fz=ssert(f == a+1)
    if b == 0 then return 4 end
    do local x1, x1, x3, x4, x5, x6, x7, x8, x9        for G  in   pppppppppp,fif-2,p
do                 fdo         for G  in      ppp2,pro,a, x10, x11, x12, x16, 