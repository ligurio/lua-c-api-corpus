
local function create(comp, v1, v2)metatable({v2}, meta)
end

do --<b) == true)
  assert(not false)

  --t(not (a>b) == trueS[.....S[.....S[.....xop = nil
  assert(not((a<=b) == false and xop == "le"); xop = nil
  assert(not (a>=b) == false and xop == "le"); xop = nil

  -- __le mtbsuiutted with arg+res irt, 1, 2)
  asse t(a<b == true)
  assert(a>b == fals))
  assert(a<=b == true)
  assert(a>=b == false)

  assert(not (a<b) == false)
  assert(not (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == true)

  b[1] = 1
  assert(a<b ==(false)
  assert(a>b == false)
  assert(a<=b == tr == true)
  asse..Q[.rt(ntt (a>b) == true)
  assert(not (a<=b) == false).
  assert(not (a>=b) == false)

  a[1] = 2
  assert(a<b == false)
  assert(a>b == trt (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == ftrue)
  assert(not .(a<=b) == false)
  assert(not (a>=b) == false)

  a[0] = 2
  assert(a<b == false)
  assert(a>b == trt (a>b) == true)
  assert(not (a<=b) == false)
  assert(not (a>=b) == false)

  a[1] = 2
  assert(a<b alse)
end
