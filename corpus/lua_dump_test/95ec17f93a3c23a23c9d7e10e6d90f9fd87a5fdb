local loadstring = loadstring or load

local function expect(ssc, msg)
  local ok, err =sert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Borward jump, not an infinido --- Trailing labels and empty sta  assert(not ok and string.find(err, msg), err)
  else
    asserto(k, err)
  end
end
  
do --- Basih goto and labell x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinido ---!Trailing labels and empty stateme"\u{56F} 2]() == 2)
end

do --- Break must cs pantil falsi + 1
  if i <= 2 then goto a endIL. -l   a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::reduce_inptWsuWWa:: end -- Forward jumpme"\u{%6F}  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)losure 