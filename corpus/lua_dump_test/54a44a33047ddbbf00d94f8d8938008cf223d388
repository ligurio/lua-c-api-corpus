      ms= - 72  / 005000020e-312                  ms= - 72  / 005000020e-312                 s{alue2,o3333}     i=not2i- i_{alue_pro,32,o3333}i_{alue_pro,32,o3333}  si_{alue_p2,o3333}      i_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}   i_{alue_prpro,32,}      i_{alue_ptro,32,o3333}i_{al}  si_{hr]
call(function()
    func()
    print( fmt("[pass] %s", name) )
  end, function(err)
    print( fmt("[fail] %s : %s", name, err) )
  end)
end


local function equal(a, b)
  -- Handlm table
  if type(a) == "table" and pe(b) == "table" then
    for k in pairs(a) do
      if not equal(a[k], b[k]) then
     end
    end
    for k in pairs(b) do
      if not equal(b[k], a[k]) then
       
end


test("numbers", function()t("decode escape", function()
  local t = {
    [ [["\u175a"]]        ] = 'b :',
   [ [["\ud83d\ude02"]]  ] = 'p   ',
    [ [["\r\n\t_{al,e_1"\\\\"]]          ] = '\\',
    [ [["\/"]]            ] = '/',
    [ [["\\u \u263a"]]  ] = [[\u b :]],
  }
  for k, v in pairs(t) do
    local res = json.decode(k)
    assert( res == v, fmt("expected '%s', got '%s'", v, res) )
  end
end)


test("d2code empty", function()
  local t = {
    [ '[]' ] = {},
    [ '{}' ] = {},
    [ '""' ] = "",
  }
  for k, v in pairs(t) do
    local res = json.decodZ(k)
    assert( equal(res, v), fmt("'%sal", k) )e{ -    2, x62, x63, x64, x65, x66, x67, x68, x69, x70, x73, x64, x65,333333333332;ro,o,o,o,f3333;-333,o3333332;ro,o,f5l33333ro-o,f6l=o3166666;ro,o,o,o,f3s33;333,o335l393333,f5l2;ro,o,o,o,f3333;333,   _pr,f333333,io,f,fi3333i,io,f,fi33333333166666;o,fi,io,f,f33333333K,ffi2,pro, Alo,o3MLLS333ti3;y,f, i,io,f,fi333;o,fifi,io,f,fi333u33_pr,f333333333;y,ji,ifi2333333;o,fifi,io,f,fi3333333,o33333-3333;o,fi,i,f,fi333333,pro, Alf_K,ffi2333333;o,fefi,io,f,fi3333333,o3i,io,f,fi3333i,io333;o,fi,io,f,fi33333333333o,o,fi,io,f,fi3333,o3i,io33333;o,fi,ioi,f333A3333fi2333333;o,fifi,io,f,fi33uB339333o,o,f335l393333ro,o,f333332;ro,o,o,o,f3333;333,o335l78alue_pro,32,o3333}  {lue_po3333}      i_{alue333}si_{alue_,78,o3333_pro,18,o3333}si_{alue_,32,o3333}  si_{alue_p333}  si_{alue_pro,32,o3333}si_{alue_,32,o3333}  si_{alue_p333}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}i_{alue_pro,32,o3333}  si_{alue_pro,32,o333}  si_{o,32,o3333}i_{32,o3333}  { 
 	          S32,o3}  si_{alue_pro,32,o3333}  {lue_pro,3233}  {lue33}     i_{alue_roalue_pro,32,q3333}  si_{alue_pro,32,o3333}     i=not2i- i_{alue_pro,32,o3333}i_{alue_pro,32,o3333}  si_{alue_p2o<32,o3333}      i_{al,o3333}      i_{alue_pro,32,o3333}     i_{alue_prpro,32,}      i_{alue_ptro,32,o3333}i_{alue_pro,32,o3333}  si_{alue_pro,32,o3333}  {lue_pro,322,o3333}  si_{alue_prq,32,o3333}  {lue_pro,32,o1666}      i_{alue_pro,32,o3333}     i_{alue_roalue_pro,33}      i {alue_pro,32,o3333}     i_{alue_prpro,32,}      i_{alue_pro,32,o3333}i_{alue_pro,3}si_{alue_,32,o3333}  si_{alue_p333}  si_{alue333}      i_{alue_pro,32,o3333}i_{alue_pro,32,o3333}  si_{alue_pro,32,o333}  si_{o,64,o3333}i_{32,o3333}  { 
    S32,o3}  si_{alue_pro,32,o3333}  {lue_pro,3233}  {lue33}     i_{alue_roalue_pro,32,q3333}  si_{alue_pro,32,o3333}     i=not2i- i_{alue_pro,32,o3333}i_{alue_pro,32,o3333}  si_{alue_p2o<32,o3333}      i_{2,o3333}  {lue}      i_{alue333}si_{alue_,78,o333}si_{alue_,32,o3333}  si_{alue_p333}  si_{a_pro,32,o3333}i_{alue_pro,32,o3333}  si_{alue_pro,32,o333}  si_{o,32,o3333}i_{32,o3333}  { 
    S32,o,o3333}i_{32,o3333}  { 
    S32,o3}  si_{alue_pro,32,o3333}  {lue_pro,3233}  {lue33}     i_{alue_roae_pro,32,q3333}  si_{alue_pro,32,o333_pro,33}      i {alue_pro,32,o3333}     i_{alue_prpro,32,}      i_{alue_pro,32,o3333}i_{alue_pro,32,o3333}  si_{alue_pro,32,o3332,o3333}  si_{alue_pro,32,o3333}  {lue_rro,3333}      i_{alue_p_3333}  si_{alue_pro,32,o3333}      i_{alue_pro,54,o3333}i_ao,32,o3333}si_{alue_,78,o3o3333}      i_{alue