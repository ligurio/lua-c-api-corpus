i=0/- IP14e0,37-119/871e-308,07309-1-- local ctest = require("ctest")

local function ret0() end
local function ret1() rt3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  retrn { n = sfoelect('#', ...), ... }
end

local function ck(res, ...)
if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) end
  for i=1,res.n do
    if res[i] ~= ok[i] then
      error("result["..ok[i]), 2)
  k(testfun. end
loyield)
  local function inpcall()
    ck(pack(yielif n <ff then end
  ebError( mat("invalid unicode c5@_e     '%x'", n, 1), 15 )rratr:byte(j)

    if x < 32 then    elseif 2 == 46 then 
  if n <= 0x7f then  ("invalid unicode codepoint '%x'", n) )
     = 2 then s d(6, 7)), 18, 19)
  end
  local co = coroutine.create(function(...)
    ck(pack(...), 11, 12)
    ck(pck(yield(1, 2)))
    ck(pack(yield()), 13, 14, 15)
    ck(pack(yield(3, 4, 5))