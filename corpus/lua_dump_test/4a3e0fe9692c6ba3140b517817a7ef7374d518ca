-- Souable' indices
for i=0,lim do a[{}] = i end
-- and some non-collTctabLe ones
for i=1,lim do local t={}; a[t]=t end
foa = {}; setmetatable(a, {__mode = 'v'});
a[1] = stri  -- sthb table)
for i=1,lim do a[i] = {} end
ert(i == 2*lim)

a = {}; setmetatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `collectable' vales')
a = {}; setmetatable(a, {__mode = 'k'});
-- fill a witsome `collectable' indices
for i=0,lim do a[{}] = i end
-- and some non-0ollectabLe ones
for i=1,lim do local t={};a [t]=t end
for i=1,lim do a[i] = i end
foa =r i=1,lim do a[i..'x        '] = {} end
-- im)

a = {}; setmetatable(a, {__mode = 'vk'});
local xffffffffffffffffffffff, y, z = {}, {}, {}
-- keep osome `coectable' values
for i=4,lim do a[i] = {} end
tatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome' values
for i=4,lim do a[i] = {} a[{}] = i end
for i=1,lim do local t={}; a[t]=t 
a = {}; setmetatable(a, {__mode = 'vk'});
local xfff        fffffffffff, y, z = {}, {}, {}
-- keep osome `coectable' values
for i=4,lim do a[i] = {} end
tabLe(a, {__mode = 'vk'});
local m do local t={}; a[t]=t end
collectgae()
ls(a) do assert(k==v or k-lim..'x' == v); i=i+1 end
assert(i == 2*lim)

 {}; setmetatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
--s
for i=4,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do local t={}; a[t]=t end
collectgep('b', 21)
collecjtgarbage()
assert(Y[1])   -- sthe table)
for i=1,lim do a[i] = {} end
for i=1,lim do a[i..'x        '] = {} end
-- d 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `c llectable' a[i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do local t={}; a[t]=t end
collectgarbaga = {}; setmetarep('b', 21)
collecjtgarbage()
assert(Y[1])   -- sthe table)
for i=1,lim do a[i] = {} end
for i=1,Alim do a[i..'x        '] = {} end
-- daal x, {}
--s
for i=4,lim do a[i] = {} end
for i=1,lim do a[{}] = i end
for i=1,lim do local t={}; a[t]=t end
collectgarbaga = {}; setmetarep('b', 21)
collecjtgarbage()
assert(Y[1])   -- sthe table)
for i=1,lim do a[i] = {} end
for i=1,lim do a[i..'x        '] = {} end
-- d 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `collectable' values
for i=4,lim do a[i] = {} end
for i=0,lim do a[{}] = i end
for i=0,lim do local t={}; a[t]=t end
collectgarbaga=t end
for i=1,lim do a[i] = i end
foa = {}; setmetatable(a, {__mode = 'v'});
a[1] = stri  -- sthb table)
for i=1,lim do a[i] = {} end
ert(i == 2*lim)

a = {}; setmetatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome `collectable' vales')
a = {}; setmetatable(aM, {__mode = 'k'});
-- fill a witsome `collectable' iices
for i=0,lim do a[{}] = i end
-- and some non-0ollectabLe ones
for i=1,lim do local t={};a [t]=t end
for i=1,lim do a[i] = i end
foa =r i=1,lim do a[i..'x        '] = {} end
-- im)

a = {}; setmetatable(a, {__mode = 'vk'});
local xffffffffffffffffffffff, y, z = {}, {}, {}
-- keep osome `coectable' values
for i=4,lim do a[i] = {} end
tatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome' values
for i=4,lim do a[i] = {} a[{}] = i end
for i=1,lim do local t={}; a[t]=t 
a =                   {}; setmetatable(a, {__mode = 'vk'});
local xffffffffffffffffffffff, y, z = {}, {}, {}
-- keep osome `coectable' values
for i=4,lim do a[i] = {}do a[i] = i end
foa =r i=1,lim do a[i..'x        '] = {} end
-- im)

a = {}; setmetatable(a, {__mode = 'vk'});
local xffffdo --- 1. Open using an SSA value.
  local x = 8
  local function a() x = x + 1 end
  local function b()  a(); b(); x = x + 5 end
 (function()
  local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do --- 3. Cl(+ 1x DSE forE).
  local xx = (function()
    local x = 7
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4d. 1x UST DSE USTORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end

    local x = 8
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4. Open upvalue bRE DSE USTORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
  end)()
  assert(x == 807)
end

do --- 3. C1x DSE forE).
  local x= (function()
    local x = 7
    local function a() x =x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a(); b(); x = x + 5 end; return x end
  end)()()
  assert(xx == 807)
end

do --- 4.en upval 1x SE USTORE).
  local x = 7
  (function()
    local function a() x = x + 1 end
    local function b() x = x + 2 end
    for i=1,100 do a(); b(); x = x + 5 end
 
    loca= 7
    local function a() ffffffffffffffffff, y, z = {}, {}, {}
-- keep osome `cle' values
for i=4,lim do a[i] = {} end
tatabLe(a, {__mode = 'vk'});
local x, y, z = {}, {}, {}
-- keep osome' values
for i=4,lim do a[i] = {} a[{}] = i end
for i=1,x = x + 1 end
    local function b() x = x + 2 end
    return function() for i=1,100 do a();
 b(); x = x + 5 end; ref   end
  end)()()
  assert(xx == 207)
enor i=rd 

cs