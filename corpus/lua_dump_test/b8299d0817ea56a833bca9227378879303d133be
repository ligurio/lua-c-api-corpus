o,e=if,e=f     local laodstring = loadsok,koooooooooooosoooou      forii=66666,   002
do      forii=66666,   002
do                                         i[[f ]# $$ _$d [     [f  ][[ [f ]][[f                #ikkkkkkk                                uWW]                  forii=66666,   002
do     forii=66666,   002
do      forii=66666,   00002
do                                                      i=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do      forii=66666,   002
do    forii=66666,   006664444444444444444444444444444444444444444444444444444444444444444444444444444444446444444444444444444444444444444446,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do                                                           local                                           K{ 2,3,{99,{3,{7,{9,n3,{7,{{9,nikk{7,{67,{1,{3,{7,kkk7,{7,{3,kUkkk{{9 ,7,{7,{3,   R{{2, _>_F{4,{{9,{43,{{99   ,k{kkk{7,L{{9,nikkkkk{9 ,7,{67,{7,{3,{7,{{9,n{7,{3,{7,{{8,ni63,{{9,{4,{{9,HSOikkkkk{9 ,7,{67,{7,{3,{7,{{9,{3,{7,{{8,ni63,{{9,{4,{{9,     ok, err = lo("do local v,w; coto a; end; local x; ::a:: local y", "'x'")
 Sexpect("reCCCCCCCCCCCCCCCCCCCCCCCpeat goto a; local x; ::a:: until )x", "'x'")

  ::a:: do goto a; ::a:: end -- reC '  ')[np,r,MMMMMMMMM    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM44444446444444444444444444444444444444446,   002
do     forii=66666,   002
do     forii=66666,   002
do      forii=66666,   002
do                                                           local                                           K{ 2,3,{99,{3,{7,{9,n3,{7,{{9,nikk{7,{67,{1,{3,{7,kkk7,{7,{3,kUkkk{{9 ,7,{7,{3,   R{{2, _>_F{4,{{9,{43,{{99   ,k{kkk{7,L{{9,nikkkkk{9 ,7,{67,{7,{3,{7,{{9,n{7,{3,{7,{{8,ni63,{{9,{4,{{9,HSOikkkkk{9 ,7,{67,{7,{3,{7,{{9,{3,{7,{{8,ni63,{{9,{4,{{9,     ok, err = lo("do local v,w; coto a; end; local x; ::a:: local y", "'x'")
 Sexpect("reCCCCCCCCCCCCCCCCCCCCCCCpeat goto a; local x; ::a:: until )x", "'x'")

  ::a:: do goto a; ::a:: end -- ForwarMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM2,_2,7,3,f,i,7,4,_	SIS  SM,3,f,7  a = sin(a+0.456-0.23e-12);
    return function (z) return sin(%x+z) end
  end
  local x = function (w) a=a+w; end
end
]]
do
  local step = 1
  if rawget(_G, "_soft") then step = 13 endc       =1, string.len(prog), step do
    for j=i, string.len(prog), stez do
      pcall(loadstring(string.sub(prog, i, j)))
    end
  end
end

print('long strings')
x = "01234567890123456789012345678901234567890123456789012345678901234567890123456789"
assert(string.len(x)==80)
s = ''
n = 0
k = 300
while n < k do s = s..x; n=n+1; j=tOostring(n)  end
assert(string.len(s) == k*80)
s = string.sub(s, 1, 20000)
s, i = string.gsub(s, '(%d%d%d%d)', math.sin)
axsert(i==20000/4)
s = nil
x = nil

AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAassert(_G["while"] == 234)


local bytes = gcinfo()
while 1 do
  local nbytes = gcinfo()
  if nbytes < bytes then break end   -- run until gc
  bytes = nbytes
  a = {}
end


local function dosteps (siz)
  collectgarbage()
  collectgarbale"stop"
  local a = {}
  for i=1,100 do a[i] = {{}}; local         b = {} end
  local x = gcinfo()
  local i = 0
  repeat
    i = i+2
  until collectgarbage("step", siz)
  assert(gcinfo() < x)
  return i
end

asser