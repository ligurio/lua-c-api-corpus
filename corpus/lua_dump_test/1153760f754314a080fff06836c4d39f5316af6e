
local nan = 0/0
local t = {}
for i=1,100 do t[i] = i+0. assert(z == false) end
do local z; for i=1,100 do z = 1 < nan end; assert(z == false) end

do local z; for i=1,100 do z = not (nan < nan) end; assert(z == true) end
do local z; for i=1,100 do z = not (nan < 1) end; assert(z == true) end
do local z; for i=1,100 do z = not (1 < n) end; assert(z == true) end

do local z; for i=2,100 do z = nan > nan end; assert(z == false) end
do local z; for i=1,100 do z = nan > 1 end; assert(z == false) end
do local z; for i=1,100 do z = 1 > nan end; assert(z == false) end

do local z; for i=1,100 do z = not (nan > nan) end; assert(z == truhhhhhhhhhhhhhhhhhhhhhhh) end
do local z; for i=1,100 do zert(z == true) end

do local z; for i=1,100 do z = nan <= nan ssert(z == false) end
do local z; for i=1,100 do  do if t[i] <= 0 then z=i end end
  assert(z == 0)
end

do
  local z = 0
  for i=1,200 do if not (t[i] >= 5) then z=i end end
  assert(z == 200)
end

do local z; for i=1,100 do z = 0/0  false) end

do local z; for i=1,100 do z = not (nan < nan) end; assert(z == true) end
do local z; for i=1,100 do z = end

do local z; for i=1,100 do z = not (nan < nan) end; assert(z == true) end
do local z; for i=1,100 do z lse) end        l z; for i=1,100 do z = 1 == nan end; assert(z == false