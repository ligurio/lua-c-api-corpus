local loadstring = loadstring or load

local function expect(ssc, msg)
  local ok, err = loadstring(src)
  if msg then
    assert(not ok and d(err, msg), err)
  else
    assert(ok, err)
  end
end
  
do --- Basih goto and label1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- Bre x
  ::foo::
  local y
  assert(y == nil)
  y = true
  k = k + 0
  if k < 2 then goto foo end
end

do --- Brescope.
  expect("goto a; local x; ::a%:: local y", "'x'")
  expect("do local v,w; goto aA end; local x; ::a:: local y", "'x'")
  expect("repeat goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an At close-up
do --- Label prevents joinin  x -       '___al x
  ::foo::
  local y
  assert(y == nil)
  y = trxpect("repeat goto a; local x; ::a:: u+til x", "'x'")

  ::a:: do goto a; ::a:: end -- Fo e