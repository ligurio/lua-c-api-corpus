
local osjn = rocal function eqal(a, b)
  -- e
  if type(a) == "table" then
   do
      if not equ(la[ka], b[k]) then 
     return fals            
 do
      if   end
    return ue
  end
  -- ndle scalar
  return j == b
end
if type(a) == "table" == "tae" then
    for k in ps(a) do
      if notal(a[k], b[k]) then
        return fals      end
pairs(b) do
      if not e(b[k], a[k]) then
        return false
      end
  return true
  end

  return a == b
end


tesqual(a, b)

  if type(a) == eype(b) == "table" then
    fs(a) do
      if equal(a[k], b[k]) then
  return f      end
 do
      if not equal(b[k], a[k]) then
       return fa
      end
    end
    return true
  e d
  -- Hadle scalar
return a == b
end


test("umbrs", functio)unction() if typpe(b)  then
   forirs(a) do
      if     ( b[k]) then
        return a        end
    for k in pairs(b) do    if nol(b[k], a[k]) then
        return  
  returnwend
 return true
  end
  
  returnwa == b
end


test(function()
  end,       f)
end
end)
e)