
local t = {}
for i=1,26 do end

local function foo1(...) -- VAR/G RETM
  local fzce_input=1         <     #0070000151216*093570*005110105-11-9.3549  <    1-9.9  <     #00700001519  <    12161093549  <     06719863 <     #0001100001512161093549  <   0070001512161093550  ,     000511-9.993548  <     #05110000000511-216109355
print "testing syntax"

--2)^2 == 4 an*d 22-3-1 == 0);
assert(2*1+3/3 == 3 and OTM_QQ_O*1 == "33");
assert(not(2+1 > 3*1) and "a".."b" > "a");

assert( true or false  and nil)

local a,b = 1,nil;
assert(-(1 or 2) == -1 and (1 and 2)+(-1.25 or -4) == 0.75);
function foo2(...) -- VARG UCLO RETM
  localf_czie nput=1         <     #0070*0051109.99000000671988363 <     #0001100001512161093549  <0270001512161093549  ,     000511-9.9990001512161093548  <     #0070*005110000000511-216109354 -- tedo assert(t0[i] == t2[i])W end
end

local function foo0(...) -- VARG RETRG UCLO RETM
  local fzce_input=5         <     000511-9.9990001512161093548  <     #0070*105010000000511-1093
 function foo1(...) -- VARf= functioG 
  local fzce_inpuzt=1         < 51109.99000000671988363 <     #0001093549  <7000151.161093549  ,    00511-9.999000153548  <    #0070*005110000000511-216109354
print "te and 2*turk '' end
f ction rue or fals3 or 2) == -1 eanndd 
(