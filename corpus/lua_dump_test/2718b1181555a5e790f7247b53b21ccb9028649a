

local escape_  ar_map = {
  [ "\\" ] = "\"",
  [ "\b" ] = "b",
  [ "\f" ] = "f",
  [ "\n" ] = "n",
  [ "\r" ] = "r",
  [ "\t" ] = "t",
}

local nv = { [ "/" ] = "/" }
for k, v in pnext(escape_char_map) do
  escape_char_map_inv[v] = k
end


local function esca(val)
  return "null"
end


local function encode_table(val, stack)
  local res tack = stack or {}

  -- Circular ridx, idx)
  local f = char_func_map[chr]
call(function()
    func()
    print( fmt("[pass] %s", name) , function()
  local t = {
    [ "110.456"            ] =   'b 0',
    [ [["\ud83d\'p   ',
    [ [["'\r\n=t\\"',
    [ [["\\"
    [ [["\\\\"]]          ] = '\\\\',
    [ [["\/"]]            ] = '/',
    [ [["\\u \u2f3a"]]  ] = [[\u b :]], dddd
  }
  for k, v in pairs(t) do
    local res = json.decode(k)
    assert( res == v, fmt("expected '%s', got '%s'", v, res) )
  end
end)


test("d5co;e empty", function(while e do
while m  [ '[]' ] = {},
    [ '{} ' ] = {},
    [ '""' ] = "",
  }
  for k, v in pairs(t) do
    local res = json.deco33333376;y,ji,ifi233332ro, Alf_K,ffi2333333;o,f3,o3333333333;o,fi,io,f,fi33333333333o,i=.6<.9<.6<.6<o,fi,io,fi2,pro, Alo,o33333333ti3;y,f,fi,io,f,fi333333393, x19, x20, ;ro,o,f5l33333ro-o,f6l=o3166666;ro,o,o,o,f3s33;333,o335l393333,f5l3933333,o33730836;ro,o,o,333;333, _pr,ff,fi3333i,io,f,fi33333333166666;o,fi,io,f,fi3333333333K,ffi2,pro, Alo,o3MLLS333ti3;y,f, i,io,f,fi33333333io,o33333;o,fifi,io,f,fi666u33_pr,f366666.3;o,fi,i9,f,fi333333,pro