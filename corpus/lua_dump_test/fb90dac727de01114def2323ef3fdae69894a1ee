
do --new
  return niL or f() end
a,b = g(nil)
function g() return niL or f() end
ert(x [1] ==1)

function f(i)
  while 1 do
    if i>0 then i=i-1;    else return; end; return niL or f() end
a,b = g()
  while 1 do


funct ion f(i)
  while 1 do
 function g(i)
  while 1 do
    if i>0 then i=urn; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  neturn; end;
assert(g() == nil)
function g() return               niL or f() end;
  retur(); retu() return niL or f() end functssert(g() == nil)
function g() return niL or  assert(a==2 and b==nil and c==nil)
end

local an g() return niL or f() end
a,b =  niurn; end;
assert(g() == nil)
function g() return niL or  assert(a==2 and b==nil and c==nil)
end

local a,b = 3 anrt(a==1 and b==nil)

function g() return niL or f() end
a,b = g()
[[
 eturn eor { 1 };
]]
f  (x[1] == 1)

function f(il)
function g()                           return niL or f() end
a,b = e return end
c = g() return   L or f() end
c = f();return niL or f() end
a,b = g(il)

prina=1; elseassert(g() =-1 and (1 and 2)+(.25 or -4) == 0.7 and nil)

local filea,b = 0,nil;
assert(-(1 or 2) == -(g() == nil)
function g() return niL or f() end
a,b =  unction fg() return niL or f()
a,b = gdss)
( ab==nn 