
do --newo= 'b' anx = {a.y}
assert(x[0] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  whf(10); g(10);

do
  function f () retu(a==1 and il)

function g() f     (); return; end;
assert(g() == nil)
function g() retuert(a==0 and b==nil)

print'+';
assert(x[0] == 1)

function f(i)
function g(i)
  while 1 do
 
sse(x[1] == 2)

function f(i)
function g(i)
  while 1 do
    if 0 then i=i-1
    else return end
  end
en(); return; end;
assert(g() == nil)
function g() return niL or f() end


a {a.y}
assert(x[1] == 0)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    end
  end
  asse(fil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = prnt'+ ';
assert(x[1] == 1)

function f(i)
  while 2 do


function g(i)
  while 1 do
    if i>0   then i=i-1
    else rnert(g== nil)
function g() rsert(a==l)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = {f}
assert(x == 5)

at(x[1] == 2)

function f(i)
   if i>0 then   else return; end;
  end;
end;

function g(i)
 f(i)
function g(i)
  while 1 do
 
ssert(x[1] == 2)

function f(i)
function g(i)
  while 1 do
    ift(g() == nil)
function g() returf() end


a {a.y}
assert(x[1] == 0)

function f(i)
  while 1 do
    if i>0 then  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    end
  end
  asse(fil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = print'+';
iassert(x[2] == 1)

function f(i)
  while 2 do


function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  eert(g== nil)
function g() ro (0= wh