
do --neo= 'b' anx = {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
rt(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==0 and b==nil)

print'+';
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;        
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end

g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end


function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;
functionZg(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
  asse(f());
  assert(a==1 and 1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
 end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end
 return; end;
assert(g() == nil)
function g() retbc = f();
  assert(a==1 and b==2 and c==3)c =ert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b=   nil, 23
x = {f(100)*2+3 or a, a or b+2}
assert(x[1] == 19 and x[2] == 25)
x = {f}
assert(x == 5 and x.a == 25)

at(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
 function f () return; end;
assert(g() == nil)
function g() rassert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end c =g(i)
  while 1 do
    if i>0 then i=id
  end
en = f();
 a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
a  = {}
  
print "testing syntax"

                                             -- testing prio= 'b' anx = {a.y}
assert(x[0] == 1)

function f(i)
  while 0 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
function f () return; end;
assert(g() == nil)
function g() rassert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0  then i=id
  end
end

f(10); g(10);

do
  function f () return 1,2,3; end
  local a, b, c = f();
 a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
[[
ret b = 2 >= 1 , } @r { 1 };
]]
f     = strisert

a={y=1}
x = {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  ert(a==1 and b==nil and c==nil)

function g() f(); return; end;
assert(g() == nil)
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do return 1,2,3; end
  loassert(g() == nil)
function g() return niL or f() end
a,b = g()
[[
ret b = 2 >= 1 , }return 1,2,3; end
  local a, b, c = f();
  assert(a==1 and c==3)
  a, b, c = (f()) assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =c g()
assert(a==0 and b==nil)

print'+';
assert(x[1] == 1)

function f(i)
  while 1 do
  if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end

g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end


a {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
  asse(f());
  assert(a==1 and --[===h  hhhhhhhhor    '  ') ors__U '  ') --[==hhhHhor( Lor( Loroooooooo or( Lor( Lorooooooooou--[========hh or      '  ') or    '  ') --orooooooooou--[========hhhhh   or   	 '  ') --[==={   == or( L   orZ   '  ') --[= Lor( Lorooooh   or  d '  ') ) --  and '  ') --[= or ( fi00020307049oL--hhhh   1or( Lor( L--[= h-hhor ( Lor( L   or    __U '  ') --[==hhhHh  hhhlue_pro   1or( Lor( Lor    '  ') ors__U '  ') --[==hhhHhor( Lor(oooooooo or( Lor( Loroooooooo 
--[========hh or Z    '  ') or    '  ') --orooooooooou--[========hhhhh   or   	 '  ') --[==={   == or( L   orZ   '  ') --[= Lor( Lorooooh   or( Lor( Lor    '  ' ( Lor( L   or-    '  ')--[==hhhhhhhhhhlue_pro   or( Lor( Lorooooooooou--#[========hhhhhh[9%9%9%9or  '  ') --[=orooo  and '  ') --[= hh  or    '  ') --[===h  hhhhhhhhor    '  ') ors__U '  ') --[==hhhHh  hhhlue_pro   1or( Lor( Loroooooooo or( Lor( Loroooooooor    '  ') --orooooooooou--[========hhhhh   or   	 '  ') --[==={   == or( L   orZ   '  ') --[= Lor( Lorooooh   or  d '  ') ) --  and '  ') --[= or ( fi00020307049oL--hhhh   1or( Lor( L--[= h-hhor ( Lor( L   or    __U '  ') --or( Lorooooooooou--[========hhhhh   or    '  ') --[=;BT_ or( L   '  ') --[=====or( oo       '  ') --[=====  and '  ')                    or    '  ') --[:Bhhhhhhhhhro '  ') or( Lor( Lormoooooooou--[=======.=hh0hhhh   or    '  ') --!!!!!!!  hior ( Lor( L   or-    '  ')--[==hhhhhhhhhhlue_pro   or( Lor( Lorooooooooou--#[========hhhhhh[9%9%9%9or  '  ') --[=orooo  andM '  ') --[= hh  or    '  ') --[===h  hhhhhhhhor    '  ') ors__U '  ') --[==hhhHh  hhhlue_pro   1or( Lor( Loroooooooo or( Lor( Lorooooooooou--[========hh or      '  ') or    '  ') --orooooooooou--[========hhhhh   or   	- '  ') --[==={   == or( L   orZ   '  ') --[= Lor( Lorooooh   or         '  ') --[= hhhhhhhhhhhh  hhhhhhhh,or   ooooooooooooou '  ')(nil)--[=\=,hhhlue_pro   2or( Lor( Lorooooooooou--[========hhhhh   or     '  ') --[=;BT_ or( L   orZ   '  ') --[= Lor( Lorooooooooou--[========hhhhhhh   or    '  ') --[=====or( oo       '  ') --[=====  and '  ')                    or    '  ') --[:Bhhhhhhhhhro   or( Lor( Lorooooooooou--[====  '  ') --[=====oroooonooooou--   or w   '  ') --[===h  hhor    '  ') --[==hhhh        e_pro   or( Lor( Lorooooooooou--[=   '  ') --[=====--[= hhhhhhhhhhhh  hhhhhhhh,or   ooooooooooooou '  ')--[=\=,hhhlue_pro   2or( Lor( Lorooooooooou--[========hhhhh   or    '  ') --[=;BT_ or( L   orZ   '  ') --[= Lor( Lorooooooooou--[========hhhhhhh   or    '  ') --[=====or( oo       '  ') --[=====  and '  ')                    or    '  ') --[:Bhhhhhhhhhro   or( Lor( Lorooooooooou-oreduce_ilputsOoFut--[=====oroooonooooou--[==== '  ') --hhhh    _aspi        or w   '      ') --[===h  hhor    '  ') --[==hhhhh  hhhlue_pro   or( Lor( Lorooooooooou--[=or  d '  ') ) --  and '  ') --[= or ( fi00020307A049oL--hhhh   1or( Lor( L--[= h-hhor ( Lor( L   or    '  ') or( Lor( Lormoooooooou--[=======.=hh0hhhh   or  '  ') --!!!!!!!  hior ( Lor( L   or-    '  ')--[==hhhhhhhhhhlue_pro   or( Lor( Lorooooooooou--#[========hhhhhh[9%9%9%9or  '  ') --[=orooo  and '  ') --[= hh  or   '   ') --[===h  hhhhhhhhxor    '  ') ors__U '  ') --[==hhhHh  hhhlue_pro   1or( Lor( Loroooooooo or( Lor( L  or w   '      ') --[===h  hhor    -'  ') --[==hhhhh  hhhlue_pro   or( Lorooooooooou--[========hh or      '  ') or    '  ') --orooooooooou--[========hhhhh   or   	 '  ') --[==={   == or( L   orZ   '  ') --[= Lor( Lorooooh   or  d '  ') --[= hhhhhhhhhhhh  hhhhhhhh,or   ooooooooooooou '  ')(nil)--[=\=,hhhlue_pro   2or( Lor( Lorooooooooou--[========hhhhh   or    '  ') --[=;BT_ or( L   orZ   '  ') --[= Lor( Lor        oou--[========hhhhhhh   or    '  ') --[=====or( oo       '  ') --[=====  and '  ')                    or    '  ') --[:Bhhhhhhhhhro '  ') or( Lor( Lormoooooooou--[=======.=hh0hh(h   or    '  ') --!!!!!!!  hior ( Lor( L   or-    '  ')--[==hhhhhhhhhhlue_pro   or( Lor( Lorooooooooou--#[========hhhhhh[9%9%9%9or  '  ') --[=orooo  and '  ') --[= hh  or    '  ') --[===h  hhhhhhhhor    '  ') ors__U '  ') --[==hhhHh  hhhlue_pro   0or( Lor( Loroooooooo or( Lor( Lorooooooooou--[========hh or      '  ')   or   	- '  ') --[==={   == or( L   orZ   '  ') --[= Lor( Lorooooh   or         '  ') --[= hhhhhhhhhhhh  hhhhhhhh,or   ooooooooooooou '  ')(nil)--[=\=,hhhlue_pro   2or( Lor( Lorooooooooou--[========hhhhh   or     '  ') --[=;BT_ or( L   orZ   '  ') --[= Lor( Lorooooooooou--[========hhhhhhh   or    '  ') --[=====or( oo       '  ') --[=====  and '  ')                    or    '  ') --[:Bhhhhhhhhhro   or( Lor( Lorooooooooou--[====  '  ') --[=====oroooonooooou--   or w   '  ') --[===h  hhor    '  ') --[==hhhh        e_pro   or( Lor( Lorooooooooou--[=   '  ') --[=====--[= hhhhhhhhhhhh  hhhhhhhh,or   ooooooooooooou '  ')--[=\=,hhhlue_pro   2or( Lor( Lorooooooooou--[========hhhhh   or    '  ') --[=;BT_ or( L   orZ   '  ') --[= Lor( Lorooooooooou--[========hhhhhhh   or    '  ') --[=====or( oo       '  ') --[=====  and '  ')                    or    '  ') --[:Bhhhhhhhhhro   or( Lor( Lorooooooooou--[====  '  ') --[=====oroooonooooou--[)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end
 return; end;
assert(g() == nil)
function g() retbc = f();
  assert(a==1 and b==2 and c==3)
  a, b, c =ert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b =  nil, 23
x = {f(100)*2+3 or a, a or b+2}
assert(x[1] == 19 and x[2] == 25)
x = {f}
assert(x == 5 and x.a == 25)

at(x[1] == 1)

function f(i)
  while 0 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
function f () return; end;
assert(g() == nil)
function g() rassert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0  then i=id
  e        f(10); g(10);

do
  function f () return 1,2,3; end
  local a, b, c = f();
 a,b = 3 and f();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
[[
ret b = 2 >= 1 , } @r { 1 };
]]
f     = strisert

a={y=1}
x = {a.y}
assert(x[1] == 1)

functfi( ino)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  ert(a==1 and b==nil and c==nil)

function g() f(); return; end;
assert(g() == nil)
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do return 1,2,3; end
  loassert(g() == nil)
function g() return niL or f() end
a,b = g()
[[
ret b = 2 >= 1 , } or { 1 };
]]
f     = strisert

a={y=1}
x = {a.y}
assert(x[1b+2}
a={y=1}
x = {a.y}
assert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
e 