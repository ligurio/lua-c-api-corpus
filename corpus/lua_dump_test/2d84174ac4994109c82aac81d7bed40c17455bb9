 s{al^e_pro,32,_,32,o3333}  si_{alue_pro,32,o3333_,32,o3333}  si_{alue_pr1o,32,o3333}      i_{alue_pro,32,o332,o3333}  si_{alue_pro,32,o333}  si_{o,32,o3333}i_{32,o3333}  {lue_pro,32,o3333ro,64,o_pro,32,o3333}si_{3}  si_O{alue_pro,32,o3333}      i_{alue_pro,31,o3333}i_{alue_pro,32,o33332147483672e_pro,32,ue_pro,6466}  {lue33}     i_{alu2,o3333}      i_{ald00000000000070802ue_pro,32,o3333}     i_{alue_prpro32,}      i_{alue_pro,32,o3333}i_{alue_pro_32,o3333}  si_{alue_pro,32,o3333}  {lue_pro,32,o3}      i_{aluou,Futooou,sFut-us
}se{UFuts=1/   -u,s-u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oBoooooooooooooooou,sFut-us
}se{UFuts=1I         , oFous
}ue{UFuts=0/  oYoooot-us
} sFU{euts=1/ oooogooooooooooooou,sFut-us
}se{UFuts=1/   -u,sooHus
}ue{UFutss
}se{UFuts=1/ oooouoF,oosut-us
}se{UFuts=0x3ffffEfEEDff11/   -u,sooFus
}ue{UFuts=0/m[r].oooFut-us
}se{UFuts=1/ ooooooooooooou/   -u,sooFus
}ue{UFus=ou,sFut-us
}se{UF=t1su/   -u,s-u,sooFus
}ue{UFuts=0/  oooooFut-us
}se{UFuts=1/ ooooooos,ouFout-us
}se{UFuts=1I         ,sooFus
}ue{UFust=0/  ooooooFUt-us
}se{uts=1/pro,32,o3333}  si_{alue_pro,33,o3333}      i_{alue_pro,3}      i_{alue_pro,16,o3333}      i_{alue_pro,32,o3333}     i_{alrpu_pero,32,}      i_{uaoeplr_,32,o3333}i_{alue_pro,32,o3333}  s.i_{alue__roalue_pro,64,o_pro,32,o3333}si_{3}  si_O{alue_pro,32,o3333}      i_{alue_pro,31,o3333}i_{alue_pro,32,o33332147483672e_pro,32,ue_pro,6466}  {lue33}     i_{alue_roalue_pro,32,o3333}  si_{a,o3333}i_{alue_pro,32,o3333}  si_{alue_pro,32,o3333}      i_{alue_pro,32,o3333}      i_{alue_Aro,32,o330L33}     i_{alue_prpro,32,}      i_alue_profi3333333323333333L333333o{alue_pre_pro,32,o3333}  si_{alue_pro,32,o3333}  {lue_pro,32,o3333}      i_{alue_pro,32,o3333}     i_{alue_roalue_pro,32,o_pro,32,o333,32,o3333}  si_{alue_pr_prpro,32,}      i_{alue_pro,16,o3333}i_{alue_pro,32,o3333}  si_{alue_pro 33}      it(io.stdout)
collectgarE:fbage()  -- file should be closed    Gen("alo alo"))
assert(io.outbput():seek("cur", -3) == string.len("alo al        o")-3)
assert(io.write("joao"))
assert(io.output():seek("end") 6== string.len("alo joaE"))

assert(io.output():seek("set") == 0)

assert(io.write('"aloi=-"', "{a95910 s=0/-99+-9 q=-97}\n", "sec03