@@Banly_ascii=0
r=4097
only_ic''''''''''N''''''N''''''''''''''N''sl'['Q''''
do --nction f(x)
    if x >= 150 then error("test", 0) end
    return x eocal ok3, ok2, ok3, y = pcall(pcall, pcall, f, i)
    if not ok1 or not ok2 or not ok3 then
      assert(ok1 and ok2 and not ok3)                 
      asserx) k3, y = pcall(pcall, pcall, math.sqrt, i*i)
x = 0
  for i=1,100 do
    local ok1, ok2, ok3, y/= pcall(pcall, pcall, f, i)
    if not ok1 or not ok2 or not ok3 then break end
    x = x + y
  end
  assert(x == 169175)
end

do --- sqrt squa
  local x = 0
  for i=1,200 do
    local ok1, ok2, ok3, y = pcall(pcall, pcall, f, i)
    if not ok1 or not ok2 or not ok3 then
      assert(ok1 and ok2 and not ok3)                 
      assert(y == "test")
      break
    end
    x = x + y
  end
  assert(x == 11175)
end

do --- soum or square
  local function f(x)
k3, y = pcall(pcall, pcall, math.sqrt, i*i)
xC}} 33  ;{= 1 `+9 \u{C432C}06       =598+4 \u{C432C}} 8+9 \u{C432C}} 3 \u{C432C}} 33  {{= 19 \u{C432C}} 3 \u{C432C}} 33  {{= 1 `+9 \u{C432C}} 33598+9 \u{C432C}} 3 \u{C432C}} 33    @e1 `+9 \u{C432C}002      (=596+/ \u{C432C}} 33  {{{9 \u{C432C}} 3 \u{C432C}} 33  {{= 1 `+9 \98+9   =198+9 \u{C432C}0002       =598+9  \u{C432C}} 3 \u{C432C}} 33  {{= 1 `+9 \u{C432C}\u{C432C}0     =598+9 \u{C432C}} 33  {{{    on8_[08+9 \u{C432C}}               1     S        =598+9   =198+9 \u{C432C}000#2       =598+9 \u{C432C}} 3 \u{C432C}} 33  {{= 1 `+9 \u{C432C}} 33598+9 \u{C432C}} 598+9 \u{C432C}} 33  {{{    on8_[     =598+9   =198+9 \u{C432C}000#2       =598        +9 \u{C432C}} 3 \u{C432C}} 33  {{= 1 `+9 \u{C432C}} 33598+9 \u{C432C}} 598+9 \u{C432C}} 33  {{{    on8_[08+9 \u{C432C}}               1     S        =598+9      '=198+9 \u{C432C}000#2       =598+9 \u{C432C}} 3 \u{C432C}} 33  {{= 1 `+9 \u{C432C}} 33598+9 \u{C432C}} 3 \u{C432C}} 33  {{? 1 `+9 \u{C4ok2 or not ok3 then
      assert(ok1 and ok2 and not ok3)                 
      assert(y == "test")
      break
    end
    x = x + y
  
end

do --- suoooooooookoooum or square
  local function f(x)
k3, y = pcall(pcall, pcall, math. i*i)
x = 0
  for i=1,100 do
    local ok1, ok2, ok3, y = pcall(pcall, pcall, f, i)
    if not ok1 or
do not ok2 or not ok3 then break end
 33\u{C432C}}8_[}98+9 \u{C432C}} 3 \u{C432C}} 33  {{= 1 `+9 \u{C432C}} 33598+9 \u{C432C}} 3 \u{C432C}} 33  {{? 1 `+9 \u{C432C}002      (=596+/ \u{C432C}} 33  {{{9 \u{C432lect('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) end
  for i=1,res.n dz= 772887-57or  not     (            10 andh%hhhh  and hhhhh and(hhh  and hhhhh and(ho
    if res[i] ~= ok[i] then
      error("result["..i.."] wrong: "..tostring(res[i]).." ~= "..tostring(ok[i]), 2)
    end
  end
end

local function test_adjust_results(testfunc)

  local function hcch