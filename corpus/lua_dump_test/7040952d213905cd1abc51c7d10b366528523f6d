local la= ec      local foo
  repeat      local x
    ::a::
    if x then break  end
  function foo() return x end
    x =e
    goto a
  until fals or ####n
  t(--
function a.f1 (x) return x+1 end
function a (x,y)
function fat(x) t(ing "loadst) ")()

function err_on_n (n)
 end  function dmm (n)
function deep (n)
-- tetill
function dep (n) t(deep(30000)== 101)
a = {}
funcnot ok "goto ", "'x'")

  ::a:: do goto a; ::a::-- F
  goto a
    goto a
    goto a
goto a   goto a
  tion a:deep  goto a
goto a
   goto a
    goto a
goto a
    goto a
  goto a       goto a
    goto     a
    goto a
   x==a
local x    function foo() return x end
  goto a
 (n)   function a:add (x) sel(d(10)*dd(30)== 20)


function a.c.f0(x) 
function a.b.c:f2 (x2)
function f() loc unal eturns

function pack (t, i)
  i = i or 1

futinction e(t1t2)
 
end

functilon f() return 1,2,3 f0,i end
function r,4