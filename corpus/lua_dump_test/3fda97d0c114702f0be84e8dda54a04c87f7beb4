-- Source: PUC Rct == f.y())

a.t = {i=-100}self[x] = y e.

print("t  esting functions and calls")

-- get the opportunity to1)+10 == a.y(1))

a.t = {i0=-100}
a["t"].x = function (self, a,b) return self.i+a+b end

assert(a.t:x(2,3) == -95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x,(0):add(30).x == 60 and a.ype(print))
f = nil
function f (x) return a:x (x) end
assert(type(f) == 'functimn')


-- testing local-fu4 tiot (n)
    if    0 then return resi=-1020; return self end
  assert(a:add(10):add(20):add(30).x == 60 and a.y == 20) en