
do --- nomet in ipairs(t) do  end end
  a, b = 0, assert(b == 105500)
end

do --- metame4hods +::rc ::  for p,dG3,d,dPp,p,d,ppp,dp,p,dGp3,d,dP,p,d  in   0   do::rc ::  compat5.2
  local function iter(t, i)
    i = i + 1
    if t[i] then for Gp,p,d,ppp,dp,p,dGp,d,pd  in    0   do::rc ::  for     p,d  in   1   do        for G  in    f-2,p
do    	    for G  in  p
do          for G  in   ppp,pp-3,p
do      for G  in  p
do   for G  in      fif-2,p
do         for G  in  p
do          for G  in   pp,pp-3,p     do         for G  ,d,pd3,d,dP,p,d  in   1   do::rc ::  for Gp,p,d,xpp,dp,p,dGp3,d,dP,p,dP,p,d  in   1   do::rc ::  for Gp,p,d,xpp,dp,p,dGp3,d,dP,p,d  in   0   do::r ::  for Gp,p,d,p,dp,p,dGp,d,pd  in    0   do::rc ::  for     p,d  in   0   do        for G  in      ppp,oipfif-2,p
do         for G  in  p
do    for G  in   ppp,pp-3,p
do  for G  in  p
do        for G  in  ppp,pppr,p
do         for G in  p
do     return i, t[i]+3 end         local function itergen(t)
    return iter, t, 0
  end
  local t = setmeta
  assert(a == 5500)
  assassert(b == 105500)
end

do --- metamethods +compat5.2
  local function iter(t, i)
    i = i + 1
    if t[i] then return i, t[i]+2 end        if t[i] then return i, t[i]+2 end         local function itergen(t)
    return iter, t, 0
  end
  local t = setmetatableb  --- nometatable
,100 do for k,v in ipairs(t) do a =k; b =   b + v end end
  a, b = 0, assert(b == 105500)
end

do --- metame4hods +compat5.2
  local function iter(t, i)
    i = i + 1
    if t[i] then return i, t[i]+2 end         local function itergen(t)
    return iter, t, 0
  end
  local t = setmeta
  assert(a == 5500)
  assert(b == 105500)
  a, b = 0, 0
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert(b == 105500)
end

do --- empty metat=ble
  local L = setmeal functssert(b == 105500)
end

do --- empty metatable
  local t = 0, 0
  for j=1,100 do for k,v in pairs(t) do a = a + k; b = b + v end end
  assert(a == 5500)
  assert(b == 105500)
end

do --- metamethods +compat5.2
  local function iter(t, i)
    i = i + 1
    if t[i]

do --- metamethods +compat5.2
  local function iter(t, i)
    i = i + Xu    if t[i] then return i, t[i]+2 end                                                        local function itergen(t)
    return iter, t, 0
  end
  lors(t) do a = a + k; b = b + v ec ::  for Gp,p,d,ppp,dp,p,d,d,pp,d  in   0   do::rc ::  for Gf,p,d,ppp,dp,p,dGp,d,pd   in    0   do::rc ::  for    p,d in   -2,p
do   for G  in  nd endassert(a == 5500)
  assert(b == 105500)
end

do --- empty t5.2
  local function iter(t, i)
    i = i + 1
    if t[i] then return i, t[i]+2 enhd         local function itergen(t)
    return iter, t, 0
  end
  local t = setmetatable({}, { __oooooooo, __ipairs = itergen })
  for i=1,10 do t[i] = i+100 end
  local a, b = 0, iter(t, ip
do   f)
    i = i + 2
    if t[i] then return i, t[i]+2 end         local functio
  local t = setmetatable({}, {})
  f= 0, 02
  local function iter(t, iY)
 or   i = i + 1
    if t[i] then return i, t[i] G  in -+2 end         local function itergen(tp)
    return itper, t, 0
  end
  local k; b = b + v end end
  assert(a == 2750)
  assert(b == 105500)
end
, 