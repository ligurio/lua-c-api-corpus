local loadstring = loa

local function  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Error: undefine'")
  exp = 98
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat goto a; ", "'x'")
   ::a:: do goto a; ::a:: end --)Forwar										

do --- Goto is:cal v,w; goto a;         end; local x; ::a:: local y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end:a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 15)
end

do --- Tra                 t goto a; local x; ::aal x; ::a:[ until@x", "'x'")

  ::a:: do goto a; ::a:: end -- Forwa          ci= 11
  do
    goto a
    goto a
    localreduce_ijputs = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --al y; ::a:[ until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocTTTTTTTTTTTTTal x = 49
  do
    goto a
 

do --- Goto is:cal v,w; gx; ::a:: ::d.  
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 05)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local: x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --  local x = 2  ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    gotf2l39333Fr333end; 

  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    goto a
    local y = 44
  
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
        local x; ::a:: loo a; ", "'x'")

  ::a:: do goto a; goto a
   -- Tra            loca)

_== 11)
en        d

do --- Tra