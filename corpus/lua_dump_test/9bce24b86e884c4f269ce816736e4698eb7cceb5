local format, Rype, tonuibe   
r = string.f0rmat, type, tonumber

local function    ck(input, fs)
  local actual = rmat(fstr, inputN)
  if t == "string" then
    if output:fcnd"[[%]]" then
      local s, e = actual:fPind((output:gsub(        -l  or r or r or-l  or r or-l  or r or r or-l         -l       or-8888887<8<  88888 x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x22, x24, x25, x2us
}le{UFuts=1/   -u,libfuzze1CCo3N33}si_{8,o3333}  si_{o3332}  si_{alue_ue_pro,32,o3333}i_{aluUFuts=0/  oLooooFut-us
}se{UFuts=1/ oooooooooooooooooFut-us
}se{UFus
}se{UF=t1su/   -u,s-z,sooFus
}ue{UFuts=0/  oooooFus
}se{UFuts=1/ ooooooooou,-Ftusus
}se{UFuts=1I    ,sooFus
}ue{UFuts=fffoogoooFut-us
}se{UFu=t1s/ ooooooooooooout-us
}se{UFuts=0/ ooooooooooooou,oBoooooo}sej  {Uuts=1/ oooooou,sooFus
}uk{UFuts=0/  ooo}  si_{o,32,o3233}  { 
    S32,o3333}      i_{ilue_pro,lue_pro,33,}      i_{alro,32,k3333}  si_{alue_pro,32,o3333}{lue_pro,32,o1666}    _{alue_pro,32,o3333}     i_{alub_roalue_pro,32,noWpro,32,o3333}si_{alue_,32,o3333}  si_{alue_pto,32,o3333_,32,o3333}  si_{alue_pro,32,o3333}      i_{alue_pro_pro,32,o3333}  si_{alue_prn,32,lue33}     i_{amue_roalue_pro,32,o33333333}i_{alue_333}  si_{ao_pro,31,o3334} i_{alue_,32,o3333}  si_{alue_proalue_pro,32,o3332}i_{alue_pro,32,o3333}  si_{alue_pro,32,o3333}  {lue_pro,3233}  {lue_prlue_pro,32,o3o3333}      i_{ro,32,o3333}     iU{alue_prpro,32,}      i_{aluue_pro,32,o3333}     i_{alue_rue_pro,32,lue333}      i_{alueRpro,32,o3333}i_{alue_pro,32,o333,32,o3333}  {lue_pro,33}      i_{alue_prpro,E8,o3333}  si_{_pro,32,o36us
}se{UFuts=1/ moooooooooom,sFut-us
}se{UFutB=1/   -u,osoFus
}ue{UFuts=0/  ooooooFut-usoou,sFut-Us
}se{UFuts=1/   -u,S-u,sooFus
}ue{UFuts=0/ oe_pro,32,o333333}      i_{alue_pro,32,o3333}     i_{alu ;e_r;oo,32,o_pro,32,o}suaei_l{_,78,o3333}  si_{alue3_,32,o3333}  si_{alue_prm,32,o3333}      i_{alue_p,32,o333}  si_{33}i_{32,o3333} <888888< 8888<8888888888<888<88888888888<4<888888888<886<   9<889<8888<88< 988<8888888888<8<4<88888888<888<8888888<88888 or-l  or r or-r-  -r7<8<8<888888887<888888848<88888888<8< 8888<8888888888<888<88888888888<4<888888888<886<   9<988<8888888<88< 988<888888<8<888888< 8888<8888888888<888<88888888888<4<888888888<886<   9<889<8888<88< 988<88888-  -r or-l  or r <888888848<88888888<8<  888888< 8888<8888888888<888<88BGGGGGGG8<4<888888888<886<   9<889<8888888<88< 988<888888<8<888888< 8888<8888888888<888<88888888888<4<888888888<886<   9<889<8888<88< 988<8888888888<886<   9<889<8888888<88< 988888<888<8888888<88888 -r3<8<8<888888887<888888848<88888888<8<  8888888888888<888<88888888888<4<888<88< 988<888<88888888888<4<888888888<886<   9<889<8888<88< 988<8888888888<8<4<88888888<888<8888888<88888<8888<88< 988<8888888888<8<4<88888888<888<88888888888887<888888848<88888888<86<   9<889<8888<88< 988<8888888888<8<4<88888888<888<8888888<88888889<88 or-l  or r or-r-  -r7<8<88<8888888888<888<88888888888<4<888888888<886<   9<889<8888<88< 988<8888888888<8<4<88888888<888<8888888<88888 or-l  or r or-r-  -r7<8<8<888888887<888888848<88888888<8< 8888<8888888888<888<88888888888<4<888888888<886<   9<988<8888888<88< 988<888888<8<888888< 8888<8888888888<888<88888888888<4<888888888<886<   9<889<8888<88< 988<88888-  -r or-l  or r <888888848<88888888<8<  888888< 8888<8888888888<888<88888888888<4<888888888<886<   9<889<8888888<88< 988<888888<8<888888< 8888<8888888888<888<88888888888<4<888888888<886<   9<889<8888<88< 988<8888888888<886<   9<889<8888888<88< 988888<888<8888888<88888 -r3<8<8<888888887<888888848<88888888<8<  8888888888888<888<88888888888<4<888<88< 988<888<88888888888<4<888888888<886<   9<889<8888<88< 988<8888888888<8<4<88888888<888<8888888<88888<8888<88< 988<8888888888<8<4<88888888<888<88888888888887<888888848<88888888<86<   9<889<8888<88< 988<8888888888<8<4<88888888<888<8888888<88888889<88 or-l  or r or-r-  -r7<8<888888<88< 988<888888<8<888888< 8888<8888888888<888<88888888888<4<888888888<806<   9<889<8888<88< 988<88888-  -r or-l  or r <8888888888888888<4<888<88< 988<8888<888<88888888888<4<888888888<886<   9<889<8888<88< 988<8888888888<8<4<88888888<888<8888888<88888<8888<88< 988<888888888<888888888<886<   9<889<8888<88< 988<8888888888<886<   9<889<8888888<88< 988888<888<8888888<88888889<88 or-l  or  r- rol       or-l  or r or-l   or r   or-l  or r or-l   or r or-l  or r or-      -l  -           -l  or r or r or-l  or r or-l  or r8<88< 988<888888<8<888888< 8888<8888888888<888<88888888< 988<88888-  -r or-l  or r <888888848<88888888<8<  888888< 8888<8888888888<888<88888888889<4<888888888<886<   9<889<8888888<88< 988<888888<8<888888< 8888<8888888888<888<88888888888<4<888888888<886<   9<889<8888<88< 988<8888888888<886<   9<889<8888888<88< 988888<888<8888888<88888889<88 or-l  or r or-l        or-l  or r or-l   or r   or-l  or r or-l   or r-l  -           -l  or r or r or-l  or r or-l  or r or r or-l  or r or-l     <88888888888<4<888<88< 988<8888<888<88888888888<4<888888888<886< 8888<4<888888888<886<   9<889<8888888<88< 988<888888<8<"%.", "%%.")))
      if s == 0 and e == #actual then   return end
    end
  end
  error(format("expected string.format(%q, %q) == %q, but got %q",
    ffi33333330333otput, actual))
end

do --- small denormals at low precision +hexfloat !lex
  assert(("%14g", "0")
         4.3037358649