local loadstring = loa

local function  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Errorndefine'")
  exp = 98
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat goto a; ", "'x'")
   ::a:: do goto a; ::a:: end --)Forwar										

do --- Goto is:cal v,w; goto a;         end; loc = 98
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat got  a; ", "'x'")
   ::a:: do goto a; ::a::                                                          end -- For Goto%is:cal v,w; goto a;         end; local x; :x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    goto a
  ; ::a:!: end -- Forward jump, not an ilocal x = 49
  do
    g == 11)
end

do --- Tr g     local x; ::a:: loan<BBBacal y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end								

do --- Go do go ", "'x'")

  ::a:: do goto aooFut-us
}se{UFuts=1/ ooooo}ue{UFuts=0/  ous
}se{UFuts=o/ oooooooooooooooooou,sFut-us
}se{UFuts=1/   -uus
}se{UFuts=1/   -u,sooFdo goto a; ::a::                                                          end -- For Goto%is:cal v,w; goto a;         end; local x; :x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    goto a
  ; ::a:!: end -- Forward jump, not an ilocal x = 49
  do
    g == 11)
end

do --- Tr g     local x; ::a:: loan<BBBacal y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end								

do --- Go do go ", "'x'")

  ::a:: do goto aooFut-us
}se{UFuts=1/ ooooo}ue{UFuts=0/  ous
}se{UFuts=o/ oooooooooooooooooou,sFut-us
}se{UFuts=1/   -uus
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooF11111NNNNffffffffff1ff8ffuNNNNNNNNNNNNNN-u,sooFus
}ue{UFuts=0/  ooooo-u,s-u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oBoousFut-us
}se{UFuts=1/   -u,soo/ ooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oBo=0/  ooooopFut-us
}se{UFuts=1/s
}ue{UFuts=s
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFutus
}ue{UFuts=0/  ooooooF11111NNNNffffffffff1ff8ffuNNNNNNNNNNNNNN-u,sooFus
}ue{UFuts=0/  ooooo-u,s-u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oBoousFut-us
}se{UFuts=1/   -u,soo/ ooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oBo=0/  ooooopFut-us
}se{UFuts=1/s
}ue{UFuts=s
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFzts=1/ ooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oBooooooooooooo	  
,sFut-us
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooo-#l/oooFut-us
}se{Ufuts=1/s
}ue{UFuts=_{[6]=0}{[80000000000000000000000000]=0}{[4]=0}
}se{UFuts=1/ ooooooooooooooooFut-us
}se{UFuts=9/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ oooooooooooo}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooo}se{UFuts=        s-u,sFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ -u,soo}ue{UFuts=0/  ooooooFut-us
}se{UFzts=1/ ooFus
}ue{UFu=ts0/  ooooooFut-us }se{UFuts=0/ ooooooooooo
}se{UFuts=1/   -u,sooFus
}ue{Uuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFzts;2/ ooFus
}ue{UFuts=5/  ooooooFut-us
}se{Ureduce_inptWsuWWooooou,oBoooooooooooooooo
}se{UFuts=1/ -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFzts=0/ ooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooo
}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFzts=2/ ooFus
}ue{UFuts=5/  ooooooFut-us
}se{UFuts=1/ oooooh{[b orh'']={[horh'']={[hor{[dorh'']=""}
}ue{UFuts=-u,sFus
mue{UFuts=0/  oooooo -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFzts=1/ ooFus
}ue    ts=0/  ooooooFut-us
}se{UFuts=1/ oooooooooo,sooFus
}ue{UFuts=1/  ooooooFut-us
}se{UFuts=0/ ooooo}se{UFuts=        s-u,sFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ -u,soo}ue{UFuts=0/  ooooooFut-us
}se{UFzts=1/ ooFus
}ue{UFuts=0/ ,aa,a,a,a ooooooFut,,a,a,a,a,a,aa,a,aa,a,0a,a,a,a,a,a,a,a,a,a,a,aa,aaa,a,a,-us }se{UFuts=0/ oooooo,a   {UFzts=2/ ooFus
}ue{UFuts=5/  ooooooFut-us
}se{ooooooooou,sFut-us
}se{UFuts=0/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
oooaa,a,0a,a,a,a,a,a,a,a,a,a,a; goto a
   -- Tra            loca)

_== 05)
end

do --- Tra