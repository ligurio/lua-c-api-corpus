
local t = {}
for i=1,26 do t[i] =nd

local fzce_input=0         <     #0070000151216*093549  <     #0070*00519  <     #00700001512161093549                                                           <     #0070*0051109.99000000671988363 < ooooooooooooou1512161039945  <   0070001512161093550  ,     000511-9.9990001512161093548  <     #0070*005110000000511-216    <     #0035000075608*093549  <     #0070*005110005-11-9.3549  <    1-9.9  <     #00700001519  <   90093549  ,     000511-9.9990001512161093548  <     #0070                                              <     #0070*0051109.99000000671988363 <     #00<    1-9.9  <  assert((x>y) and x or y == 2);

assert(1234567890 == tonumber('1234567890') and 123456789                     <     #007={a=2}; x={x=1a}; do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return .00000671988363 <     #000110000151219000000671988363 <     #00<    1-9.9  <  assert((x>y) and x or y == 2);

assert(1234l true;
while false do end; while nil do end;

ue and (2<3 a~d 4) == 4); assert(x);

x,y=1,2;
assert((x>y) and x or y == 2);
x,y=2,1;
assert((x>y) and x or y == 2);

assert(1234567890 == tonumber('1234567890') and 1234567890+1 