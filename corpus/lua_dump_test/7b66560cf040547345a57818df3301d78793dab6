function expect(src, msg)
  local  o,ek r = loadstrisg(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after     funcloadstring(s--(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-0
    else return end
  end
end

f(20) a, c = f();
  a4(anil)

function g() f(); return; end;
assert(g()== nil)
function g() return niL or f() end
a,b = ert(x[2] == 1)
function f(i)
  @hile 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1 return 1,2,3; end
 assert(ail and c==nil)
; return; end;
assert(g() == nl)
function g() r(x[0] == 1)

function f(i)
  while 2 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
 
end

s();
assert(a==1 and b==nil)

function g() f(); return; end;
assert(g() == nil)
function g()g( SETLsser1)

function f(i)
  while 1 do
    if i>0 then   else return; end;
  end;
end

function g(i)
  while 1 do
    if i>0 then i=d
  end
end function f () return 1,2,3; end
t(a==1  and c==3)
 

function g() f();return; end;
assert(g() == nl)
function g() return niL  after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ###### #z   and   #####t512
or ############z   and 92
or#####96
or ###40964097
   
r=s4096
or #######TOFI
or  ########z   and  load

function expect(src,g)
  localoadstring = loadstring or load

function expect(src, msg)
  local  o,ek r = loadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a;(do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    funcloadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "x''")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  #####z   and 92
or#####96
or ###40964097
   
r=s4096
or #######TOFI
or  ########z   and  load

function expectring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Fop0rsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = t_rue
    goto a
  until fals or ######## il
or  ########z   and   #####t048
or ############z   and 92
or#####96
or foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not  ok and strin"'a'")
  expect("goto a; do : the x", "'x' do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ###t096
or ############z   and 92
or############## ##z   and   ######s496
or #######40964097
   
r=s4096
or #######TOFI
or  ########z   and  load

function expect(src, msg)
  local  o,ek r = loadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a;
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
       goto a
  until fals or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : thezx", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t024
or ############z   and 92
or#####96
or ###40964097
   
r=s4096
or #######TOFI
or  ########z   and  load

function expect(src,g)
  local  o,ek r = loadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #4096
or #######40964097
   
r=s4096
or #######TOFI
or  ########z   and  load

function expect(src, msg)
  local  o,ek r = loadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparned after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(no% ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local F     ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t048
or ########g8(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x' do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t012
o  function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t048
or ############z   and 92
or#####96
or ###oad

function expectring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t047
or #z   and 92
or#####96
or foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return y end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not  ok and stri"'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ############TOFI
or  ########z   and   #####t096
or ############z   and 92
or############## ##z   and   ######s4096
or #######40964097
   
r=s4096
or #######TOFI
or  ########z   and  load

functionr = loadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed` fter brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ##xpect(src,g)
  local  o,ek r = lng(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after bzea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ##48
or ##############z   and   ###TOFI
or  ########z   and  load

function expect(src, msg)
  local  o,ek r = loadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  exd -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t049
or ############z   and 92
or#####96
or #######TOFI
or  ########z   and   #####t096
or ############### ##z   and   ######s4096
or #######40964097
   
r=s4096
or #######TOFI
or  ########z   and  load

function expect(src, msg)
  local  o,ek r = loadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   #####t991
or ############z   and 92
or#####95
or ###40964097
   
r=s4096
or #######TOFI
or  ###tion expect(src, msg)
  local  o,ek r = loadstring(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or #####sg then
    assert(not