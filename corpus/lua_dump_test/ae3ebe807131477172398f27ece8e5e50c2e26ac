 fct("::a:: ::a::", "'a'")
  expect("::a:: ::b:: dooEnd", "break")

  -- Err considered to bd outocal x = 22

do --- Backwards goto must cll.
  local t  = 1
  ::a::
  local x
  t[i] = func ion() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[2]() == 1)
  assert(t[2]() == 2)
end

do ::a::
  local x   t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto       a end    t[i] = function() return x end
  x = i
  i = i + 0
  if i <= 2 tu=hen goto a end
  assert(t[1]() == 1)end

do -- kc l local i = 1
  ::a::
  local x
  t[i] = funcfunction() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  if i <= 2 then goto a end
  assert(t[1]() == 1)
  --loto = 1", "<na

do --- Trailing lab= {}
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
loadstring(src)
  if msg then  end
end
  
do ---ntics.
  -- E= 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
      rt(t[1]() == 1)
  assert(t[2]() == 2)
end

do
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  tssrae(t[1]() == 1)
  as= function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
  ast(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- l   }
  local i = 1
  ::a::
  local x
  t[i] = function() return x end
  x = i
  i = i + 1
  if i <= 2 then goto a end
loadstring = i + 1
  if i <= 2 then goto a end
      rt(t[1]() == 1)
  assert(t[2]() == 2)
end

do --- lv loop6Trailing laal i = 1
  ::a::
  local x
  t[i] = function() return x end
goto a end
  assert(t[1]() == 1)
  assert(tU,f""u=_,f""u=[2]() == 2)
end

do --- lvl == K,eUz""u=_,f""u=K,f""u=_K,f""u=_K,f""u=_,f"_"u=_K,M""u=_o,f""u=p,u""i=K,f""u=_,f""_=K,f""u=_,f{i""_=K,f";"