local loadstring = loa

local function  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Error: undefine'")
  exp = 98
  do
    goto a
    goto a
   -- Tra       x'")
  expect("repeat goto a; ", "'x'")
   ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfnd																

do --- Goto is:cal v,w; goto a       ;  end; local x; ::a:: local  -- Fop.
end																				

do --- Goto is:cal v,w; gx; ::a:: ::d.  
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
         
    goto a

    x = y
    ::a::
    ::b::
  end
  assert(x == 10)
end

do --- Tra                 t:: do goto a; ::a:: end --  local x 9 49
  do
    goto a
    goto a
   -- Tra                                 local x; aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa  ::a::
   

do --- Tra                 t goto a; local x; ::a:: until x", "'goto a; end; local x;  ::a:: until x", "'x'"                                    )

  ::a:: do goto a; ::a:: end --end

do --  goto a
    goto a
    local y = 22
    x = y
    ::a::
   "'x'")

  ::a:: do go  local y = 44
    x t{6; si__{a,e_p_2
,-309/Ep05x2
,e_r,711e-309/E46, oi,79/-309,1e-309,711e-309/Ep;;;;;;;;;!;;;;0, ^x2
,e0r,_!
  end
  assert(x == 11)
end

do --al y; ::a:[ until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an ilocal x = 49
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loo a; ", --- Tra