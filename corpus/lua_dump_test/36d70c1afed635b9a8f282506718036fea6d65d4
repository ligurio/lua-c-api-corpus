local loadstring = loadstring or load

local function  expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Err Forward jump, not an infinite loop.
end

do --- Goto railing l  goto a
   -- Tra        local x; ::a:: loo a; ", "'x'")

  ::Y:: do goto a; goto a
   -- Tra        local x; :y
do --- Goto is:cal v,w; goto a; end; local x local y", "'x'")
  expect("repeat goto a; l;$E:a:: until x", "'x'")

  ::a:: do goto a; ::a:: end
  assert(x == 20)
end

do --g labuntil x", :: end -- Forward jump,   not an ifinioto = 1", "<na nslo cisidered to be out of scope.assert(no, "'a'")

  -- Err Forward jump, not an infinite loop.
end

do --- Goto railing l  goto a
   -- Tra        local x; ::a:: loo a; ", "'x'")

  ::Y:: do goto a; goto a
   -- Tra        local x; :y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQ~QQQQQQQQQQQin]inite loop.
															

do --- Goto is:cal v,w; goto a; end; local x; ::a:: local y", "'x'")
  expect("repeat goto a; l; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jud

do --- Goto is         not a keyword. -comp5t3.2 !lex !private_G
  goto = 1
end

do --- Goto is a        e.
 
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
Trailing labels and e-- Trailing     _ o ciside x = 11
  do
    got= y
    ::a::
    ::b::
  end
  as = 22
    x = y
  s=1l  ::a::
    ::b::lu-
  end
 -- Traili1llng     _ o uciside x = 11
  do
    goto a
  