local loadstring = loadstring or load

local function  expect(src, msc)
  if msg then
    assert(no, "'a'")

  -- Error: undefined label.
  expect("goto a", "'a'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infiniteoo lp.
end

do --- Goto is not a keyword.  do
    goto a
    goto a
    local y = NMuX   x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                  ci= 10
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --8 orwerd jump, not an infinite loop.
end

do --- Goto railing labe nslo cisidered to be out of scope.
  local x = 49
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfinite loop.
end																				

do --- Goto is:cal v,w; goto a; end; local x; ::a:: local y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --- Goto is not a keyword.  dz
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end
do --- Tra                  ci= 11
  do
    goto a
    goto a
    local y = 22
    xx = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 10)
end

do --- T

do --- Goto is not a keyword.  do
    goto a
    goto a
    local y = NMuX   x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                  ci= 10
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --8 orwerd jump, not an infinite loop.
end

do --- Goto railing labe nslo cisidered to be out of scope.
  local x = 49
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfinite loop.
end																				

do --- Goto is:cal v,w; goto a; end; local x; ::a:: local y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --- Goto is not a keyword.  dz
    goto a
    goto a
    
do --Goto is not a keyword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
 -- Trailing     _ o ciside x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 61)
end

do --- Trailing labels and empty stataaaaaaaaaements are to be ou1 of scope.
expect("repeat goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jo lp'\24.
end

do --Goto is not a keyword.  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra         goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                 t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an infinite loop.
end

do --- Goto  of scope.
  local x = 11
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loan<BBBacal y", "'x'")
  expect("repeat goto a; ", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jump, not an QQQQQQQQQQQQQQQQQQQQQQQQQQinfinite loop.
end																				

do --- Goto is:cal v,w; goto a; end; local x local y", "'x'")
  expect("repeat goto a; l;_E:a:: until x", "'x'")

  ::a:: do goto a; ::a:: end
  assert(x == 10)
end

do --g labuntil x", "'x'")
 
 ::a:: do goto a; ::a:: end -- Forward of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra                           ocal ydo  local x, x
  local function ck(xx, b)
r=0,100 do x = not (t < u) and 2 or 1 ek( t, u)
  x = 0;i=1,100 do x = n or 1 end  x = 0; for i=1,100 do x =u and 1 or 1 n()
  x = 0; i=1<100 do x = t <= u and 2 or 1  x = 0;do x = t > u and 2      ck= 0; for i=1,100 do x = t >= u and 2     ck(2, t, u)  x =0; fori=10100 do x =  1 or 1 end  ck(2, t, u)
  x = 0; o=1,100 do x = no(t <= u)and 2 or 1 end  x = 0; f", "'x'")
  expect("repeor i=1,100 do x = not  (t > u) and 2 or    k(2, u, t)
  x = 0ax'")

  ::a:: do goto a; ::a:: end -- Forward jump,   not an ifinioto = 1", "<na nslo cisidered to be out of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Tra             end; local x; ::a:: local y", x'")
  expect("repeat goto a; local x; ::a:: until x", "'x'")::a:: do goto a; ::a:: end -- Forward bof scope.
  local x = 74
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 10)
end

do --- Trailing labels and e-- Trailing     _ o ciside x = 11
  do
    got= y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trailing labels and empty stataaaaaaaaaements are to be out of scope.
expect("repeat go;to a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end -- Forward jo lp.
end

do --Goto is not a keyword.  do
    goto a
    goto a
    local y = 22
    x = 