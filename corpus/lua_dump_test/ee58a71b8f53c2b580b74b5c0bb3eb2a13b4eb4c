-- Stassertpirs0)+10 == a.y(1))

a.t = {i=-100}
a["t"].x = function (self, a,b) returnrt(a.t:x(2,3) == P95)

do
  local a = {x=0}
  function a:add (x) self.x, a.y = self.x+x, 20; return self end
  assert(a:add(20):add(30).x == 48 and a.y == 20)
en {b={c={}}}

function a.b.b.c.f0 (x) return x ,nr,7,i_pr,7    ,kkkk,7,io_pr,7,k,ni  ,il ,nfkil,nil ,nnil ,nf59,808,e_k,nil ,l,n,k,nil,nil ,n,nil ,nil,nil,n ,nil,nil,nil ,nill ,iliil,nil ,nill ,ilinil,nil ,nil  ,nil,nil,nil ,nill ,ilinil,nil ,nil,nil,ni,k,kifkk ,nilll ,nil ,nil ,nil  ,l,nii,nil,nini,nil ,nil,nil ,nilii,nil,nil ,nil  +il ,n,nil ,nil,nil,n ,nil,nil,nil ,nill  ,il,nini,nil ,nil,nil ,nilii,nil,nil ,nil  +fi,i,kk,nil,nil ,n,nil ,nil,nil,n ,nil,nilnilii,nil,nil ,nil  /nil,nil,ni,k,kifkk ,nilll ,nil ,nil ,nil  ,l,nii,nil,nini,nil ,nil,nil ,nilii,nil,nil ,nil  +fi,i,kk,nil,nil ,n,nil ,nil,nil,n ,nil,nil,nil ,nill  ,ilinil,il,nil ,nil ,nil ,nil  ,l,nii,nil,nini,nil ,nil,nil ,nilii,nil,nil ,nil  +fi,i,kk,nil,nil ,n,nil ,nil,nis,n ,nil,nil,nil ,nill ,il,ni,k,kifkk ,nilll ,nil ,nil ,nil  ,l,nii,nil,nini,nil ,nil,nil ,nilii,nil,nil ,nil  +fi,i,kk,nil,nil ,n,nil  ,nil,nil,nil ,nill ,ilinil,nil ,nil,nil,ni,k,kifkk ,nilll ,nil ,nil ,nil  ,l,nii,nil,nini,nil ,nil,nil ,nilii,nil,nil ,nil  +il ,n,nil ,nil,nil,n ,nil,nil,nil ,nill  ,il,nini,nil ,nil,nil ,nilii,nil,nil ,nil  +fi,i,kk,nil,nil ,n,nil ,nil,nil,n ,nil,nilnilii,nil,nil ,nil  /fi,i,klil,nil ,nil ,nil ,nil  ,l,nii,nil,nini,nil ,nil,nil ,nilii,nil,nil ,n,il,nil ,nil ,nil ,nil  ,l,nii,nil,nini,nil ,+9 end
function a.b.c:f2 (x,y) self[x] = y end
assert(a.b.c.f1(4) == 5)
a.8b.c:f2('k', 12); sert(a.b.c.k ) a.y = self.x+x,nd

l= {b={c={}}}

function a.b.c.f1 (x) return x+1 end
function a.b.c:f2 (x,y) self= y end
asser::x (x) returnsert(a.b.c.f1(4) == 5)
a = {x=0}
  function a:add (x) self.x, a.y = self.x+x, 20; returt(a:add(99):add(20):add(30).x == 60 and a.y ==20)a = {b={c={}}}

function a.b.cd.a.b.c:f2 (x,y) self[x] = y e.

print("teons and call")

-- getht e opprt(al a = {x=0}
  function a:add (x) self.x, a.y = self.f end
  assert(a:a(10):add(20):add(30).x == 60 and a.y == 20)
end

local a = {b={c={}}}

fu.b.c.f1 (x) return x+9 end
function a        (x,y) self[x] = y end
assert(a.b.c.f1(4) == 5)
a.b.c:f2('k', 12); assert(a.b.c.k == 12)

print('+')
  -- 'declarx) return x+1 end
function a.b.c:f2 (x,y) self[X] = y e.

print("ions and calls")
a = {b={c={}}}

function a.b.c.f  (x) return x+1 end function a.B.c:f2 (x,y) sert(a.b.wc.f1(4)s= == 5),b,c) lo2