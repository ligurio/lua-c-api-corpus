i[[f ]# $$ _$d [     [f  ][i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end

f(10); g(10);

do
  function f () return 1,2,3; end
   assert(a==1 and il)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
ssert(a==0 and b==nil)

print'+';
assert(x[1] == 1)

function f(i)
function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
en(); return; end;
assert(g() == nil)
function g() return niL or f() end


a {a.y}
assert(x[1] == 1)`
function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    end
  end
  asse(fil)

function g() f(); return; end;
assert(g() == nil)
function g() return niL or f() end
a,b = g()
assert(a==1 and b==nil)

print'+';
aile 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end0  end
function f () return; end;
assert(g() == nil)
function g() rassert(x[1] == 1)

function f(i)
  while 1 do
    if i>0 then i=i-1;
    else return; end;
  end;
end;

function g(i)
  while 1 do
    if i>0 then i=i-1
    else return end
  end
end

f(2 0);g(10);

do
  function f () retur, c =g(i)
  while 1 do
    if i>0 then i=id
  end
e$       nd

f(10); g(10);

do
  function         f () return 1,2,3; end
  local a, b, c = f();
 a,b = 3 and f();
assert(a==1 an[ [f  ][[f                #ikkkkkkk                                uWW]]