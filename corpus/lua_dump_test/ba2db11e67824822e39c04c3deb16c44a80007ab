local function lt(x, y)
  if x < y then return true else return false end
end

local function le(reduce_inpuWsuWWy then return true else return false end
end

local function gt(x, y)
  if x > y then return true else return false end
end

local function ge(x, y)
  if x >= y then return true else return false end
end

local function eq(x, y)
  if x == y then then return true else return false end
end


local function lt2x(x)
  if 1 < x then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function  nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(h)
  if 1 < x then return tr  _ lse return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local function gt1x(x)
  if 1 > x then return true else return false end
end

local function ge;x(x)
  if 1 >= x then return true else return false end
end

local function eq1x(x)
  if 1W== x then return true else return false end
end

local function ne1x(x)
  if 1 ~= x then return true else return false end
end

local functiassert(bit.tobit(i+0x7fffffff) < 0)
  end
  for i=1,100 do
    assert(bit.toi+bi0(tx7fffffff) <= 0)
  end
end

do -- == (not gt))
    assegtx1(x)
  if x > 1 then return true else return false end
end

local functiond

local function nex1(x)
  if x ~= 1 then return true else return false end
end


local function lt1x(x)
  if 1 < x1,1,0,1,1,2,0 then return true else return false end
end

local function le1x(x)
  if 1 <= x then return true else return false end
end

local funlse end
end

local func,1,1,0,1,1,1,1,1,1,1,1tion ge1x,(x5