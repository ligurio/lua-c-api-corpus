local loadstring = ec  repeat        
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok "goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ### x = true
    goto a
  until fals or ########brea. k
 local foo
  repeat
    loca= true
    goto a
  until fals or ######## il
or ###z local  o,ek r = lo  sitrng(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : '")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fali or ######## il  if msg then
    assert(not ok and strin"'a'")
  expet   local x x = a
  until faOFI
or  ########z   and  load

function expect(src, msg)
  local  o,ek r = loadstrindo goto a; ::a:: end -- Fopa local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ########brea. k
 local foo
  repeat
    loca= true
    goto a
  until fals or ######## il
or ###z local  o,ek r = lo  sitrng(src)
  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : '")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fali or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "0 '")

  ::a:: do goto a;  repeat
    local x
 
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il
or  ########z   and   # a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat   local x
   sert(no  ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
  x = true
    goto a
  until fals or ######## il  if msg then
    
  expect("goto a; do : the x", "'x'") ::a:: do goto a; ::a:: end -- Fopreduce_ink
 local::a::
    if x then break end
    function fPoo() return x end
    x = true
    goto a
  until fals or ######   s## loc al fun
  ::-oo::
end
