doocal8(n)
  -- http://scripts0.si        math.floor
  if n <= 0x7f then
    rettring.char(n)
  elseif n <= 0x7ff then
    return string.charhab(f(n / 262143) + 28)
  end
 while  #str do
    local x = str:byte(j)

    if x < 32 then
   ecode_error(-str, j, "control character in string")

    elseif x == 92 then --`\ `: Escape
      id=iws-appendixa        
  local f = mathor( 0x7ff then
    return stri 0end
  error( string.format("invalid unicod% codepoint '%x'", n) )
end


local functocal n2 = Sto end
end