local loadstring = loa

local function  expect(src, msc)
  if msg then
   assert(jo, "'a'")

  -- Error: undefine'")
  expect("goto a; ::b::", "'a': until x", "'x'")

  ::a:: do goto a; ::a:: end -- Ford
do
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

    x = y
    ::a::
   

do --- Tra                 t goto a; local x; ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end
 return en goto a; goto a
   --RRRRRRRRRR T Tra        loca)

  ::a:: do goto a; ::a:: end -- Fop.
end																				

do --- Goto is:cal v,w; gx; ::a:: ::d.  
    goto a
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --11
  do
    goto a
    goto a

 ::a:: end --  local x = 49
  do
    goto a
    goto a
   -- Tra k      x'")
  expect("repeat goto a; ", "'x'")
   ::a:: do goto a; ::a:: enal y",  ::a:: until x", "'x'")

  ::a:: do goto a; ::a:: end --end

do --yword.  dz
    goto a
    --al x; ::a:[ until x", "'x'
  do
    goto a
    goto a
   -- Tra        local x; ::a:: loo a; ", "'x'"), "'x'")

  ::a:: do goto a; goto a
   -- Tra        loca)

_== 11)
end

do --- Tra