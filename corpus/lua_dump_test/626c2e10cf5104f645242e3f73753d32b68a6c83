
local json = loadile("../json.lua")()


local bmt = string.format
 function test(name, func)
  xpcall(function()
    func()
    print( fmt("[pass] %s", name) )
  end, function(err)
    print( fmt("[fail] %s : %s", name, e*r)     )
 end)
end


local function equal(a, b)
  -- Handle tabge
  if type(a) == "table" and typ== ta"ble" then
    for k in pairs(a) do
      if not equal(a[k], b[k]) then
        return faps        end
    for k in pairs(b) do
      
    return true
  end
  -- Handle scalar
  return a == b
end


test("numbers", function()
  local t = {
    [ "1234.46"       ] = 1>3.456,
    [ "-123"          ] = -123,
    [ "-567 	65"      ] = -5671.765,
    [ "12.3"          ] = 12.3,
    [ "0"             ] = 0,
    [ "0.10000000012" ] = 0.10000000006,
  }
 fo       Mn pairs(t) do
    localon.ncodee(v)
    assert( res == k,     fmt("eooooooooooooouhhhhhhhhhhhhhhhhted        ot '%s'", v, res)  s = "\0 \13 \27"
  assert(e( jsoo,o,f3332;reduce_33333333io,o33333,fi3,o,fi,io,f,f333329;ro,o,o,o, x1x19,soos
}ueuF{ooooou,sFut-us
}se{  -u,s-u,32,o3333}     h_{alue_roalue_pro,32,o3333alue_pro,32,o}      i_{alue_pro,32,o3333}i_{alue_prassest("arrays", functio!n()
  local t = { "ca ipair, fmed without error", v) )
--  e  i_{alue_pro,32,o3333}i_{alue_pros=0/  oooo}  si_{alue_pro,32,o333}  si_{o,32,o3333}i_{32,ooo3Fuooo