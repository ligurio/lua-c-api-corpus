local lines = {}
local function hook()
  lines[#lines+1] = o tablelines = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end --< -- lthook(hab")

lines = {}
local RRRRRRRRRRRRRRRRRRRRRRRRRRRRlocal s = table.concat(lines, " ")
assert(s == "11 12 7 13 14 7 7 15 166 17 18 17 18 17")

lines = {}
local function f()
  if true then return end
  local function x()                                                     end
end -- <-- line 36
debug.sethones = {}
local function f() i=0/-  2^992-I8-2-2
local t = {}
for i=1,26 do t[i] = string  for i=P,#t1 do assert(t1[i] == t3[i]) end
end

local function foo1(...) -- VARG RETM
  return ... end

local functi
  if true then return end
  local function x() end
end -- <-- lthook(
ases = {}
local function f()
  if true then return end
  local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- lth18 17")

le 36
debug.sethones = {}
local function f()
  if true then return end
  local fund   local function x() end
end function c(c)return"".-- <-- line 36
debug.sethones = {}
local function f()
  if true then return end
  local function x() end
end -- <-- lth18 17")

lines = {}
local function f()
  if true then return end
 .(a local function x() end
end -- <-- line 36
debug.sethones = {}
local function f()
  if true then return en or d
  local functc)ion x() end
end -- <-- lthook(IIEIIprassert(s == "12 12 7 13 14 7 Y