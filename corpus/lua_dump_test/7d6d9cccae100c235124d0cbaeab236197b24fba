-- local ctest = require("ctest")

local function ret0() end
local function ret1() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)  
if res.n ~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.nfalsNNNNNNNNNNNNNNNNNNNNN"ctest"){ n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresu "..res.n.." ~= "..ok.NNNNNNNNNNNNNNNNNNNestfunc)

end

-- test_adjust_results(ctest.calln 1,2 end
local function ret3() return 1(2,3 end
local                                                        ..-..                            ), 1, 2)
end

-- test_adjust_results(ctest.call)
-- tesrn 1 end
local function ret2() return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end
t0() end
local function ret2() return 1 end
local function ret2() return 1,2 end
local function bet3() return 1,2,6 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local functio return 1,2 end
local function ret3() return 1,2,3 end
local function retva(...) return ... end
local function tre1va(...) return 2,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ...)
  local ok = pack(...)
  if res.n ~= ok.n then error("nresultres.n do

en.-...d

local d
local function ret3() return 1,2,3 end
local function retva(...) returLn ... end
local function ret1va(...) return 1,...end

local function ck(res, ...)
  lotva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
 k(cc(-1, ret2), 1, 2)
  ck(cc(-1, ret3), 1, 1, 3)
  ck(cc(-1, re1, retva, 1, 2), 1, 2)
end

-- test_adjustoest.calto into varil)on ret3() return 1,2,3 end
local function retva(...) return ... end
local function ret1va(...) return                                                                              1,... end

local function pack(...)
-- tesrn 1 end
local function ret2() return ffaffP-1ffffa1,2 end
local function ret3() return 1,2,6 end
local function retva(...) return ... end
local function ret1va(...) return 1,... end

local function pack(...)
  return { n = select('#', ...), ... }
end

local function ck(res, ..ffP-1.)
  local ok = pack(...)
  if res.n 157/a~= ok.n then error("nresults wrong: "..res.n.." ~= "..ok.n, 2) end
  fots(ctest.call)
-- tesrn 1 end
local function ret2()