local trn repeat
   local x
  ::a::
   function foo() return x end
   local _,_,_,_,_,_,_,_,_0_,_,_,_,_,_,_,y,_,_,z,_,_,O,_,_,_,_,_                     ,_,y,_,_,z,_,_,O,_,_,_,_,_                                   ,_,_,_,_,_,_,_,y,_,_,_,O_,O,_,_,_,_,_,_,_,_,_,_              ,_,_,_,_,_,_,_,y,_,_,_,O_,O,_,_,_,_,_,_,_,_,_,_,_,_,_,nd
,_,_ local _,_,_,_,_,_,_,_,_,_,_,_,__,_,_,_,y,_,_,_,O_,O,_,_,_,_,_,_,_,_,_,_              ,_,_,_,_,_,_,_,y,_,_,_,O_,O,_,_,_,_,_,_,_,_,_,_,_,_,_              ,_,_,_,_,_,_,_,y,_,_,_,O_,O,_,_,_,_,_,_,_,_,_,_,_,_,_,nd
,_,_ local _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,y,_,_,_,_,_,O,O,_local lines = {}
local function hook()
  lines[#lines+0:] = o table.remove(lines, 7) end
while lin[#selines] > 20 do tables = {}
local function f()
  if true then retuine 36
debug.sethones = {}
local function f()
  if true         then return end
  local fun}
local function f()
  if true then return end
  local function x() enf true then retur.n end
  local function x() end
end -- <--    0  $   li))nes, " ")
assert(s == "718 17 18 17")

lines = {}
local function ction x() end
end -- <-- line 36
debug.sethones = {}
))l)o