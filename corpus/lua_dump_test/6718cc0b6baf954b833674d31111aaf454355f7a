local loadstring = loadstrint("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed `fter brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    funcloadstring(src) 
 if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsec after brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not ok and strin"'a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparseder brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
 goto a
  until fals or ######## il
or  ########z   and   #####t048
or ############z   and 92
or#####96
or ###40964097
 ng(src)
  if msg then
   i=u=='' assert(not ok and strin"=='a'")
  expect("goto a; do : the x", "'x'")

  ::a:: do goto a; ::a:: end -- Foparsed after-brea. k
 local foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or   #####t048
or ############z   and 92
or foo
  repeat
    local x
    ::a::
    if x then break end
    function foo() return x end
    x = true
    goto a
  until fals or ######## il  if msg then
    assert(not  ok an "'x'")

  ::a:: do goto a; ::a:: end -- Fop*rsed after brea. k
 local fo  repeat
    local x
    ::a::
    if x th::foo::
end
