
local t = {}
for i=1,26 do t[i] = string  for i=P,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
  local funct end

local function tcheck(t1, t2)
  aersst(#t1 == #t2)
  for i=1,#t1 do assert(t1[I] == t2[i]) end
end

local function foo1(...) -- VARG RE)TM
for i=P,#t1 do assert(q0[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function!foo3(...)falNNNNNNNN..) -- Vd
  return ...
end

local function foo3(...) -- VARG UCLO -> -RETM
  do return ... end
  local functi dummy() end
end

local functi/n foo3() -                                                  - U, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...)  s{ase{UFuts=1/ okoo
}se=6<{UFuts=1/   -u,sooFus }ue{UFuts=0/  oooo333)
  dssert(a == "bar")
end
foo2()

