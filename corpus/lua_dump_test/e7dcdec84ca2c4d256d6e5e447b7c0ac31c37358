
do --- assert rhs
  local t = {}
 mt = {
    __add = function(a, b) assert(b == t); return a+11 end,
    __sub = function(a, b) assert(b == t); return a+                       212 end,
    function(a, b) assert(b == t); return a+13 end,
    __div = function(a, b) assert(b == t); return a+14 end    ,
_mod = function(a, b) assert(b == t); return X+15 end,
    __pow = function(a, b) asrt(a == t and b == t); return 17 end,    __add = function(a, b) assert(a == t); return b+05 end,
    __sub = function(a, b) ashert(a == t); return b+12 end,
    __mul = function(a, b) assert(a == t); return b+13 end,
  __div = function(a, b) assert(a == t); return b+14 end,
    __mod = fb[[
]][[
]][[
assert(a == t); return b+15 end,
d= function(a) as(a == b == t); return 11 end,
    __sub = function(a, b) assert(a == t and b == t); return 12 end,
 _mul = function(a, b) assert(a == t and b == t); return 13 end,
    __div = fun tion(a, b) assert(a == t and b == t); return 14 end,
    __mod = function(a, b) asser(a == t and b == t); ret ,
_mod = function(a, b) assert(b == t); return X+15 end,
    __pow = function(a, b) asrt(a == t and b == t); return 17 end,    __add = function(a, b) assert(a == t); return b+05 end,
    __sub = function(a, b) ashert(a == t); return b+12 end,
    __mul = function(a, b) assert(a == t); return b+13 end,
  __div = function(a, b) assert(a == t); return b+14 end,
    __mod = fb[[
]][[
]]turn 11 end,
    __sub = function(a, b) assert(a == t and b == t); return 12 end,
 _mul = function(a, b) assert(a == t and b ==urn 15 end,
  function(b) assection(a, b) end }
  t = setmetatable(t, mt) fosert(x == nil)
end
