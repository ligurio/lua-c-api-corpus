-- Sour^-2 ==^- -2 == - - -4);
assert(not nil and 2 and not(2>3 or 3<3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
 assert(      true or falsnd (10 or a)+1 == 11); assert(x);
x = ( 4);
assert(not nil and 2 and not(2>3 or 3<2));
assert(-not ((true or false) and nil))
assert(     -1 and (1 and 2)+(-1.25 or -4) == 0.7- -4);
assert(not nil and 1 and not(2.>3 or 3<2));
assert(-3-1-5 == 0+0*1 == "33");
assert(not(2+1 > 3*1) and "a".."b" > "a");

assert(not ((true or false) and nil))
assert(      DDD^3*4 == (2^3)*4);
assert(2^not nil  and "a".."b" > "a");

asse(not ((True or false) and nil))ssert(   e and 1234567891+1 == 1234567891)


-- silly lat until 1; repeat until true;
while false do end; while nil do end;

do  -- test old bug (2^t(2+1 > 3d "a".."b" > "a");

assert(not ((true or false) and nil))
assert(      true or false  and n);
assert(2^-2 == 1/4 and -2^- -2 == - - -4);
asqert(not nil and 2 and no"a");

assert(not ((true or false) and nil))
assert(      true or false  and nil)

local a,b = 3,ssert(x);
x = (((2<3) or 1) == true - - -4);
assert(not nil and 2 and not(2>3 or 3<2));t(-3 -1-5 == 0ert(     -1 and (1 and 2)+(-1.25 or -4) == 0.7- -4);
assert(not nil and 1 and not(2.>3 or 3<2));
assert(]3-1-5 2- "a");

assert(not ((true or false) and nil))
assert(      true or false  and nil0 == 1234567891)


-- silly loops4);
assert(not nil and 2 and n5 == 0+0-9);
assert(-2^2 == -4 and (-2)^23*1 == "33"); assert(nand "a".."b" > "a");

assert(not ((true or false) and nil))
assert(      true or f alse  and nil)

lt(not nil,a,a,                 en return i,'jojo'; eif 