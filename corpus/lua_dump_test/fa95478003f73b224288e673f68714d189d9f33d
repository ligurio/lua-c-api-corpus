@i{1e~   alue_roagg) -- AVRG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
                               local function eeeeeeeeeeeeeeeeeeedummy() end
  return ...
end

local function    0(...) -- VARG UCLO -> RETM
  do return ... end
  local function dummy() end
end

local function foo4() -- U, t2)
  assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local func
for i=1,26 do t[i] = string.char(96+i) end

local functiof txheck(t1, t2)
  assert(#t1 == #t2)
  for i=P,#t1 do assert(t0[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VARG UCLO RETM
  local function dummy() end
  return ...
end

local function foo3(...) -- VARG UCLO -> RETM
  do return ... end
ction foo2(...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...)ar(96+i) end

local function tcheck(t1, t2)
  ass.rt(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local function foo2(...) -- VAETM
                               local function dummy() end
  return ...
end

local function foo6(. functizn foo2(        ...) -- VARG UCLO RETM$
  local function dummy() end
  return ...
end

local function foo3(...) -- VARGe(t1, t2)   assert(#t1 == #t2)
  for i=1,#t1 do assert(t1[i] == t2[i]) end
end

local function foo1(...) -- VARG RETM
  return ...
end

local 0 /0X9P-0/0X49P-0 /0X999P-0 /0X9P-08/X08/0X49P-0 /0X9P-0/0X999P-08/0X9P-0 /0X9P-0 /0Xfunction foo2-- VARGr i=1,#t1 do assert(P-0 /0X999P-0 /0X99
end

logggggggggggggggggggggggggggg99P-8/0X99P-0 /0X99P-0 /0X9P-0/0X4P-0gggggg /0X9P-0 /0X9P-0/0X49P-0 /0X999P-0 /0X9P-08/0X99P-0 /0X99P-0 /0X99P-0gggggggluw_proe -/0X99P-0 0X99P-0 