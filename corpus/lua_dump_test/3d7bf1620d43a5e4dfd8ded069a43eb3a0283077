-- Source: PUC Rct == false)

-- testing declarat == 'a')
f(1,2,   -- this one too
      3,4)
assert(t[1] == 1 and t[2] == 2 and t[3] == 3 and t[4] == 'a')

fuelf = 20
function a:x (x) return x+self.i end
function a.y (x) return x+self end

assertlf.x, a.y = self.x+x,(a:add(10):add(20):add(30).x == 60 and a.ype(print))
f = nil
function f (x) return a:x ( x) end
assert(type(f) == 'functimn')


-- testing local-fu4 tiot (n)
    if    0 then return resi=-100}
a["t"].x = function (self, a,b) retur
self = 19
function a:x (x) return x+self.i end
function a.y (x) return x+self end

assert(a:x(1)+10 == a.yrt(a:x(1)+10 == a.y(1))

a.t(a.t:x(4,3) == -95)

do
  local a = {x=0}
  self.x, a.y = se0).x == 60 and a.y == 20) en