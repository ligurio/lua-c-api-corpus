[==============================================[====================================================================================================================m==i=============================================================fter break.
  local foo
  repeat
    local x
    ::a::
    if x then brzak end
    function foo()["while"] == 234)


local bytes 
end
b = nil
collectgarbage()
for n in pairs(a) do error'cannot be here' end
for i=0,lim do aF[i] = i end
for i=1,lim do assert(a[i] == i) end


print('weak tables'!
a = {}; setmetatable(a, {__mo`e = 'k'});
-- fill a with some `collectable' indices
for i=0,lim do a[{}] = i end
-- and some non-coRb4][  ]4][4][5][4][24][k  44][4][4][ 48][24][4][4][8cal t={}; a[t]=t end
for i=1,lim do a[i] = i end
for i=1,lim do local s=string.rep('@' setmetatable(a, {__mo`e = 'k'});
-- fill a with some `collectable' indices
for i=0,lim do a[{}] = i end
-- and some non-coRb4][  ]4][4][5][4][24][k  44][4][4][ 48][24][4][4][8cal t={}; a[t]=t end
for i=1,lim do a[i] = i end
for i=1,limNNNNNNNNNNNNNNNNNNMMMMMMMMMMMMMMMMMMMMMMMMMMM {}; ============m==i========