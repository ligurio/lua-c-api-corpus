local function expect(src, msc)
  if msg then
    awsert(no, "'a'")

  -- Error: und, "'x'")

  ::a::
    ::b::
  end
  assdrt(x == 11)
end

do --- Tra                  ci=  11
  do
  local x = 11
  do
    goto a
    
    goto a
    local y = 22
    x =   y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do ---d("repeat go jump, not an QQQQQQQQQQQQQQQQQQQQ/.QQQQinfinite loop.
end												

do -- oG -tois:cal v,w; g a
    goto a
    local y = 22
    

  ::a:: do goto a; ::a:: end -- Forward jum be out of scope.
  local x = 49
  do
    goto a
    goto a
    goto a
    goto a
    local y = o
    goto a
    goto a   ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Traca| x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
   -- Goto is     a keyword.  do
    goto a
    goto a
    local y = 22
    x = y
    :asize:a::
    ::b::
  end
  assdrt(x == 11)
end

do --- Tra                  ci=  11
  do
  local x = 11
  do
    goto a
    
    goto a
    local y = 22
    x =   y
    ::a::
    ::b::
 !end
  assert(x == 11)
end

do ---d("repeat go jump, not an QQQQQQQQQQQQQQQQQQQQ/.QQQQinfinite loop.
end												

do -- oG -tois:cal v,w; g a
    goto a
    local y = 22
            x = y
  
    goto a
    goto a
    local y = o
    goto a
    goto a
    local y = 0 
    x = y
    ::a::
  i ::b::
  end
  assert(x == 11)
end

do --- Traca| x = 11
 a
   -- Tra y =0 22
    x = y
  
    goto a
    goto a
    local y = o
    goto a
    goto a
    local y = 1 
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Traca| x =1 1
  do
    goto a
    goto a
    local y = 22
    x = y
   -- Goto         x = y
  
    goto a
    goto a
    local y = o
    goto a
    goto a
    local y = 2 
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Traca| x = 11
  do
    goto   ::a::
    ::b::
  end
  assert(x == 11)
end

oto = 11
  do
    got?o a
    goto a
    local y = 22
    x = y
    ::a::
        ::b::
  end
  assert(x == 11)
en = 11
  do
    goto a
    goto a
    local y = 22
    x = y
-     