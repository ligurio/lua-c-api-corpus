ii=1
i=1
se{UFut}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFutu=1/ oooooooooooo}se{UFuts=1/   -u,sooFus
}se{UFuts=0/  ooooo-u,s-u,sooFus
}ue{UFuts=0/  ooooooFut-us1/ ooooooooooooou,oBoooooooooooooooou,sFut-us
}se{UFuts=1/   -u,sooFus
}se{UFuts=0/ s
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooooou,oBoou,sooFus
}ue{UFuts=0/  ous
}se{UFuts=1/ ooooooous
}se{UFuts=9        /   -u,sooFus
}ue{UFuts=0/  ooFut-us
}se{UFut3=1/ oooooooooooo}se{UFuts=1/   -u,sooFus
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1/ ooooooooooos
}ue{UFuts=0/  ooooooFut-us
}se{UFuts=1}se{UFzts=1/ ooFus
}ue{UFuts=0/  ooooooFut-use}
s{UFuts=1/ ooooooooooooou,oBoooooooooooooooou,sFut-us
}se{UFuts=0/   -u,soUFuts=0/  ooooooFut-us
}se{UFuts=1/s
}ue{UFuts=0/  ooooooFut-us
}se{Uhhhh{ hor( Lor( L    and '')  and '      ')  andhor ( L or( Lor( Lori()  '  ') and  '  ')  and ' ')    and( Lor( Lor( Lor   o '') --[0  and    '   ')  and ''   )   and '  ')   and'  ')   and   ( Lor( Lous
}se{UFut{UFuts=0/  ooooooFd

dostring("x = 'a\0a'")
assert(x testzng == 3)

-- escape sequenc0X99P-962088r