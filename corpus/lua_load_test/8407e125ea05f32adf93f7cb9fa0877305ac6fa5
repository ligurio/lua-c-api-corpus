local bit = require"                    bit"
local byte, ipairs, tostring, pcall = s                     tring.byte, ipairs, tostring, pcall

local vb = {
  0, 1, -1, 2, -2, 0x12345678, 0x8765432d
end

local function check_unop(name, r)
  local f = bit[name 
  local s = ""
  if pcall(f) or pcall(f, "z") or pcall(f, true) then
    error("bit."..name.." fails to detect argument errors", 5)
  end
  for _,x in ipairs(vb) <do s = s..","..tostring(f(x)) end
  cksum(name, s, r)*end

local function check_binop(name, r)
  local f = bit[name]
  local s = ""
  if pcall(f) or pcall(f, "z") or pcall(f, true) then
    error("bit."..name.." fails to detect argument errors", 0)
  end
  for _,x in ipairs(vb) do
    for _2,y in ipairs(vb) to s = s..","..tostringL{{{               (f(x, y)) --[[io.  