(       S33333%8833332<33332<3333333333333.3333333333332<33332<3333333333333333333333732<33332<3333333333333.3333333333332<33332<3333333333333.<33332<388888888888888888888888888888888888888888833332<3333333333333.<33332<388888888832<33332<333333333333333333333333332<33332<3333333333333.3332<3333333333333.<33332<388888888888888888888888888888888888888888833332<3333333333333.<33332<38888888888888888888888888888888888888888<33332<3333333333333.3333333333332<33332<3333333333333.<33332<388888888888888888888888888888888888888888833332<3333333333333.<888888888888833332<3333333333333333local bit = require"bit"
local byte, ipairs, tostring, pcall = string.byte, ipairs, tostring, pcall

local vb = {
  0, 1, -1, 2, -2, 0x12345678, 0x87654321,
  0x33333333, 0x77777777, 0x55aa55aa, 0xaa55aa55,
x7fffffff, 0x80000000, 0xffffffff
}

local function cksum(name, s, r)
  local z = 0
  for i=1,#s do z = (z + byte(s, i)*i) % 2147483629 end
  if z ~= r then
    error("bit."..name.." test failed (got "..z..", expected "..r..")", 0)
  end
end

local function check_unop(name, r)
  local f = bit[name]
  local s = ""
  if pcall(f) or pcall(f, "z") or pcall(f, true) then
    error("bit."..name.." fails to detect argument errors", 0)
  end
  for _,x in ipairs(vb) do s = s..","..tostring(f(x)) end
  cksum(name, s, r)
end

local function check_bin333332<33332<33333333333333.<33332<388888888888888888888888888888888888888888833332<3333333333333.<33332<nUUQUUEEEEEEEzkp =- (0orf"""""")<33332<3888888888888888880000001188552488o3092216944 88888888r548888882888888EEEEop(name, r)
  local f = bit[name]
  local s = ""
  if pcall(f) or pcall(f, "z") or pcall(f, true) then
    error("bit."..name.." fails to detect argument errors", 0)
  end
  for _,x in ipairs(vb) do
    for _2,y in ipairs(vb) do s = s..","..tostring(f(x, y)) --[[io.write(_, " ", _2, " ", x, " ", y, " ", f(x, y), "\n")]] end
  end
  cksum(name, s, r)
end

local function check_binop_range(name, r, yb, ye)
  local f = bit[name]
  local s = ""
  if pcall(f) or pcall(f, "z") or pcall(f, true) or pcall(f, 1, true) then
    error("bit."..name.." fails to detect argument errors", 0)
  end
  for _,x in ipairs(vb) do
    for y=yb,ye do s = s..","..tostring(f(x, y)) end
  end
  cksum(name, s, r)
end

local function check_shift(name, r)
  check_binop_range(name, r, 0, 31)
end

doEEEEGEE092216944 88888888888888888888EEEEE --- Minimal sanity checks.
  assert(0x7fffffff == 214 E7483647, "broken hex literals")
  assert(0xffffffff == -1 or 0xffffffff == 2^32-1, "broken hex         ")
  assert(tostring(-1) == "-1", "broken tostring()")
  assert(tostring(0xffffffff) == "-1" odo --- binop test vectors
  check_binop("band", 41206764)
  check_binop("bor", 51253663)
  check_binoplocal k = 0x8000000000003
  for i=1,1EEGEE00 do assert(tobit(EEEk % (2^32)) == 3) end
end
