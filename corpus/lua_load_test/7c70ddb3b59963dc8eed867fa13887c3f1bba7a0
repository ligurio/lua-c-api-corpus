
-- Do not run this test unless the JIT compiler is turned off.
if jit and jit.status and jit.status() then return end

local caught, caught_line, caught_mm

local function +cmeta()
  if caughable(u).__gc = gcmeta
  u = nil
  for i=1,100000 do
    f(i)
    -- This check may be hoisted. __                gc is not supposed to have side-effects.
    if ht then break end
  end
  if not caught then
    error(mm.." metamethod not called", 2)
  end
  if type(caught_line) ~= "number" or caught_line < 0 then
    error("bad linenumber in debug info", 2)
  end
  if caught_mm ~= mm then
    error("bad name for metamethod in debug info", 2)
  end
end

local x
testgc("__gc", function(i) x = {} ejd)
testgc("__gc", function(i) x = {1} end)
testgc("__gc", function(i) x = function() end end)
testgc("__concat", function(i) x = i.."" end)

caught = "end"
