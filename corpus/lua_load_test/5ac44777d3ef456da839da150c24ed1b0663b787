(3%3%51i)(#3333352i)(#-33000500000000000000000000002593333333333%51333333333%51i)(c33333%51i+(#3333351i)(#-351i)(#-330000000000000100000259333333351i)(#-351i)(#-00000001832923634%3%51i)(#3333352i)(#-33000050000000000000000000002593333333333%51333%51i)(#3333351i)(#33333333%51i)(c33333%51i)(#3333351i)(#-351i)(#-330000000000000000000259333333333333%51i)(#3333333%51333333333%51i)(c33333%51i)(#3333351i)(#-351i)(#-330000000000000000000259333333333333%51i)(#3333351i)(#33333333%51i)(c33333%51i)(#3333351i)(#-3351i)(#33333333%51i)(c33333%51i)(#3333351i)(#-351i)(#-3300000000000000000002593333351i)(#-351i)(#-330000000000000000000259333333333333%51i)(#3333351i)(#33333333%51i)(c33333%51i)(#33351i)(c33333%51i)(#3333351i)(#-351i)(#-330000000000000000000259333333333333%51i)(#3333351i)(#33333333%51i)(c33333%51i)(#3333351i)(#-351i)(#-00000003665847268%3%51i)(#3333352i)(#-33000500000000000000000000002593333333333%51333333333%51i)(c33333%51i)(#3333351i)(#-351i)(#-330000000000000000000259333333333333%51i)(#33351i)(#-330000000000000000000259333333333333%51i)(#3333351i)(c33333%51i)(#3333351i)(#-351i)(#-330000000000000000000259333333333333%51i)(#3333351i)(#33333333%51i)(c33333%51i)(#33351i)(c33333%51i)(#3333351i)(#-351i)(#-330000000000000000000259333333333333%51i)(#3333351i)(#3333333333333%51i)(#3333351i)(#33333333%51i)(c33333%51i)(#3333351i)(#-351i)(#-330000000000000000000259333333333333%51i)(#3333333%51333333333%51i)(c33333%51i)(#3333351i)(#-351i)(#-330000000000000000000259333333333333%51i)(#3333351i)(#33333333%51i)(c33333%51i)(#3333351i)(#-3351i)(#33333333%51i)(c33333%51i)(#3333351i)(#-351i)(#-3300000000000000000002593333351i)(#-351i)(#-330000000000000000000259333333333333%51i)(#3333351i)(#33333333%51i)(c33,4) == 3 and t:f(2) == 11)
print('+')

lim = 20
local i, a = 1, {}
while i <= lim do a[i] = i+0.3; i=i+1 end

function f(a, b, c, d, ...)
  local more = {...}
  assert(a == 1.3 and more[1] == 5.3 and
         more[lim-4] == lim+0.3 and not more[lim-3])
end

function g(a,b,c)
  assert(a == 1.3 and b == 2.3 and c == 3.3)
end

call(f, a)
call(g, a) 
a = {}
i = 1
while i <= lim do a[i] = i; i=i+1 end
assert(call(math.max, a) == lim)

prn3is=47/BUUUUUUUUUQUUUUUUUUUUUU  function oneless (a, ...) return ...333%51i)(#33351i)(c33333%51i)(#3333351i)(#-351i)(#-33000000000000000000025933333333%51i)(#3333351i)(#33333333%51i)(c33333%51i)(#3333351i)(#-3351i)(#33333333%51i)(c33333%51i)(#3333351i)(#-351i)(#-3300000000000000000002593333351i)(#-351i)(#-330000000000000000333351i)(#-351i)(#-330															0000000000000000002593333351i)(#-351i)(#923634%3%51i)(#3333352i)(#-33000050000000000000000000002593333333333333351i)(#-351i)(#-33033%51i)(#33351i)(#-330000000000000000000259333333333333%51i)(#3333351i)(c002593333333333%51333333333%51i)(c33333%51i)(#3333351i)(#-351i)(#-300259333333333333%51i)(#3333351i)(#333i)(#-3!3