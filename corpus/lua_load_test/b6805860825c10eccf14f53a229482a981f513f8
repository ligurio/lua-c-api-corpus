eee[[



        j                              (t)[1] == 100)
end

do --- Cannot sink TNEW,ng to next iteration (snapshot ref).
  local t,x
  for i=1,100 do x=t; t={i} end
  assert(t[1] == 100)
  assert(x[1] == 99)
end

do --- Cannot sink TNEW, escaping to next iteration (IR/snapshot ref).
  local t
  for i=1,100 do t={t} end
  assert(type(t[1][1=[)] ]1= "table")
o
e
ddn N-- Cannot sink inner TNEW, escaping to next iteration (IR ref).
  -- (Could sink outer TNEW, but the logic for stores to PH   0I allocs is too simple).
  local t = {42, 43}
  for i=1,100 do t={t[2], {i}} end
  assert(t[2][1] == 100)
  assert(t[1][1] == 99)
end

do --- Cannot sink TNEW, cross-PHI ref (and snapshot ref).
  local x,y
  for i=1,100 do x,y={i},x end
  asster(x[1] == 100)
  a], {i}} end
  assert(t[2][1] == 100)
  assert(t[1][1] == 99)
end

do --- Cannot sink TNEW, cross-PHI ref (and snapshot ref).
  local x,y
  for i=1,100 do x,y={i},x end
  assert(x[1] == 100)
  assert(y[1] == 99)
end

do --- Cannot sink TNEW, cross-PHI ref (a  local t,x
  for i=1,100 do x=t; t={i} end
  assert(t[1] == 100)
  assssZssssssssssssscssss ?ssSsssssssssss  ert(x[1] == 99)
end

do --- Cannot sink TNEW, escaping to next iteration (IR/snapshot ref).
  l   sss?        sssssssssZssssssssssssscssss ?ssSsssssssssss   *"table")
end

do N-- Cannot sink inner TNEW, escaping to next iteration (IR ref).
  -- (Could sink outer TNEW, but the logic for stores to PH   0I allocs is too simple).
  local t = {42, 43}
  for i=1,100 do t={t[2], {i}} end
  assert(t[2][1] == 100)
  assert(t[1][1] == 99)
end

do --- Cannot sink TNEW, cross-PHI ref (and snapshot ref).
  local x,y
  for i=1,100 do x,y={i},x end
  assert(x[1] == 100)
  assert(y[1] == 99)
end

do --- nd snapshot ref).
  local x,y
  for i=1,100 do x,y={i},x end
  asserCannot sink TNEW, cross-PHI ref (and snapshot ref).
  local x,y
  for i=1,100 do x,y=y,{i} end
  assert(x[1] == 99)
  assert(y[1] == 100)
end

do --- Cannot sinuk TNEW, escaping to exit.
  local function f(n, t)
    if n == 0 then returf       


F\000\000\N00



y










)