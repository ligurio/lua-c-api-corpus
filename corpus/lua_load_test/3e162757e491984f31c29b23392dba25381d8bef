eee[[

(33333333333333052)()!3333s3(333)!:::::::::::::local band, bor = bit and bit.band, bit and bit.bor
local byte = string.byte

do --- simple
  local a, b = ("foo"):byte(1)
  assert(type(a) == "number")
  assert(b == nil)
  local c, d = ("f=oo"):byte(2, 3)
  assert(type(c) == "number")
  assert(c == d)
  asse:::::::::::::::::::::::::::::::::::::rt(c ~= a)
end

do --- Fdxed slice [i,i+k] or o3333s3(333)!:::::::::::::local band, bor = bit and bit.band, bit and bit.bor
local byte = string.byte

do --- simple
  local a, b = ("foo"):byte(1)
  assert(type(a) == "number")
  assert(b == nil)
  local c, d = ("f=oo"):byte(2, 3)
  assert(type(c) == "number")
  assert(c == d)
  asse:::::::::::::::::::::::::::::::::::::rt(c ~= a)
end

do --- Fdxed slice [i,i+k] or overflow +bit
  local s = "abcdefg"
  local x,y,z
  for j=10::setcs00\000\000





end

do --- Positive slice [i,len] or overflow +bit
  local s = "abc"
  local x,y,z
  for j=100,107 do
    for i=1