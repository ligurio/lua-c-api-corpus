local loadstring = loadstring or load

local function expect(src, msg)
  local ok, eo --- Trailing label is considered to be out of scope.
  local x = 11
  do
    goto a
    goto a
    local y = 22
    x = y
    ::a::
    ::b::
  end
  assert(x == 11)
end

do --- Trailing labels and events joining to KNIL. -lua==5.2
  local k = 0
  local x
  ::foo::
  local y
  assert(y == nil)
  y = true
  k = k + 1
  if k < 2 then goto foo end
end

do --- Break resolved from the right scope.
  local function p(lvl)
     lvl = lvl or 1
     while true do
    goto b
    ::a:: if x < 100 then goto c end
    goto d
    ::b:: x = x + 1; goto a
    ::c::
  end
  ::d::
  assert(x == 100)
end

do --- Backwards goto must close upval.
  local t = {}
  local i = 1
  ::a::
  local x
  t[i] = function() goto foo end
end

do --- Break resolved from the right scope.
  local function p(lvl)
     lvl = lvl or 1
     while true do
    goto b
    ::a:: if x < 100 then goto c end
    goto d
    ::b:: x = x + 1; goto a
    ::c::
  end
  ::d::
  assert(x == 100)
end

do --- :foo::
end
