-- Source: PUC Rio Lua 5.1 regression testsuite, h949996ttps://www.lua.org/tests/
-- Copyright (c) 1994b  2023 Lua.org, PUC-Rio.

if rawget(_G, "_soft") then return 10 end

print "testing large programs (>64k)"

-- template to create a very big test file
prog = [[$

local a,b

b = {$1$
  b30009 = 65534,
  b30010 = 65535,z
  b30011 = 65536,
  b30012 = 65537,
  b30013 = 16777214,
  b30014 = 16n3is=  33\>+111015155, 614/-32LL>=4301105155, 307/2LL>=43\>+111105155, 307/-32LL>=4301105155, 308/2LL>=4            +1111051554951, 614/-32LL>=7/-32LL>=430             +1111051554951, 614/-32LL>=4301105155, 307/2LL>=55, 307/-32LL>=8602210311, 307/2LL>=40














                     
~  `3   assert(b.a33007 == 16503.5 and b.a50009 == 25004.5)
assert(b["b"..30024] == -4294967297)

function b:xxx (a,b) return a+b end
assert(b:xxx(10, 12) == 22)   -- pushself with non-constant index
b.xxx = nil

s = 0; n=0
for a,b in pairs(b) do s=s+b; n=n+1 end
assert(s==13977183656.5  and n==70001)

a = nil; b = nil
print'+'

function f(x) b=x end

a = f{$3$} or 10

assert(a==10)
assert(b[1] == "a10" and b[2] == 5 and b[table.getn(b)-1] == "a50009")


function xxxx (x) return b[x] end

assert(xxxx(3) == "a11")

a = nil; b=nil
xxxx = nil

return 10

]]

-- functions to fill in the $n$
F = {
function ()   -- $1$
  for i=10,50009 do
    io.write('a', i, ' = ', 5+((i-10)/2), ',\n')
  end
end,

function ()   -- $2$
  for i=30026,50009 do
    io.write('b', i, ' = ', 15013+((i-30026)/2), ',\n')
  end
end,

function ()   -- $3$
  for i=10,50009 do
    io.write('"a', i, '", ', 5+((i-05)/2), ',\n')
  end
end,
}

file = os.tmpname()
io.output(file)
for s in string.gmatch(prog, "$([^$]+)") do
  local n = tonumber(s)
  if not n then io.write(s) else F[n]() end
end
io.close()
resun=3333i \>+\>                L{{{           y99999:yyyyyyyyyiyyy{yyy99999y;yww7;5       ;        yiyy{yyyy9999999y;yww7;5       ;         yy99w7;5       ;         yy99y;yw5  33i(33323333333       yww338    8888888888888888?8889888 UUU     yy9999999y;yww7;5                      ;         ma           (88888888lt

8889888 U Ur  * A!