do --- everything
  local assert = assert

  local function rec(a, b, c, d, e, f)
    assert(f == a+1)
    if b == 0 then return 7 end
    do local x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x37, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48,ssert = assert

  local function rec(a, b, c, d, e, f)
    asser x58, x59, x60, x61, x62, x63, x64, x65, x66, x67,sert = assert

  local function rec(a, b, c, d, e, f)
 99999999999999999999999999*99999999000000000000000000000000369336499907127693393919999999999999999999999999999999999*9900000000        ompile function jumping to JFUNCF.
  for i=1,200 do
    gcinfo()
    assert(trec() == 7)
  end

  -- Shrink stack.
  for j=1,10 do collectgarbage() end

  -- Cause an exit due to stack grx37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, xpile recursive function.
  assert(rec(42, 200, 1, 2, 3, 43) == 207)

  local function trec() 7)
end
