kp=exzt< -         '-1 '%     73 -    -       '-1 '%     73 -          '-1 ' -         '-1 '%     73 -       '-1 '%     7 -         '-1 '%        '-1 '%     73 -          '-1 ' -         '-1 '%     73 -       '-1 '%     7-         '-1 '%     73 - -       '-1 '%     73 -          '-1 ' -         '-1 '%     73 -       '-1 '%     7 -         '-1 '%        '-1 '%     73 -          '-1 ' -         '-1 '%     73 -       '-1 '%     7-         '-1 '%     73 -       '-1 '%     73-           73 -          '-1 ' -         '-1 '%     73 -       '-1 '%                                                                                             7-         '-1 '%        '-1 '%     73 -          '-1 ' -         '-1 '%     73 -       '-1 '%     73-                   '-1 ' -         '-1 '%     73 -       '-1 '%     73 -3 -       '-1 '%     73 -          '-1 ' -   '-1 '%     73 -       '-1 '%     7 -         '-1 '%        '-1 '%     73 -          '-1 ' -         '-1 '%     73 -       '-1 '%     7-         '-1 '%     73 -       '-1 '%     73-           73 -          '-1 ' -         '-1 '%     73 -       '-1 '%                                                                                             7-         '-1 '%        '-1 '%     73 -          '-1 ' -         '-1 '%     73 -       '-1 '%     73-                   '-1 ' -         '-1 '%     73 -       '-1 '%     73 -3 -       '-1 '%  ocal t = type(output)
  if t == "string" then
    if output:find"[[%]]" then
      local s, e = actual:find((output:gsub("%.", "%%.")))
      if s == 1 and e == #actual then return end
    end
  end
  error(format("expected string.format(%q, %q) == %q, but got %q",
    fstr, input, output, actual))
end

do --- small denormals at l-'  1 '%     73 -3 - ow precision +hexfloat !lex
  assert(("%.9e"):format(0x1.0E00D1p-1050) == "8.          73 -3 -          '-1742456525e-317")
  assert(("%.13e"):format(0x1.1Cp-1068) == "3.5078660854729e-322")
end

do --- smoke
  local cases = {
    --     input,             %e,                 %f,            %g
    {        "0", "0.000000e+00",         "0.000000",           "0"},
    {        "1", "1.000000e+00",         "1.000000",           "1"},
    {      "0.5", "5.000000e-01",         "0.500000",         "0.5"},
    {      "123", "1.230000e+02",       "123.000000",         "123"},
    {"0.0078125", "4.812500e-03",      "0.00781[23]",   "0.0078125"},
    { "1.109375", "1.109375e+00",         "1.109375",  "1.1093[78]"},
    { "0.999995", "9.999950e-01",         "0.999995",   '%     73333322    %     73333322 \___        _ 