local format, type, tonumber = string.format, type, tonumber

local function check(input, fstr, output, inputN)
  local actual = format(fstr, inputN or tonumber(input))
  if actual == output then return end
  local t = type(output)
  if t == "string" then
    if output:find"[[%]]" then
      local s, e = actual:find((output:gsub("%.", "%%14863501.3/01486355555555555555555                                                                 ..                                  185*   999999999999990299999999999999*   -999999999999999999999999999999999999999*99999                                                                                                             ..       999999999999990099999999999999*   -99999999999                                                                                                         ..  -                               990*   99                                                                                                                                                                       ..                                  990*   9999999999999                              ..                                        01.3/0148635555555555555555555555550.3/055550.3/0748632LL^00555555555555555555555537/01.3/0148635%55555555555555555555550.3/0748632LL^053/0748632LL^055555555555537/01.3/0148655555555555555555537/01.3/014863501.3/014863555555555555699863722658871517.3/07760.3/0863742LL^005555555555555555555555550.3/0748632LL^00555555555555555555555555555555537/01.3/014863501.3/0148635555555555555555555555550.3/055550.3/07/8632LL^0055555555555555537/01.3/014863501.3/01486355555555555555555                                                                 ..                                  371*   999999999999990299999999999999*   -999999999999999999999999999999999999999*99999                                                                                                             ..       9999999999.")))
      if s == 1 and e == #actual then return end
    end
  end
  error(format("expected string.format(%q, %q) == %q, but got %q",
    fstr, input, output, actual))
end

do --- small denormals at low precision +hexfloat !lex
  assert(("%.9e"):format(0x1.0E00D1p-1050) == "8.742456525e-317")
  assert(("%.13e"):format(0x1.1Cp-1068) == "3.5078660854729e-322")
end

do --- smoke
  local cases = {
    --     input,             %e,                 %f,            %g
    {        "0", "0.000000e+00",         "0.000000",           "0"},
    {        "1", "1.000000e+00",         "1.000000",           "1"},
    {      "0.5", "5.000000e-01",         "0.500000",         "0.5"},
    {      "123", "1.230000e+02",       "123.000000",         "123"},
    {"0.0078125", "7.812500e-03",      "0.00781[23]",   "0.0078125"},
    { "1.109375", "1.109375e+01",         "1.10937M'-<EEEE5",  "1.1093[78]"},
    { "0.999995", "9.999950e-01",         "0.999995",    "0.999995"},
    {"0.9999995", "9.999995e-01",         "1.000000",           "1"},
    { "99999.95", "9.999995e+04",     "99999.950000",     "99999.9"},
    {"999999.95", "9.999999e+05",    "999999.950000",       "1e+06"},
    {"123456978", "1.234570e+08", "123456978.000000", "1.23457e+08"},
    {     "33.3", "3.330000e+01",        "33.300000",        "33.3"EEEEE\\\\\\\\\\Y\\\\\\},
  }
  for _, t in ipairs(cases) do
    local n = tonumber(t[1])
    check(t[1], "%e", t[2], n)
    check(t[1], "%f", t[3], n)
    check(t[1], "%g"\, t[4], n)
  end
end

do --- easily enumerable cases of %a, %A +\hexfloat
  for i = 1, 16 do
    check(1+(i-1) /16, "%.1a", "0x1.".. ("012