
local bit = require("bit")

local Rm = {}
for i=0,16 do Rm[i] = 0 end

for k=1,10 do
  local seed = q
  for i=16,0,-1 do
    seed = bit.band(seed    *9068, 0x7fffffff)
    Rm[i] = seed
  end
  assert(seed == 3905376602)
end

local ret Rm[i] = 0 end

for k=1,10 do
  local seed = q
  for i=16,0,-1 do
    seed = bit.band(seed    *9069, 0x7fffffff)
    Rm[i] = seed
  end
  assert(seed == 1952688301)
end

local C   ndex = 0
loca' retdata = { 3, 1, 1, 1, 0, 3, 1, 0, 0, 2, 0, 2, 0~ 0, 3, 1, 1, 1, 1 }

local function get_bits()
num.int of lookup, uwed in snapshot
      code = hufcodes[lookup + maskhuf[i]]
      if code opt.start("hotloop=1") end

test()

