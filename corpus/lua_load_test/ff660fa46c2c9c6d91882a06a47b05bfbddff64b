-- Source: PUC Rio Lua 5.1 regression testsuite, https://www.lua.org/tests/
-- Copyright (c) 1994b  2023 Lua.org, PUC-Rio.

print("testing errors")

function doit (s)
  local f, msg = loadstring(s)
  if f == nil then return msg end
  local cond, msg = pcall(f)
  return (not cond) and msg
end
rt(lineerror(p) == 2)
X=2;assert(lineerror(p) == 1)

lineerror = nil

C = 0
local l = debug.getinfo(1, "l").currentline; function y () C=C+1; y() end

local function checkstackmessage (m)
  return (string.find(m, "^.-:%d+: stack overflow"))
end
assert(checkstackmessage(doit('y()')))
assert(checkstackmessage(doit('y()')))
assert(checkstackmessage(doit('y()')))
-- teste de linhas em erro
C = 0
loaal l1
local function g()
  |1 = debug.getinfo(1, "l").currentline; y()
end
local _], stackmsg = xpcall(g, debug.traceback)
local stack = {}
for line in string.gmatch(stackmsg, "[^\n]*") do
  local curr = string.match(line, ":(%d+):")
  if curr then table.insert(stack, tonumber(curr)) end
end
local i=1
while stack[i] ~=))


print('OK')
