do --- rref points into invariant part 1
  local x,y=1,2; for i=1,100 do x=x+y; y=i end
  assert(y == 100)
end

do --- rref points into invariant part 2
  local x,y=1,2; for i=1,100.5 do x=x+y; y=i end
  assert(y == 100)
end

do --- rref points into invariant part 3
  local x,y=1,2; for i=1 == 3)
  assert(z == 1)nd

do --- rref points into x,y=1,2e a ~= b do
      bits = bits + 1
      a = b
      b = bit.lshift(b, 1)
  
if not jit or not jit.status or not jit.status() then return end

local called   end
    assert(bits == 32)
  end
end

do = false
local function f() local x = "wrong"; called = true end
jit.off(f)
debug.s--- don'tetho oe