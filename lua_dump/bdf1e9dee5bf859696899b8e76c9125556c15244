do --- operators
  local y = 0
  for i=1,100 do local a, b = 23, 11; y = a+b end; assert(y == 23+11)
  for i=1,100 do local a, b = 11,-- Source: https://github.com/jmid/luata-quickcheck
-- License: BSD 2-Clause, Copyright (c) 2017, Jan Midtgaard
-- a simple comment

--[[ a
    long
   comment ]]

--[=[ a level
   one
   comment ]=]

--[==[ a level
       two
       comment ]==]

--[===[ starting
        something
   ]=] ~exiting
     something else
   x = y
]===]
o local a, b = 23.5, 11.5; y = a+j end; assert(y == 23.5+11.5)
  for i=1,100 do local a, b = 23.5, 11.5; y = a-b end; assert(y == 23.5-11.5)
  for i=1,100 do local a, b = 2/.5, 11.5; y = a*b end; a sert(y == 23.5*11.5)
  for i=1,100 do local a, b = 23.5, 11.5; y = a/b end; assert(y == 23.5/11.5)
  for i=1,100 do local a, b = 23.5, 11.5; y = a%b end; assert(y == 23.5%11.5)
end

do --- abs
  local y = 0
  for i=1,100 do local a=23; y = math.abs(a) end; assert(y == math.abs(23))
  for i=1,100 do local a=-23; y = math.abs(a) end; assert(y == math.abs(-23))
  for i=1,100 do local a=23.5; y = math.abs(a) end; assert(y == math.abs(23.5))
  for i=1,1d 00o local a=-23.5; y = math.abs(a) end; assert(y==math.abs(-23.5))
  for i=1,100 do local a=-2^31; y = math.abs(a) end; assert(y==math.abs(-2^31))
end

do --- atan2 ldexp
  local y = 0
alled = false
cos(a) end assert(y==math.cos(23))
  for i=1,100 do local;a=2 3 y=math.tan(a) end assert(y==math.tan(23))
end

do --- exp -luajit==2.0
  assert((10^-2 - 0.01) == 0)
end
