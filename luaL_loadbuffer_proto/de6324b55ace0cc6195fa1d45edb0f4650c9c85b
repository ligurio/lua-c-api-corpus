chunk {
  stat {
    block {
      block {
        chunk {
          laststat {
            explist {
              explist {
                expressions {
                  unary {
                    unop {
                      length: 67108864
                    }
                    exp {
                    }
                  }
                }
                explast {
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
              }
              lastSep {
                semicolon: 1
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  false: 0
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      localfunc {
                        name {
                          name: ""
                          num: 0
                        }
                        funcbody {
                          block {
                            chunk {
                              stat {
                                forcyclelist {
                                  names {
                                    firstname {
                                      name: ""
                                      num: 536870912
                                    }
                                    names {
                                      name: ""
                                      num: 0
                                    }
                                  }
                                  expressions {
                                    explast {
                                      unary {
                                        unop {
                                          length: 0
                                        }
                                        exp {
                                        }
                                      }
                                    }
                                  }
                                  doblock {
                                    block {
                                      chunk {
                                        laststat {
                                          explist {
                                            explist {
                                              expressions {
                                                function {
                                                  body {
                                                    parlist {
                                                      namelist {
                                                        namelist {
                                                          firstname {
                                                            name: ""
                                                            num: 0
                                                          }
                                                          names {
                                                            name: ""
                                                            num: 0
                                                          }
                                                          names {
                                                            name: "eeeeeeeeeeeee\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317\317eeeeeeeeeeeeeeeeeeeee"
                                                            num: 0
                                                          }
                                                          names {
                                                            name: ""
                                                            num: 3
                                                          }
                                                          names {
                                                            name: "\222"
                                                            num: 0
                                                          }
                                                          names {
                                                            name: ""
                                                            num: 0
                                                          }
                                                        }
                                                      }
                                                    }
                                                    block {
                                                      chunk {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              explast {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              stat {
                              }
                              stat {
                                semicolon: true
                              }
                            }
                          }
                        }
                      }
                    }
                    laststat {
                      break: 58624
                    }
                  }
                }
                condition {
                  ellipsis: "move"
                }
              }
              semicolon: true
            }
            laststat {
              break: 0
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        number: 0
      }
      doblock {
        block {
          chunk {
            laststat {
              break: 0
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
    semicolon: true
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
          num: 0
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
        }
        expressions {
        }
        explast {
          binary {
            leftexp {
              prefixexp {
                var {
                  name {
                    name: "rawlen"
                    num: 36
                  }
                }
              }
            }
            binop {
              notEqual: 0
            }
            rightexp {
              binary {
                leftexp {
                  str: "\001\000\000\000"
                }
                binop {
                  add: 0
                }
                rightexp {
                  prefixexp {
                    exp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              unary {
                                unop {
                                  not: 30976
                                }
                                exp {
                                }
                              }
                            }
                            binop {
                              or: 0
                            }
                            rightexp {
                              prefixexp {
                              }
                            }
                          }
                        }
                        binop {
                          add: 0
                        }
                        rightexp {
                          prefixexp {
                            exp {
                              binary {
                                leftexp {
                                  number: 1.6869608407943928e+69
                                }
                                binop {
                                  or: 0
                                }
                                rightexp {
                                  prefixexp {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: "move"
          num: 0
        }
        args {
          explist {
            explist {
              expressions {
                number: -8.3711609936427125e+298
              }
              explast {
                prefixexp {
                  var {
                    indexname {
                      prefixexp {
                        var {
                          name {
                            name: ""
                            num: 0
                          }
                        }
                      }
                      Name: ""
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    call {
    }
    semicolon: false
  }
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
              }
              lastSep {
                semicolon: 1
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
}
