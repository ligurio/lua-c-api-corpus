chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: 4.1048714965581894
      }
      stopexp {
        number: -2
      }
      stepexp {
        number: -2
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            tableconstructor {
                            }
                          }
                          value {
                            prefixexp {
                            }
                          }
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                    exprassign {
                                      key {
                                      }
                                      value {
                                        prefixexp {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            value {
                              prefixexp {
                              }
                            }
                          }
                        }
                        sep {
                          comma: 0
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
}
