chunk {
  stat {
  }
  stat {
    whilecycle {
      condition {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
                var {
                  indexname {
                    prefixexp {
                    }
                    Name: "dump"
                  }
                }
              }
              args {
                explist {
                  explist {
                    expressions {
                      function {
                        body {
                          block {
                            chunk {
                              stat {
                                repeatcycle {
                                  block {
                                    chunk {
                                      stat {
                                        repeatcycle {
                                          block {
                                            chunk {
                                            }
                                          }
                                          condition {
                                            prefixexp {
                                            }
                                          }
                                        }
                                        semicolon: true
                                      }
                                    }
                                  }
                                  condition {
                                    nil: 6488064
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    explast {
                      nil: 16384
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
