chunk {
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: "\250"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\000\002\000\000"
          num: 0
        }
      }
      explist {
        expressions {
          prefixexp {
            exp {
              binary {
                leftexp {
                }
                binop {
                  or: 1
                }
                rightexp {
                  ellipsis: "-"
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        ellipsis: "k\000\000\000"
      }
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                  binary {
                    leftexp {
                      number: -0.00023651123046875
                    }
                    binop {
                      mod: 0
                    }
                    rightexp {
                      prefixexp {
                        exp {
                        }
                      }
                    }
                  }
                }
                value {
                }
              }
            }
            fields {
              field {
                expression {
                  number: 8.9002954340288055e-306
                }
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    ellipsis: "i"
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  number: 8.9002954340288055e-306
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  number: 8.9002954340288055e-306
                }
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
            lastSep {
              comma: 620756991
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
        unary {
          unop {
          }
          exp {
            prefixexp {
              exp {
                true: 0
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
}
