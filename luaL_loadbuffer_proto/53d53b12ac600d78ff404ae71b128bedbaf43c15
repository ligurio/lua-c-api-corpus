chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: -2
      }
      stopexp {
        number: 2.25
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: "?"
                  num: 0
                }
                startexp {
                  prefixexp {
                  }
                }
                stopexp {
                  number: -0
                }
                stepexp {
                  number: -384
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: "?"
                            num: 64
                          }
                          startexp {
                          }
                          stopexp {
                            prefixexp {
                            }
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  forcyclename {
                                    name {
                                      name: ""
                                      num: 25348
                                    }
                                    startexp {
                                    }
                                    stopexp {
                                      binary {
                                        leftexp {
                                          ellipsis: "io.open"
                                        }
                                        binop {
                                          mod: 0
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                              binary {
                                                leftexp {
                                                  binary {
                                                    leftexp {
                                                      number: 0
                                                    }
                                                    binop {
                                                      mod: 0
                                                    }
                                                    rightexp {
                                                    }
                                                  }
                                                }
                                                binop {
                                                  concat: 0
                                                }
                                                rightexp {
                                                  ellipsis: "maxrecord"
                                                }
                                              }
                                            }
                                            binop {
                                              exp: 35
                                            }
                                            rightexp {
                                              number: 118.78498777467757
                                            }
                                          }
                                        }
                                      }
                                    }
                                    stepexp {
                                      number: -0
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
