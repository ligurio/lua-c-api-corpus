chunk {
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
                functioncall {
                  prefArgs {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                  exp {
                                    str: "__eq"
                                  }
                                }
                                args {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                      }
                                      lastSep {
                                        semicolon: 0
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          args {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                }
                                lastSep {
                                  semicolon: 0
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    args {
                      tableconstructor {
                        fieldlist {
                          firstField {
                          }
                          lastSep {
                            semicolon: 0
                          }
                        }
                      }
                    }
                  }
                }
              }
              args {
                tableconstructor {
                  fieldlist {
                    firstField {
                    }
                    lastSep {
                      semicolon: 0
                    }
                  }
                }
              }
            }
          }
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
              }
              lastSep {
                semicolon: 0
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
                functioncall {
                  prefArgs {
                    prefixexp {
                      exp {
                      }
                    }
                    args {
                      tableconstructor {
                        fieldlist {
                          firstField {
                          }
                          lastSep {
                            semicolon: 0
                          }
                        }
                      }
                    }
                  }
                }
              }
              args {
                tableconstructor {
                  fieldlist {
                    firstField {
                    }
                    lastSep {
                      semicolon: 0
                    }
                  }
                }
              }
            }
          }
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
              }
              lastSep {
                semicolon: 0
              }
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              expression {
                unary {
                  unop {
                  }
                  exp {
                    ellipsis: "\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223"
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: false
            }
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
}
