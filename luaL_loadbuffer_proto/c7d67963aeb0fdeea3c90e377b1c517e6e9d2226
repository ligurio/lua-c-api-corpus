chunk {
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
        }
        explast {
          tableconstructor {
            fieldlist {
              firstField {
              }
              lastSep {
                semicolon: 2560
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            forcyclename {
              name {
                name: ""
                num: 1
              }
              startexp {
                number: -0
              }
              stopexp {
                number: 0.0078125
              }
              doblock {
                block {
                  chunk {
                    stat {
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        nil: 9
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      forcyclename {
                        name {
                          name: ""
                          num: 1
                        }
                        startexp {
                          number: -0
                        }
                        stopexp {
                          number: 0.0078125
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                condition {
                  nil: 9
                }
              }
            }
          }
        }
      }
    }
  }
}
