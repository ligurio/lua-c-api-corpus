chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  explast {
                    str: ""
                  }
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                    laststat {
                      semicolon: true
                    }
                  }
                }
                condition {
                  binary {
                    leftexp {
                      ellipsis: ""
                    }
                    binop {
                      concat: 0
                    }
                    rightexp {
                      prefixexp {
                      }
                    }
                  }
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  nil: 517
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  false: 32
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  nil: 14
                }
              }
              semicolon: true
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  nil: 517
                }
              }
              semicolon: true
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
                clauses {
                  condition {
                  }
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  str: "<"
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              forcyclename {
                name {
                  name: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                  num: 0
                }
                startexp {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                stopexp {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
                clauses {
                  condition {
                  }
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
  }
}
