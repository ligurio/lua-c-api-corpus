chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
              prefArgs {
                prefixexp {
                }
                args {
                  explist {
                    explist {
                      expressions {
                        unary {
                          unop {
                            negate: 0
                          }
                          exp {
                            binary {
                              leftexp {
                                str: "\'<66>.633332<\'<8"
                              }
                              binop {
                                mult: 1801675120
                              }
                              rightexp {
                                tableconstructor {
                                  fieldlist {
                                    firstField {
                                      exprassign {
                                        key {
                                        }
                                        value {
                                          prefixexp {
                                            exp {
                                              binary {
                                                leftexp {
                                                  true: 262144
                                                }
                                                binop {
                                                }
                                                rightexp {
                                                  unary {
                                                    unop {
                                                      not: 9
                                                    }
                                                    exp {
                                                      binary {
                                                        leftexp {
                                                        }
                                                        binop {
                                                          and: 32768
                                                        }
                                                        rightexp {
                                                          binary {
                                                            leftexp {
                                                              number: 8.12326513728893e-315
                                                            }
                                                            binop {
                                                              lessEqual: 32768
                                                            }
                                                            rightexp {
                                                              unary {
                                                                unop {
                                                                  negate: 9
                                                                }
                                                                exp {
                                                                  prefixexp {
                                                                    exp {
                                                                      binary {
                                                                        leftexp {
                                                                          true: 262144
                                                                        }
                                                                        binop {
                                                                        }
                                                                        rightexp {
                                                                          unary {
                                                                            unop {
                                                                              not: 9
                                                                            }
                                                                            exp {
                                                                              binary {
                                                                                leftexp {
                                                                                }
                                                                                binop {
                                                                                  and: 32768
                                                                                }
                                                                                rightexp {
                                                                                  binary {
                                                                                    leftexp {
                                                                                      number: 8.12326513728893e-315
                                                                                    }
                                                                                    binop {
                                                                                      lessEqual: 32768
                                                                                    }
                                                                                    rightexp {
                                                                                      unary {
                                                                                        unop {
                                                                                          not: 0
                                                                                        }
                                                                                        exp {
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    lastSep {
                                      semicolon: 0
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      expressions {
                        str: "coroutine.create"
                      }
                      explast {
                        number: 960
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
          laststat {
            explist {
              explist {
                expressions {
                  str: "\'<66>.633332<\'<8"
                }
                expressions {
                  str: "\'`66>.633332<\'<8"
                }
                explast {
                  str: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                }
              }
            }
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                nil: 32768
              }
              binop {
                notEqual: 0
              }
              rightexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                      }
                      binop {
                        mod: 1801675120
                      }
                      rightexp {
                        number: -2.97414726734226e+284
                      }
                    }
                  }
                  binop {
                  }
                  rightexp {
                    unary {
                      unop {
                        not: 1801675120
                      }
                      exp {
                      }
                    }
                  }
                }
              }
            }
          }
          binop {
          }
          rightexp {
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    explist {
    }
    semicolon: true
  }
}
