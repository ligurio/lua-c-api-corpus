chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  binary {
                    leftexp {
                      nil: 0
                    }
                    binop {
                    }
                    rightexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              number: 0
                            }
                            binop {
                              add: 0
                            }
                            rightexp {
                              function {
                                body {
                                  block {
                                    chunk {
                                      stat {
                                        semicolon: true
                                      }
                                      laststat {
                                        semicolon: true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        binop {
                        }
                        rightexp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                        var {
                                          name {
                                            name: "load"
                                            num: 0
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                      concat: 16384
                                    }
                                    rightexp {
                                      str: "\'>=strlowereboad\'"
                                    }
                                  }
                                }
                                binop {
                                  concat: 0
                                }
                                rightexp {
                                  tableconstructor {
                                  }
                                }
                              }
                            }
                            binop {
                              concat: 0
                            }
                            rightexp {
                              tableconstructor {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            nil: 0
          }
          binop {
          }
          rightexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    number: 0
                  }
                  binop {
                    add: 0
                  }
                  rightexp {
                    function {
                      body {
                        block {
                          chunk {
                            stat {
                              semicolon: true
                            }
                            laststat {
                              semicolon: true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              binop {
              }
              rightexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            prefixexp {
                              var {
                                name {
                                  name: "load"
                                  num: 0
                                }
                              }
                            }
                          }
                          binop {
                            concat: 16384
                          }
                          rightexp {
                            str: "\'>=strlowereboad\'"
                          }
                        }
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        tableconstructor {
                        }
                      }
                    }
                  }
                  binop {
                    concat: 0
                  }
                  rightexp {
                    tableconstructor {
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
