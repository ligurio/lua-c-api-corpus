chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              explist {
                explist {
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "tonumber"
              num: 0
            }
          }
        }
        args {
          explist {
            explist {
              expressions {
                str: "__mul"
              }
              expressions {
                number: 2.0548733656469458
              }
              explast {
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    semicolon: true
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            indexexpr {
              prefixexp {
              }
              exp {
              }
            }
          }
        }
        args {
          explist {
            explist {
              expressions {
              }
              expressions {
                number: 2
              }
              explast {
                prefixexp {
                  exp {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                        fields {
                          field {
                            exprassign {
                              key {
                                number: -0
                              }
                              value {
                              }
                            }
                          }
                          sep {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
