chunk {
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
        lastname {
          name: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
          num: 0
        }
      }
      body {
        parlist {
          ellipsis: ","
        }
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                    indexexpr {
                      prefixexp {
                      }
                      exp {
                      }
                    }
                  }
                }
                explist {
                  expressions {
                    str: "\'<mathn<7<pack<7<\'<9"
                  }
                  expressions {
                    str: ""
                  }
                  expressions {
                    str: ""
                  }
                  expressions {
                  }
                  expressions {
                    str: "\'<mathn<7<pack-7<\'<9"
                  }
                  expressions {
                    false: 15073280
                  }
                  explast {
                    str: "\'<mathn<7<pack<7<\'<9"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
          indexexpr {
            prefixexp {
            }
            exp {
            }
          }
        }
      }
      explist {
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: ""
        }
        expressions {
          str: ""
        }
        expressions {
        }
        expressions {
          str: "\'<mathn<7<pack-7<\'<9"
        }
        expressions {
          false: 15073280
        }
        explast {
          str: "\'<mathn<7<pack<7<\'<9"
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                    semicolon: true
                  }
                  stat {
                    call {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        explast {
          str: "\'<mathn<7<pack<7<\'<9"
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: ""
        }
        expressions {
          prefixexp {
            var {
              indexexpr {
                prefixexp {
                  exp {
                    tableconstructor {
                    }
                  }
                }
                exp {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                          prefixexp {
                          }
                        }
                        binop {
                          greater: 33554436
                        }
                        rightexp {
                        }
                      }
                    }
                    binop {
                      notEqual: 33554436
                    }
                    rightexp {
                      number: 5.51155453859657e-310
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                    semicolon: true
                  }
                  stat {
                    call {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                    semicolon: true
                  }
                  stat {
                    call {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        explast {
          str: "\'<mathn<7<pack<7<\'<9"
        }
      }
    }
  }
  stat {
  }
}
