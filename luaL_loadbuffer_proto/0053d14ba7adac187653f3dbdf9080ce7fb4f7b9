chunk {
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              nil: 4096
            }
          }
        }
      }
      explist {
        expressions {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                }
                args {
                  str: "\'"
                }
              }
            }
          }
        }
        expressions {
        }
        expressions {
        }
        expressions {
          str: "table.unpack"
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          ellipsis: ""
        }
        expressions {
          true: 8192
        }
        expressions {
          ellipsis: ""
        }
        explast {
          str: "\'"
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclename {
      name {
        name: "_______"
        num: 0
      }
      startexp {
        nil: 21
      }
      stopexp {
        ellipsis: "counter_+"
      }
      stepexp {
        prefixexp {
        }
      }
      doblock {
        block {
          chunk {
            stat {
              localnames {
                namelist {
                  firstname {
                    name: "counter_+"
                    num: 0
                  }
                  names {
                    name: "pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
                    num: 0
                  }
                }
              }
              semicolon: true
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      semicolon: true
                    }
                  }
                }
                condition {
                }
              }
            }
            stat {
              list {
                varlist {
                  var {
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                      }
                      exp {
                        nil: 4096
                      }
                    }
                  }
                }
                explist {
                  expressions {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                            str: "\'"
                          }
                        }
                      }
                    }
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                    str: "table.unpack"
                  }
                  expressions {
                    tableconstructor {
                    }
                  }
                  expressions {
                    ellipsis: ""
                  }
                  expressions {
                    true: 8192
                  }
                  expressions {
                    ellipsis: ""
                  }
                  explast {
                    str: "\'"
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: "counter_+chunk {\n  stat {\n    whilecycle {\n      condition {\n        tableconstructor {\n          fieldlist {\n            firstField {\n            }\n            fields {\n              field {\n                exprassign {\n                  key {\n                  }\n                  value {\n                    function {\n                      body {\n                        parlist {\n                          ellipsis: \"\\020!\\210)\\335\\\\\\000\\000\"\n                        }\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              sep {\n              }\n            }\n          }\n        }\n      }\n      doblock {\n        block {\n          chunk {\n            stat {\n              list {\n                varlist {\n                  var {\n                  }\n                }\n                explist {\n                  explast {\n                    binary {\n                      leftexp {\n                        binary {\n                          leftexp {\n                            prefixexp {\n                            }\n                          }\n                          binop {\n                            notEqual: 0\n                          }\n                          rightexp {\n                            binary {\n                              leftexp {\n                              }\n                              binop {\n                                add: 21\n                              }\n                              rightexp {\n                                prefixexp {\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                      binop {\n                        add: 2\n                      }\n                      rightexp {\n                        prefixexp {\n                          functioncall {\n                            namedArgs {\n                              prefixexp {\n                              }\n                              name {\n                                name: \"\"\n                                num: 0\n                              }\n                              args {\n                                explist {\n                                  explist {\n                                    expressions {\n                                      true: 0\n                                    }\n                                    explast {\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            stat {\n              forcyclename {\n                name {\n                  name: \"xpcall\"\n                  num: 35\n                }\n                startexp {\n                  prefixexp {\n                  }\n                }\n                stopexp {\n                  false: 64768\n                }\n                stepexp {\n                  false: 570425344\n                }\n                doblock {\n                  block {\n                    chunk {\n                    }\n                  }\n                }\n              }\n            }\n            stat {\n              list {\n                varlist {\n                  var {\n                  }\n                }\n                explist {\n                  explast {\n                    binary {\n                      leftexp {\n                        binary {\n                          leftexp {\n                            prefixexp {\n                            }\n                          }\n                          binop {\n                            notEqual: 0\n                          }\n                          rightexp {\n                            binary {\n                              leftexp {\n                              }\n                              binop {\n                                add: 21\n                              }\n                              rightexp {\n                                prefixexp {\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                      binop {\n                        add: 2\n                      }\n                      rightexp {\n                        prefixexp {\n                          functioncall {\n                            namedArgs {\n                              prefixexp {\n                              }\n                              name {\n                                name: \"\"\n                                num: 0\n                              }\n                              args {\n                                explist {\n                                  explist {\n                                    expressions {\n                                      true: 0\n                                    }\n                                    explast {\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              semicolon: true\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
          num: 0
        }
      }
      explist {
        explast {
          tableconstructor {
            fieldlist {
              firstField {
              }
              fields {
                field {
                  expression {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                  var {
                                    name {
                                      name: "load"
                                      num: 0
                                    }
                                  }
                                }
                                args {
                                  str: "\\027\\000\\000\\000\\000\\000\\000\\000"
                                }
                              }
                            }
                          }
                          args {
                            str: "\000\000\000\000\000\000\000\000"
                          }
                        }
                      }
                    }
                  }
                }
                sep {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: "_______"
        num: 67108864
      }
      startexp {
        nil: 21
      }
      stopexp {
      }
      stepexp {
        prefixexp {
        }
      }
      doblock {
        block {
          chunk {
            stat {
              localnames {
                namelist {
                  firstname {
                    name: "counter_+"
                    num: 0
                  }
                  names {
                    name: "pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
                    num: 0
                  }
                }
              }
              semicolon: true
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
            stat {
              list {
                varlist {
                  var {
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                      }
                      exp {
                        nil: 4096
                      }
                    }
                  }
                }
                explist {
                  expressions {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                            str: "\'"
                          }
                        }
                      }
                    }
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                    str: "table.unpack"
                  }
                  expressions {
                    tableconstructor {
                    }
                  }
                  expressions {
                    ellipsis: ""
                  }
                  expressions {
                    true: 8192
                  }
                  expressions {
                    ellipsis: ""
                  }
                  explast {
                    str: "\'"
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
  }
}
