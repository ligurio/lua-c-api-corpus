chunk {
  stat {
    whilecycle {
      condition {
        unary {
          unop {
            negate: 67108864
          }
          exp {
            binary {
              leftexp {
                number: 7.1054273576010034e-15
              }
              binop {
                and: 0
              }
              rightexp {
                binary {
                  leftexp {
                  }
                  binop {
                    or: 2
                  }
                  rightexp {
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
        unary {
          unop {
          }
          exp {
            binary {
              leftexp {
                number: 7.1054273576010034e-15
              }
              binop {
                and: 0
              }
              rightexp {
                binary {
                  leftexp {
                  }
                  binop {
                    or: 2
                  }
                  rightexp {
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
        unary {
          unop {
          }
          exp {
            binary {
              leftexp {
                number: 7.1054273576010034e-15
              }
              binop {
                and: 0
              }
              rightexp {
                binary {
                  leftexp {
                  }
                  binop {
                    or: 2
                  }
                  rightexp {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                  functioncall {
                                    prefArgs {
                                      prefixexp {
                                      }
                                      args {
                                      }
                                    }
                                  }
                                }
                                args {
                                }
                              }
                            }
                          }
                          args {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
}
