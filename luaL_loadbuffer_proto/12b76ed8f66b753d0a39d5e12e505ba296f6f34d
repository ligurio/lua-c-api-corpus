chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
      explist {
        expressions {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                  exp {
                  }
                }
                args {
                }
              }
            }
          }
        }
        expressions {
          binary {
            leftexp {
              number: -424
            }
            binop {
              mult: 0
            }
            rightexp {
              binary {
                leftexp {
                  number: -424
                }
                binop {
                  mult: 0
                }
                rightexp {
                  binary {
                    leftexp {
                      number: -424
                    }
                    binop {
                      mult: 0
                    }
                    rightexp {
                      binary {
                        leftexp {
                          number: -424
                        }
                        binop {
                          mult: 48
                        }
                        rightexp {
                          binary {
                            leftexp {
                              number: -424
                            }
                            binop {
                              mult: 0
                            }
                            rightexp {
                              unary {
                                unop {
                                  negate: 2304
                                }
                                exp {
                                  binary {
                                    leftexp {
                                      number: -424
                                    }
                                    binop {
                                      mult: 48
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          binary {
                                            leftexp {
                                              number: -424
                                            }
                                            binop {
                                              add: 7
                                            }
                                            rightexp {
                                              number: 11
                                            }
                                          }
                                        }
                                        binop {
                                          add: 538976256
                                        }
                                        rightexp {
                                          true: 255
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          number: 3.6842187509576013e+180
        }
        explast {
          true: 8
        }
      }
    }
    semicolon: true
  }
  stat {
    ifstat {
      condition {
        str: "\000\'>string.format\'\000\000&&\'>\'\000\000&\'>\'"
      }
      first {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
          laststat {
            break: 134217728
            semicolon: true
          }
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
            stat {
              semicolon: false
            }
            stat {
              semicolon: true
            }
          }
        }
      }
    }
  }
}
