chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        unary {
          unop {
          }
          exp {
            function {
              body {
                block {
                  chunk {
                    laststat {
                      semicolon: true
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
              localnames {
                namelist {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        whilecycle {
                          condition {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  expression {
                                  }
                                }
                                fields {
                                  field {
                                    exprassign {
                                      key {
                                      }
                                      value {
                                        unary {
                                          unop {
                                          }
                                          exp {
                                            unary {
                                              unop {
                                              }
                                              exp {
                                                prefixexp {
                                                  exp {
                                                    binary {
                                                      leftexp {
                                                        binary {
                                                          leftexp {
                                                          }
                                                          binop {
                                                            concat: 0
                                                          }
                                                          rightexp {
                                                            binary {
                                                              leftexp {
                                                                binary {
                                                                  leftexp {
                                                                  }
                                                                  binop {
                                                                    or: 2
                                                                  }
                                                                  rightexp {
                                                                    number: -416
                                                                  }
                                                                }
                                                              }
                                                              binop {
                                                              }
                                                              rightexp {
                                                                nil: 0
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      binop {
                                                      }
                                                      rightexp {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  sep {
                                  }
                                }
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              semicolon: true
            }
            stat {
              ifstat {
                condition {
                  number: -416
                }
                first {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
