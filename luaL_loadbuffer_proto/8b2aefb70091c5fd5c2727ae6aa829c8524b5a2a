chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 2048
      }
      startexp {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
              }
              args {
                str: "IdempotencyUn"
              }
            }
          }
        }
      }
      stopexp {
      }
      stepexp {
        number: 0
      }
      doblock {
        block {
          chunk {
            stat {
              call {
              }
            }
            stat {
              call {
                namedArgs {
                  prefixexp {
                  }
                  name {
                    name: ""
                    num: 0
                  }
                  args {
                  }
                }
              }
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                    explist {
                      explist {
                        expressions {
                        }
                        expressions {
                        }
                        expressions {
                        }
                        expressions {
                        }
                        expressions {
                          false: 0
                        }
                        expressions {
                        }
                        expressions {
                        }
                        expressions {
                        }
                        expressions {
                        }
                        expressions {
                        }
                        expressions {
                        }
                        expressions {
                        }
                        expressions {
                        }
                        expressions {
                          number: 0
                        }
                        expressions {
                          number: 0
                        }
                        expressions {
                          number: 0
                        }
                        expressions {
                          number: 0
                        }
                        explast {
                          prefixexp {
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: false
            }
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          explist {
            explist {
              expressions {
              }
              expressions {
              }
              expressions {
              }
              expressions {
              }
              expressions {
                false: 0
              }
              expressions {
              }
              expressions {
              }
              expressions {
              }
              expressions {
              }
              expressions {
              }
              expressions {
              }
              expressions {
              }
              expressions {
              }
              expressions {
                number: 0
              }
              expressions {
                number: 0
              }
              expressions {
                number: 0
              }
              expressions {
                number: 0
              }
              explast {
                prefixexp {
                  functioncall {
                    prefArgs {
                      prefixexp {
                      }
                      args {
                        explist {
                          explist {
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                              false: 0
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                              number: 0
                            }
                            expressions {
                              number: 0
                            }
                            expressions {
                              number: 0
                            }
                            expressions {
                              number: 0
                            }
                            explast {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                      explist {
                                        explist {
                                          expressions {
                                          }
                                          expressions {
                                          }
                                          expressions {
                                          }
                                          expressions {
                                          }
                                          expressions {
                                          }
                                          expressions {
                                          }
                                          expressions {
                                          }
                                          expressions {
                                          }
                                          expressions {
                                          }
                                          expressions {
                                          }
                                          expressions {
                                          }
                                          expressions {
                                          }
                                          expressions {
                                          }
                                          expressions {
                                            number: 0
                                          }
                                          expressions {
                                            number: 0
                                          }
                                          expressions {
                                            number: 0
                                          }
                                          expressions {
                                            number: 0
                                          }
                                          explast {
                                            prefixexp {
                                              functioncall {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
}
