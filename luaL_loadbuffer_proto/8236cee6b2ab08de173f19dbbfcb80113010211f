chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        prefixexp {
          exp {
            str: "-"
          }
        }
      }
      stopexp {
      }
      stepexp {
        number: -0
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                expressions {
                  expressions {
                    function {
                      body {
                        parlist {
                          ellipsis: "\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266"
                        }
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  expressions {
                    number: -0
                  }
                  explast {
                    number: -0
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        repeatcycle {
                          block {
                            chunk {
                              stat {
                                semicolon: true
                              }
                            }
                          }
                          condition {
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            laststat {
              semicolon: false
            }
          }
        }
      }
    }
  }
}
