chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                str: "f\000\000\000\'%__~id/v         call {\n            }\n          }\n          stat {\n            call {\n            }\n          }\n          stat {\n            call {\n            }\n            semicolon: true\n          }\n          stat {\n          }\n          stat {\n            call {\n            }\n          }\n          stat {\n            call {\n            }\n          }\n          stat {\n            call {\n            }\n          }\n          stat {\n            call {\n            }\n          }\n          stat {\n            call {\n            }\n          }\n          stat {\n            call {\n            }\n          }\n          stat {\n            call {\n            }\n          }\n          stat {\n            call {\n            }\n          }\n          stat {\n            call {\n            }\n          }\n          stat {\n            call {\n            }\n          }\n          stat {\n          }\n          stat {\n            call {\n            }\n          }\n          stat {\n          }\n          stat {\n            call {\n            }\n          }\n        }\n      }\n      condition {\n      }\n    }\n  }\n  stat {\n    semicolon: false\n  }\n  stat {\n    semicolon: false\n  }\n  stat {\n    semicolon: false\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n    semicolon: true\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n  }\n  stat {\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n  }\n  stat {\n  }\n  stat {\n    semicolon: false\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n    semicolon: true\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n  }\n  stat {\n    ifstat {\n      condition {\n      }\n      first {\n        chunk {\n        }\n      }\n      last {\n        chunk {\n          laststat {\n            explist {\n              explist {\n                explast {\n                  function {\n                    body {\n                      parlist {\n                        namelist {\n                          namelist {\n                            firstname {\n                              name: \"\"\n                              num: 0\n                            }\n                            names {\n                              name: \"\\207\"\n                              num: 0\n                            }\n                          }\n                        }\n                      }\n                      block {\n                        chunk {\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n    semicolon: true\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    whilecycle {\n      condition {\n      }\n      doblock {\n        block {\n          chunk {\n          }\n        }\n      }\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n  }\n  stat {\n    call {\n    }\n  }\n  stat {\n    repeatcycle {\n      block {\n        chunk {\n   \'\'\'"
              }
              binop {
                notEqual: 0
              }
              rightexp {
                str: "f\000\000\000\'%__~id/v\'\'\'"
              }
            }
          }
          binop {
            add: 50
          }
          rightexp {
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
              call {
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
}
