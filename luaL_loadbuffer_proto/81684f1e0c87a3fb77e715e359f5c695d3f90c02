chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        parlist {
          namelist {
            namelist {
              firstname {
                name: "upva"
                num: 2097152
              }
            }
            ellipsis: "upva"
          }
        }
        block {
          chunk {
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
              }
              fields {
                field {
                  expression {
                    str: "B\000\000\000"
                  }
                }
                sep {
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          namedassign {
                            name {
                              name: ""
                              num: 0
                            }
                            value {
                            }
                          }
                        }
                        fields {
                          field {
                            expression {
                              str: "B\000\000\000"
                            }
                          }
                          sep {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
  laststat {
    explist {
      explist {
        expressions {
          number: 9.3102151521569e+242
        }
        expressions {
        }
        expressions {
        }
        expressions {
          prefixexp {
            var {
              indexexpr {
                prefixexp {
                }
                exp {
                  nil: 0
                }
              }
            }
          }
        }
        explast {
          number: 9.3102151521569e+242
        }
      }
    }
  }
}
