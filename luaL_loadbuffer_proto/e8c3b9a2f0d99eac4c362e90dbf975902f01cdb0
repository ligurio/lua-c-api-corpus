chunk {
  stat {
  }
  stat {
    block {
      block {
        chunk {
          stat {
            semicolon: true
          }
          stat {
            block {
              block {
                chunk {
                  stat {
                    block {
                      block {
                        chunk {
                          laststat {
                          }
                        }
                      }
                    }
                  }
                  stat {
                    block {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                  laststat {
                  }
                }
              }
            }
          }
          stat {
            block {
              block {
                chunk {
                  stat {
                    func {
                      name {
                        firstname {
                          name: "tonumber"
                          num: 2048
                        }
                      }
                      body {
                        parlist {
                          namelist {
                            namelist {
                              firstname {
                                name: ""
                                num: 0
                              }
                            }
                          }
                        }
                        block {
                          chunk {
                            stat {
                              forcyclelist {
                                names {
                                  firstname {
                                    name: ""
                                    num: 0
                                  }
                                }
                                expressions {
                                  explast {
                                  }
                                }
                                doblock {
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                            stat {
                              list {
                                varlist {
                                  var {
                                    name {
                                      name: ""
                                      num: 4278190080
                                    }
                                  }
                                  vars {
                                  }
                                }
                                explist {
                                  expressions {
                                    number: 6.63123684676648e-316
                                  }
                                  expressions {
                                    prefixexp {
                                      functioncall {
                                        prefArgs {
                                          prefixexp {
                                          }
                                          args {
                                            str: "\'"
                                          }
                                        }
                                      }
                                    }
                                  }
                                  expressions {
                                    binary {
                                      leftexp {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                              namedassign {
                                                name {
                                                  name: ""
                                                  num: 0
                                                }
                                                value {
                                                  ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      binop {
                                        lessEqual: 4
                                      }
                                      rightexp {
                                      }
                                    }
                                  }
                                  expressions {
                                    unary {
                                      unop {
                                      }
                                      exp {
                                        nil: 4
                                      }
                                    }
                                  }
                                  expressions {
                                    tableconstructor {
                                    }
                                  }
                                  expressions {
                                  }
                                  expressions {
                                  }
                                  expressions {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                      }
                                      rightexp {
                                        nil: 0
                                      }
                                    }
                                  }
                                  expressions {
                                    tableconstructor {
                                    }
                                  }
                                  expressions {
                                    str: "debug.traceback"
                                  }
                                  explast {
                                    prefixexp {
                                      functioncall {
                                        prefArgs {
                                          prefixexp {
                                          }
                                          args {
                                            str: "\'"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  laststat {
                    break: 0
                    semicolon: true
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            block {
              block {
                chunk {
                  laststat {
                    explist {
                    }
                  }
                }
              }
            }
          }
          laststat {
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
            namedArgs {
              prefixexp {
              }
              name {
                name: ""
                num: 0
              }
              args {
                str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
              }
            }
          }
        }
        args {
        }
      }
    }
  }
  stat {
    block {
      block {
        chunk {
          stat {
            block {
              block {
                chunk {
                  laststat {
                  }
                }
              }
            }
          }
          stat {
            block {
              block {
                chunk {
                  stat {
                    block {
                      block {
                        chunk {
                          stat {
                            forcyclename {
                              name {
                                name: ""
                                num: 0
                              }
                              startexp {
                              }
                              stopexp {
                              }
                              stepexp {
                                unary {
                                  unop {
                                  }
                                  exp {
                                    number: 0
                                  }
                                }
                              }
                              doblock {
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                          stat {
                            block {
                              block {
                                chunk {
                                  laststat {
                                  }
                                }
                              }
                            }
                            semicolon: true
                          }
                          laststat {
                            semicolon: true
                          }
                        }
                      }
                    }
                  }
                  stat {
                    whilecycle {
                      condition {
                      }
                      doblock {
                        block {
                          chunk {
                            stat {
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    block {
                      block {
                        chunk {
                          laststat {
                          }
                        }
                      }
                    }
                  }
                  stat {
                    func {
                      name {
                        firstname {
                          name: ""
                          num: 0
                        }
                        lastname {
                          name: "\'&~package.rawsetd\'"
                          num: 3607101440
                        }
                      }
                      body {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  laststat {
                    explist {
                    }
                  }
                }
              }
            }
          }
          laststat {
          }
        }
      }
    }
  }
  stat {
    block {
      block {
        chunk {
          laststat {
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
  }
}
