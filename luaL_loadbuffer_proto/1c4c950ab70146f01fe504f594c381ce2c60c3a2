chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: "\021"
          num: 127
        }
        names {
          name: "collectgarbage"
          num: 101
        }
        names {
          name: ""
          num: 127
        }
      }
      expressions {
        expressions {
          prefixexp {
            var {
              name {
                name: "pcall"
                num: 127
              }
            }
          }
        }
        explast {
          function {
            body {
              parlist {
                ellipsis: "__index"
              }
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                prefixexp {
                                }
                              }
                            }
                          }
                        }
                      }
                      condition {
                        str: "\'-8<table.pack\'\'/8<\'<8<9"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              func {
                name {
                  firstname {
                    name: "tonumber"
                    num: 0
                  }
                }
                body {
                  parlist {
                    ellipsis: "2"
                  }
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                              name {
                                name: ""
                                num: 0
                              }
                            }
                            vars {
                            }
                          }
                          explist {
                            expressions {
                              ellipsis: "\'"
                            }
                            expressions {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                      str: "\'"
                                    }
                                  }
                                }
                              }
                            }
                            expressions {
                              binary {
                                leftexp {
                                  ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                }
                                binop {
                                  add: 0
                                }
                                rightexp {
                                  false: 64767
                                }
                              }
                            }
                            expressions {
                              unary {
                                unop {
                                  not: 12288
                                }
                                exp {
                                  nil: 4
                                }
                              }
                            }
                            expressions {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                  }
                                }
                              }
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                              tableconstructor {
                              }
                            }
                            expressions {
                              str: "debug.traceback"
                            }
                            explast {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                      str: "\'"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            laststat {
              explist {
                explist {
                  expressions {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          expression {
                            true: 67108864
                          }
                        }
                      }
                    }
                  }
                  explast {
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  laststat {
    semicolon: true
  }
}
