chunk {
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                  exp {
                    function {
                      body {
                        block {
                          chunk {
                            laststat {
                              explist {
                                explist {
                                  expressions {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                        less: 262144
                                      }
                                      rightexp {
                                        str: ""
                                      }
                                    }
                                  }
                                  explast {
                                    binary {
                                      leftexp {
                                        str: "recunroll="
                                      }
                                      binop {
                                        less: 253
                                      }
                                      rightexp {
                                        str: "coroutioe"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                args {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          exp {
          }
        }
        args {
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 8192
        }
        lastname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            semicolon: true
          }
        }
      }
      condition {
      }
    }
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
            }
            fields {
              field {
                namedassign {
                  name {
                    name: ""
                    num: 0
                  }
                  value {
                    false: 0
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  true: 253
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  number: nan
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                }
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
          nil: 2097152
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: false
  }
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    block {
      block {
        chunk {
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: "\000\000\000\025"
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  laststat {
    semicolon: true
  }
}
