chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        parlist {
          namelist {
            namelist {
              firstname {
                name: ""
                num: 2
              }
            }
            ellipsis: ""
          }
        }
        block {
          chunk {
            laststat {
              explist {
                explist {
                  explast {
                    binary {
                      leftexp {
                      }
                      binop {
                        greaterEqual: 0
                      }
                      rightexp {
                        ellipsis: "cannot c"
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          str: "\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310\310"
        }
      }
    }
  }
}
