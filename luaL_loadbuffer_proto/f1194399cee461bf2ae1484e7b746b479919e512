chunk {
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          prefixexp {
            exp {
              binary {
                leftexp {
                  number: -19
                }
                binop {
                  mod: 0
                }
                rightexp {
                  unary {
                    unop {
                      length: 4
                    }
                    exp {
                      str: "package.path"
                    }
                  }
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          prefixexp {
            exp {
              binary {
                leftexp {
                  number: -19
                }
                binop {
                  mod: 0
                }
                rightexp {
                  unary {
                    unop {
                      length: 4
                    }
                    exp {
                      str: "package.path"
                    }
                  }
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
                prefixexp {
                  exp {
                    binary {
                      leftexp {
                        number: -19
                      }
                      binop {
                        mod: 0
                      }
                      rightexp {
                        unary {
                          unop {
                            length: 4
                          }
                          exp {
                            str: "package.path"
                          }
                        }
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        binary {
          leftexp {
          }
          binop {
            and: 33024
          }
          rightexp {
          }
        }
      }
    }
  }
  stat {
  }
}
