chunk {
  stat {
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                  false: 2105376
                }
                value {
                  binary {
                    leftexp {
                    }
                    binop {
                    }
                    rightexp {
                      number: 1.03613075730726e-317
                    }
                  }
                }
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                        lastSep {
                          comma: 5
                        }
                      }
                    }
                  }
                  value {
                    prefixexp {
                      exp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                number: 358.08969533209165
                              }
                              binop {
                                exp: 0
                              }
                              rightexp {
                                number: 118.78498777467757
                              }
                            }
                          }
                          binop {
                            exp: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                                number: 358.08969533209165
                              }
                              binop {
                                exp: 0
                              }
                              rightexp {
                                prefixexp {
                                  exp {
                                    binary {
                                      leftexp {
                                        number: 0
                                      }
                                      binop {
                                        concat: 0
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                            prefixexp {
                                              exp {
                                                binary {
                                                  leftexp {
                                                    number: 0
                                                  }
                                                  binop {
                                                    concat: 0
                                                  }
                                                  rightexp {
                                                    str: "X\000"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          binop {
                                            mod: 0
                                          }
                                          rightexp {
                                            prefixexp {
                                              var {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
