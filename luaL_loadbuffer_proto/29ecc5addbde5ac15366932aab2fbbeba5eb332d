chunk {
  stat {
    list {
      varlist {
        var {
          indexexpr {
            prefixexp {
            }
            exp {
            }
          }
        }
        vars {
          name {
            name: "\000\000\000\005"
            num: 0
          }
        }
        vars {
        }
      }
      explist {
        explast {
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          name {
            name: ""
            num: 1048576
          }
        }
      }
      explist {
        expressions {
          function {
            body {
              parlist {
              }
              block {
                chunk {
                  laststat {
                    explist {
                      explist {
                        expressions {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                }
                                args {
                                  str: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          prefixexp {
                          }
                        }
                        expressions {
                        }
                        expressions {
                          function {
                            body {
                              parlist {
                              }
                              block {
                                chunk {
                                  laststat {
                                    explist {
                                      explist {
                                        expressions {
                                          prefixexp {
                                            functioncall {
                                              prefArgs {
                                                prefixexp {
                                                }
                                                args {
                                                  tableconstructor {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        expressions {
                                          prefixexp {
                                          }
                                        }
                                        expressions {
                                          binary {
                                            leftexp {
                                              number: -8.3711609936427134e+298
                                            }
                                            binop {
                                              div: 3159040
                                            }
                                            rightexp {
                                              binary {
                                                leftexp {
                                                  number: 0
                                                }
                                                binop {
                                                  notEqual: 3159040
                                                }
                                                rightexp {
                                                  unary {
                                                    unop {
                                                      length: 254
                                                    }
                                                    exp {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        expressions {
                                          prefixexp {
                                          }
                                        }
                                        explast {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        explast {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          binary {
            leftexp {
              number: -8.3711609936427134e+298
            }
            binop {
              div: 3159040
            }
            rightexp {
              binary {
                leftexp {
                  number: 0
                }
                binop {
                  notEqual: 3159040
                }
                rightexp {
                  unary {
                    unop {
                      length: 254
                    }
                    exp {
                    }
                  }
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        ellipsis: "\001\005"
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              prefixexp {
                functioncall {
                  prefArgs {
                    prefixexp {
                      var {
                        indexexpr {
                          prefixexp {
                            var {
                              indexname {
                                prefixexp {
                                  exp {
                                    number: 1.01184644268287e-320
                                  }
                                }
                                Name: ""
                              }
                            }
                          }
                          exp {
                          }
                        }
                      }
                    }
                    args {
                    }
                  }
                }
              }
            }
          }
        }
        vars {
        }
      }
      explist {
        explast {
        }
      }
    }
    semicolon: true
  }
  laststat {
  }
}
