chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                expressions {
                  explast {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          exprassign {
                            key {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      binary {
                                        leftexp {
                                          binary {
                                            leftexp {
                                              number: -2.9740338169555661e+284
                                            }
                                            binop {
                                              add: 0
                                            }
                                            rightexp {
                                              number: -2.9740338169555661e+284
                                            }
                                          }
                                        }
                                        binop {
                                          mult: 0
                                        }
                                        rightexp {
                                          number: -2.9740338169555661e+284
                                        }
                                      }
                                    }
                                    binop {
                                      mult: 0
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          binary {
                                            leftexp {
                                              number: -2.9740338169555661e+284
                                            }
                                            binop {
                                              add: 0
                                            }
                                            rightexp {
                                              number: -2.9740338169555661e+284
                                            }
                                          }
                                        }
                                        binop {
                                          mult: 0
                                        }
                                        rightexp {
                                          number: -2.9740338169555661e+284
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  mult: 0
                                }
                                rightexp {
                                  number: -2.9740338169555661e+284
                                }
                              }
                            }
                            value {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                  }
                                  lastSep {
                                    semicolon: 0
                                  }
                                }
                              }
                            }
                          }
                        }
                        fields {
                          field {
                            expression {
                            }
                          }
                          sep {
                          }
                        }
                        fields {
                          field {
                            expression {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                    expression {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                          }
                                        }
                                      }
                                    }
                                  }
                                  fields {
                                    field {
                                    }
                                    sep {
                                      comma: 0
                                    }
                                  }
                                  lastSep {
                                    comma: 256
                                  }
                                }
                              }
                            }
                          }
                          sep {
                          }
                        }
                        fields {
                          field {
                            expression {
                            }
                          }
                          sep {
                          }
                        }
                        lastSep {
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
