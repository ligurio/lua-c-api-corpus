chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 262144
        }
        names {
          name: "load"
          num: 0
        }
      }
      expressions {
        expressions {
          function {
            body {
              parlist {
              }
              block {
                chunk {
                  laststat {
                    explist {
                      explist {
                        expressions {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                      and: 2969567232
                                    }
                                    rightexp {
                                    }
                                  }
                                }
                                binop {
                                  notEqual: 0
                                }
                                rightexp {
                                  true: 0
                                }
                              }
                            }
                            binop {
                              div: 687392
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  number: -2.9740338169555661e+284
                                }
                                binop {
                                  div: 2105344
                                }
                                rightexp {
                                  prefixexp {
                                  }
                                }
                              }
                            }
                          }
                        }
                        explast {
                          str: " "
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        explast {
        }
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 2
                }
                startexp {
                }
                stopexp {
                  binary {
                    leftexp {
                      str: "\'<8<<\'<9"
                    }
                    binop {
                      div: 8224
                    }
                    rightexp {
                      number: 0
                    }
                  }
                }
                stepexp {
                  str: "\'-8<ta=ble.pack\'\'/8<\'<6<8"
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
            namedArgs {
              prefixexp {
              }
              name {
                name: ""
                num: 0
              }
              args {
              }
            }
          }
        }
        args {
          str: ")"
        }
      }
    }
  }
  laststat {
  }
}
