chunk {
  stat {
    list {
      varlist {
        var {
          indexname {
            prefixexp {
            }
            Name: ""
          }
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              prefixexp {
                functioncall {
                  prefArgs {
                    prefixexp {
                      exp {
                        unary {
                          unop {
                          }
                          exp {
                            str: ","
                          }
                        }
                      }
                    }
                    args {
                    }
                  }
                }
              }
            }
          }
        }
        vars {
        }
        vars {
          name {
            name: ""
            num: 9
          }
        }
        vars {
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: ""
          }
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              prefixexp {
              }
            }
          }
        }
        vars {
        }
        vars {
          indexname {
            prefixexp {
              functioncall {
                prefArgs {
                  prefixexp {
                    var {
                      name {
                        name: ""
                        num: 0
                      }
                    }
                  }
                  args {
                  }
                }
              }
            }
            Name: ""
          }
        }
        vars {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              prefixexp {
                functioncall {
                  prefArgs {
                    prefixexp {
                      exp {
                        unary {
                          unop {
                          }
                          exp {
                            str: ","
                          }
                        }
                      }
                    }
                    args {
                    }
                  }
                }
              }
            }
          }
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              prefixexp {
                functioncall {
                  prefArgs {
                    prefixexp {
                      exp {
                        unary {
                          unop {
                          }
                          exp {
                            str: ","
                          }
                        }
                      }
                    }
                    args {
                    }
                  }
                }
              }
            }
          }
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: ""
          }
        }
        vars {
        }
        vars {
        }
        vars {
        }
      }
      explist {
        explast {
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
          }
          binop {
            concat: 0
          }
          rightexp {
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
}
