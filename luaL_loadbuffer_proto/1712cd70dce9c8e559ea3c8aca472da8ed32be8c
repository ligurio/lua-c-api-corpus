chunk {
  stat {
    forcyclename {
      name {
        name: "\036\000\000\000\000\000\000\000"
        num: 7424
      }
      startexp {
        number: -1.5000000000000016
      }
      stopexp {
        binary {
          leftexp {
          }
          binop {
            exp: 7424
          }
          rightexp {
            number: 0
          }
        }
      }
      stepexp {
        str: "?\000\000\000\000\000\000\000"
      }
      doblock {
        block {
          chunk {
            stat {
              call {
              }
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          functioncall {
                            namedArgs {
                              prefixexp {
                                exp {
                                  prefixexp {
                                    functioncall {
                                      namedArgs {
                                        prefixexp {
                                        }
                                        name {
                                          name: ""
                                          num: 67108864
                                        }
                                        args {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              name {
                                name: "\'\r\nutf8.codes \'"
                                num: 6648320
                              }
                              args {
                                str: "\'\r\nutf8.codes \'"
                              }
                            }
                          }
                        }
                        args {
                          str: "="
                        }
                      }
                    }
                  }
                  args {
                    explist {
                      explist {
                        explast {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  nil: 130816
                                }
                                binop {
                                  or: 2304
                                }
                                rightexp {
                                }
                              }
                            }
                            binop {
                              concat: 0
                            }
                            rightexp {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            laststat {
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
            nil: 130816
          }
          binop {
            or: 2304
          }
          rightexp {
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
  }
}
