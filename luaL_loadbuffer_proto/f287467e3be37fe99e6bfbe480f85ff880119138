chunk {
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
                functioncall {
                  prefArgs {
                    prefixexp {
                    }
                    args {
                      explist {
                        explist {
                          explast {
                            unary {
                              unop {
                                not: 6488064
                              }
                              exp {
                                unary {
                                  unop {
                                  }
                                  exp {
                                    false: 0
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              args {
              }
            }
          }
        }
        args {
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
                functioncall {
                  prefArgs {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                            functioncall {
                            }
                          }
                          args {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  exprassign {
                                    key {
                                      prefixexp {
                                        functioncall {
                                          prefArgs {
                                            prefixexp {
                                              exp {
                                                prefixexp {
                                                  functioncall {
                                                    namedArgs {
                                                      prefixexp {
                                                      }
                                                      name {
                                                        name: "\215\215\215"
                                                        num: 0
                                                      }
                                                      args {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            args {
                                              str: "}\001\'//\'  pni  pnil"
                                            }
                                          }
                                        }
                                      }
                                    }
                                    value {
                                      prefixexp {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    args {
                      tableconstructor {
                        fieldlist {
                          firstField {
                            exprassign {
                              key {
                                nil: 0
                              }
                              value {
                              }
                            }
                          }
                          fields {
                            field {
                              exprassign {
                                key {
                                  nil: 262150
                                }
                                value {
                                }
                              }
                            }
                            sep {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              args {
                tableconstructor {
                  fieldlist {
                    firstField {
                      exprassign {
                        key {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                  exp {
                                    prefixexp {
                                      functioncall {
                                        namedArgs {
                                          prefixexp {
                                          }
                                          name {
                                            name: "\215\215\215"
                                            num: 0
                                          }
                                          args {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                args {
                                  str: "}\001\'//\'  pni  pnil"
                                }
                              }
                            }
                          }
                        }
                        value {
                          prefixexp {
                          }
                        }
                      }
                    }
                    fields {
                      field {
                      }
                      sep {
                        semicolon: 256
                      }
                    }
                    fields {
                      field {
                        expression {
                          true: 1090519040
                        }
                      }
                      sep {
                      }
                    }
                  }
                }
              }
            }
          }
        }
        args {
          tableconstructor {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          explist {
            explist {
              explast {
                unary {
                  unop {
                    not: 6488064
                  }
                  exp {
                    unary {
                      unop {
                      }
                      exp {
                        binary {
                          leftexp {
                            str: "\000\'>string.format\'\000\000&&\'>\'\000\000&\'>\'"
                          }
                          binop {
                            or: 0
                          }
                          rightexp {
                            function {
                              body {
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
