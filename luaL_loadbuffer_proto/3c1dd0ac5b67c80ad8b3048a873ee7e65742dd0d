chunk {
  stat {
    forcyclename {
      name {
        name: "_ENV"
        num: 0
      }
      startexp {
        number: -1.6374182879007622e+265
      }
      stopexp {
        number: -262.9647045135498
      }
      doblock {
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: ""
                  num: 0
                }
                funcbody {
                  parlist {
                    ellipsis: "o"
                  }
                  block {
                    chunk {
                      stat {
                        ifstat {
                          condition {
                          }
                          first {
                            chunk {
                            }
                          }
                        }
                        semicolon: true
                      }
                      laststat {
                        explist {
                          explist {
                            expressions {
                              ellipsis: "_ENV"
                            }
                            explast {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                      explist {
                                        explist {
                                          expressions {
                                            function {
                                              body {
                                                block {
                                                  chunk {
                                                    laststat {
                                                      break: 2097152
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          explast {
                                            prefixexp {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                    explist {
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: false
  }
}
