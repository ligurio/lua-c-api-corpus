chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            func {
              name {
                firstname {
                  name: ""
                  num: 0
                }
              }
              body {
                block {
                  chunk {
                    stat {
                      call {
                        prefArgs {
                          prefixexp {
                            var {
                              name {
                                name: ""
                                num: 3080192
                              }
                            }
                          }
                          args {
                          }
                        }
                      }
                    }
                    laststat {
                      explist {
                        explist {
                          explast {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377-"
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    semicolon: true
                  }
                }
              }
              condition {
              }
            }
          }
        }
      }
      condition {
        nil: 1
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: "countfr_+"
                  num: 0
                }
                names {
                  name: "counter_8"
                  num: 1
                }
              }
              explist {
                expressions {
                }
                explast {
                  number: -1418.75
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                          }
                          stat {
                            list {
                              varlist {
                                var {
                                  indexexpr {
                                    prefixexp {
                                    }
                                    exp {
                                      prefixexp {
                                        var {
                                          indexname {
                                            prefixexp {
                                              exp {
                                                false: 162
                                              }
                                            }
                                            Name: "v"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              explist {
                                expressions {
                                  binary {
                                    leftexp {
                                      str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
                                    }
                                    binop {
                                      mult: 0
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
                                        }
                                        binop {
                                          mult: 0
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                              false: 1073741824
                                            }
                                            binop {
                                            }
                                            rightexp {
                                              binary {
                                                leftexp {
                                                  str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
                                                }
                                                binop {
                                                  less: 1073741824
                                                }
                                                rightexp {
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                expressions {
                                  number: 1.1125369292536007e-308
                                }
                                explast {
                                }
                              }
                            }
                          }
                          stat {
                          }
                          stat {
                            list {
                              varlist {
                                var {
                                  indexname {
                                    prefixexp {
                                    }
                                    Name: "io.close"
                                  }
                                }
                                vars {
                                  indexexpr {
                                    prefixexp {
                                    }
                                    exp {
                                      prefixexp {
                                      }
                                    }
                                  }
                                }
                                vars {
                                  indexname {
                                    prefixexp {
                                      var {
                                        indexname {
                                          prefixexp {
                                            exp {
                                              false: 162
                                            }
                                          }
                                          Name: "v"
                                        }
                                      }
                                    }
                                    Name: "load"
                                  }
                                }
                                vars {
                                  indexname {
                                    prefixexp {
                                      var {
                                        indexname {
                                          prefixexp {
                                            functioncall {
                                              prefArgs {
                                                prefixexp {
                                                  var {
                                                    indexname {
                                                      prefixexp {
                                                      }
                                                      Name: "FILE*"
                                                    }
                                                  }
                                                }
                                                args {
                                                }
                                              }
                                            }
                                          }
                                          Name: "v"
                                        }
                                      }
                                    }
                                    Name: "load"
                                  }
                                }
                                vars {
                                }
                                vars {
                                  name {
                                    name: ""
                                    num: 0
                                  }
                                }
                              }
                              explist {
                                expressions {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                      }
                                      fields {
                                        field {
                                        }
                                        sep {
                                          semicolon: 0
                                        }
                                      }
                                    }
                                  }
                                }
                                explast {
                                  false: 0
                                }
                              }
                            }
                          }
                          stat {
                            ifstat {
                              condition {
                              }
                              first {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                      }
                      condition {
                        prefixexp {
                          functioncall {
                            prefArgs {
                              prefixexp {
                                var {
                                  name {
                                    name: "load"
                                    num: 0
                                  }
                                }
                              }
                              args {
                                explist {
                                  explist {
                                    explast {
                                      binary {
                                        leftexp {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                              }
                                              fields {
                                                field {
                                                }
                                                sep {
                                                  semicolon: 1768777075
                                                }
                                              }
                                            }
                                          }
                                        }
                                        binop {
                                          exp: 0
                                        }
                                        rightexp {
                                          prefixexp {
                                            functioncall {
                                              prefArgs {
                                                prefixexp {
                                                  var {
                                                    name {
                                                      name: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
                                                      num: 0
                                                    }
                                                  }
                                                }
                                                args {
                                                  explist {
                                                    explist {
                                                      expressions {
                                                        nil: 2752512
                                                      }
                                                      expressions {
                                                        nil: 0
                                                      }
                                                      expressions {
                                                      }
                                                      explast {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              condition {
                unary {
                  unop {
                    not: 16
                  }
                  exp {
                    false: 1848647712
                  }
                }
              }
            }
          }
        }
      }
      condition {
        binary {
          leftexp {
          }
          binop {
          }
          rightexp {
            str: "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS"
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 1
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: "counter_+"
                  num: 6513008
                }
                names {
                  name: "counter_8"
                  num: 0
                }
              }
              explist {
                expressions {
                  true: 327680
                }
                explast {
                  str: "\000\'>io.opeuppern\'\000\000&&\'>\'\000\000&\'>\'"
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 5
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
            explist {
            }
            semicolon: true
          }
        }
      }
      condition {
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
  }
}
