chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 536870912
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    list {
                      varlist {
                        var {
                        }
                        vars {
                          indexexpr {
                            prefixexp {
                            }
                            exp {
                            }
                          }
                        }
                      }
                      explist {
                        explast {
                          binary {
                            leftexp {
                              prefixexp {
                                exp {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                      }
                                      fields {
                                        field {
                                        }
                                        sep {
                                        }
                                      }
                                      lastSep {
                                        comma: 0
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                            }
                            rightexp {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                  }
                                  lastSep {
                                    comma: 0
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              condition {
                tableconstructor {
                  fieldlist {
                    firstField {
                    }
                    lastSep {
                      comma: 0
                    }
                  }
                }
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                }
                vars {
                  indexname {
                    prefixexp {
                    }
                    Name: "package.preload"
                  }
                }
              }
              explist {
                explast {
                  binary {
                    leftexp {
                      prefixexp {
                      }
                    }
                    binop {
                    }
                    rightexp {
                      nil: 15104
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        number: 2.0615243494103197
                      }
                      binop {
                        mult: 0
                      }
                      rightexp {
                        false: 7995392
                      }
                    }
                  }
                  binop {
                    mult: 0
                  }
                  rightexp {
                    binary {
                      leftexp {
                        unary {
                          unop {
                            negate: 3
                          }
                          exp {
                            str: "\'<6%63663332<\'<8"
                          }
                        }
                      }
                      binop {
                      }
                      rightexp {
                        true: 16776448
                      }
                    }
                  }
                }
              }
              binop {
                mult: 0
              }
              rightexp {
                ellipsis: "\'<6666633332<\'<8"
              }
            }
          }
          binop {
          }
          rightexp {
            prefixexp {
              functioncall {
                prefArgs {
                  prefixexp {
                    var {
                      name {
                        name: "load"
                        num: 16776448
                      }
                    }
                  }
                  args {
                    explist {
                      explist {
                        explast {
                          prefixexp {
                            exp {
                              str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
}
