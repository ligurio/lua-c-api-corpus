chunk {
  stat {
    list {
      varlist {
        var {
          indexname {
            prefixexp {
              var {
                name {
                  name: "55555555555555555555555555555555555555555555555555555555555555555555555555555"
                  num: 0
                }
              }
            }
            Name: "counter_11"
          }
        }
        vars {
          name {
            name: "\\036\\000"
            num: 0
          }
        }
      }
      explist {
        explast {
          function {
            body {
              parlist {
              }
              block {
                chunk {
                  laststat {
                    break: 0
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
          }
          binop {
          }
          rightexp {
            binary {
              leftexp {
                str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
              }
              binop {
              }
              rightexp {
                binary {
                  leftexp {
                    str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
                  }
                  binop {
                    less: 1073741824
                  }
                  rightexp {
                    number: -424
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: "_ENV"
                  num: 0
                }
                startexp {
                  number: 7.42698526837845e-313
                }
                stopexp {
                  number: -424
                }
                stepexp {
                  unary {
                    unop {
                      negate: 0
                    }
                    exp {
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        call {
                          prefArgs {
                            prefixexp {
                            }
                            args {
                              tableconstructor {
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
            stat {
            }
            stat {
              block {
                block {
                  chunk {
                    stat {
                      semicolon: true
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  laststat {
    break: 0
  }
}
