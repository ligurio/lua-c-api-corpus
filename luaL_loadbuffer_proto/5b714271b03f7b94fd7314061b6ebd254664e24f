chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
    semicolon: true
  }
  laststat {
    explist {
      explist {
        expressions {
        }
        expressions {
          binary {
            leftexp {
            }
            binop {
              greaterEqual: 0
            }
            rightexp {
              prefixexp {
                exp {
                  binary {
                    leftexp {
                    }
                    binop {
                      or: 0
                    }
                    rightexp {
                      prefixexp {
                      }
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          binary {
            leftexp {
            }
            binop {
              greaterEqual: 0
            }
            rightexp {
              prefixexp {
                exp {
                  binary {
                    leftexp {
                    }
                    binop {
                      or: 0
                    }
                    rightexp {
                      prefixexp {
                      }
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          binary {
            leftexp {
            }
            binop {
              greater: 0
            }
            rightexp {
              prefixexp {
                exp {
                  binary {
                    leftexp {
                    }
                    binop {
                      or: 65536
                    }
                    rightexp {
                      prefixexp {
                      }
                    }
                  }
                }
              }
            }
          }
        }
        explast {
          binary {
            leftexp {
            }
            binop {
              greater: 0
            }
            rightexp {
              prefixexp {
                exp {
                  binary {
                    leftexp {
                    }
                    binop {
                      or: 0
                    }
                    rightexp {
                      prefixexp {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
