chunk {
  stat {
    whilecycle {
      condition {
        unary {
          unop {
            length: 15676
          }
          exp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    unary {
                      unop {
                        length: 0
                      }
                      exp {
                      }
                    }
                  }
                  binop {
                    div: 0
                  }
                  rightexp {
                    binary {
                      leftexp {
                        number: -2
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                            number: -4.9591064453125e-05
                          }
                          binop {
                          }
                          rightexp {
                            number: -4.9591064453125e-05
                          }
                        }
                      }
                    }
                  }
                }
              }
              binop {
                and: 0
              }
              rightexp {
                nil: 3372154878
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              break: 3372154878
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 402653184
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 67108864
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
            laststat {
            }
          }
        }
      }
      last {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              func {
                name {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                body {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              semicolon: true
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        true: 4
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
