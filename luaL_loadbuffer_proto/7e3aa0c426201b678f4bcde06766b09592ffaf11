chunk {
  stat {
    forcyclename {
      name {
        name: "UUUUUUUUUUUUUUUUUUUUU"
        num: 4
      }
      startexp {
        str: "UUUUUUUUUUUUUUULUUUUU"
      }
      stopexp {
        binary {
          leftexp {
          }
          binop {
          }
          rightexp {
            ellipsis: "\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007"
          }
        }
      }
      stepexp {
        str: "UUUUUUUUUUUUUUUUUUUUU"
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        prefixexp {
          exp {
            true: 4294967034
          }
        }
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: "UUUUUUUUUUUUUUUUUUUUU"
        num: 4294967034
      }
      startexp {
        str: "UUUUUUUUUUUUUUUUUUUUU"
      }
      stopexp {
        str: ""
      }
      stepexp {
        str: ""
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              namedassign {
                name {
                  name: ""
                  num: 0
                }
                value {
                }
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    true: 0
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    semicolon: true
  }
}
