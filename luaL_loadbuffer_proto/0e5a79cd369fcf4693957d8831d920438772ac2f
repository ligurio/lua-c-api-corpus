chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                  vars {
                    indexname {
                      prefixexp {
                      }
                      Name: ""
                    }
                  }
                }
                explist {
                  expressions {
                    nil: 0
                  }
                  expressions {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                            str: "\'"
                          }
                        }
                      }
                    }
                  }
                  expressions {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          exprassign {
                            key {
                              number: -336.02646195654233
                            }
                            value {
                            }
                          }
                        }
                      }
                    }
                  }
                  expressions {
                    str: "debug.gethook"
                  }
                  expressions {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          exprassign {
                            key {
                              number: 3.16202013338398e-322
                            }
                            value {
                              str: "os.execute"
                            }
                          }
                        }
                      }
                    }
                  }
                  expressions {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          expression {
                            false: 0
                          }
                        }
                        fields {
                          field {
                            exprassign {
                              key {
                                number: 3.16202013338398e-322
                              }
                              value {
                                str: "os.execute"
                              }
                            }
                          }
                          sep {
                          }
                        }
                      }
                    }
                  }
                  expressions {
                  }
                  expressions {
                    ellipsis: "debug.gethook"
                  }
                  expressions {
                  }
                  explast {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                            exp {
                              str: "debug.gethook"
                            }
                          }
                          args {
                            str: "\'"
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: false
            }
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        parlist {
          namelist {
            namelist {
              firstname {
                name: ""
                num: 0
              }
            }
            ellipsis: "__cl"
          }
        }
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
}
