chunk {
  stat {
    localfunc {
      name {
        name: "\'>6662&6%332<<\'8"
        num: 0
      }
      funcbody {
        parlist {
          ellipsis: "\000\000\000\000"
        }
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: "\'>6662&6%332<<\'8"
                  num: 0
                }
                funcbody {
                  parlist {
                    ellipsis: "\000\000\000\000"
                  }
                  block {
                    chunk {
                      stat {
                        localfunc {
                          name {
                            name: "\'>6662&6%332<<\'8"
                            num: 0
                          }
                          funcbody {
                            block {
                              chunk {
                                stat {
                                }
                              }
                            }
                          }
                        }
                        semicolon: false
                      }
                      laststat {
                        explist {
                          explist {
                            expressions {
                              true: 0
                            }
                            expressions {
                              false: 0
                            }
                            expressions {
                            }
                            expressions {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      binary {
                                        leftexp {
                                          function {
                                            body {
                                              parlist {
                                                ellipsis: "a\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377bs"
                                              }
                                              block {
                                                chunk {
                                                  laststat {
                                                    semicolon: true
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        binop {
                                          concat: 704643072
                                        }
                                        rightexp {
                                          prefixexp {
                                            var {
                                              indexname {
                                                prefixexp {
                                                  exp {
                                                    binary {
                                                      leftexp {
                                                        binary {
                                                          leftexp {
                                                            number: -1.2773377981022207e+294
                                                          }
                                                          binop {
                                                            concat: 0
                                                          }
                                                          rightexp {
                                                            prefixexp {
                                                            }
                                                          }
                                                        }
                                                      }
                                                      binop {
                                                        concat: 704643072
                                                      }
                                                      rightexp {
                                                        false: 17408
                                                      }
                                                    }
                                                  }
                                                }
                                                Name: "a\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377bs"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                      concat: 0
                                    }
                                    rightexp {
                                      prefixexp {
                                      }
                                    }
                                  }
                                }
                                binop {
                                  div: 0
                                }
                                rightexp {
                                  str: "\'-666333623<\'<8<8"
                                }
                              }
                            }
                            explast {
                              str: "\'>6662&6%332<<\'8"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: false
            }
            laststat {
              explist {
                explist {
                  expressions {
                    true: 0
                  }
                  expressions {
                    false: 0
                  }
                  expressions {
                  }
                  expressions {
                    binary {
                      leftexp {
                        str: "\'-666633332<\'<8<8"
                      }
                      binop {
                        div: 0
                      }
                      rightexp {
                        str: "\'-666333623<\'<8<8"
                      }
                    }
                  }
                  explast {
                    str: "\'>6662&6%332<<\'8"
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    localfunc {
      name {
        name: "\'>6662&6%332<<\'8"
        num: 0
      }
      funcbody {
        parlist {
          ellipsis: "\000\000\000\000"
        }
        block {
          chunk {
            stat {
              ifstat {
                condition {
                  ellipsis: "]"
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              localfunc {
                name {
                  name: "\'>6662&6%332<<\'8"
                  num: 0
                }
                funcbody {
                  parlist {
                    ellipsis: "\000\000\000\000"
                  }
                  block {
                    chunk {
                      stat {
                        localfunc {
                          name {
                            name: "\'>6662&6%332<<\'8"
                            num: 0
                          }
                          funcbody {
                            block {
                              chunk {
                                stat {
                                }
                                laststat {
                                  explist {
                                    explist {
                                      expressions {
                                        function {
                                          body {
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                      }
                                      expressions {
                                        function {
                                          body {
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                      }
                                      expressions {
                                        binary {
                                          leftexp {
                                          }
                                          binop {
                                            greaterEqual: 0
                                          }
                                          rightexp {
                                          }
                                        }
                                      }
                                      expressions {
                                      }
                                      expressions {
                                        function {
                                          body {
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                      }
                                      expressions {
                                        function {
                                          body {
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                      }
                                      explast {
                                        function {
                                          body {
                                            block {
                                              chunk {
                                                stat {
                                                  ifstat {
                                                    condition {
                                                    }
                                                    first {
                                                      chunk {
                                                      }
                                                    }
                                                    clauses {
                                                      condition {
                                                      }
                                                      block {
                                                        chunk {
                                                          stat {
                                                            ifstat {
                                                              condition {
                                                                nil: 3014656
                                                              }
                                                              first {
                                                                chunk {
                                                                }
                                                              }
                                                              last {
                                                                chunk {
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    clauses {
                                                      condition {
                                                        binary {
                                                          leftexp {
                                                            tableconstructor {
                                                              fieldlist {
                                                                firstField {
                                                                  namedassign {
                                                                    name {
                                                                      name: ""
                                                                      num: 0
                                                                    }
                                                                    value {
                                                                      false: 0
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          binop {
                                                          }
                                                          rightexp {
                                                          }
                                                        }
                                                      }
                                                      block {
                                                        chunk {
                                                          stat {
                                                            ifstat {
                                                              condition {
                                                              }
                                                              first {
                                                                chunk {
                                                                  stat {
                                                                    repeatcycle {
                                                                      block {
                                                                        chunk {
                                                                          stat {
                                                                            call {
                                                                              prefArgs {
                                                                                prefixexp {
                                                                                  var {
                                                                                    name {
                                                                                      name: "rawequal"
                                                                                      num: 134217728
                                                                                    }
                                                                                  }
                                                                                }
                                                                                args {
                                                                                  str: "_VERSION"
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                          stat {
                                                                            call {
                                                                            }
                                                                          }
                                                                          stat {
                                                                            call {
                                                                            }
                                                                            semicolon: true
                                                                          }
                                                                          stat {
                                                                            call {
                                                                            }
                                                                          }
                                                                          stat {
                                                                            call {
                                                                            }
                                                                          }
                                                                          stat {
                                                                            call {
                                                                            }
                                                                          }
                                                                          stat {
                                                                            call {
                                                                            }
                                                                          }
                                                                          stat {
                                                                            call {
                                                                            }
                                                                          }
                                                                          stat {
                                                                            call {
                                                                            }
                                                                          }
                                                                          stat {
                                                                            call {
                                                                            }
                                                                          }
                                                                          stat {
                                                                            call {
                                                                            }
                                                                          }
                                                                          stat {
                                                                          }
                                                                          stat {
                                                                            call {
                                                                            }
                                                                          }
                                                                          stat {
                                                                          }
                                                                          stat {
                                                                            call {
                                                                            }
                                                                          }
                                                                          stat {
                                                                            call {
                                                                            }
                                                                          }
                                                                          stat {
                                                                          }
                                                                          stat {
                                                                            call {
                                                                            }
                                                                          }
                                                                          stat {
                                                                            call {
                                                                              prefArgs {
                                                                                prefixexp {
                                                                                  exp {
                                                                                    str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                                                                                  }
                                                                                }
                                                                                args {
                                                                                  explist {
                                                                                    explist {
                                                                                      expressions {
                                                                                        tableconstructor {
                                                                                          fieldlist {
                                                                                            firstField {
                                                                                            }
                                                                                            fields {
                                                                                              field {
                                                                                                expression {
                                                                                                  binary {
                                                                                                    leftexp {
                                                                                                    }
                                                                                                    binop {
                                                                                                      or: 0
                                                                                                    }
                                                                                                    rightexp {
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                              sep {
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                      explast {
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                          stat {
                                                                            call {
                                                                            }
                                                                          }
                                                                          stat {
                                                                            call {
                                                                            }
                                                                            semicolon: true
                                                                          }
                                                                          stat {
                                                                            call {
                                                                            }
                                                                          }
                                                                          stat {
                                                                            call {
                                                                            }
                                                                          }
                                                                          stat {
                                                                            semicolon: true
                                                                          }
                                                                          stat {
                                                                            call {
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                      condition {
                                                                        binary {
                                                                          leftexp {
                                                                            number: 9.99198362149337e-320
                                                                          }
                                                                          binop {
                                                                          }
                                                                          rightexp {
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                  laststat {
                                                                    explist {
                                                                      explist {
                                                                        explast {
                                                                          prefixexp {
                                                                            functioncall {
                                                                              prefArgs {
                                                                                prefixexp {
                                                                                  var {
                                                                                    name {
                                                                                      name: "rawequal"
                                                                                      num: 134217728
                                                                                    }
                                                                                  }
                                                                                }
                                                                                args {
                                                                                  str: "_VERSION"
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              clauses {
                                                                condition {
                                                                }
                                                                block {
                                                                  chunk {
                                                                    laststat {
                                                                      explist {
                                                                        explist {
                                                                          explast {
                                                                            prefixexp {
                                                                              functioncall {
                                                                                prefArgs {
                                                                                  prefixexp {
                                                                                    var {
                                                                                      name {
                                                                                        name: "rawequal"
                                                                                        num: 0
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                  args {
                                                                                    str: "_VERSION"
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              clauses {
                                                                condition {
                                                                }
                                                                block {
                                                                  chunk {
                                                                    stat {
                                                                      ifstat {
                                                                        condition {
                                                                        }
                                                                        first {
                                                                          chunk {
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                    laststat {
                                                                      explist {
                                                                        explist {
                                                                          explast {
                                                                            prefixexp {
                                                                              functioncall {
                                                                                prefArgs {
                                                                                  prefixexp {
                                                                                    var {
                                                                                      name {
                                                                                        name: "rawequal"
                                                                                        num: 0
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                  args {
                                                                                    str: "_VERSION"
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          laststat {
                                                            explist {
                                                              explist {
                                                                expressions {
                                                                  function {
                                                                    body {
                                                                      block {
                                                                        chunk {
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                                expressions {
                                                                  function {
                                                                    body {
                                                                      block {
                                                                        chunk {
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                                expressions {
                                                                  binary {
                                                                    leftexp {
                                                                    }
                                                                    binop {
                                                                      greaterEqual: 0
                                                                    }
                                                                    rightexp {
                                                                    }
                                                                  }
                                                                }
                                                                expressions {
                                                                }
                                                                expressions {
                                                                  function {
                                                                    body {
                                                                      block {
                                                                        chunk {
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                                expressions {
                                                                  function {
                                                                    body {
                                                                      block {
                                                                        chunk {
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                                explast {
                                                                  function {
                                                                    body {
                                                                      block {
                                                                        chunk {
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                laststat {
                                                  explist {
                                                    explist {
                                                      expressions {
                                                        function {
                                                          body {
                                                            block {
                                                              chunk {
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      expressions {
                                                        function {
                                                          body {
                                                            block {
                                                              chunk {
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      expressions {
                                                        binary {
                                                          leftexp {
                                                          }
                                                          binop {
                                                            greaterEqual: 0
                                                          }
                                                          rightexp {
                                                          }
                                                        }
                                                      }
                                                      expressions {
                                                      }
                                                      expressions {
                                                        function {
                                                          body {
                                                            block {
                                                              chunk {
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      expressions {
                                                        function {
                                                          body {
                                                            block {
                                                              chunk {
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      explast {
                                                        function {
                                                          body {
                                                            block {
                                                              chunk {
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        semicolon: false
                      }
                      laststat {
                        explist {
                          explist {
                            expressions {
                              prefixexp {
                                var {
                                  indexname {
                                    prefixexp {
                                    }
                                    Name: "dump"
                                  }
                                }
                              }
                            }
                            expressions {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      binary {
                                        leftexp {
                                          binary {
                                            leftexp {
                                              binary {
                                                leftexp {
                                                  binary {
                                                    leftexp {
                                                      binary {
                                                        leftexp {
                                                          binary {
                                                            leftexp {
                                                              binary {
                                                                leftexp {
                                                                  binary {
                                                                    leftexp {
                                                                      binary {
                                                                        leftexp {
                                                                        }
                                                                        binop {
                                                                        }
                                                                        rightexp {
                                                                          str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                                        }
                                                                      }
                                                                    }
                                                                    binop {
                                                                    }
                                                                    rightexp {
                                                                      str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                                    }
                                                                  }
                                                                }
                                                                binop {
                                                                  div: 0
                                                                }
                                                                rightexp {
                                                                  binary {
                                                                    leftexp {
                                                                      binary {
                                                                        leftexp {
                                                                          str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                                        }
                                                                        binop {
                                                                        }
                                                                        rightexp {
                                                                          str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                                        }
                                                                      }
                                                                    }
                                                                    binop {
                                                                      div: 0
                                                                    }
                                                                    rightexp {
                                                                      str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                            binop {
                                                              mult: 16385
                                                            }
                                                            rightexp {
                                                              binary {
                                                                leftexp {
                                                                  str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                                }
                                                                binop {
                                                                }
                                                                rightexp {
                                                                  str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                        binop {
                                                        }
                                                        rightexp {
                                                          str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                        }
                                                      }
                                                    }
                                                    binop {
                                                      div: 0
                                                    }
                                                    rightexp {
                                                      str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                    }
                                                  }
                                                }
                                                binop {
                                                  notEqual: 3080192
                                                }
                                                rightexp {
                                                  binary {
                                                    leftexp {
                                                      binary {
                                                        leftexp {
                                                          str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                        }
                                                        binop {
                                                        }
                                                        rightexp {
                                                          str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                        }
                                                      }
                                                    }
                                                    binop {
                                                      div: 0
                                                    }
                                                    rightexp {
                                                      binary {
                                                        leftexp {
                                                        }
                                                        binop {
                                                          exp: 553648128
                                                        }
                                                        rightexp {
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            binop {
                                              mult: 16385
                                            }
                                            rightexp {
                                              str: "\'-8<table.pack\'\'/8<\'<8<8"
                                            }
                                          }
                                        }
                                        binop {
                                          add: 0
                                        }
                                        rightexp {
                                          str: "\'-8<table.pack\'\'/8<\'<8<8"
                                        }
                                      }
                                    }
                                    binop {
                                      mult: 16385
                                    }
                                    rightexp {
                                      str: "\'-8<table.pack\'\'/8<\'<8<8"
                                    }
                                  }
                                }
                                binop {
                                }
                                rightexp {
                                  str: "\'-8<table.pack\'\'/8<\'<8<8"
                                }
                              }
                            }
                            expressions {
                            }
                            expressions {
                              binary {
                                leftexp {
                                  str: "\'-666633332<\'<8<8"
                                }
                                binop {
                                  div: 0
                                }
                                rightexp {
                                  str: "\'-666333623<\'<8<8"
                                }
                              }
                            }
                            explast {
                              str: "\'>6662&6%332<<\'8"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: false
            }
            laststat {
              explist {
                explist {
                  expressions {
                    prefixexp {
                      var {
                        indexname {
                          prefixexp {
                          }
                          Name: "dump"
                        }
                      }
                    }
                  }
                  expressions {
                    false: 0
                  }
                  expressions {
                  }
                  expressions {
                    binary {
                      leftexp {
                        str: "\'-666633332<\'<8<8"
                      }
                      binop {
                        div: 0
                      }
                      rightexp {
                        str: "\'-666333623<\'<8<8"
                      }
                    }
                  }
                  explast {
                    str: "\'>6662&6%3<<23\'8"
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
}
