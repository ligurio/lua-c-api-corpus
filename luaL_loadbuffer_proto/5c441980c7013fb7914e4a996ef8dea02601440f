chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 1900544
      }
      startexp {
        function {
          body {
            block {
              chunk {
                stat {
                  semicolon: true
                }
              }
            }
          }
        }
      }
      stopexp {
        binary {
          leftexp {
            unary {
              unop {
                length: 8
              }
              exp {
                unary {
                  unop {
                    length: 8
                  }
                  exp {
                    str: "\'<rena<66*rena<6*6*\'<\'<"
                  }
                }
              }
            }
          }
          binop {
            mult: 0
          }
          rightexp {
            true: 0
          }
        }
      }
      stepexp {
        unary {
          unop {
            length: 8
          }
          exp {
            str: "\'<rena<66*rena<6*6*\'<\'<"
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 1900544
                }
                startexp {
                  function {
                    body {
                      block {
                        chunk {
                          stat {
                            semicolon: true
                          }
                        }
                      }
                    }
                  }
                }
                stopexp {
                  binary {
                    leftexp {
                      unary {
                        unop {
                          length: 8
                        }
                        exp {
                          str: "\'<rena<66*rena<6*6*\'<\'<"
                        }
                      }
                    }
                    binop {
                      mult: 0
                    }
                    rightexp {
                      true: 0
                    }
                  }
                }
                stepexp {
                  unary {
                    unop {
                      length: 8
                    }
                    exp {
                      str: "\'<rena<66*rena<6*6*\'<\'<"
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 1900544
                          }
                          startexp {
                            function {
                              body {
                                block {
                                  chunk {
                                    stat {
                                      semicolon: true
                                    }
                                  }
                                }
                              }
                            }
                          }
                          stopexp {
                            binary {
                              leftexp {
                                unary {
                                  unop {
                                    length: 8
                                  }
                                  exp {
                                    unary {
                                      unop {
                                        length: 8
                                      }
                                      exp {
                                        str: "\'<rena<66*rena<6*6*\'<\'<"
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                mult: 0
                              }
                              rightexp {
                                true: 0
                              }
                            }
                          }
                          stepexp {
                            unary {
                              unop {
                                length: 8
                              }
                              exp {
                                str: "\'<rena<66*rena<6*6*\'<\'<"
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  forcyclename {
                                    name {
                                      name: ""
                                      num: 1900544
                                    }
                                    startexp {
                                      function {
                                        body {
                                          block {
                                            chunk {
                                              stat {
                                                semicolon: true
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    stopexp {
                                      binary {
                                        leftexp {
                                          unary {
                                            unop {
                                              length: 8
                                            }
                                            exp {
                                              str: "\'<rena<66*rena<6*6*\'<\'<"
                                            }
                                          }
                                        }
                                        binop {
                                          mult: 0
                                        }
                                        rightexp {
                                          true: 0
                                        }
                                      }
                                    }
                                    stepexp {
                                      unary {
                                        unop {
                                          length: 8
                                        }
                                        exp {
                                          str: "\'<rena<66*rena<6*6*\'<\'<"
                                        }
                                      }
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                          stat {
                                            forcyclename {
                                              name {
                                                name: ""
                                                num: 0
                                              }
                                              startexp {
                                              }
                                              stopexp {
                                              }
                                              doblock {
                                                block {
                                                  chunk {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          stat {
                                            semicolon: true
                                          }
                                        }
                                      }
                                    }
                                  }
                                  semicolon: false
                                }
                                stat {
                                  semicolon: true
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
              semicolon: false
            }
            stat {
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: false
  }
  stat {
  }
  stat {
    semicolon: false
  }
  stat {
    semicolon: false
  }
  laststat {
    semicolon: true
  }
}
