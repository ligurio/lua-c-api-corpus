chunk {
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    localfunc {
      name {
        name: "{"
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          exp {
            function {
              body {
                block {
                  chunk {
                    laststat {
                      explist {
                        explist {
                          expressions {
                            binary {
                              leftexp {
                                str: "recunroll="
                              }
                              binop {
                                less: 0
                              }
                              rightexp {
                                function {
                                  body {
                                    block {
                                      chunk {
                                        laststat {
                                          explist {
                                            explist {
                                              expressions {
                                                binary {
                                                  leftexp {
                                                    str: "recunroll="
                                                  }
                                                  binop {
                                                    less: 0
                                                  }
                                                  rightexp {
                                                    function {
                                                      body {
                                                        block {
                                                          chunk {
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              expressions {
                                                binary {
                                                  leftexp {
                                                    str: "recunroll="
                                                  }
                                                  binop {
                                                    less: 2097152
                                                  }
                                                  rightexp {
                                                    str: "recunrolljjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj`jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj="
                                                  }
                                                }
                                              }
                                              explast {
                                                binary {
                                                  leftexp {
                                                    str: "recunroll="
                                                  }
                                                  binop {
                                                    less: 4
                                                  }
                                                  rightexp {
                                                    str: "recunrjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj="
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          expressions {
                            binary {
                              leftexp {
                                str: "recunroll="
                              }
                              binop {
                                less: 2097152
                              }
                              rightexp {
                                str: "recunrolljjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj`jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj="
                              }
                            }
                          }
                          explast {
                            binary {
                              leftexp {
                                str: "recunroll="
                              }
                              binop {
                                less: 4
                              }
                              rightexp {
                                str: "recunrjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj="
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        args {
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localfunc {
              name {
                name: ""
                num: 0
              }
              funcbody {
                parlist {
                }
                block {
                  chunk {
                    stat {
                    }
                    stat {
                      block {
                        block {
                          chunk {
                            laststat {
                              explist {
                                explist {
                                  expressions {
                                  }
                                  explast {
                                    prefixexp {
                                      functioncall {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    stat {
                      block {
                        block {
                          chunk {
                            laststat {
                              explist {
                                explist {
                                  expressions {
                                  }
                                  explast {
                                    prefixexp {
                                      functioncall {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    stat {
                      block {
                        block {
                          chunk {
                            laststat {
                              explist {
                                explist {
                                  expressions {
                                  }
                                  explast {
                                    prefixexp {
                                      functioncall {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    stat {
                      localnames {
                        namelist {
                          firstname {
                            name: ""
                            num: 0
                          }
                        }
                      }
                      semicolon: true
                    }
                    stat {
                      localfunc {
                        name {
                          name: ""
                          num: 0
                        }
                        funcbody {
                          parlist {
                          }
                          block {
                            chunk {
                              stat {
                              }
                              stat {
                                block {
                                  block {
                                    chunk {
                                      laststat {
                                        break: 2105344
                                      }
                                    }
                                  }
                                }
                              }
                              stat {
                                block {
                                  block {
                                    chunk {
                                      laststat {
                                        explist {
                                          explist {
                                            expressions {
                                            }
                                            explast {
                                              prefixexp {
                                                functioncall {
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              stat {
                                block {
                                  block {
                                    chunk {
                                      laststat {
                                        explist {
                                          explist {
                                            expressions {
                                            }
                                            explast {
                                              prefixexp {
                                                var {
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              stat {
                                semicolon: false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        str: "recunroll="
      }
    }
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    block {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                expressions {
                  unary {
                    unop {
                    }
                    exp {
                      number: 9.5721549513403447e-308
                    }
                  }
                }
                explast {
                  false: 536870912
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: false
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
    block {
      block {
        chunk {
        }
      }
    }
  }
  stat {
  }
  laststat {
  }
}
