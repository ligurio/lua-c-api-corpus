chunk {
  stat {
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          exp {
            str: "\\000\\000\\utf8.codepoint000\\377.sub"
          }
        }
        args {
          explist {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 67108865
      }
      funcbody {
        parlist {
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          exp {
            str: "\\000\\000\\utf8.codepoint000\\377.sub"
          }
        }
        args {
          tableconstructor {
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "collectgarbage"
              num: 0
            }
          }
        }
        args {
          explist {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 1024
                }
                startexp {
                  false: 0
                }
                stopexp {
                  prefixexp {
                  }
                }
                stepexp {
                  number: 2
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 3080192
                          }
                          startexp {
                            number: 2
                          }
                          stopexp {
                            false: 0
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  forcyclename {
                                    name {
                                      name: ""
                                      num: 3080192
                                    }
                                    startexp {
                                      number: 2
                                    }
                                    stopexp {
                                    }
                                    stepexp {
                                      unary {
                                        unop {
                                          negate: 3080192
                                        }
                                        exp {
                                          prefixexp {
                                          }
                                        }
                                      }
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            laststat {
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 1024
                }
                startexp {
                  false: 0
                }
                stopexp {
                  prefixexp {
                  }
                }
                stepexp {
                  number: 2
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 3080192
                          }
                          startexp {
                            number: 2
                          }
                          stopexp {
                            false: 0
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  forcyclename {
                                    name {
                                      name: ""
                                      num: 3080192
                                    }
                                    startexp {
                                      number: 2
                                    }
                                    stopexp {
                                    }
                                    stepexp {
                                      unary {
                                        unop {
                                          negate: 3080192
                                        }
                                        exp {
                                          prefixexp {
                                          }
                                        }
                                      }
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            laststat {
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localfunc {
              name {
                name: ""
                num: 0
              }
              funcbody {
                block {
                  chunk {
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                          }
                        }
                        condition {
                          unary {
                            unop {
                            }
                            exp {
                              function {
                                body {
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
              }
              binop {
                and: 1660944384
              }
              rightexp {
                true: 162
              }
            }
          }
          binop {
            less: 0
          }
          rightexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                      }
                      binop {
                        and: 1660944384
                      }
                      rightexp {
                        true: 162
                      }
                    }
                  }
                  binop {
                    less: 0
                  }
                  rightexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                prefixexp {
                                }
                              }
                              binop {
                                add: 162
                              }
                              rightexp {
                                nil: 0
                              }
                            }
                          }
                          binop {
                            less: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        prefixexp {
                                        }
                                      }
                                      binop {
                                        add: 21
                                      }
                                      rightexp {
                                        true: 162
                                      }
                                    }
                                  }
                                  binop {
                                    less: 0
                                  }
                                  rightexp {
                                    binary {
                                      leftexp {
                                        true: 162
                                      }
                                      binop {
                                        less: 0
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                            prefixexp {
                                              functioncall {
                                                prefArgs {
                                                  prefixexp {
                                                    var {
                                                      name {
                                                        name: "collectgarbage"
                                                        num: 0
                                                      }
                                                    }
                                                  }
                                                  args {
                                                    explist {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          binop {
                                            and: 1660944384
                                          }
                                          rightexp {
                                            true: 162
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                less: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    prefixexp {
                                      functioncall {
                                        prefArgs {
                                          prefixexp {
                                            var {
                                              name {
                                                name: "collectgarbage"
                                                num: 0
                                              }
                                            }
                                          }
                                          args {
                                            explist {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                    and: 1660944384
                                  }
                                  rightexp {
                                    str: "collectgarbage"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      binop {
                        less: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                            prefixexp {
                              functioncall {
                                prefArgs {
                                  prefixexp {
                                    exp {
                                      str: "\\000\\000\\utf8.codepoint000\\377.sub"
                                    }
                                  }
                                  args {
                                    explist {
                                    }
                                  }
                                }
                              }
                            }
                          }
                          binop {
                            and: 1660944384
                          }
                          rightexp {
                          }
                        }
                      }
                    }
                  }
                }
              }
              binop {
                less: 0
              }
              rightexp {
                binary {
                  leftexp {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                            exp {
                              str: "\\000\\000\\utf8.codepoint000\\377.sub"
                            }
                          }
                          args {
                            explist {
                            }
                          }
                        }
                      }
                    }
                  }
                  binop {
                    and: 1660944384
                  }
                  rightexp {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            semicolon: true
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
              }
              binop {
                and: 1660944384
              }
              rightexp {
                true: 162
              }
            }
          }
          binop {
            less: 0
          }
          rightexp {
            true: 4194304
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
}
