chunk {
  stat {
    forcyclename {
      name {
        name: "\'-666633332<\'<8<8"
        num: 0
      }
      startexp {
        false: 4294967295
      }
      stopexp {
        binary {
          leftexp {
            nil: 26992
          }
          binop {
            equal: 0
          }
          rightexp {
            str: "\'-6&6633332<\'<8<8"
          }
        }
      }
      stepexp {
        nil: 26992
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    forcyclename {
      name {
        name: "\'-666633332<\'<8<8"
        num: 0
      }
      startexp {
        false: 4294967295
      }
      stopexp {
        binary {
          leftexp {
            number: -1352.0313738156183
          }
          binop {
            equal: 0
          }
          rightexp {
            str: "\'-6&6633332<\'<8<8"
          }
        }
      }
      stepexp {
        str: "\'-6&6633332<\'<8<8"
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    break: 67108864
    semicolon: true
  }
}
