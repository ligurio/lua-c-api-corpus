chunk {
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
            str: "\'-string.lower\'\'/8<\'<8<8"
          }
          binop {
            mult: 0
          }
          rightexp {
            str: ""
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          namedassign {
                            name {
                              name: ""
                              num: 0
                            }
                            value {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 16187136
        }
      }
      expressions {
        explast {
          binary {
            leftexp {
              str: "\'-string.lower\'\'/8<\'<8<8"
            }
            binop {
              mult: 0
            }
            rightexp {
              str: ""
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
