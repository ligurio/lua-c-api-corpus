chunk {
  stat {
    whilecycle {
      condition {
        unary {
          unop {
            length: 9
          }
          exp {
            unary {
              unop {
                length: 9
              }
              exp {
                binary {
                  leftexp {
                    true: 0
                  }
                  binop {
                    mult: 0
                  }
                  rightexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                str: "\'<<666236332<<\'8"
                              }
                              binop {
                                mult: 32768
                              }
                              rightexp {
                              }
                            }
                          }
                          binop {
                            div: 9
                          }
                          rightexp {
                          }
                        }
                      }
                      binop {
                        mult: 8388608
                      }
                      rightexp {
                        binary {
                          leftexp {
                            number: -709.375
                          }
                          binop {
                            mult: 32768
                          }
                          rightexp {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: "max"
          num: 0
        }
      }
    }
    semicolon: true
  }
  laststat {
  }
}
