chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        binary {
          leftexp {
            prefixexp {
              var {
                indexname {
                  prefixexp {
                    functioncall {
                      namedArgs {
                        prefixexp {
                          exp {
                            prefixexp {
                              exp {
                                function {
                                  body {
                                    parlist {
                                      ellipsis: "\013\000\000\000"
                                    }
                                    block {
                                      chunk {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        name {
                          name: ""
                          num: 0
                        }
                        args {
                          str: "\000\'>io.open\'.\000&&\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\'>\'\000\000&\'>\'"
                        }
                      }
                    }
                  }
                  Name: ""
                }
              }
            }
          }
          binop {
            add: 10
          }
          rightexp {
            function {
              body {
                parlist {
                }
                block {
                  chunk {
                    stat {
                    }
                    stat {
                      list {
                        varlist {
                          var {
                            name {
                              name: ""
                              num: 25344
                            }
                          }
                        }
                        explist {
                          explast {
                            binary {
                              leftexp {
                              }
                              binop {
                                or: 1
                              }
                              rightexp {
                                prefixexp {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      stopexp {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    true: 0
                  }
                  binop {
                    sub: 0
                  }
                  rightexp {
                    str: "\'<mathn<7<<7<\'<9"
                  }
                }
              }
              binop {
                sub: 0
              }
              rightexp {
                number: 56.00000001071021
              }
            }
          }
          binop {
            add: 10
          }
          rightexp {
            function {
              body {
                parlist {
                }
                block {
                  chunk {
                    stat {
                      list {
                        varlist {
                          var {
                            name {
                              name: ""
                              num: 25344
                            }
                          }
                        }
                        explist {
                          explast {
                            binary {
                              leftexp {
                                prefixexp {
                                  exp {
                                    str: "\'<coroutane.yiel>>\'<coroutane.yiel>>>>>>>>>>>>>>>>>>>>d"
                                  }
                                }
                              }
                              binop {
                                or: 1
                              }
                              rightexp {
                                prefixexp {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    stat {
                      list {
                        varlist {
                          var {
                            name {
                              name: ""
                              num: 25344
                            }
                          }
                        }
                        explist {
                          explast {
                            binary {
                              leftexp {
                              }
                              binop {
                                or: 1
                              }
                              rightexp {
                                prefixexp {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              break: 40
            }
          }
        }
      }
    }
  }
}
