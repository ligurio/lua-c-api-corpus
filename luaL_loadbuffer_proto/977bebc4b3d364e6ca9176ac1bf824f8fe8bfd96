chunk {
  stat {
    whilecycle {
      condition {
        nil: 0
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            binary {
                              leftexp {
                                prefixexp {
                                  exp {
                                    binary {
                                      leftexp {
                                        ellipsis: ""
                                      }
                                      binop {
                                        or: 2
                                      }
                                      rightexp {
                                        ellipsis: "\342\342\342\342\342\342\342\342\342\342\342\342\342\342\342\342\342\342\342\342\342\342\342\342\342\342\342\342\342\342\342\342"
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                sub: 2
                              }
                              rightexp {
                              }
                            }
                          }
                          value {
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              semicolon: false
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
