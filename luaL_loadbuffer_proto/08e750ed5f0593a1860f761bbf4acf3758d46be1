chunk {
  stat {
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                expressions {
                  explast {
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        localnames {
                          namelist {
                            firstname {
                              name: ""
                              num: 5
                            }
                            names {
                              name: "TTTTT"
                              num: 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: "\\377\\377+"
          num: 8961
        }
        names {
          name: "counter_+"
          num: 6513008
        }
      }
      body {
        block {
          chunk {
            stat {
              block {
                block {
                  chunk {
                  }
                }
              }
            }
            stat {
              call {
              }
            }
          }
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: "\\377\\377+"
          num: 6513008
        }
        names {
          name: "counter_+"
          num: 6513008
        }
      }
      body {
        block {
          chunk {
            stat {
              block {
                block {
                  chunk {
                    stat {
                      semicolon: true
                    }
                  }
                }
              }
            }
            stat {
              call {
              }
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 6841088
        }
      }
      body {
        block {
          chunk {
            stat {
              semicolon: true
            }
            stat {
              semicolon: true
            }
            stat {
              call {
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: ""
                  num: 0
                }
                names {
                  name: "counter_8"
                  num: 0
                }
                names {
                  name: "qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq"
                  num: 4177526784
                }
              }
              explist {
                expressions {
                  true: 67108864
                }
                explast {
                  number: -709.375
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    whilecycle {
                      condition {
                      }
                      doblock {
                        block {
                          chunk {
                            stat {
                              call {
                                prefArgs {
                                  prefixexp {
                                    var {
                                      name {
                                        name: "load"
                                        num: 0
                                      }
                                    }
                                  }
                                  args {
                                    str: "\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213\213"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              condition {
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        nil: 6841088
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 5
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
              }
              doblock {
                block {
                  chunk {
                    stat {
                      call {
                        prefArgs {
                          prefixexp {
                            var {
                              name {
                                name: "load"
                                num: 0
                              }
                            }
                          }
                          args {
                            explist {
                              explist {
                                explast {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                      concat: 0
                                    }
                                    rightexp {
                                      str: "pack"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          laststat {
            explist {
              explist {
                expressions {
                  number: 0
                }
                explast {
                }
              }
            }
          }
        }
      }
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              expression {
                prefixexp {
                  var {
                    indexname {
                      prefixexp {
                        var {
                          indexname {
                            prefixexp {
                              exp {
                                false: 0
                              }
                            }
                            Name: ""
                          }
                        }
                      }
                      Name: ""
                    }
                  }
                }
              }
            }
            fields {
              field {
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  nil: 8961
                }
              }
              sep {
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          name {
            name: "load"
            num: 16
          }
        }
      }
      explist {
        expressions {
          function {
            body {
              parlist {
                namelist {
                  namelist {
                    firstname {
                      name: ""
                      num: 0
                    }
                    names {
                      name: "\325\325\325\325\325\325\325\325\325\325\325\325\325\325\325\325\325"
                      num: 0
                    }
                  }
                }
              }
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
          ellipsis: ";"
        }
      }
    }
    semicolon: true
  }
  laststat {
    break: 128
  }
}
