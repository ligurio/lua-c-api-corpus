chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        expressions {
          ellipsis: "\345\345\345\345\345\345,\345\345\345\3457\\357\\377\\377\\377.\n \345\345\345\345\345\345\345\345"
        }
        explast {
          tableconstructor {
          }
        }
      }
      doblock {
        block {
          chunk {
            laststat {
            }
          }
        }
      }
    }
  }
  laststat {
    explist {
      explist {
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
              }
              fields {
                field {
                }
                sep {
                  comma: 0
                }
              }
              fields {
                field {
                  expression {
                    prefixexp {
                      var {
                        name {
                          name: "\345\345\345\345\345\345,\345\345\345\3457\\357\\377\\377\\377.\n \345\345\345\345\345\345\345\345"
                          num: 16252672
                        }
                      }
                    }
                  }
                }
                sep {
                }
              }
              fields {
                field {
                }
                sep {
                  comma: 0
                }
              }
            }
          }
        }
        expressions {
          tableconstructor {
          }
        }
        explast {
          tableconstructor {
            fieldlist {
              firstField {
              }
              fields {
                field {
                }
                sep {
                }
              }
              fields {
                field {
                }
                sep {
                  comma: 0
                }
              }
              lastSep {
                comma: 0
              }
            }
          }
        }
      }
    }
  }
}
