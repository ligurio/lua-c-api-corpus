chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 39
      }
      startexp {
        str: ""
      }
      stopexp {
        nil: 0
      }
      stepexp {
        number: -0
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 39
                }
                startexp {
                  prefixexp {
                    var {
                      name {
                        name: ""
                        num: 1048576
                      }
                    }
                  }
                }
                stopexp {
                  binary {
                    leftexp {
                    }
                    binop {
                    }
                    rightexp {
                      prefixexp {
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              list {
                varlist {
                  var {
                    indexname {
                      prefixexp {
                      }
                      Name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                    }
                  }
                  vars {
                    name {
                      name: ""
                      num: 4
                    }
                  }
                  vars {
                  }
                }
                explist {
                  expressions {
                  }
                  expressions {
                    prefixexp {
                      functioncall {
                      }
                    }
                  }
                  expressions {
                    tableconstructor {
                    }
                  }
                  explast {
                    ellipsis: ""
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  laststat {
    break: 0
  }
}
