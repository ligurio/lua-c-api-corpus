chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: "counter_+"
          num: 0
        }
        names {
          name: "\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032"
          num: 0
        }
      }
      explist {
        explast {
          number: -34
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: "counter_+"
                  num: 0
                }
                names {
                  name: "\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032"
                  num: 0
                }
              }
              explist {
                explast {
                  number: -34
                }
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                explast {
                  binary {
                    leftexp {
                    }
                    binop {
                      add: 2
                    }
                    rightexp {
                      binary {
                        leftexp {
                          prefixexp {
                          }
                        }
                        binop {
                          mult: 0
                        }
                        rightexp {
                          binary {
                            leftexp {
                              prefixexp {
                              }
                            }
                            binop {
                              concat: 1684957542
                            }
                            rightexp {
                              unary {
                                unop {
                                  length: 0
                                }
                                exp {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            whilecycle {
              condition {
              }
              doblock {
                block {
                  chunk {
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                          }
                        }
                        condition {
                          function {
                            body {
                              parlist {
                                namelist {
                                  namelist {
                                    firstname {
                                      name: ""
                                      num: 0
                                    }
                                  }
                                  ellipsis: ""
                                }
                              }
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    laststat {
                      semicolon: true
                    }
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                prefixexp {
                }
              }
              binop {
                concat: 2105376
              }
              rightexp {
                unary {
                  unop {
                    length: 2105376
                  }
                  exp {
                  }
                }
              }
            }
          }
          binop {
            equal: 2105376
          }
          rightexp {
            number: -34
          }
        }
      }
    }
    semicolon: false
  }
}
