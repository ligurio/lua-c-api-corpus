chunk {
  stat {
    block {
      block {
        chunk {
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  laststat {
                    explist {
                      explist {
                        expressions {
                          nil: 603979776
                        }
                        explast {
                        }
                      }
                    }
                  }
                }
              }
              condition {
                prefixexp {
                  var {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        nil: 5
      }
    }
  }
  stat {
    list {
      varlist {
        var {
          indexname {
            prefixexp {
            }
            Name: "__bxor"
          }
        }
      }
      explist {
        explast {
          ellipsis: "-"
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        parlist {
          namelist {
            namelist {
              firstname {
                name: "xpcall"
                num: 0
              }
              names {
                name: ""
                num: 12800
              }
            }
          }
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: "\',8<\'8"
                  num: 6513008
                }
                names {
                  name: "counter_8"
                  num: 0
                }
                names {
                  name: ""
                  num: 0
                }
              }
              explist {
                expressions {
                }
                explast {
                  number: -709.375
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          laststat {
                            semicolon: true
                          }
                        }
                      }
                      condition {
                        prefixexp {
                          var {
                            indexexpr {
                              prefixexp {
                                exp {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        expression {
                                          prefixexp {
                                            functioncall {
                                              prefArgs {
                                                prefixexp {
                                                  exp {
                                                    binary {
                                                      leftexp {
                                                      }
                                                      binop {
                                                        mod: 131072
                                                      }
                                                      rightexp {
                                                        number: 1.6869608407943928e+69
                                                      }
                                                    }
                                                  }
                                                }
                                                args {
                                                  str: "\'&~33~33333333.+\'"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      fields {
                                        field {
                                        }
                                        sep {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              exp {
                                number: -709.375
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              condition {
                prefixexp {
                  var {
                  }
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  laststat {
                    semicolon: true
                  }
                }
              }
              condition {
                nil: 1
              }
            }
            semicolon: true
          }
          laststat {
            break: 2048
            semicolon: false
          }
        }
      }
      condition {
        number: -709.375
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
      condition {
        nil: 1
      }
    }
  }
  stat {
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        parlist {
          namelist {
            namelist {
              firstname {
                name: "\371"
                num: 0
              }
              names {
                name: ""
                num: 12800
              }
            }
          }
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 5
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          ellipsis: "-"
        }
      }
    }
  }
  stat {
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "xpcall"
              num: 0
            }
          }
        }
        args {
          explist {
            explist {
              expressions {
                function {
                  body {
                    parlist {
                      namelist {
                        namelist {
                          firstname {
                            name: ""
                            num: 0
                          }
                          names {
                            name: ""
                            num: 2097152
                          }
                        }
                      }
                    }
                    block {
                      chunk {
                        stat {
                          localnames {
                            namelist {
                              firstname {
                                name: ""
                                num: 0
                              }
                              names {
                                name: "\371"
                                num: 0
                              }
                            }
                          }
                        }
                        stat {
                          list {
                            varlist {
                              var {
                              }
                            }
                            explist {
                              expressions {
                                binary {
                                  leftexp {
                                    str: "\',8<\'8"
                                  }
                                  binop {
                                  }
                                  rightexp {
                                  }
                                }
                              }
                              expressions {
                              }
                              explast {
                                tableconstructor {
                                  fieldlist {
                                    firstField {
                                      exprassign {
                                        key {
                                          unary {
                                            unop {
                                            }
                                            exp {
                                              tableconstructor {
                                                fieldlist {
                                                  firstField {
                                                  }
                                                  lastSep {
                                                    comma: 48
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        value {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              expressions {
                prefixexp {
                  var {
                    name {
                      name: "select"
                      num: 0
                    }
                  }
                }
              }
              explast {
                tableconstructor {
                }
              }
            }
          }
        }
      }
    }
  }
}
