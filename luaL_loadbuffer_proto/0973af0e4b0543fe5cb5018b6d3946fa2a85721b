chunk {
  stat {
    forcyclename {
      name {
        name: "\'string.byte"
        num: 2097152000
      }
      startexp {
        binary {
          leftexp {
            str: "\'<mathn<7<pack<7<\'<9"
          }
          binop {
            concat: 48384
          }
          rightexp {
            str: " \001\000\000\000\000\000\000\026"
          }
        }
      }
      stopexp {
        binary {
          leftexp {
            number: 27262976
          }
          binop {
            concat: 48384
          }
          rightexp {
            str: " \001\000\000\000\000\000\000\026"
          }
        }
      }
      stepexp {
        number: 27262976
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "load"
              num: 0
            }
          }
        }
        args {
          explist {
            explist {
              explast {
                function {
                  body {
                    parlist {
                      namelist {
                        namelist {
                          firstname {
                            name: ""
                            num: 0
                          }
                        }
                      }
                    }
                    block {
                      chunk {
                        stat {
                          repeatcycle {
                            block {
                              chunk {
                                stat {
                                  call {
                                    prefArgs {
                                      prefixexp {
                                        var {
                                          name {
                                            name: "load"
                                            num: 0
                                          }
                                        }
                                      }
                                      args {
                                        explist {
                                          explist {
                                            explast {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  semicolon: true
                                }
                              }
                            }
                            condition {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      binary {
                                        leftexp {
                                        }
                                        binop {
                                        }
                                        rightexp {
                                        }
                                      }
                                    }
                                    binop {
                                      div: 0
                                    }
                                    rightexp {
                                      nil: 538976260
                                    }
                                  }
                                }
                                binop {
                                }
                                rightexp {
                                  str: "\'~os.date\'"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
              prefArgs {
                prefixexp {
                  var {
                    name {
                      name: "load"
                      num: 0
                    }
                  }
                }
                args {
                  explist {
                    explist {
                      explast {
                        function {
                          body {
                            parlist {
                              namelist {
                                namelist {
                                  firstname {
                                    name: ""
                                    num: 0
                                  }
                                }
                              }
                            }
                            block {
                              chunk {
                                stat {
                                  repeatcycle {
                                    block {
                                      chunk {
                                        stat {
                                          call {
                                            prefArgs {
                                              prefixexp {
                                                var {
                                                  name {
                                                    name: "load"
                                                    num: 0
                                                  }
                                                }
                                              }
                                              args {
                                                explist {
                                                  explist {
                                                    explast {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          semicolon: true
                                        }
                                      }
                                    }
                                    condition {
                                      binary {
                                        leftexp {
                                          binary {
                                            leftexp {
                                              binary {
                                                leftexp {
                                                }
                                                binop {
                                                }
                                                rightexp {
                                                }
                                              }
                                            }
                                            binop {
                                              div: 0
                                            }
                                            rightexp {
                                              nil: 538976260
                                            }
                                          }
                                        }
                                        binop {
                                        }
                                        rightexp {
                                          str: "\'~os.date\'"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                unary {
                                  unop {
                                  }
                                  exp {
                                  }
                                }
                              }
                              binop {
                                concat: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        str: "#"
                                      }
                                      binop {
                                        concat: 0
                                      }
                                      rightexp {
                                      }
                                    }
                                  }
                                  binop {
                                    less: 0
                                  }
                                  rightexp {
                                  }
                                }
                              }
                            }
                          }
                          binop {
                            concat: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                                tableconstructor {
                                  fieldlist {
                                    firstField {
                                      namedassign {
                                        name {
                                          name: ""
                                          num: 0
                                        }
                                        value {
                                          binary {
                                            leftexp {
                                            }
                                            binop {
                                              div: 0
                                            }
                                            rightexp {
                                            }
                                          }
                                        }
                                      }
                                    }
                                    fields {
                                      field {
                                        namedassign {
                                          name {
                                            name: ""
                                            num: 0
                                          }
                                          value {
                                          }
                                        }
                                      }
                                      sep {
                                      }
                                    }
                                    fields {
                                      field {
                                        expression {
                                          binary {
                                            leftexp {
                                            }
                                            binop {
                                              or: 0
                                            }
                                            rightexp {
                                            }
                                          }
                                        }
                                      }
                                      sep {
                                        comma: 6488064
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                exp: 67108864
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        nil: 0
                      }
                    }
                  }
                  binop {
                  }
                  rightexp {
                  }
                }
              }
              binop {
                div: 0
              }
              rightexp {
                nil: 538976260
              }
            }
          }
          binop {
          }
          rightexp {
            str: "\'~os.date\'"
          }
        }
      }
    }
  }
  laststat {
    break: 0
    semicolon: false
  }
}
