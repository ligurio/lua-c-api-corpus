chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
          }
          binop {
            concat: 537558304
          }
          rightexp {
            binary {
              leftexp {
                number: -4.9591064453125e-05
              }
              binop {
                less: 4
              }
              rightexp {
                binary {
                  leftexp {
                    number: -4.9591064453125e-05
                  }
                  binop {
                    concat: 4
                  }
                  rightexp {
                    number: -2
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    block {
      block {
        chunk {
          laststat {
            explist {
              explist {
                explast {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            stat {
              block {
                block {
                  chunk {
                  }
                }
              }
            }
            stat {
              func {
                name {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                body {
                  block {
                    chunk {
                      laststat {
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              func {
                name {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                body {
                  parlist {
                    ellipsis: "\001\000\000\000\000\000\0009"
                  }
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              block {
                block {
                  chunk {
                    laststat {
                      explist {
                        explist {
                          explast {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              localfunc {
                name {
                  name: ""
                  num: 0
                }
                funcbody {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                number: -2
              }
              binop {
                div: 4
              }
              rightexp {
                number: -2.5
              }
            }
          }
          binop {
            div: 536879104
          }
          rightexp {
            binary {
              leftexp {
                number: -4.9591064453125e-05
              }
              binop {
                less: 4
              }
              rightexp {
                binary {
                  leftexp {
                    number: -4.9591064453125e-05
                  }
                  binop {
                    concat: 4
                  }
                  rightexp {
                    number: -2
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    block {
      block {
        chunk {
          laststat {
            explist {
              explist {
                explast {
                }
              }
            }
          }
        }
      }
    }
  }
  laststat {
    semicolon: true
  }
}
