chunk {
  stat {
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          prefixexp {
            functioncall {
            }
          }
        }
        expressions {
          true: 0
        }
        explast {
          prefixexp {
            functioncall {
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                    list {
                      varlist {
                        var {
                        }
                      }
                      explist {
                        expressions {
                          prefixexp {
                            functioncall {
                            }
                          }
                        }
                        expressions {
                        }
                        explast {
                          prefixexp {
                            functioncall {
                            }
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                  stat {
                    forcyclename {
                      name {
                        name: "-"
                        num: 0
                      }
                      startexp {
                      }
                      stopexp {
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
    semicolon: true
  }
  laststat {
    break: 0
    semicolon: true
  }
}
