chunk {
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
              }
              lastSep {
                semicolon: 2304
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 0
        }
        args {
          str: "\003\000\000\000\000\000\000\000"
        }
      }
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
    semicolon: false
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  explast {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                          }
                          binop {
                            concat: 65536
                          }
                          rightexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    number: -4.9591064453125e-05
                                  }
                                  binop {
                                    div: 0
                                  }
                                  rightexp {
                                    number: -4.9591064453125e-05
                                  }
                                }
                              }
                              binop {
                                div: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        str: "warn"
                                      }
                                      binop {
                                        and: 0
                                      }
                                      rightexp {
                                        number: 1.4917136690365562e-154
                                      }
                                    }
                                  }
                                  binop {
                                    div: 0
                                  }
                                  rightexp {
                                    number: -4.9591064453125e-05
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      binop {
                        div: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        number: -4.9591064453125e-05
                                      }
                                      binop {
                                        div: 0
                                      }
                                      rightexp {
                                        number: -4.9591064453125e-05
                                      }
                                    }
                                  }
                                  binop {
                                    div: 0
                                  }
                                  rightexp {
                                    number: -4.9591064453125e-05
                                  }
                                }
                              }
                              binop {
                                or: 13312
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        number: -4.9591064453125e-05
                                      }
                                      binop {
                                        div: 0
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                            tableconstructor {
                                              fieldlist {
                                                firstField {
                                                  exprassign {
                                                    key {
                                                    }
                                                    value {
                                                      str: ":"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          binop {
                                          }
                                          rightexp {
                                            tableconstructor {
                                              fieldlist {
                                                firstField {
                                                }
                                                lastSep {
                                                  semicolon: 13312
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                    div: 0
                                  }
                                  rightexp {
                                    number: -4.9591064453125e-05
                                  }
                                }
                              }
                            }
                          }
                          binop {
                            div: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    number: -4.9591064453125e-05
                                  }
                                  binop {
                                    div: 0
                                  }
                                  rightexp {
                                    number: -4.9591064453125e-05
                                  }
                                }
                              }
                              binop {
                                div: 0
                              }
                              rightexp {
                                number: -4.9591064453125e-05
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 0
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
                expression {
                  prefixexp {
                    var {
                      indexexpr {
                        prefixexp {
                          functioncall {
                            namedArgs {
                              prefixexp {
                              }
                              name {
                                name: "\000\000\000\000\000"
                                num: 0
                              }
                              args {
                              }
                            }
                          }
                        }
                        exp {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: false
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    list {
      varlist {
        var {
          indexexpr {
            prefixexp {
            }
            exp {
              tableconstructor {
                fieldlist {
                  firstField {
                    expression {
                      true: 3
                    }
                  }
                  lastSep {
                    comma: 1048576
                  }
                }
              }
            }
          }
        }
      }
      explist {
        explast {
          tableconstructor {
            fieldlist {
              firstField {
                expression {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          ellipsis: ""
                        }
                      }
                      fields {
                        field {
                          expression {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  expression {
                                    true: 3
                                  }
                                }
                              }
                            }
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          expression {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  expression {
                                  }
                                }
                                fields {
                                  field {
                                    expression {
                                      str: "\322"
                                    }
                                  }
                                  sep {
                                  }
                                }
                              }
                            }
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
              }
              fields {
                field {
                }
                sep {
                }
              }
              fields {
                field {
                  expression {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          expression {
                            true: 3
                          }
                        }
                        fields {
                          field {
                            expression {
                              binary {
                                leftexp {
                                }
                                binop {
                                  mult: 67108864
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                          sep {
                          }
                        }
                      }
                    }
                  }
                }
                sep {
                }
              }
              fields {
                field {
                  expression {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          expression {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  expression {
                                    tableconstructor {
                                      fieldlist {
                                        firstField {
                                          expression {
                                          }
                                        }
                                        fields {
                                          field {
                                            expression {
                                              tableconstructor {
                                                fieldlist {
                                                  firstField {
                                                    expression {
                                                      true: 3
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          sep {
                                          }
                                        }
                                        fields {
                                          field {
                                            expression {
                                              ellipsis: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
                                            }
                                          }
                                          sep {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  field {
                                    expression {
                                    }
                                  }
                                  sep {
                                  }
                                }
                                fields {
                                  field {
                                    expression {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                            expression {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  sep {
                                  }
                                }
                                fields {
                                  field {
                                    expression {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                            expression {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  sep {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                sep {
                  semicolon: 6488064
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: ""
          }
        }
      }
      explist {
        expressions {
          function {
            body {
              parlist {
                namelist {
                  namelist {
                    firstname {
                      name: "\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005"
                      num: 0
                    }
                  }
                  ellipsis: "\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005\005"
                }
              }
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          prefixexp {
          }
        }
      }
    }
    semicolon: false
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
          name {
            name: ""
            num: 256
          }
        }
      }
      explist {
        explast {
          number: 0
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          exp {
            number: 0
          }
        }
        args {
        }
      }
    }
    semicolon: false
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  laststat {
    semicolon: true
  }
}
