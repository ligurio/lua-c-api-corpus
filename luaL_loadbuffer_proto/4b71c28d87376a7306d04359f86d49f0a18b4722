chunk {
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        binary {
                                          leftexp {
                                            prefixexp {
                                            }
                                          }
                                          binop {
                                            mult: 16385
                                          }
                                          rightexp {
                                            str: "\'-8<table.pack\'\'/8<\'<8<8"
                                          }
                                        }
                                      }
                                      binop {
                                      }
                                      rightexp {
                                        str: "\'-8<table.pack\'\'/8<\'<8<8"
                                      }
                                    }
                                  }
                                  binop {
                                    equal: 0
                                  }
                                  rightexp {
                                    str: "\'-8<table.pack\'\'/8<\'<8<8"
                                  }
                                }
                              }
                              binop {
                                greater: 1970102111
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        str: "HHHHHHHHHHHHHHHHHHHHHHHHHHHHH"
                                      }
                                      binop {
                                        equal: 0
                                      }
                                      rightexp {
                                        str: "\'-8<table.pack\'\'/8<\'<8<8"
                                      }
                                    }
                                  }
                                  binop {
                                    div: 0
                                  }
                                  rightexp {
                                    str: "\'-8<table.pack\'\'/8<\'<8<8"
                                  }
                                }
                              }
                            }
                          }
                          binop {
                            mult: 16385
                          }
                          rightexp {
                            str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                          }
                        }
                      }
                      binop {
                        lessEqual: 16426
                      }
                      rightexp {
                        str: "\'-8<table.pack\'\'/8<\'<8<8"
                      }
                    }
                  }
                  binop {
                    notEqual: 3080192
                  }
                  rightexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            str: "\'-8<table.pack\'\'/8<\'<8<8"
                          }
                          binop {
                          }
                          rightexp {
                            str: "\'-8<table.pack\'\'/8<\'<8<8"
                          }
                        }
                      }
                      binop {
                        div: 0
                      }
                      rightexp {
                        str: "\'-8<table.pack\'\'/8<\'<8<8"
                      }
                    }
                  }
                }
              }
              binop {
                mult: 16385
              }
              rightexp {
                str: "HHHHHHHHHHHHHHHHHHHHHHHHHHHHH"
              }
            }
          }
          binop {
            lessEqual: 16385
          }
          rightexp {
            str: "\'-8<table.pack\'\'/8<\'<8<8"
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: "_ENV"
        num: 4177526800
      }
      startexp {
        number: 7.3528075193188562e+223
      }
      stopexp {
        number: -1.6122275479153505e+265
      }
      stepexp {
        unary {
          unop {
            negate: 0
          }
          exp {
            str: "6"
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                    indexname {
                      prefixexp {
                        exp {
                          number: 0
                        }
                      }
                      Name: ""
                    }
                  }
                }
                explist {
                  expressions {
                    binary {
                      leftexp {
                        nil: 2752512
                      }
                      binop {
                      }
                      rightexp {
                        binary {
                          leftexp {
                            str: "\'%8<<\'<9"
                          }
                          binop {
                            mod: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                                str: "\'-666&33332/\'<8<8"
                              }
                              binop {
                                mod: 0
                              }
                              rightexp {
                                number: -424
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  expressions {
                    true: 4294901756
                  }
                  explast {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            nil: 2752512
                          }
                          binop {
                          }
                          rightexp {
                            binary {
                              leftexp {
                                str: "\'%8<<\'<9"
                              }
                              binop {
                                mod: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    str: "\'%8<<\'<9"
                                  }
                                  binop {
                                    mod: 0
                                  }
                                  rightexp {
                                    binary {
                                      leftexp {
                                        binary {
                                          leftexp {
                                            nil: 2752512
                                          }
                                          binop {
                                          }
                                          rightexp {
                                            binary {
                                              leftexp {
                                                str: "\'%8<<\'<9"
                                              }
                                              binop {
                                                mult: 2752512
                                              }
                                              rightexp {
                                                binary {
                                                  leftexp {
                                                    str: "\'%8<<\'<9"
                                                  }
                                                  binop {
                                                    mod: 0
                                                  }
                                                  rightexp {
                                                    binary {
                                                      leftexp {
                                                      }
                                                      binop {
                                                      }
                                                      rightexp {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      binop {
                                        greater: 0
                                      }
                                      rightexp {
                                        str: "["
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      binop {
                        greater: 0
                      }
                      rightexp {
                        str: "["
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
}
