chunk {
  stat {
    forcyclename {
      name {
        name: "\\001\\010"
        num: 0
      }
      startexp {
        binary {
          leftexp {
            number: 5.69358099402926e-311
          }
          binop {
            or: 0
          }
          rightexp {
            true: 0
          }
        }
      }
      stopexp {
        number: 26.000000603497028
      }
      doblock {
        block {
          chunk {
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              forcyclename {
                name {
                  name: "\\001\\010"
                  num: 0
                }
                startexp {
                  unary {
                    unop {
                      length: 33
                    }
                    exp {
                    }
                  }
                }
                stopexp {
                  prefixexp {
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                    stat {
                      ifstat {
                        condition {
                        }
                        first {
                          chunk {
                          }
                        }
                      }
                    }
                    stat {
                      forcyclename {
                        name {
                          name: "\\001\\010"
                          num: 8192
                        }
                        startexp {
                          unary {
                            unop {
                              length: 33
                            }
                            exp {
                            }
                          }
                        }
                        stopexp {
                          prefixexp {
                          }
                        }
                        doblock {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                    stat {
                      ifstat {
                        condition {
                        }
                        first {
                          chunk {
                          }
                        }
                      }
                      semicolon: true
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
  laststat {
    semicolon: true
  }
}
