chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            unary {
              unop {
                length: 0
              }
              exp {
                str: "__________\376_"
              }
            }
          }
          binop {
            mult: 0
          }
          rightexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    ellipsis: "\'%8<<\'<9"
                  }
                  binop {
                    mod: 0
                  }
                  rightexp {
                    str: "\'%8<<debug.getlocal\'<9"
                  }
                }
              }
              binop {
              }
              rightexp {
                str: "\'&~packqge.ioeload\'"
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              block {
                block {
                  chunk {
                    laststat {
                    }
                  }
                }
              }
            }
            stat {
              block {
                block {
                  chunk {
                    laststat {
                      break: 134219008
                    }
                  }
                }
              }
            }
            stat {
            }
            stat {
              localfunc {
                name {
                  name: ""
                  num: 0
                }
                funcbody {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
              }
              binop {
                exp: 0
              }
              rightexp {
              }
            }
          }
          binop {
            exp: 0
          }
          rightexp {
            binary {
              leftexp {
              }
              binop {
                exp: 0
              }
              rightexp {
              }
            }
          }
        }
      }
      first {
        chunk {
        }
      }
    }
  }
}
