chunk {
  stat {
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 4
      }
      startexp {
      }
      stopexp {
        unary {
          unop {
          }
          exp {
            binary {
              leftexp {
                binary {
                  leftexp {
                  }
                  binop {
                    concat: 3801088
                  }
                  rightexp {
                    number: 416.00000000074215
                  }
                }
              }
              binop {
                concat: 538970624
              }
              rightexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        number: 2
                      }
                    }
                  }
                  binop {
                  }
                  rightexp {
                    binary {
                      leftexp {
                        number: 416
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        number: 416
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      stepexp {
        number: -0
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  expressions {
                    prefixexp {
                    }
                  }
                  explast {
                    tableconstructor {
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
}
