chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        prefixexp {
        }
      }
    }
    semicolon: false
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
        }
      }
    }
    semicolon: false
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        false: 0
                      }
                    }
                    semicolon: false
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        prefixexp {
                        }
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                prefixexp {
                                }
                              }
                            }
                            semicolon: true
                          }
                        }
                      }
                      condition {
                        prefixexp {
                        }
                      }
                    }
                  }
                }
              }
              condition {
              }
            }
            semicolon: false
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                prefixexp {
                }
              }
            }
            semicolon: true
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
            semicolon: true
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                prefixexp {
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        prefixexp {
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            ifstat {
              condition {
                tableconstructor {
                  fieldlist {
                    firstField {
                      namedassign {
                        name {
                          name: "\""
                          num: 0
                        }
                        value {
                        }
                      }
                    }
                  }
                }
              }
              first {
                chunk {
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        prefixexp {
        }
      }
    }
    semicolon: false
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
          laststat {
            explist {
              explist {
                expressions {
                  false: 0
                }
                explast {
                  prefixexp {
                    functioncall {
                      namedArgs {
                        prefixexp {
                          var {
                            indexexpr {
                              prefixexp {
                              }
                              exp {
                                prefixexp {
                                  var {
                                    indexexpr {
                                      prefixexp {
                                      }
                                      exp {
                                        prefixexp {
                                          var {
                                            indexexpr {
                                              prefixexp {
                                              }
                                              exp {
                                                prefixexp {
                                                  var {
                                                    indexexpr {
                                                      prefixexp {
                                                      }
                                                      exp {
                                                        prefixexp {
                                                          var {
                                                            indexexpr {
                                                              prefixexp {
                                                              }
                                                              exp {
                                                                prefixexp {
                                                                  var {
                                                                    indexexpr {
                                                                      prefixexp {
                                                                      }
                                                                      exp {
                                                                        prefixexp {
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        name {
                          name: ")"
                          num: 0
                        }
                        args {
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: false
          }
        }
      }
      condition {
        prefixexp {
        }
      }
    }
  }
}
