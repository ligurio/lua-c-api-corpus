chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                  indexname {
                    prefixexp {
                      var {
                        indexexpr {
                          prefixexp {
                            exp {
                              true: 141
                            }
                          }
                          exp {
                          }
                        }
                      }
                    }
                    Name: "crea"
                  }
                }
                vars {
                  name {
                    name: ""
                    num: 0
                  }
                }
              }
              explist {
                expressions {
                  number: 6.63123684676648e-316
                }
                expressions {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                          str: "\'"
                        }
                      }
                    }
                  }
                }
                expressions {
                  binary {
                    leftexp {
                      ellipsis: ""
                    }
                    binop {
                      greaterEqual: 48
                    }
                    rightexp {
                      true: 8224
                    }
                  }
                }
                expressions {
                  unary {
                    unop {
                    }
                    exp {
                      nil: 4
                    }
                  }
                }
                expressions {
                  tableconstructor {
                  }
                }
                expressions {
                }
                expressions {
                }
                expressions {
                  binary {
                    leftexp {
                    }
                    binop {
                    }
                    rightexp {
                      nil: 0
                    }
                  }
                }
                expressions {
                  unary {
                    unop {
                    }
                    exp {
                      nil: 4
                    }
                  }
                }
                expressions {
                  str: "debug.traceback"
                }
                explast {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                          str: "\'"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                  }
                  stat {
                    semicolon: true
                  }
                  laststat {
                  }
                }
              }
              condition {
                ellipsis: "\362"
              }
            }
          }
        }
      }
      condition {
        nil: 0
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
          stat {
            semicolon: true
          }
          laststat {
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                  }
                  binop {
                    greaterEqual: 23808
                  }
                  rightexp {
                  }
                }
              }
              binop {
                notEqual: 1818848768
              }
              rightexp {
                str: "\'<mathn<7<pack<7<\'<      }\n                          binop {\n                          }\n           9"
              }
            }
          }
          binop {
          }
          rightexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                      }
                      binop {
                        greaterEqual: 23808
                      }
                      rightexp {
                      }
                    }
                  }
                  binop {
                    notEqual: 1818848768
                  }
                  rightexp {
                    str: "\'<mathn<7<pack<7<\'<      }\n                          binop {\n                          }\n           9"
                  }
                }
              }
              binop {
              }
              rightexp {
                binary {
                  leftexp {
                  }
                  binop {
                  }
                  rightexp {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
