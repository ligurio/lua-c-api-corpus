chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            unary {
              unop {
              }
              exp {
                str: "\'<8<<\'<9"
              }
            }
          }
          binop {
            mod: 12582144
          }
          rightexp {
            binary {
              leftexp {
                true: 0
              }
              binop {
                sub: 2304
              }
              rightexp {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  binary {
                    leftexp {
                      unary {
                        unop {
                        }
                        exp {
                          str: "\'<8<<\'<9"
                        }
                      }
                    }
                    binop {
                      mod: 12582144
                    }
                    rightexp {
                      binary {
                        leftexp {
                          true: 0
                        }
                        binop {
                          sub: 2304
                        }
                        rightexp {
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      laststat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  laststat {
  }
}
