chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        prefixexp {
          var {
            indexexpr {
              prefixexp {
                exp {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          nil: 0
                        }
                      }
                    }
                  }
                }
              }
              exp {
                binary {
                  leftexp {
                    prefixexp {
                    }
                  }
                  binop {
                    div: 33619968
                  }
                  rightexp {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 31232
      }
      startexp {
      }
      stopexp {
        binary {
          leftexp {
            number: 416
          }
          binop {
            mult: 0
          }
          rightexp {
            binary {
              leftexp {
                ellipsis: ";"
              }
              binop {
                mult: 0
              }
              rightexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                      }
                      binop {
                        mult: 2
                      }
                      rightexp {
                      }
                    }
                  }
                  binop {
                    div: 0
                  }
                  rightexp {
                    str: "\'|os.date\'"
                  }
                }
              }
            }
          }
        }
      }
      stepexp {
        unary {
          unop {
            negate: 8224
          }
          exp {
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
