chunk {
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    block {
      block {
        chunk {
          stat {
            forcyclename {
              name {
                name: ""
                num: 0
              }
              startexp {
                number: -468.75
              }
              stopexp {
                prefixexp {
                  exp {
                    binary {
                      leftexp {
                      }
                      binop {
                        and: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                            number: 358.08969533209165
                          }
                          binop {
                            and: 4294901759
                          }
                          rightexp {
                            number: 118.78498777467757
                          }
                        }
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    laststat {
                      semicolon: true
                    }
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 0
              }
              startexp {
                number: -468.75
              }
              stopexp {
                prefixexp {
                  exp {
                    binary {
                      leftexp {
                        number: 0
                      }
                      binop {
                        or: 2
                      }
                      rightexp {
                        binary {
                          leftexp {
                          }
                          binop {
                            or: 2
                          }
                          rightexp {
                            prefixexp {
                              exp {
                                tableconstructor {
                                  fieldlist {
                                    firstField {
                                      exprassign {
                                        key {
                                        }
                                        value {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                                exprassign {
                                                  key {
                                                    prefixexp {
                                                      functioncall {
                                                      }
                                                    }
                                                  }
                                                  value {
                                                  }
                                                }
                                              }
                                              fields {
                                                field {
                                                  expression {
                                                    false: 0
                                                  }
                                                }
                                                sep {
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    fields {
                                      field {
                                        expression {
                                          false: 0
                                        }
                                      }
                                      sep {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      semicolon: true
                    }
                    laststat {
                      semicolon: false
                    }
                  }
                }
              }
            }
          }
          laststat {
            semicolon: true
          }
        }
      }
    }
  }
  stat {
    block {
      block {
        chunk {
          stat {
            forcyclename {
              name {
                name: ""
                num: 0
              }
              startexp {
                number: -468.75
              }
              stopexp {
                prefixexp {
                  exp {
                    binary {
                      leftexp {
                        number: 1.25215997282006e-319
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                            prefixexp {
                              exp {
                                binary {
                                  leftexp {
                                  }
                                  binop {
                                    and: 0
                                  }
                                  rightexp {
                                    binary {
                                      leftexp {
                                        number: 358.08969533209165
                                      }
                                      binop {
                                        and: 4294901759
                                      }
                                      rightexp {
                                        number: 118.78498777467757
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          binop {
                            or: 2
                          }
                          rightexp {
                            prefixexp {
                              exp {
                                tableconstructor {
                                  fieldlist {
                                    firstField {
                                    }
                                    fields {
                                      field {
                                        namedassign {
                                          name {
                                            name: ""
                                            num: 654311424
                                          }
                                          value {
                                            ellipsis: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                                          }
                                        }
                                      }
                                      sep {
                                        comma: 603979776
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    laststat {
                      semicolon: true
                    }
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 0
              }
              startexp {
                number: -468.75
              }
              stopexp {
                prefixexp {
                  exp {
                    binary {
                      leftexp {
                        number: 0
                      }
                      binop {
                        or: 2
                      }
                      rightexp {
                        binary {
                          leftexp {
                          }
                          binop {
                            or: 2
                          }
                          rightexp {
                            prefixexp {
                              exp {
                                tableconstructor {
                                  fieldlist {
                                    firstField {
                                      exprassign {
                                        key {
                                        }
                                        value {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                                exprassign {
                                                  key {
                                                    prefixexp {
                                                      functioncall {
                                                      }
                                                    }
                                                  }
                                                  value {
                                                  }
                                                }
                                              }
                                              fields {
                                                field {
                                                  expression {
                                                    false: 0
                                                  }
                                                }
                                                sep {
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    fields {
                                      field {
                                        expression {
                                          false: 0
                                        }
                                      }
                                      sep {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      semicolon: true
                    }
                    laststat {
                      explist {
                        explist {
                          explast {
                            nil: 0
                          }
                        }
                      }
                      semicolon: false
                    }
                  }
                }
              }
            }
          }
          laststat {
            semicolon: true
          }
        }
      }
    }
  }
}
