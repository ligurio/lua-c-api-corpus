chunk {
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                str: "\'-8<table.pack\'\'/8<\'<8<8"
              }
              binop {
                lessEqual: 2099257344
              }
              rightexp {
                binary {
                  leftexp {
                    str: "\'-8<table.pack\'\'/8<\'<8<8"
                  }
                  binop {
                    div: 0
                  }
                  rightexp {
                    str: "\'-8<table.pack\'\'/8<\'<8<8"
                  }
                }
              }
            }
          }
          binop {
            div: 0
          }
          rightexp {
            str: "\'-8<table.pack\'\'/8<\'<8<8"
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            semicolon: true
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        str: "\'-8<table.pack\'\'/8<\'<8<8"
                      }
                      binop {
                        lessEqual: 2099257344
                      }
                      rightexp {
                        binary {
                          leftexp {
                            str: "\'-8<table.pack\'\'/8<\'<8<8"
                          }
                          binop {
                            div: 0
                          }
                          rightexp {
                            str: "\'-8<table.pack\'\'/8<\'<8<8"
                          }
                        }
                      }
                    }
                  }
                  binop {
                    div: 0
                  }
                  rightexp {
                    str: "\'-8<table.pack\'\'/8<\'<8<8"
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        str: "\'-8<table.pack\'\'/8<\'<8<8"
                      }
                      binop {
                        lessEqual: 2099257344
                      }
                      rightexp {
                        binary {
                          leftexp {
                            str: "\'-8<table.pack\'\'/8<\'<8<8"
                          }
                          binop {
                            div: 0
                          }
                          rightexp {
                            str: "\'-8<table.pack\'\'/8<\'<8<8"
                          }
                        }
                      }
                    }
                  }
                  binop {
                    div: 0
                  }
                  rightexp {
                    binary {
                      leftexp {
                        str: "\'-8<table.pack\'\'/8<\'<8<8"
                      }
                      binop {
                        lessEqual: 2099257344
                      }
                      rightexp {
                        binary {
                          leftexp {
                            str: "\'-8<table.pack\'\'/8<\'<8<8"
                          }
                          binop {
                            div: 0
                          }
                          rightexp {
                            str: "\'-8<table.pack\'\'/8<\'<8<8"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            semicolon: false
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                str: "\'-8<table.pack\'\'/8<\'<8<8"
              }
              binop {
                lessEqual: 2099257344
              }
              rightexp {
                binary {
                  leftexp {
                    str: "\'-8<table.pack\'\'/8<\'<8<8"
                  }
                  binop {
                    div: 0
                  }
                  rightexp {
                    str: "\'-8<table.pack\'\'/8<\'<8<8"
                  }
                }
              }
            }
          }
          binop {
            div: 0
          }
          rightexp {
            binary {
              leftexp {
                str: "\'-8<table.pack\'\'/8<\'<8<8"
              }
              binop {
                lessEqual: 2099257344
              }
              rightexp {
                binary {
                  leftexp {
                    str: "\'-8<table.pack\'\'/8<\'<8<8"
                  }
                  binop {
                    div: 0
                  }
                  rightexp {
                    str: "\'-8<table.pack\'\'/8<\'<8<8"
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: false
  }
}
