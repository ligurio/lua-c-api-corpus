chunk {
  stat {
    whilecycle {
      condition {
        str: "counter_8"
      }
      doblock {
        block {
          chunk {
            stat {
              localnames {
                namelist {
                  firstname {
                    name: "_\022\000____\376________\376_"
                    num: 0
                  }
                  names {
                    name: "counr_8"
                    num: 0
                  }
                }
              }
            }
            stat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: "\020"
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
        }
      }
      explist {
        expressions {
          number: -35651608.12500108
        }
        expressions {
          number: -35651608.12500108
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          number: -35651608.12500108
        }
        explast {
          str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
        }
      }
    }
  }
  stat {
    block {
      block {
        chunk {
          stat {
            forcyclename {
              name {
                name: "_ENV"
                num: 1701576704
              }
              startexp {
                number: 0
              }
              stopexp {
                number: -35651608.12500108
              }
              doblock {
                block {
                  chunk {
                    stat {
                      func {
                        name {
                          firstname {
                            name: "__div"
                            num: 0
                          }
                          names {
                            name: "select"
                            num: 0
                          }
                        }
                        body {
                          block {
                            chunk {
                              stat {
                                func {
                                  name {
                                    firstname {
                                      name: "__div"
                                      num: 0
                                    }
                                    lastname {
                                      name: "\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260\260"
                                      num: 0
                                    }
                                  }
                                  body {
                                    block {
                                      chunk {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    stat {
                      func {
                        name {
                          firstname {
                            name: "__div"
                            num: 0
                          }
                          names {
                            name: "_ENV"
                            num: 1701576704
                          }
                        }
                        body {
                          block {
                            chunk {
                              stat {
                                func {
                                  name {
                                    firstname {
                                      name: "__div"
                                      num: 4
                                    }
                                  }
                                  body {
                                    block {
                                      chunk {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                }
                vars {
                }
              }
              explist {
                explast {
                  nil: 0
                }
              }
            }
            semicolon: false
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    block {
      block {
        chunk {
          stat {
            call {
              prefArgs {
                prefixexp {
                  var {
                    name {
                      name: "load"
                      num: 0
                    }
                  }
                }
                args {
                  str: "l{[a"
                }
              }
            }
            semicolon: true
          }
          laststat {
            semicolon: true
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            semicolon: true
          }
          stat {
            localnames {
              namelist {
                firstname {
                  name: "_\022\000____\376________\376_"
                  num: 0
                }
                names {
                  name: "counter_8"
                  num: 0
                }
              }
              explist {
                expressions {
                }
                explast {
                  number: -35651608.12500108
                }
              }
            }
            semicolon: true
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    list {
                      varlist {
                        var {
                        }
                        vars {
                          indexexpr {
                            prefixexp {
                              exp {
                                tableconstructor {
                                  fieldlist {
                                    firstField {
                                      exprassign {
                                        key {
                                          number: 8.65266319610061e-315
                                        }
                                        value {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            exp {
                            }
                          }
                        }
                      }
                      explist {
                        expressions {
                          ellipsis: ""
                        }
                        expressions {
                          false: 8192
                        }
                        expressions {
                          str: "require"
                        }
                        expressions {
                          prefixexp {
                          }
                        }
                        explast {
                          str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
                        }
                      }
                    }
                  }
                  stat {
                    semicolon: true
                  }
                  stat {
                  }
                  stat {
                    list {
                      varlist {
                        var {
                        }
                      }
                      explist {
                        expressions {
                          binary {
                            leftexp {
                            }
                            binop {
                            }
                            rightexp {
                            }
                          }
                        }
                        explast {
                        }
                      }
                    }
                    semicolon: true
                  }
                }
              }
              condition {
                unary {
                  unop {
                  }
                  exp {
                    unary {
                      unop {
                        length: 49920
                      }
                      exp {
                        str: "__________\376_"
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
      }
    }
  }
  stat {
    ifstat {
      condition {
        unary {
          unop {
          }
          exp {
            number: -35651608.12500108
          }
        }
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
          num: 0
        }
      }
      body {
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        false: 61
      }
    }
    semicolon: false
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        expressions {
          function {
            body {
              parlist {
                ellipsis: "\375\377\377\377"
              }
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    semicolon: false
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  laststat {
  }
}
