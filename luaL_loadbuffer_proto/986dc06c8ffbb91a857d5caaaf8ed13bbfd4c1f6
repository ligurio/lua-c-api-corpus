chunk {
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
          }
          binop {
            greaterEqual: 67108864
          }
          rightexp {
          }
        }
      }
      first {
        chunk {
          stat {
            ifstat {
              condition {
                binary {
                  leftexp {
                  }
                  binop {
                    concat: 0
                  }
                  rightexp {
                    binary {
                      leftexp {
                        number: 84.000244140625
                      }
                      binop {
                        exp: 0
                      }
                      rightexp {
                        number: 84.000244140625
                      }
                    }
                  }
                }
              }
              first {
                chunk {
                  laststat {
                    break: 67108864
                  }
                }
              }
              clauses {
                condition {
                  nil: 1
                }
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
                prefixexp {
                  functioncall {
                  }
                }
              }
              first {
                chunk {
                  laststat {
                    break: 67108864
                  }
                }
              }
              clauses {
                condition {
                  nil: 65536
                }
                block {
                  chunk {
                  }
                }
              }
              last {
                chunk {
                  laststat {
                    semicolon: true
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
    }
  }
}
