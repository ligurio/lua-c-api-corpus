chunk {
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          number: -4.4610507254333492e+284
        }
        explast {
          tableconstructor {
            fieldlist {
              firstField {
                exprassign {
                  key {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                          }
                          binop {
                            add: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    number: -2.9740338169555661e+284
                                  }
                                  binop {
                                    concat: 0
                                  }
                                  rightexp {
                                    number: -4.4610507254333492e+284
                                  }
                                }
                              }
                              binop {
                                mult: 0
                              }
                              rightexp {
                                number: -2.9740338169555661e+284
                              }
                            }
                          }
                        }
                      }
                      binop {
                        add: 0
                      }
                      rightexp {
                        unary {
                          unop {
                          }
                          exp {
                            number: -2.9740338169555661e+284
                          }
                        }
                      }
                    }
                  }
                  value {
                    number: -2.9740338169555661e+284
                  }
                }
              }
              fields {
                field {
                  expression {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            number: -2.9740338169555661e+284
                          }
                          binop {
                            add: 0
                          }
                          rightexp {
                            number: -2.9740338169555661e+284
                          }
                        }
                      }
                      binop {
                        mult: 0
                      }
                      rightexp {
                        number: -2.9740338169555661e+284
                      }
                    }
                  }
                }
                sep {
                }
              }
              fields {
                field {
                }
                sep {
                }
              }
              fields {
                field {
                }
                sep {
                }
              }
              fields {
                field {
                  expression {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            number: -2.9740338169555661e+284
                          }
                          binop {
                            add: 0
                          }
                          rightexp {
                            number: -2.9740338169555661e+284
                          }
                        }
                      }
                      binop {
                        mult: 0
                      }
                      rightexp {
                        number: -2.9740338169555661e+284
                      }
                    }
                  }
                }
                sep {
                  semicolon: 4
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
          stat {
            semicolon: true
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                  stat {
                    whilecycle {
                      condition {
                        false: 2147483648
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      clauses {
        condition {
          nil: 0
        }
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      func {
                        name {
                          firstname {
                            name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                            num: 0
                          }
                        }
                        body {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                      semicolon: true
                    }
                  }
                }
                condition {
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
  }
}
