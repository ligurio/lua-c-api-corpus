chunk {
  stat {
    forcyclename {
      name {
        name: "_ENV"
        num: 0
      }
      startexp {
        prefixexp {
          functioncall {
            namedArgs {
              prefixexp {
              }
              name {
                name: ""
                num: 0
              }
              args {
              }
            }
          }
        }
      }
      stopexp {
        number: -1.6122275479153505e+265
      }
      stepexp {
        unary {
          unop {
            negate: 0
          }
          exp {
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  expressions {
                  }
                  explast {
                    binary {
                      leftexp {
                        true: 524288
                      }
                      binop {
                        greater: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                            true: 524288
                          }
                          binop {
                            notEqual: 524288
                          }
                          rightexp {
                            binary {
                              leftexp {
                              }
                              binop {
                                greaterEqual: 503316479
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              func {
                name {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                body {
                  block {
                    chunk {
                      laststat {
                        break: 255
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            laststat {
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    semicolon: true
  }
  laststat {
  }
}
