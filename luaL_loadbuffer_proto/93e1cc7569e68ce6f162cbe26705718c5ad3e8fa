chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localfunc {
              name {
                name: ""
                num: 0
              }
              funcbody {
                block {
                  chunk {
                    stat {
                      forcyclename {
                        name {
                          name: "z"
                          num: 0
                        }
                        startexp {
                          number: -6.6888713043469331e-198
                        }
                        stopexp {
                          number: 3.95252516672997e-323
                        }
                        stepexp {
                          number: -6.6888713043469331e-198
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                list {
                                  varlist {
                                    var {
                                    }
                                    vars {
                                      name {
                                        name: ""
                                        num: 15104
                                      }
                                    }
                                    vars {
                                    }
                                  }
                                  explist {
                                    expressions {
                                      false: 37
                                    }
                                    expressions {
                                    }
                                    explast {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      semicolon: true
                    }
                    stat {
                      semicolon: true
                    }
                  }
                }
              }
            }
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                }
                args {
                  explist {
                    explist {
                      expressions {
                        str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                      }
                      explast {
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            block {
              block {
                chunk {
                  laststat {
                    explist {
                      explist {
                        explast {
                          unary {
                            unop {
                            }
                            exp {
                              number: 5.9666725849601654e-154
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            semicolon: true
          }
          laststat {
            break: 0
          }
        }
      }
      condition {
        number: 0
      }
    }
  }
}
