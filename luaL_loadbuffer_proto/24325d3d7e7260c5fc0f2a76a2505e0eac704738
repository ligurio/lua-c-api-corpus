chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 127
        }
        names {
          name: "load"
          num: 0
        }
      }
      expressions {
        expressions {
          prefixexp {
            var {
              name {
                name: "pcall"
                num: 0
              }
            }
          }
        }
        explast {
          prefixexp {
            var {
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 2
                }
                startexp {
                  binary {
                    leftexp {
                      true: 2
                    }
                    binop {
                      sub: 0
                    }
                    rightexp {
                      str: "\'+8<<\'<9"
                    }
                  }
                }
                stopexp {
                  binary {
                    leftexp {
                      str: "\'+8<<\'<9"
                    }
                    binop {
                      mod: 2
                    }
                    rightexp {
                      number: 0
                    }
                  }
                }
                stepexp {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  laststat {
    semicolon: true
  }
}
