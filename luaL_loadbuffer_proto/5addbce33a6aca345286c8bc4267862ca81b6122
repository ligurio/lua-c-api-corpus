chunk {
  stat {
    list {
      varlist {
        var {
        }
        vars {
          name {
            name: ""
            num: 0
          }
        }
      }
      explist {
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
        }
        expressions {
        }
        expressions {
        }
        expressions {
          binary {
            leftexp {
              binary {
                leftexp {
                  number: -240
                }
                binop {
                  exp: 91
                }
                rightexp {
                  number: 116.95316997449845
                }
              }
            }
            binop {
              concat: 262144
            }
            rightexp {
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                  }
                }
              }
            }
          }
        }
        expressions {
        }
        expressions {
        }
        expressions {
        }
        expressions {
          binary {
            leftexp {
            }
            binop {
              concat: 7995392
            }
            rightexp {
            }
          }
        }
        expressions {
          ellipsis: "Speed"
        }
        explast {
          number: 0
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                  tableconstructor {
                  }
                }
                value {
                }
              }
            }
            fields {
              field {
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    function {
                      body {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  ellipsis
                }
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                      }
                    }
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
              }
              sep {
                comma: 8192
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    tableconstructor {
                    }
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: false
  }
}
