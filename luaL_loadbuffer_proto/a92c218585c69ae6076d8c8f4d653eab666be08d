chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: 0
      }
      stopexp {
        number: 2
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                    var {
                      indexname {
                        prefixexp {
                        }
                        Name: "dump"
                      }
                    }
                  }
                  args {
                    explist {
                      explist {
                        explast {
                          function {
                            body {
                              block {
                                chunk {
                                  stat {
                                    call {
                                      namedArgs {
                                        prefixexp {
                                        }
                                        name {
                                          name: ""
                                          num: 8
                                        }
                                        args {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                                expression {
                                                  binary {
                                                    leftexp {
                                                      number: -12
                                                    }
                                                    binop {
                                                    }
                                                    rightexp {
                                                      number: 4
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
