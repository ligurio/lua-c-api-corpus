chunk {
  stat {
    semicolon: false
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                  var {
                    name {
                      name: "xpcall"
                      num: 0
                    }
                  }
                }
                args {
                  explist {
                    explist {
                      expressions {
                        function {
                          body {
                            parlist {
                              ellipsis: "load"
                            }
                            block {
                              chunk {
                                laststat {
                                  explist {
                                    explist {
                                      expressions {
                                        binary {
                                          leftexp {
                                            nil: 536870912
                                          }
                                          binop {
                                            mod: 0
                                          }
                                          rightexp {
                                          }
                                        }
                                      }
                                      expressions {
                                        number: 1.4171748506891515e+190
                                      }
                                      explast {
                                        str: "\252"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      explast {
                        function {
                          body {
                            parlist {
                              ellipsis: "load"
                            }
                            block {
                              chunk {
                                laststat {
                                  explist {
                                    explist {
                                      expressions {
                                        binary {
                                          leftexp {
                                            binary {
                                              leftexp {
                                                false: 0
                                              }
                                              binop {
                                                and: 16
                                              }
                                              rightexp {
                                                binary {
                                                  leftexp {
                                                    binary {
                                                      leftexp {
                                                        unary {
                                                          unop {
                                                          }
                                                          exp {
                                                          }
                                                        }
                                                      }
                                                      binop {
                                                        and: 21
                                                      }
                                                      rightexp {
                                                        number: 2.65249473870659e-315
                                                      }
                                                    }
                                                  }
                                                  binop {
                                                    add: 0
                                                  }
                                                  rightexp {
                                                    str: "\'&~33~33333*333.+\'"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          binop {
                                            mod: 0
                                          }
                                          rightexp {
                                          }
                                        }
                                      }
                                      explast {
                                        str: "\252"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: false
          }
          stat {
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                  var {
                    name {
                      name: "load"
                      num: 0
                    }
                  }
                }
                args {
                  explist {
                  }
                }
              }
            }
          }
          stat {
            block {
              block {
                chunk {
                  stat {
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                      prefArgs {
                        prefixexp {
                          var {
                            indexname {
                              prefixexp {
                              }
                              Name: "while"
                            }
                          }
                        }
                        args {
                          explist {
                            explist {
                              expressions {
                                function {
                                  body {
                                    parlist {
                                      ellipsis: "load"
                                    }
                                    block {
                                      chunk {
                                        laststat {
                                          explist {
                                            explist {
                                              expressions {
                                                binary {
                                                  leftexp {
                                                    nil: 536870912
                                                  }
                                                  binop {
                                                    mod: 0
                                                  }
                                                  rightexp {
                                                  }
                                                }
                                              }
                                              expressions {
                                                number: 1.4171748506891515e+190
                                              }
                                              explast {
                                                str: "\252"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              explast {
                                function {
                                  body {
                                    parlist {
                                      ellipsis: "load"
                                    }
                                    block {
                                      chunk {
                                        laststat {
                                          explist {
                                            explist {
                                              expressions {
                                                binary {
                                                  leftexp {
                                                    binary {
                                                      leftexp {
                                                      }
                                                      binop {
                                                        and: 16
                                                      }
                                                      rightexp {
                                                        binary {
                                                          leftexp {
                                                            binary {
                                                              leftexp {
                                                                binary {
                                                                  leftexp {
                                                                  }
                                                                  binop {
                                                                    mod: 21
                                                                  }
                                                                  rightexp {
                                                                  }
                                                                }
                                                              }
                                                              binop {
                                                                and: 21
                                                              }
                                                              rightexp {
                                                                number: 2.65249473870659e-315
                                                              }
                                                            }
                                                          }
                                                          binop {
                                                            less: 1543766016
                                                          }
                                                          rightexp {
                                                            str: "\'&~33~33333*333.+\'"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  binop {
                                                    mod: 0
                                                  }
                                                  rightexp {
                                                  }
                                                }
                                              }
                                              explast {
                                                str: "\252"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    semicolon: false
                  }
                  stat {
                  }
                  stat {
                    call {
                      prefArgs {
                        prefixexp {
                          var {
                            name {
                              name: "load"
                              num: 0
                            }
                          }
                        }
                        args {
                          explist {
                          }
                        }
                      }
                    }
                  }
                  stat {
                    block {
                      block {
                        chunk {
                        }
                      }
                    }
                    semicolon: true
                  }
                  stat {
                  }
                  laststat {
                    break: 0
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
          }
          laststat {
            break: 0
          }
        }
      }
      condition {
        binary {
          leftexp {
          }
          binop {
            exp: 0
          }
          rightexp {
            str: "\'&~33~33333*333.+\'"
          }
        }
      }
    }
  }
  laststat {
    semicolon: true
  }
}
