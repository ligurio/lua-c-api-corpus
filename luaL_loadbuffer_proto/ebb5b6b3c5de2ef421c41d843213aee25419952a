chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
            ellipsis: ""
          }
          binop {
            concat: 0
          }
          rightexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        number: -416
                      }
                      binop {
                        exp: 0
                      }
                      rightexp {
                        tableconstructor {
                        }
                      }
                    }
                  }
                  binop {
                    exp: 0
                  }
                  rightexp {
                    number: 116.95316997449845
                  }
                }
              }
              binop {
                notEqual: 13
              }
              rightexp {
                nil: 0
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          str: "\225"
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    number: -416
                  }
                  binop {
                    exp: 0
                  }
                  rightexp {
                    tableconstructor {
                    }
                  }
                }
              }
              binop {
                notEqual: 13
              }
              rightexp {
                binary {
                  leftexp {
                    ellipsis: ""
                  }
                  binop {
                    concat: 67108864
                  }
                  rightexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            number: -416
                          }
                          binop {
                            exp: 0
                          }
                          rightexp {
                            tableconstructor {
                            }
                          }
                        }
                      }
                      binop {
                        notEqual: 13
                      }
                      rightexp {
                        binary {
                          leftexp {
                          }
                          binop {
                          }
                          rightexp {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          binop {
            concat: 0
          }
          rightexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    number: -416
                  }
                  binop {
                    exp: 0
                  }
                  rightexp {
                    tableconstructor {
                    }
                  }
                }
              }
              binop {
                notEqual: 13
              }
              rightexp {
                binary {
                  leftexp {
                    ellipsis: ""
                  }
                  binop {
                    concat: 67108864
                  }
                  rightexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            number: -416
                          }
                          binop {
                            exp: 0
                          }
                          rightexp {
                            tableconstructor {
                            }
                          }
                        }
                      }
                      binop {
                        notEqual: 13
                      }
                      rightexp {
                        binary {
                          leftexp {
                          }
                          binop {
                          }
                          rightexp {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                  number: 0
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                stopexp {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
}
