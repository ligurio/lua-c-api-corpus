chunk {
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    block {
      block {
        chunk {
          stat {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 1818848768
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    forcyclename {
      name {
        name: "load"
        num: 1073741824
      }
      startexp {
        binary {
          leftexp {
            str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
          }
          binop {
          }
          rightexp {
            binary {
              leftexp {
                str: "\\00\\000\\\"\\\\000\\\\00\\\"\\\\000\\\\077"
              }
              binop {
                less: 1073741824
              }
              rightexp {
              }
            }
          }
        }
      }
      stopexp {
        number: -1.6122275479153505e+265
      }
      stepexp {
        binary {
          leftexp {
            str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
          }
          binop {
          }
          rightexp {
            binary {
              leftexp {
                tableconstructor {
                  fieldlist {
                    firstField {
                      exprassign {
                        key {
                        }
                        value {
                        }
                      }
                    }
                    fields {
                      field {
                        expression {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                  var {
                                    name {
                                      name: "next"
                                      num: 0
                                    }
                                  }
                                }
                                args {
                                  explist {
                                    explist {
                                      expressions {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                              exprassign {
                                                key {
                                                  unary {
                                                    unop {
                                                      negate: 10240
                                                    }
                                                    exp {
                                                    }
                                                  }
                                                }
                                                value {
                                                  false: 7628147
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      expressions {
                                        unary {
                                          unop {
                                            negate: 1801675120
                                          }
                                          exp {
                                          }
                                        }
                                      }
                                      explast {
                                        prefixexp {
                                          var {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      sep {
                      }
                    }
                  }
                }
              }
              binop {
              }
              rightexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
                      }
                      binop {
                      }
                      rightexp {
                        function {
                          body {
                            parlist {
                            }
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  binop {
                    less: 1073742080
                  }
                  rightexp {
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                    tableconstructor {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    forcyclename {
      name {
        name: "load"
        num: 1073741824
      }
      startexp {
        binary {
          leftexp {
          }
          binop {
            and: 25344
          }
          rightexp {
            binary {
              leftexp {
                str: "\\00\\000\\\"\\\\000\\\\00\\\"\\\\000\\\\077"
              }
              binop {
                less: 1073741824
              }
              rightexp {
              }
            }
          }
        }
      }
      stopexp {
        number: -1.6122275479153505e+265
      }
      stepexp {
        binary {
          leftexp {
            str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
          }
          binop {
          }
          rightexp {
            binary {
              leftexp {
                tableconstructor {
                  fieldlist {
                    firstField {
                      exprassign {
                        key {
                        }
                        value {
                        }
                      }
                    }
                    fields {
                      field {
                        expression {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                  var {
                                    name {
                                      name: "next"
                                      num: 0
                                    }
                                  }
                                }
                                args {
                                  explist {
                                    explist {
                                      expressions {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                              exprassign {
                                                key {
                                                  unary {
                                                    unop {
                                                      negate: 10240
                                                    }
                                                    exp {
                                                    }
                                                  }
                                                }
                                                value {
                                                  false: 7628147
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      expressions {
                                        unary {
                                          unop {
                                            negate: 1801675120
                                          }
                                          exp {
                                          }
                                        }
                                      }
                                      explast {
                                        prefixexp {
                                          var {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      sep {
                      }
                    }
                  }
                }
              }
              binop {
              }
              rightexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
                      }
                      binop {
                      }
                      rightexp {
                        function {
                          body {
                            parlist {
                            }
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  binop {
                    less: 1073742080
                  }
                  rightexp {
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                    tableconstructor {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          binary {
            leftexp {
            }
            binop {
              less: 53760
            }
            rightexp {
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    forcyclename {
      name {
        name: "load"
        num: 1073741824
      }
      startexp {
        binary {
          leftexp {
          }
          binop {
            and: 25344
          }
          rightexp {
            binary {
              leftexp {
                str: "\\00\\000\\\"\\\\000\\\\00\\\"\\\\000\\\\077"
              }
              binop {
                less: 1073741824
              }
              rightexp {
              }
            }
          }
        }
      }
      stopexp {
        number: -1.6122275479153505e+265
      }
      stepexp {
        binary {
          leftexp {
            str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
          }
          binop {
          }
          rightexp {
            binary {
              leftexp {
                tableconstructor {
                  fieldlist {
                    firstField {
                      exprassign {
                        key {
                        }
                        value {
                        }
                      }
                    }
                    fields {
                      field {
                        expression {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                  var {
                                    name {
                                      name: "next"
                                      num: 0
                                    }
                                  }
                                }
                                args {
                                  explist {
                                    explist {
                                      expressions {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                              exprassign {
                                                key {
                                                  unary {
                                                    unop {
                                                      negate: 10240
                                                    }
                                                    exp {
                                                    }
                                                  }
                                                }
                                                value {
                                                  false: 7628147
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      expressions {
                                        unary {
                                          unop {
                                            negate: 1801675120
                                          }
                                          exp {
                                          }
                                        }
                                      }
                                      explast {
                                        prefixexp {
                                          var {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      sep {
                      }
                    }
                  }
                }
              }
              binop {
              }
              rightexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
                      }
                      binop {
                      }
                      rightexp {
                        function {
                          body {
                            parlist {
                            }
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  binop {
                    less: 1073742080
                  }
                  rightexp {
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
}
