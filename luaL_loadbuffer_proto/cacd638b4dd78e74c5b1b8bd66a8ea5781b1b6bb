chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 1
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
          }
          binop {
          }
          rightexp {
            tableconstructor {
              fieldlist {
                firstField {
                }
                fields {
                  field {
                  }
                  sep {
                    semicolon: 31232
                  }
                }
              }
            }
          }
        }
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 1
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                  number: 2.0000000000009095
                }
                stopexp {
                }
                stepexp {
                  number: 2
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                              name {
                                name: ""
                                num: 1
                              }
                            }
                          }
                          explist {
                            explast {
                              prefixexp {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
