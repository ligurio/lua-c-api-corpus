chunk {
  stat {
    func {
      name {
        firstname {
          name: "\'-666633332<\'<8<8"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                }
                stopexp {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
                expression {
                  function {
                    body {
                      block {
                        chunk {
                          stat {
                            forcyclelist {
                              names {
                                firstname {
                                  name: ""
                                  num: 0
                                }
                              }
                              expressions {
                                explast {
                                }
                              }
                              doblock {
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                            semicolon: false
                          }
                          laststat {
                          }
                        }
                      }
                    }
                  }
                }
              }
              fields {
                field {
                  expression {
                    function {
                      body {
                        parlist {
                          ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                        }
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
                sep {
                }
              }
            }
          }
        }
        expressions {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                  functioncall {
                    prefArgs {
                      prefixexp {
                      }
                      args {
                        tableconstructor {
                          fieldlist {
                            firstField {
                              expression {
                                function {
                                  body {
                                    block {
                                      chunk {
                                        laststat {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            fields {
                              field {
                              }
                              sep {
                                semicolon: 0
                              }
                            }
                            fields {
                              field {
                                namedassign {
                                  name {
                                    name: ""
                                    num: 8192
                                  }
                                  value {
                                    ellipsis: "z"
                                  }
                                }
                              }
                              sep {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                args {
                  str: "\'"
                }
              }
            }
          }
        }
        expressions {
          false: 536870912
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
                namedassign {
                  name {
                    name: ""
                    num: 0
                  }
                  value {
                  }
                }
              }
            }
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          unary {
            unop {
            }
            exp {
            }
          }
        }
        expressions {
        }
        expressions {
          false: 0
        }
        expressions {
          tableconstructor {
          }
        }
        explast {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                }
                args {
                  str: "os.setlocale\'"
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: "\'-666633332<\'<8<8"
          num: 0
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
}
