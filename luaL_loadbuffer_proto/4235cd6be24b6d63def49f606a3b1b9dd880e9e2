chunk {
  stat {
    forcyclename {
      name {
        name: ";\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
        num: 2
      }
      startexp {
      }
      stopexp {
        prefixexp {
          functioncall {
            namedArgs {
              prefixexp {
              }
              name {
                name: ";"
                num: 2
              }
              args {
              }
            }
          }
        }
      }
      stepexp {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    number: -131
                  }
                  binop {
                    mult: 0
                  }
                  rightexp {
                    str: "\'>>9~1~i\'9~"
                  }
                }
              }
              binop {
                div: 8289792
              }
              rightexp {
                binary {
                  leftexp {
                    unary {
                      unop {
                        negate: 686848
                      }
                      exp {
                      }
                    }
                  }
                  binop {
                    add: 4128803
                  }
                  rightexp {
                  }
                }
              }
            }
          }
          binop {
            exp: 0
          }
          rightexp {
            number: -131
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
  }
}
