chunk {
  stat {
    forcyclename {
      name {
        name: "math.deg"
        num: 7424
      }
      startexp {
        tableconstructor {
          fieldlist {
            firstField {
            }
            fields {
              field {
              }
              sep {
                semicolon: 1
              }
            }
            fields {
              field {
              }
              sep {
                comma: 2048
              }
            }
            fields {
              field {
                exprassign {
                  key {
                  }
                  value {
                    binary {
                      leftexp {
                        unary {
                          unop {
                            negate: 150994945
                          }
                          exp {
                            str: "\'<6636;3>=32.<\'<8"
                          }
                        }
                      }
                      binop {
                        mod: 536870912
                      }
                      rightexp {
                        str: "\'<6636;3>=32.<\'<8"
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                  }
                  value {
                    binary {
                      leftexp {
                      }
                      binop {
                      }
                      rightexp {
                        str: "\'<6636;3>=32.<\'<8"
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
      stopexp {
        tableconstructor {
          fieldlist {
            firstField {
            }
            fields {
              field {
                exprassign {
                  key {
                  }
                  value {
                    binary {
                      leftexp {
                        unary {
                          unop {
                            negate: 150994945
                          }
                          exp {
                            str: "\'<6636;3>=32.<\'<8"
                          }
                        }
                      }
                      binop {
                        mod: 536870912
                      }
                      rightexp {
                        str: "\'<6636;3>=32.<\'<8"
                      }
                    }
                  }
                }
              }
              sep {
                semicolon: 1
              }
            }
            fields {
              field {
              }
              sep {
                comma: 2048
              }
            }
            fields {
              field {
                exprassign {
                  key {
                  }
                  value {
                    binary {
                      leftexp {
                        unary {
                          unop {
                            negate: 150994945
                          }
                          exp {
                            str: "\'<6636;3>=32.<\'<8"
                          }
                        }
                      }
                      binop {
                        mod: 536870912
                      }
                      rightexp {
                        str: "\'<6636;3>=32.<\'<8"
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                  }
                  value {
                    binary {
                      leftexp {
                      }
                      binop {
                      }
                      rightexp {
                        str: "\'<6636;3>=32.<\'<8"
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  explast {
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                            }
                          }
                          explist {
                            expressions {
                              str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
                            }
                            expressions {
                              str: ""
                            }
                            expressions {
                              str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
                            }
                            expressions {
                              str: "\'<mathn<7<<7<\'<9"
                            }
                            expressions {
                              str: "\'<mathn<7<<7<\'<9"
                            }
                            explast {
                              number: 1.63041663127611e-322
                            }
                          }
                        }
                      }
                      stat {
                        list {
                          varlist {
                            var {
                            }
                          }
                          explist {
                            expressions {
                              str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
                            }
                            expressions {
                              str: ""
                            }
                            expressions {
                              str: "\000\000\000\000\000"
                            }
                            expressions {
                              str: "\'<mathn<7<<7<\'<9"
                            }
                            expressions {
                              str: "\'<mathn<7<<7<\'<9"
                            }
                            explast {
                              number: 1.63041663127611e-322
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
}
