chunk {
  stat {
    forcyclename {
      name {
        name: "_ENV"
        num: 2048
      }
      startexp {
        nil: 0
      }
      stopexp {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
                var {
                  indexname {
                    prefixexp {
                      var {
                        indexname {
                          prefixexp {
                            exp {
                              str: "\006\000"
                            }
                          }
                          Name: ""
                        }
                      }
                    }
                    Name: ""
                  }
                }
              }
              args {
                explist {
                  explist {
                    explast {
                      prefixexp {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      stepexp {
        false: 0
      }
      doblock {
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: ""
                  num: 0
                }
                funcbody {
                  parlist {
                    ellipsis: ""
                  }
                  block {
                    chunk {
                      stat {
                        localnames {
                          namelist {
                            firstname {
                              name: ""
                              num: 0
                            }
                          }
                          explist {
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                              str: "stderr"
                            }
                            expressions {
                              binary {
                                leftexp {
                                  ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                }
                                binop {
                                }
                                rightexp {
                                }
                              }
                            }
                            expressions {
                              ellipsis: "\001\000\000\000\000\000\000\000"
                            }
                            expressions {
                              nil: 1660944384
                            }
                            expressions {
                            }
                            expressions {
                              prefixexp {
                                exp {
                                }
                              }
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                              true: 2048
                            }
                            expressions {
                              prefixexp {
                              }
                            }
                            expressions {
                            }
                            expressions {
                              prefixexp {
                                exp {
                                }
                              }
                            }
                            expressions {
                              str: "utf8"
                            }
                            expressions {
                              unary {
                                unop {
                                }
                                exp {
                                  nil: 0
                                }
                              }
                            }
                            expressions {
                            }
                            expressions {
                              number: 0
                            }
                            expressions {
                              true: 4278190080
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                              ellipsis: ""
                            }
                            expressions {
                              unary {
                                unop {
                                  negate: 4211081216
                                }
                                exp {
                                }
                              }
                            }
                            expressions {
                              nil: 2
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                              prefixexp {
                                var {
                                  indexexpr {
                                    prefixexp {
                                    }
                                    exp {
                                      prefixexp {
                                        functioncall {
                                          namedArgs {
                                            prefixexp {
                                            }
                                            name {
                                              name: ""
                                              num: 36864
                                            }
                                            args {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            explast {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                      var {
                                      }
                                    }
                                    args {
                                      explist {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        forcyclename {
                          name {
                            name: "____________)"
                            num: 0
                          }
                          startexp {
                            binary {
                              leftexp {
                                number: -35651584.000001557
                              }
                              binop {
                                sub: 4
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    number: -35651584.000001557
                                  }
                                  binop {
                                    sub: 4
                                  }
                                  rightexp {
                                  }
                                }
                              }
                            }
                          }
                          stopexp {
                            binary {
                              leftexp {
                                number: 1.9947064271507416e-306
                              }
                              binop {
                                mult: 46848
                              }
                              rightexp {
                                number: 1.9947064271507416e-306
                              }
                            }
                          }
                          stepexp {
                            ellipsis: "LUA_CPATH_5_4"
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  call {
                                  }
                                }
                                stat {
                                }
                                laststat {
                                  explist {
                                    explist {
                                      expressions {
                                        prefixexp {
                                          var {
                                          }
                                        }
                                      }
                                      explast {
                                        false: 83886080
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        func {
                          name {
                            firstname {
                              name: "____________)"
                              num: 0
                            }
                          }
                          body {
                            parlist {
                              namelist {
                                namelist {
                                  firstname {
                                    name: "\\005\\000\\000\\000"
                                    num: 0
                                  }
                                }
                                ellipsis: "\332"
                              }
                            }
                            block {
                              chunk {
                                laststat {
                                  semicolon: true
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                  }
                }
              }
              semicolon: false
            }
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    semicolon: true
  }
}
