chunk {
  stat {
    whilecycle {
      condition {
        number: 0
      }
      doblock {
        block {
          chunk {
            stat {
              block {
                block {
                  chunk {
                    stat {
                      list {
                        varlist {
                          var {
                          }
                        }
                        explist {
                          expressions {
                            unary {
                              unop {
                              }
                              exp {
                                prefixexp {
                                  exp {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                        or: 0
                                      }
                                      rightexp {
                                        unary {
                                          unop {
                                          }
                                          exp {
                                            prefixexp {
                                              exp {
                                                binary {
                                                  leftexp {
                                                  }
                                                  binop {
                                                  }
                                                  rightexp {
                                                    unary {
                                                      unop {
                                                      }
                                                      exp {
                                                        prefixexp {
                                                          exp {
                                                            binary {
                                                              leftexp {
                                                              }
                                                              binop {
                                                                or: 0
                                                              }
                                                              rightexp {
                                                                unary {
                                                                  unop {
                                                                  }
                                                                  exp {
                                                                    prefixexp {
                                                                      exp {
                                                                        binary {
                                                                          leftexp {
                                                                          }
                                                                          binop {
                                                                          }
                                                                          rightexp {
                                                                            unary {
                                                                              unop {
                                                                              }
                                                                              exp {
                                                                                prefixexp {
                                                                                  exp {
                                                                                    binary {
                                                                                      leftexp {
                                                                                      }
                                                                                      binop {
                                                                                      }
                                                                                      rightexp {
                                                                                        unary {
                                                                                          unop {
                                                                                          }
                                                                                          exp {
                                                                                            prefixexp {
                                                                                              exp {
                                                                                                binary {
                                                                                                  leftexp {
                                                                                                  }
                                                                                                  binop {
                                                                                                    or: 0
                                                                                                  }
                                                                                                  rightexp {
                                                                                                    unary {
                                                                                                      unop {
                                                                                                      }
                                                                                                      exp {
                                                                                                        prefixexp {
                                                                                                          var {
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          expressions {
                            nil: 25445
                          }
                          expressions {
                            str: "\'-\nutf8.co\344es \'"
                          }
                          expressions {
                          }
                          expressions {
                          }
                          explast {
                            str: "\'-\nutf8.codes \'"
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        number: 0
      }
      doblock {
        block {
          chunk {
            stat {
              ifstat {
                condition {
                  nil: 0
                }
                first {
                  chunk {
                    laststat {
                      break: 654311424
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              whilecycle {
                condition {
                  number: 0
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        ifstat {
                          condition {
                            nil: 0
                          }
                          first {
                            chunk {
                              laststat {
                                break: 654311424
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
