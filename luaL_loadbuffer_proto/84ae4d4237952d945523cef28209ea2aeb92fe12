chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
              }
              binop {
                div: 1280
              }
              rightexp {
                str: "\'<666663333~133~1<\'<8<\'<8"
              }
            }
          }
          binop {
            mult: 0
          }
          rightexp {
            binary {
              leftexp {
                str: "\'&~packqge.ioeload\'"
              }
              binop {
                div: 1280
              }
              rightexp {
                str: "\'&~packqge.ioeload\'"
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 0
                  }
                  names {
                    name: ""
                    num: 0
                  }
                }
                expressions {
                  explast {
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            laststat {
            }
          }
        }
      }
    }
  }
}
