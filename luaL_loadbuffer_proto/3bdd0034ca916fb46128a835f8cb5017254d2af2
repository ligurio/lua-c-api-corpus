chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 1792
        }
      }
      expressions {
        explast {
          prefixexp {
            exp {
              number: 0
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 32256
      }
      startexp {
        function {
          body {
            block {
              chunk {
                stat {
                  call {
                  }
                }
              }
            }
          }
        }
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
            stat {
              func {
                name {
                  firstname {
                    name: "tonumber"
                    num: 0
                  }
                }
                body {
                  parlist {
                    namelist {
                      namelist {
                        firstname {
                          name: "\021"
                          num: 127
                        }
                        names {
                          name: ""
                          num: 127
                        }
                      }
                    }
                  }
                  block {
                    chunk {
                      stat {
                        forcyclelist {
                          names {
                            firstname {
                              name: ""
                              num: 1792
                            }
                          }
                          expressions {
                            explast {
                              prefixexp {
                                exp {
                                  number: 0
                                }
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 32256
                          }
                          startexp {
                            function {
                              body {
                                block {
                                  chunk {
                                    stat {
                                      call {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          stopexp {
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  func {
                                    name {
                                      firstname {
                                        name: "tonumber"
                                        num: 0
                                      }
                                    }
                                    body {
                                      parlist {
                                        namelist {
                                          namelist {
                                            firstname {
                                              name: "\021"
                                              num: 127
                                            }
                                            names {
                                              name: ""
                                              num: 127
                                            }
                                          }
                                        }
                                      }
                                      block {
                                        chunk {
                                          stat {
                                            list {
                                              varlist {
                                                var {
                                                  name {
                                                    name: "file:flush"
                                                    num: 4278190080
                                                  }
                                                }
                                                vars {
                                                }
                                              }
                                              explist {
                                                expressions {
                                                  ellipsis: "\'"
                                                }
                                                expressions {
                                                  prefixexp {
                                                    functioncall {
                                                      prefArgs {
                                                        prefixexp {
                                                        }
                                                        args {
                                                          str: "\'"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                expressions {
                                                  binary {
                                                    leftexp {
                                                      ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                                    }
                                                    binop {
                                                      greater: 3080192
                                                    }
                                                    rightexp {
                                                      true: 8224
                                                    }
                                                  }
                                                }
                                                expressions {
                                                  unary {
                                                    unop {
                                                    }
                                                    exp {
                                                      unary {
                                                        unop {
                                                        }
                                                        exp {
                                                          ellipsis: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                expressions {
                                                  tableconstructor {
                                                  }
                                                }
                                                expressions {
                                                }
                                                expressions {
                                                }
                                                expressions {
                                                  tableconstructor {
                                                  }
                                                }
                                                expressions {
                                                  str: "debug.traceback"
                                                }
                                                explast {
                                                  prefixexp {
                                                    functioncall {
                                                      prefArgs {
                                                        prefixexp {
                                                        }
                                                        args {
                                                          str: "\'"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      laststat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  laststat {
    semicolon: true
  }
}
