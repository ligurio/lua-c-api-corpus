chunk {
  stat {
    forcyclename {
      name {
        name: "UUUUUUUUUUUUUUUUUUUUU"
        num: 0
      }
      startexp {
        str: "UUUUUUUUUUUUUUUUUUUUU"
      }
      stopexp {
        str: "UUUUUUUUUUUUUUUUUUUUU"
      }
      stepexp {
        str: "UUUUUUUUUUUUUUUUUUUUU"
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
          stat {
            whilecycle {
              condition {
              }
              doblock {
                block {
                  chunk {
                    stat {
                      localnames {
                        namelist {
                          firstname {
                            name: "\377\377\377\377\377\377\377\037"
                            num: 6841089
                          }
                        }
                        explist {
                          explast {
                          }
                        }
                      }
                      semicolon: true
                    }
                    stat {
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
                exp {
                  function {
                    body {
                      parlist {
                        namelist {
                          namelist {
                            firstname {
                              name: ""
                              num: 0
                            }
                          }
                          ellipsis: ""
                        }
                      }
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
              }
              args {
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
}
