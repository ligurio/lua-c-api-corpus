chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localfunc {
              name {
                name: ""
                num: 0
              }
              funcbody {
                block {
                  chunk {
                    stat {
                      list {
                        varlist {
                          var {
                            indexexpr {
                              prefixexp {
                                exp {
                                  number: 4.04738577073149e-320
                                }
                              }
                              exp {
                              }
                            }
                          }
                          vars {
                            indexexpr {
                              prefixexp {
                              }
                              exp {
                                str: "\267"
                              }
                            }
                          }
                          vars {
                            indexexpr {
                              prefixexp {
                                functioncall {
                                }
                              }
                              exp {
                              }
                            }
                          }
                        }
                        explist {
                          expressions {
                            binary {
                              leftexp {
                              }
                              binop {
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        true: 6400
                                      }
                                      binop {
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                            binary {
                                              leftexp {
                                                nil: 2399076352
                                              }
                                              binop {
                                                greater: 538968064
                                              }
                                              rightexp {
                                              }
                                            }
                                          }
                                          binop {
                                          }
                                          rightexp {
                                            binary {
                                              leftexp {
                                              }
                                              binop {
                                              }
                                              rightexp {
                                                false: 538968064
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                  }
                                  rightexp {
                                  }
                                }
                              }
                            }
                          }
                          expressions {
                            binary {
                              leftexp {
                              }
                              binop {
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                      }
                                      rightexp {
                                      }
                                    }
                                  }
                                  binop {
                                  }
                                  rightexp {
                                  }
                                }
                              }
                            }
                          }
                          explast {
                          }
                        }
                      }
                    }
                    stat {
                    }
                  }
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
              namedArgs {
                prefixexp {
                }
                name {
                  name: ""
                  num: 1
                }
                args {
                }
              }
            }
          }
          stat {
            forcyclelist {
              names {
                firstname {
                  name: ""
                  num: 0
                }
              }
              expressions {
                explast {
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                      localnames {
                        namelist {
                          firstname {
                            name: ""
                            num: 0
                          }
                        }
                        explist {
                          explast {
                            prefixexp {
                              functioncall {
                                namedArgs {
                                  prefixexp {
                                  }
                                  name {
                                    name: ""
                                    num: 1
                                  }
                                  args {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    stat {
                      semicolon: true
                    }
                    stat {
                      semicolon: true
                    }
                    stat {
                    }
                    stat {
                      semicolon: true
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                      localnames {
                        namelist {
                          firstname {
                            name: ""
                            num: 0
                          }
                          names {
                            name: "\377\377\377\377\377\377\377\016"
                            num: 0
                          }
                        }
                      }
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                      semicolon: true
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                      semicolon: true
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                  }
                }
              }
            }
            semicolon: false
          }
          stat {
            localfunc {
              name {
                name: ""
                num: 0
              }
              funcbody {
                block {
                  chunk {
                    stat {
                    }
                  }
                }
              }
            }
          }
          stat {
            localfunc {
              name {
                name: ""
                num: 0
              }
              funcbody {
                block {
                  chunk {
                    stat {
                    }
                  }
                }
              }
            }
          }
          stat {
          }
          stat {
            localfunc {
              name {
                name: ""
                num: 0
              }
              funcbody {
                block {
                  chunk {
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        false: 0
      }
    }
  }
}
