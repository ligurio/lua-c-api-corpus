chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                expressions {
                  prefixexp {
                    var {
                      name {
                        name: "ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt"
                        num: 0
                      }
                    }
                  }
                }
                expressions {
                  number: -8
                }
                explast {
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    forcyclename {
                      name {
                        name: ""
                        num: 0
                      }
                      startexp {
                        ellipsis: ""
                      }
                      stopexp {
                        prefixexp {
                        }
                      }
                      stepexp {
                        prefixexp {
                        }
                      }
                      doblock {
                        block {
                          chunk {
                            stat {
                              list {
                                varlist {
                                  var {
                                  }
                                }
                                explist {
                                  expressions {
                                    prefixexp {
                                      var {
                                        name {
                                          name: "ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt"
                                          num: 0
                                        }
                                      }
                                    }
                                  }
                                  expressions {
                                    number: -8
                                  }
                                  explast {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                  }
                }
              }
              condition {
                nil: 0
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
      explist {
        explast {
          unary {
            unop {
              not: 0
            }
            exp {
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    block {
      block {
        chunk {
          stat {
            block {
              block {
                chunk {
                  laststat {
                    semicolon: true
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          tableconstructor {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
      explist {
        expressions {
          function {
            body {
              block {
                chunk {
                  laststat {
                    semicolon: true
                  }
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  laststat {
    explist {
      explist {
        explast {
          function {
            body {
              parlist {
                ellipsis: ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
              }
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
}
