chunk {
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
        nil: 2542564096
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      laststat {
                        break: 0
                      }
                    }
                  }
                }
              }
            }
            stat {
              semicolon: false
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
          binary {
            leftexp {
              binary {
                leftexp {
                }
                binop {
                  greaterEqual: 0
                }
                rightexp {
                  number: 2.07226151461452e-317
                }
              }
            }
            binop {
              and: 0
            }
            rightexp {
              number: -131072.00000000026
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
