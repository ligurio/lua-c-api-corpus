chunk {
  stat {
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            number: 2.0001220703125
          }
          binop {
            concat: 1
          }
          rightexp {
            number: 2.0001220703125
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              localnames {
                namelist {
                  firstname {
                    name: "\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275\275"
                    num: 0
                  }
                }
                explist {
                  expressions {
                    unary {
                      unop {
                        not: 2048
                      }
                      exp {
                        tableconstructor {
                          fieldlist {
                            firstField {
                            }
                            fields {
                              field {
                                expression {
                                  binary {
                                    leftexp {
                                      number: 2.0001220703125
                                    }
                                    binop {
                                      concat: 1
                                    }
                                    rightexp {
                                      number: 2.0001220703125
                                    }
                                  }
                                }
                              }
                              sep {
                                comma: 8307
                              }
                            }
                            fields {
                              field {
                                expression {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                      concat: 1
                                    }
                                    rightexp {
                                    }
                                  }
                                }
                              }
                              sep {
                                comma: 29295
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
        }
      }
    }
  }
  laststat {
    explist {
      explist {
        expressions {
          unary {
            unop {
              not: 0
            }
            exp {
            }
          }
        }
        explast {
        }
      }
    }
  }
}
