chunk {
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
            namedArgs {
              prefixexp {
              }
              name {
                name: "\'\r\nutf8.codes \'"
                num: 12874240
              }
              args {
                str: "\'\r\nutf8.codes \'"
              }
            }
          }
        }
        args {
          explist {
            explist {
              expressions {
                str: "step"
              }
              expressions {
                unary {
                  unop {
                  }
                  exp {
                    false: 8192
                  }
                }
              }
              explast {
                number: 0
              }
            }
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
            namedArgs {
              prefixexp {
              }
              name {
                name: "\'\r\nutf8.codes \'"
                num: 0
              }
              args {
                str: "\'\r\nutf8.codes \'"
              }
            }
          }
        }
        args {
          explist {
            explist {
              expressions {
                str: "step"
              }
              expressions {
                unary {
                  unop {
                  }
                  exp {
                    binary {
                      leftexp {
                        true: 538976288
                      }
                      binop {
                        mult: 1801675120
                      }
                      rightexp {
                        str: "M"
                      }
                    }
                  }
                }
              }
              explast {
              }
            }
          }
        }
      }
    }
  }
  laststat {
    semicolon: false
  }
}
