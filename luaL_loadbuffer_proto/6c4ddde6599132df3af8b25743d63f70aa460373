chunk {
  stat {
    forcyclename {
      name {
        name: "coroutine.closeoutine.close"
        num: 0
      }
      startexp {
        prefixexp {
          var {
          }
        }
      }
      stopexp {
        number: -2
      }
      stepexp {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                  binary {
                    leftexp {
                      number: 2.90116612046033e-315
                    }
                    binop {
                      lessEqual: 0
                    }
                    rightexp {
                    }
                  }
                }
                value {
                }
              }
            }
            fields {
              field {
                expression {
                  tableconstructor {
                  }
                }
              }
              sep {
                semicolon: 3758096384
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    binary {
                      leftexp {
                        number: -0.00023651123046875
                      }
                      binop {
                        mod: 0
                      }
                      rightexp {
                        prefixexp {
                          exp {
                          }
                        }
                      }
                    }
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    binary {
                      leftexp {
                        number: -11.596000671386719
                      }
                      binop {
                        greaterEqual: 1
                      }
                      rightexp {
                        prefixexp {
                          exp {
                            binary {
                              leftexp {
                              }
                              binop {
                                or: 1
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    number: -11.596000671386719
                                  }
                                  binop {
                                    greaterEqual: 1
                                  }
                                  rightexp {
                                    prefixexp {
                                      exp {
                                        binary {
                                          leftexp {
                                          }
                                          binop {
                                            or: 1
                                          }
                                          rightexp {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  nil: 0
                }
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    number: 5.9666725849601654e-154
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
