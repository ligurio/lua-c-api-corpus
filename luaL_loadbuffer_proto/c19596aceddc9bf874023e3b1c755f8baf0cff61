chunk {
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            indexexpr {
              prefixexp {
                functioncall {
                  prefArgs {
                    prefixexp {
                    }
                    args {
                      explist {
                        explist {
                          explast {
                            ellipsis: "\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201\201"
                          }
                        }
                      }
                    }
                  }
                }
              }
              exp {
              }
            }
          }
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "load"
              num: 0
            }
          }
        }
        args {
          explist {
            explist {
              explast {
                function {
                  body {
                    block {
                      chunk {
                        stat {
                          func {
                            name {
                              firstname {
                                name: "type"
                                num: 0
                              }
                            }
                            body {
                              parlist {
                                namelist {
                                  namelist {
                                    firstname {
                                      name: ""
                                      num: 0
                                    }
                                  }
                                  ellipsis: "="
                                }
                              }
                              block {
                                chunk {
                                  stat {
                                  }
                                  stat {
                                    localfunc {
                                      name {
                                        name: ""
                                        num: 0
                                      }
                                      funcbody {
                                        parlist {
                                          namelist {
                                            namelist {
                                              firstname {
                                                name: "require"
                                                num: 0
                                              }
                                              names {
                                                name: ""
                                                num: 946238581
                                              }
                                            }
                                          }
                                        }
                                        block {
                                          chunk {
                                            stat {
                                              repeatcycle {
                                                block {
                                                  chunk {
                                                    stat {
                                                    }
                                                    stat {
                                                      list {
                                                        varlist {
                                                          var {
                                                            indexname {
                                                              prefixexp {
                                                              }
                                                              Name: ""
                                                            }
                                                          }
                                                        }
                                                        explist {
                                                          expressions {
                                                            ellipsis: "table.pack"
                                                          }
                                                          expressions {
                                                            prefixexp {
                                                              functioncall {
                                                                prefArgs {
                                                                  prefixexp {
                                                                    exp {
                                                                    }
                                                                  }
                                                                  args {
                                                                    str: "\'"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          expressions {
                                                            binary {
                                                              leftexp {
                                                                ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                                              }
                                                              binop {
                                                                greaterEqual: 2097152
                                                              }
                                                              rightexp {
                                                                true: 2097152
                                                              }
                                                            }
                                                          }
                                                          expressions {
                                                          }
                                                          expressions {
                                                            tableconstructor {
                                                            }
                                                          }
                                                          expressions {
                                                            prefixexp {
                                                              functioncall {
                                                                prefArgs {
                                                                  prefixexp {
                                                                    var {
                                                                      name {
                                                                        name: "load"
                                                                        num: 16776448
                                                                      }
                                                                    }
                                                                  }
                                                                  args {
                                                                    explist {
                                                                      explist {
                                                                        explast {
                                                                          binary {
                                                                            leftexp {
                                                                              binary {
                                                                                leftexp {
                                                                                  unary {
                                                                                    unop {
                                                                                    }
                                                                                    exp {
                                                                                      tableconstructor {
                                                                                        fieldlist {
                                                                                          firstField {
                                                                                          }
                                                                                          lastSep {
                                                                                            comma: 0
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                                binop {
                                                                                  concat: 0
                                                                                }
                                                                                rightexp {
                                                                                  true: 2
                                                                                }
                                                                              }
                                                                            }
                                                                            binop {
                                                                              mod: 2105344
                                                                            }
                                                                            rightexp {
                                                                              unary {
                                                                                unop {
                                                                                  negate: 0
                                                                                }
                                                                                exp {
                                                                                  binary {
                                                                                    leftexp {
                                                                                      binary {
                                                                                        leftexp {
                                                                                          prefixexp {
                                                                                          }
                                                                                        }
                                                                                        binop {
                                                                                          concat: 704643072
                                                                                        }
                                                                                        rightexp {
                                                                                          str: "debug.traceback"
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                    binop {
                                                                                      concat: 0
                                                                                    }
                                                                                    rightexp {
                                                                                      prefixexp {
                                                                                        exp {
                                                                                          number: 8.81442566340249e-280
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          expressions {
                                                          }
                                                          expressions {
                                                            tableconstructor {
                                                            }
                                                          }
                                                          expressions {
                                                            unary {
                                                              unop {
                                                                negate: 1644167168
                                                              }
                                                              exp {
                                                                binary {
                                                                  leftexp {
                                                                  }
                                                                  binop {
                                                                    concat: 0
                                                                  }
                                                                  rightexp {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          explast {
                                                            prefixexp {
                                                              functioncall {
                                                                prefArgs {
                                                                  prefixexp {
                                                                  }
                                                                  args {
                                                                    str: "\'"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    laststat {
                                                    }
                                                  }
                                                }
                                                condition {
                                                  prefixexp {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    semicolon: true
                                  }
                                  stat {
                                    call {
                                      prefArgs {
                                        prefixexp {
                                          var {
                                          }
                                        }
                                        args {
                                          explist {
                                            explist {
                                              expressions {
                                                prefixexp {
                                                  var {
                                                    indexexpr {
                                                      prefixexp {
                                                      }
                                                      exp {
                                                        str: "string.dump"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              expressions {
                                                prefixexp {
                                                  var {
                                                  }
                                                }
                                              }
                                              explast {
                                                number: 15.073007294696433
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        stat {
                          call {
                          }
                          semicolon: true
                        }
                        stat {
                          list {
                            varlist {
                              var {
                              }
                            }
                            explist {
                              expressions {
                              }
                              expressions {
                                prefixexp {
                                  functioncall {
                                    prefArgs {
                                      prefixexp {
                                      }
                                      args {
                                        str: "\'"
                                      }
                                    }
                                  }
                                }
                              }
                              expressions {
                              }
                              expressions {
                                tableconstructor {
                                  fieldlist {
                                    firstField {
                                      exprassign {
                                        key {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                              }
                                            }
                                          }
                                        }
                                        value {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              expressions {
                                tableconstructor {
                                }
                              }
                              expressions {
                                tableconstructor {
                                  fieldlist {
                                    firstField {
                                      expression {
                                        prefixexp {
                                          var {
                                            indexexpr {
                                              prefixexp {
                                              }
                                              exp {
                                                str: "string.dump"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    fields {
                                      field {
                                        expression {
                                          str: "io.output"
                                        }
                                      }
                                      sep {
                                      }
                                    }
                                    lastSep {
                                    }
                                  }
                                }
                              }
                              expressions {
                              }
                              expressions {
                                str: "tpio.output"
                              }
                              expressions {
                                tableconstructor {
                                }
                              }
                              explast {
                                prefixexp {
                                  functioncall {
                                    prefArgs {
                                      prefixexp {
                                      }
                                      args {
                                        str: "\'"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        stat {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 0
        }
        args {
          str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
        }
      }
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
  }
  stat {
    call {
    }
  }
}
