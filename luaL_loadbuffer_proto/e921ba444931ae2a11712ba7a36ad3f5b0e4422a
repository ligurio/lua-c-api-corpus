chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
        unary {
          unop {
            not: 0
          }
          exp {
            binary {
              leftexp {
              }
              binop {
              }
              rightexp {
                binary {
                  leftexp {
                  }
                  binop {
                    sub: 0
                  }
                  rightexp {
                  }
                }
              }
            }
          }
        }
      }
      stepexp {
      }
      doblock {
        block {
          chunk {
            stat {
              call {
              }
            }
            stat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 4
      }
      startexp {
      }
      stopexp {
        function {
          body {
            parlist {
              namelist {
                namelist {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                ellipsis: ""
              }
            }
            block {
              chunk {
              }
            }
          }
        }
      }
      stepexp {
        binary {
          leftexp {
          }
          binop {
            lessEqual: 0
          }
          rightexp {
            binary {
              leftexp {
              }
              binop {
                concat: 4
              }
              rightexp {
                binary {
                  leftexp {
                  }
                  binop {
                    concat: 1886679808
                  }
                  rightexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            unary {
                              unop {
                                length: 4
                              }
                              exp {
                                tableconstructor {
                                }
                              }
                            }
                          }
                          binop {
                            concat: 4
                          }
                          rightexp {
                          }
                        }
                      }
                      binop {
                        less: 0
                      }
                      rightexp {
                        str: "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    semicolon: true
  }
}
