chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<<7<\'<9"
                }
                expressions {
                  prefixexp {
                    var {
                      name {
                        name: ""
                        num: 25344
                      }
                    }
                  }
                }
                expressions {
                  str: "\'<mathn<7<<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                explast {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
              }
            }
          }
          stat {
            semicolon: true
          }
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                expressions {
                  unary {
                    unop {
                    }
                    exp {
                    }
                  }
                }
                expressions {
                  str: "\'<mathn<7<<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                explast {
                  nil: 0
                }
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                }
                vars {
                  name {
                    name: "2"
                    num: 0
                  }
                }
              }
              explist {
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                explast {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                expressions {
                  ellipsis: ""
                }
                expressions {
                  str: "\'<mathn<7<<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                explast {
                  str: "\'<mathn<7<<7<\'<9"
                }
              }
            }
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    unary {
                      unop {
                        length: 40
                      }
                      exp {
                      }
                    }
                  }
                  binop {
                    mult: 0
                  }
                  rightexp {
                    str: "\'>>9~1~i\'9~"
                  }
                }
              }
              binop {
                mult: 14024704
              }
              rightexp {
                binary {
                  leftexp {
                    unary {
                      unop {
                        negate: 686848
                      }
                      exp {
                      }
                    }
                  }
                  binop {
                    mult: 14024704
                  }
                  rightexp {
                    binary {
                      leftexp {
                        number: 7.3650552291952253e+271
                      }
                      binop {
                        mult: 32768
                      }
                      rightexp {
                        unary {
                          unop {
                            length: 9
                          }
                          exp {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          binop {
            exp: 0
          }
          rightexp {
            number: nan
          }
        }
      }
    }
  }
  laststat {
    semicolon: true
  }
}
