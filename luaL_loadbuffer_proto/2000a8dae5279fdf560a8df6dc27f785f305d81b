chunk {
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          binary {
            leftexp {
              binary {
                leftexp {
                  binary {
                    leftexp {
                      number: -352
                    }
                    binop {
                      mult: 67108865
                    }
                    rightexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              number: -424
                            }
                            binop {
                              div: 6619136
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      binary {
                                        leftexp {
                                          str: "\'<<\'<<8"
                                        }
                                        binop {
                                          div: 8388608
                                        }
                                        rightexp {
                                        }
                                      }
                                    }
                                    binop {
                                      div: 3472883712
                                    }
                                    rightexp {
                                      number: -4.9591064453125e-05
                                    }
                                  }
                                }
                                binop {
                                  mult: 8388608
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      number: -424
                                    }
                                    binop {
                                      mult: 0
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                                namedassign {
                                                  name {
                                                    name: "\'<<\'<<8"
                                                    num: 0
                                                  }
                                                  value {
                                                    false: 0
                                                  }
                                                }
                                              }
                                              fields {
                                                field {
                                                }
                                                sep {
                                                  comma: 1634476032
                                                }
                                              }
                                            }
                                          }
                                        }
                                        binop {
                                          mult: 8388608
                                        }
                                        rightexp {
                                          unary {
                                            unop {
                                              length: 9
                                            }
                                            exp {
                                              str: "io.read"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        binop {
                          div: 4294967291
                        }
                        rightexp {
                          number: -4.9591064453125e-05
                        }
                      }
                    }
                  }
                }
                binop {
                  mult: 0
                }
                rightexp {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        namedassign {
                          name {
                            name: "\'<<\'<<8"
                            num: 0
                          }
                          value {
                            false: 0
                          }
                        }
                      }
                      fields {
                        field {
                        }
                        sep {
                          comma: 1634476032
                        }
                      }
                    }
                  }
                }
              }
            }
            binop {
              mult: 5832704
            }
            rightexp {
            }
          }
        }
        explast {
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        prefixexp {
        }
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
            laststat {
            }
          }
        }
      }
    }
    semicolon: true
  }
}
