chunk {
  stat {
    list {
      varlist {
        var {
          name {
            name: ""
            num: 0
          }
        }
        vars {
          indexexpr {
            prefixexp {
              var {
                indexexpr {
                  prefixexp {
                    exp {
                      binary {
                        leftexp {
                          number: 0
                        }
                        binop {
                          add: 3
                        }
                        rightexp {
                          binary {
                            leftexp {
                              str: "in "
                            }
                            binop {
                              concat: 0
                            }
                            rightexp {
                              binary {
                                leftexp {
                                }
                                binop {
                                  mod: 0
                                }
                                rightexp {
                                  prefixexp {
                                    exp {
                                      prefixexp {
                                        exp {
                                          prefixexp {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  exp {
                  }
                }
              }
            }
            exp {
              prefixexp {
                functioncall {
                }
              }
            }
          }
        }
        vars {
          indexexpr {
            prefixexp {
              exp {
              }
            }
            exp {
              binary {
                leftexp {
                  str: "in "
                }
                binop {
                  concat: 0
                }
                rightexp {
                  binary {
                    leftexp {
                      prefixexp {
                        exp {
                          number: 0
                        }
                      }
                    }
                    binop {
                      mod: 0
                    }
                    rightexp {
                      prefixexp {
                        exp {
                          prefixexp {
                            exp {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        vars {
          name {
            name: ""
            num: 655360
          }
        }
        vars {
          indexexpr {
            prefixexp {
              functioncall {
              }
            }
            exp {
            }
          }
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: ""
          }
        }
      }
      explist {
        expressions {
        }
        expressions {
          prefixexp {
            functioncall {
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
  laststat {
    explist {
      explist {
        explast {
          prefixexp {
            exp {
              function {
                body {
                  parlist {
                    ellipsis: "tonumber"
                  }
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
