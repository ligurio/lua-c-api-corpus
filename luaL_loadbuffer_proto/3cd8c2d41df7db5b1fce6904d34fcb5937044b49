chunk {
  stat {
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
              }
              semicolon: false
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          var {
                            name {
                              name: "load"
                              num: 5
                            }
                          }
                        }
                        args {
                          str: "break"
                        }
                      }
                    }
                  }
                  args {
                    str: "break"
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    localfunc {
      name {
        name: "\030\000\000\000"
        num: 6490687
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        unary {
          unop {
            not: 0
          }
          exp {
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
    semicolon: true
  }
  stat {
    func {
      name {
        firstname {
          name: "\007"
          num: 0
        }
        lastname {
          name: "pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
          num: 5
        }
      }
      body {
        parlist {
          ellipsis: "\242\000\000\000"
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            forcyclelist {
              names {
                firstname {
                  name: ""
                  num: 0
                }
                names {
                  name: "pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
                  num: 5
                }
              }
              expressions {
                expressions {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                expressions {
                  function {
                    body {
                      parlist {
                        ellipsis: "\007"
                      }
                      block {
                        chunk {
                          stat {
                            semicolon: true
                          }
                        }
                      }
                    }
                  }
                }
                expressions {
                }
                expressions {
                  false: 5
                }
                expressions {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                explast {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    whilecycle {
                      condition {
                      }
                      doblock {
                        block {
                          chunk {
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                  }
                                }
                                condition {
                                  function {
                                    body {
                                      block {
                                        chunk {
                                          stat {
                                            repeatcycle {
                                              block {
                                                chunk {
                                                }
                                              }
                                              condition {
                                                function {
                                                  body {
                                                    parlist {
                                                      ellipsis: "\242\000\000\000"
                                                    }
                                                    block {
                                                      chunk {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          stat {
                                            call {
                                              prefArgs {
                                                prefixexp {
                                                  exp {
                                                    binary {
                                                      leftexp {
                                                        prefixexp {
                                                        }
                                                      }
                                                      binop {
                                                        mod: 0
                                                      }
                                                      rightexp {
                                                        number: 0
                                                      }
                                                    }
                                                  }
                                                }
                                                args {
                                                  str: "bre\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000ak"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            stat {
                              call {
                                prefArgs {
                                  prefixexp {
                                    var {
                                      name {
                                        name: "load"
                                        num: 5
                                      }
                                    }
                                  }
                                  args {
                                    str: "break"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              condition {
                str: "math.atan"
              }
            }
          }
        }
      }
      condition {
        false: 1023410339
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 4097
      }
    }
  }
  stat {
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
          stat {
            semicolon: true
          }
        }
      }
      condition {
        nil: 5
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        unary {
          unop {
          }
          exp {
            prefixexp {
              exp {
              }
            }
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: "\030\000\000\000"
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
  }
  laststat {
    break: 128
  }
}
