chunk {
  stat {
    block {
      block {
        chunk {
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                prefixexp {
                  functioncall {
                    prefArgs {
                      prefixexp {
                        var {
                          name {
                            name: "load"
                            num: 0
                          }
                        }
                      }
                      args {
                        str: "\001\006"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        tableconstructor {
          fieldlist {
            firstField {
            }
            lastSep {
              comma: 0
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          name {
            name: "\001\000\000\000\000\000\0005"
            num: 0
          }
        }
      }
      explist {
        expressions {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                  var {
                    name {
                      name: "load"
                      num: 0
                    }
                  }
                }
                args {
                  str: ""
                }
              }
            }
          }
        }
        explast {
          ellipsis: "2"
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
              }
              binop {
              }
              rightexp {
                function {
                  body {
                    parlist {
                      namelist {
                        namelist {
                          firstname {
                            name: ""
                            num: 0
                          }
                          names {
                            name: ""
                            num: 538976288
                          }
                        }
                      }
                    }
                    block {
                      chunk {
                      }
                    }
                  }
                }
              }
            }
          }
          binop {
          }
          rightexp {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            semicolon: true
          }
        }
      }
      condition {
        unary {
          unop {
            not: 0
          }
          exp {
            false: 1847599136
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: "counter_+"
                  num: 6513008
                }
                names {
                  name: "counter_8"
                  num: 0
                }
              }
              explist {
                expressions {
                }
                explast {
                  number: -709.375
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        prefixexp {
                          functioncall {
                            prefArgs {
                              prefixexp {
                                var {
                                  name {
                                    name: "load"
                                    num: 0
                                  }
                                }
                              }
                              args {
                                str: "\001\006"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              condition {
                unary {
                  unop {
                  }
                  exp {
                    false: 1847599136
                  }
                }
              }
            }
          }
        }
      }
      condition {
        str: "cann"
      }
    }
    semicolon: false
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
            explist {
              explist {
                explast {
                  false: 0
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        prefixexp {
                          functioncall {
                            prefArgs {
                              prefixexp {
                                var {
                                  name {
                                    name: "load"
                                    num: 0
                                  }
                                }
                              }
                              args {
                                str: "\001\006"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              condition {
                unary {
                  unop {
                  }
                  exp {
                    false: 1847599136
                  }
                }
              }
            }
          }
        }
      }
      condition {
        unary {
          unop {
          }
          exp {
            false: 1847599136
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 5
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
          indexname {
            prefixexp {
              functioncall {
                prefArgs {
                  prefixexp {
                    var {
                      name {
                        name: "counter_+"
                        num: 6513008
                      }
                    }
                  }
                  args {
                    str: " "
                  }
                }
              }
            }
            Name: ""
          }
        }
      }
      explist {
        expressions {
          prefixexp {
            exp {
              tableconstructor {
                fieldlist {
                  firstField {
                    exprassign {
                      key {
                      }
                      value {
                        binary {
                          leftexp {
                          }
                          binop {
                          }
                          rightexp {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                }
                                fields {
                                  field {
                                  }
                                  sep {
                                    comma: 0
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        explast {
          ellipsis: "2"
        }
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
  }
}
