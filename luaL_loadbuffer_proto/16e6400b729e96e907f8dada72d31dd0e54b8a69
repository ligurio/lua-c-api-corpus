chunk {
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
          }
        }
        args {
          str: "u\000\000\000"
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          nil: 0
        }
        explast {
          binary {
            leftexp {
              binary {
                leftexp {
                  prefixexp {
                  }
                }
                binop {
                  greater: 2686976
                }
                rightexp {
                  prefixexp {
                  }
                }
              }
            }
            binop {
            }
            rightexp {
              binary {
                leftexp {
                  str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
                }
                binop {
                  mod: 50331648
                }
                rightexp {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                        }
                        binop {
                          add: 2
                        }
                        rightexp {
                          binary {
                            leftexp {
                              prefixexp {
                              }
                            }
                            binop {
                              mult: 0
                            }
                            rightexp {
                              prefixexp {
                              }
                            }
                          }
                        }
                      }
                    }
                    binop {
                      concat: 2097152
                    }
                    rightexp {
                      binary {
                        leftexp {
                        }
                        binop {
                          mult: 25393
                        }
                        rightexp {
                          prefixexp {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    whilecycle {
      condition {
        function {
          body {
            parlist {
              namelist {
                namelist {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
              }
            }
            block {
              chunk {
                stat {
                  block {
                    block {
                      chunk {
                        stat {
                          semicolon: true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                }
                stopexp {
                }
                stepexp {
                  nil: 64512
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  explast {
                    binary {
                      leftexp {
                        prefixexp {
                        }
                      }
                      binop {
                        add: 2
                      }
                      rightexp {
                        binary {
                          leftexp {
                            false: 4261347328
                          }
                          binop {
                            mult: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                                prefixexp {
                                }
                              }
                              binop {
                                mult: 0
                              }
                              rightexp {
                                prefixexp {
                                  exp {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              forcyclename {
                name {
                  name: "\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244"
                  num: 2
                }
                startexp {
                  prefixexp {
                    exp {
                      binary {
                        leftexp {
                        }
                        binop {
                          add: 2
                        }
                        rightexp {
                          binary {
                            leftexp {
                              prefixexp {
                              }
                            }
                            binop {
                              mult: 0
                            }
                            rightexp {
                              prefixexp {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                stopexp {
                  binary {
                    leftexp {
                      nil: 0
                    }
                    binop {
                      greaterEqual: 1953656691
                    }
                    rightexp {
                      prefixexp {
                        functioncall {
                          namedArgs {
                            prefixexp {
                              functioncall {
                                prefArgs {
                                  prefixexp {
                                    var {
                                      name {
                                        name: "__lt"
                                        num: 0
                                      }
                                    }
                                  }
                                  args {
                                    explist {
                                      explist {
                                        expressions {
                                          prefixexp {
                                            exp {
                                              binary {
                                                leftexp {
                                                  binary {
                                                    leftexp {
                                                    }
                                                    binop {
                                                      add: 2
                                                    }
                                                    rightexp {
                                                      binary {
                                                        leftexp {
                                                          prefixexp {
                                                          }
                                                        }
                                                        binop {
                                                          mult: 0
                                                        }
                                                        rightexp {
                                                          prefixexp {
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                binop {
                                                  concat: 2097152
                                                }
                                                rightexp {
                                                  binary {
                                                    leftexp {
                                                    }
                                                    binop {
                                                      mult: 25393
                                                    }
                                                    rightexp {
                                                      prefixexp {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        expressions {
                                          unary {
                                            unop {
                                              negate: 538976288
                                            }
                                            exp {
                                              prefixexp {
                                              }
                                            }
                                          }
                                        }
                                        explast {
                                          ellipsis: "\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\377\377\377\377\377\377\377\307z\177\177\177\000\000\000\000\000\000\000\000\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            name {
                              name: ""
                              num: 0
                            }
                            args {
                              str: "pack"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                stepexp {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                            }
                            vars {
                              name {
                                name: "__lt"
                                num: 0
                              }
                            }
                          }
                          explist {
                            explast {
                              binary {
                                leftexp {
                                }
                                binop {
                                  greaterEqual: 16384
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                      }
                                    }
                                    binop {
                                      mult: 0
                                    }
                                    rightexp {
                                      prefixexp {
                                        functioncall {
                                          prefArgs {
                                            prefixexp {
                                              var {
                                              }
                                            }
                                            args {
                                              explist {
                                                explist {
                                                  expressions {
                                                    prefixexp {
                                                      exp {
                                                        prefixexp {
                                                        }
                                                      }
                                                    }
                                                  }
                                                  expressions {
                                                    unary {
                                                      unop {
                                                        length: 32768
                                                      }
                                                      exp {
                                                        prefixexp {
                                                        }
                                                      }
                                                    }
                                                  }
                                                  explast {
                                                    ellipsis: "\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\377\377\377\377\377\377\377\307z\177\177\177\000\000\000\000\000\000\000\000\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        forcyclename {
                          name {
                            name: "\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244"
                            num: 2
                          }
                          startexp {
                            prefixexp {
                              exp {
                              }
                            }
                          }
                          stopexp {
                            binary {
                              leftexp {
                                prefixexp {
                                  functioncall {
                                  }
                                }
                              }
                              binop {
                                greater: 2686976
                              }
                              rightexp {
                                prefixexp {
                                }
                              }
                            }
                          }
                          stepexp {
                            true: 1
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        function {
          body {
            parlist {
              namelist {
                namelist {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
              }
            }
            block {
              chunk {
                stat {
                  block {
                    block {
                      chunk {
                        stat {
                          semicolon: true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  explast {
                    binary {
                      leftexp {
                      }
                      binop {
                        add: 2105346
                      }
                      rightexp {
                        binary {
                          leftexp {
                            prefixexp {
                            }
                          }
                          binop {
                            mult: 0
                          }
                          rightexp {
                            prefixexp {
                              exp {
                                binary {
                                  leftexp {
                                    prefixexp {
                                    }
                                  }
                                  binop {
                                    add: 2
                                  }
                                  rightexp {
                                    binary {
                                      leftexp {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                              exprassign {
                                                key {
                                                  number: 0
                                                }
                                                value {
                                                }
                                              }
                                            }
                                            lastSep {
                                              comma: 33554433
                                            }
                                          }
                                        }
                                      }
                                      binop {
                                        mult: 0
                                      }
                                      rightexp {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              forcyclename {
                name {
                  name: "\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244"
                  num: 2
                }
                startexp {
                }
                stopexp {
                  binary {
                    leftexp {
                      prefixexp {
                      }
                    }
                    binop {
                      concat: 0
                    }
                    rightexp {
                      prefixexp {
                        exp {
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                            }
                          }
                          explist {
                            explast {
                              binary {
                                leftexp {
                                }
                                binop {
                                  add: 2
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                      }
                                    }
                                    binop {
                                      mult: 0
                                    }
                                    rightexp {
                                      nil: 0
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        forcyclename {
                          name {
                            name: "\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244"
                            num: 2
                          }
                          startexp {
                            prefixexp {
                              var {
                                name {
                                  name: "__le"
                                  num: 0
                                }
                              }
                            }
                          }
                          stopexp {
                            binary {
                              leftexp {
                                prefixexp {
                                  functioncall {
                                    prefArgs {
                                      prefixexp {
                                        functioncall {
                                          prefArgs {
                                            prefixexp {
                                              var {
                                                name {
                                                  name: "__lt"
                                                  num: 0
                                                }
                                              }
                                            }
                                            args {
                                              explist {
                                                explist {
                                                  expressions {
                                                    prefixexp {
                                                      exp {
                                                        binary {
                                                          leftexp {
                                                            binary {
                                                              leftexp {
                                                                number: 0
                                                              }
                                                              binop {
                                                                sub: 0
                                                              }
                                                              rightexp {
                                                                prefixexp {
                                                                  var {
                                                                    indexexpr {
                                                                      prefixexp {
                                                                      }
                                                                      exp {
                                                                        nil: 4194303999
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          binop {
                                                            concat: 2097152
                                                          }
                                                          rightexp {
                                                            binary {
                                                              leftexp {
                                                              }
                                                              binop {
                                                                add: 2
                                                              }
                                                              rightexp {
                                                                binary {
                                                                  leftexp {
                                                                    prefixexp {
                                                                    }
                                                                  }
                                                                  binop {
                                                                    mult: 0
                                                                  }
                                                                  rightexp {
                                                                    prefixexp {
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  expressions {
                                                    unary {
                                                      unop {
                                                        negate: 0
                                                      }
                                                      exp {
                                                        tableconstructor {
                                                          fieldlist {
                                                            firstField {
                                                            }
                                                            lastSep {
                                                              comma: 33554433
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  explast {
                                                    ellipsis: "\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\377\377\377\377\377\377\377\307z\177\177\177\000\000\000\000\000\000\000\000\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177(\000\177\177\177"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      args {
                                        str: "u\000\000\000"
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                concat: 23
                              }
                              rightexp {
                                prefixexp {
                                }
                              }
                            }
                          }
                          stepexp {
                            true: 1
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  list {
                                    varlist {
                                      var {
                                      }
                                    }
                                    explist {
                                      explast {
                                        binary {
                                          leftexp {
                                          }
                                          binop {
                                            add: 2
                                          }
                                          rightexp {
                                            binary {
                                              leftexp {
                                                prefixexp {
                                                }
                                              }
                                              binop {
                                                mult: 0
                                              }
                                              rightexp {
                                                prefixexp {
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                stat {
                                  forcyclename {
                                    name {
                                      name: "\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244"
                                      num: 2
                                    }
                                    startexp {
                                      prefixexp {
                                        exp {
                                          binary {
                                            leftexp {
                                            }
                                            binop {
                                              add: 2
                                            }
                                            rightexp {
                                              binary {
                                                leftexp {
                                                  prefixexp {
                                                  }
                                                }
                                                binop {
                                                  mult: 0
                                                }
                                                rightexp {
                                                  prefixexp {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    stopexp {
                                    }
                                    stepexp {
                                      prefixexp {
                                      }
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                          stat {
                                            call {
                                              namedArgs {
                                                prefixexp {
                                                  functioncall {
                                                    prefArgs {
                                                      prefixexp {
                                                        var {
                                                          name {
                                                            name: "__lt"
                                                            num: 4194303999
                                                          }
                                                        }
                                                      }
                                                      args {
                                                        explist {
                                                          explist {
                                                            expressions {
                                                              prefixexp {
                                                                exp {
                                                                  binary {
                                                                    leftexp {
                                                                      binary {
                                                                        leftexp {
                                                                          binary {
                                                                            leftexp {
                                                                              binary {
                                                                                leftexp {
                                                                                }
                                                                                binop {
                                                                                  add: 2
                                                                                }
                                                                                rightexp {
                                                                                  binary {
                                                                                    leftexp {
                                                                                      prefixexp {
                                                                                        exp {
                                                                                          number: 0
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                    binop {
                                                                                      mult: 0
                                                                                    }
                                                                                    rightexp {
                                                                                      prefixexp {
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                            binop {
                                                                              concat: 2097152
                                                                            }
                                                                            rightexp {
                                                                              binary {
                                                                                leftexp {
                                                                                }
                                                                                binop {
                                                                                  mult: 25393
                                                                                }
                                                                                rightexp {
                                                                                  prefixexp {
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                        binop {
                                                                          sub: 0
                                                                        }
                                                                        rightexp {
                                                                        }
                                                                      }
                                                                    }
                                                                    binop {
                                                                      concat: 2097152
                                                                    }
                                                                    rightexp {
                                                                      binary {
                                                                        leftexp {
                                                                        }
                                                                        binop {
                                                                          mult: 25393
                                                                        }
                                                                        rightexp {
                                                                          str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                            expressions {
                                                              unary {
                                                                unop {
                                                                  negate: 538976288
                                                                }
                                                                exp {
                                                                  prefixexp {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                            explast {
                                                              ellipsis: "\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\377\377\377\377\377\377\377\307z\177\177\177\000\000\000\000\000\000\000\000\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                name {
                                                  name: ""
                                                  num: 0
                                                }
                                                args {
                                                  str: "pack"
                                                }
                                              }
                                            }
                                          }
                                          stat {
                                            forcyclename {
                                              name {
                                                name: "\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244"
                                                num: 2
                                              }
                                              startexp {
                                                prefixexp {
                                                  exp {
                                                  }
                                                }
                                              }
                                              stopexp {
                                                binary {
                                                  leftexp {
                                                    prefixexp {
                                                      functioncall {
                                                      }
                                                    }
                                                  }
                                                  binop {
                                                    greater: 2686976
                                                  }
                                                  rightexp {
                                                    prefixexp {
                                                    }
                                                  }
                                                }
                                              }
                                              stepexp {
                                                true: 1
                                              }
                                              doblock {
                                                block {
                                                  chunk {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    break: 8200192
    semicolon: false
  }
}
