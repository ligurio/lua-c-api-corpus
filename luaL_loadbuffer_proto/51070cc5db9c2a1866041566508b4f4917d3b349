chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        binary {
          leftexp {
            binary {
              leftexp {
              }
              binop {
                concat: 0
              }
              rightexp {
                str: "\'>=strlowereboad\'"
              }
            }
          }
          binop {
            concat: 0
          }
          rightexp {
            ellipsis: "$"
          }
        }
      }
      stopexp {
      }
      stepexp {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    unary {
                      unop {
                      }
                      exp {
                        prefixexp {
                          exp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    unary {
                                      unop {
                                        negate: 16384
                                      }
                                      exp {
                                        prefixexp {
                                          exp {
                                            binary {
                                              leftexp {
                                                binary {
                                                  leftexp {
                                                  }
                                                  binop {
                                                    or: 0
                                                  }
                                                  rightexp {
                                                    prefixexp {
                                                      exp {
                                                        binary {
                                                          leftexp {
                                                            prefixexp {
                                                            }
                                                          }
                                                          binop {
                                                            sub: 553648128
                                                          }
                                                          rightexp {
                                                            prefixexp {
                                                              var {
                                                                name {
                                                                  name: "debug.getlocal"
                                                                  num: 0
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              binop {
                                                concat: 553648128
                                              }
                                              rightexp {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                  }
                                  rightexp {
                                    tableconstructor {
                                    }
                                  }
                                }
                              }
                              binop {
                                concat: 0
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  binop {
                  }
                  rightexp {
                    tableconstructor {
                    }
                  }
                }
              }
              binop {
                mult: 16384
              }
              rightexp {
                prefixexp {
                  exp {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                        lastSep {
                          comma: 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          binop {
            concat: 0
          }
          rightexp {
            tableconstructor {
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: "debug.getlocal"
        num: 0
      }
      startexp {
        binary {
          leftexp {
            binary {
              leftexp {
              }
              binop {
                concat: 0
              }
              rightexp {
                str: "\'>=strlowereboad\'"
              }
            }
          }
          binop {
            concat: 0
          }
          rightexp {
          }
        }
      }
      stopexp {
        str: "debug.getlocal"
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          false: 36
        }
        expressions {
          str: "\000\000\000\000\000\000\000w&\'>\'"
        }
        explast {
          function {
            body {
              block {
                chunk {
                  stat {
                    forcyclename {
                      name {
                        name: ""
                        num: 0
                      }
                      startexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                              }
                              binop {
                                concat: 0
                              }
                              rightexp {
                                str: "\'>=strlowereboad\'"
                              }
                            }
                          }
                          binop {
                            concat: 0
                          }
                          rightexp {
                            ellipsis: "$"
                          }
                        }
                      }
                      stopexp {
                      }
                      stepexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    unary {
                                      unop {
                                      }
                                      exp {
                                        prefixexp {
                                          exp {
                                            binary {
                                              leftexp {
                                                binary {
                                                  leftexp {
                                                    unary {
                                                      unop {
                                                        negate: 16384
                                                      }
                                                      exp {
                                                        prefixexp {
                                                          exp {
                                                            binary {
                                                              leftexp {
                                                                binary {
                                                                  leftexp {
                                                                  }
                                                                  binop {
                                                                    or: 0
                                                                  }
                                                                  rightexp {
                                                                    prefixexp {
                                                                      exp {
                                                                        binary {
                                                                          leftexp {
                                                                            prefixexp {
                                                                            }
                                                                          }
                                                                          binop {
                                                                            sub: 553648128
                                                                          }
                                                                          rightexp {
                                                                            prefixexp {
                                                                              var {
                                                                                name {
                                                                                  name: "debug.getlocal"
                                                                                  num: 0
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              binop {
                                                                concat: 553648128
                                                              }
                                                              rightexp {
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  binop {
                                                  }
                                                  rightexp {
                                                    tableconstructor {
                                                    }
                                                  }
                                                }
                                              }
                                              binop {
                                                concat: 0
                                              }
                                              rightexp {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                  }
                                  rightexp {
                                    tableconstructor {
                                    }
                                  }
                                }
                              }
                              binop {
                                mult: 16384
                              }
                              rightexp {
                                prefixexp {
                                  exp {
                                    tableconstructor {
                                      fieldlist {
                                        firstField {
                                        }
                                        lastSep {
                                          comma: 0
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          binop {
                            concat: 0
                          }
                          rightexp {
                            tableconstructor {
                            }
                          }
                        }
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  stat {
                    forcyclename {
                      name {
                        name: "debug.getlocal"
                        num: 0
                      }
                      startexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                              }
                              binop {
                                concat: 0
                              }
                              rightexp {
                                str: "\'>=strlowereboad\'"
                              }
                            }
                          }
                          binop {
                            concat: 0
                          }
                          rightexp {
                          }
                        }
                      }
                      stopexp {
                        str: "debug.getlocal"
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                  stat {
                    list {
                      varlist {
                        var {
                        }
                      }
                      explist {
                        expressions {
                          false: 36
                        }
                        expressions {
                          str: "\000\000\000\000\000\000\000w&\'>\'"
                        }
                        explast {
                          function {
                            body {
                              block {
                                chunk {
                                  stat {
                                    whilecycle {
                                      condition {
                                      }
                                      doblock {
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                  }
                                  stat {
                                    whilecycle {
                                      condition {
                                        unary {
                                          unop {
                                          }
                                          exp {
                                            nil: 0
                                          }
                                        }
                                      }
                                      doblock {
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
