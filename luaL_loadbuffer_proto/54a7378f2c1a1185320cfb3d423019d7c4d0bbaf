chunk {
  stat {
    forcyclename {
      name {
        name: "_ENV"
        num: 1684104562
      }
      startexp {
        prefixexp {
          var {
            indexexpr {
              prefixexp {
                var {
                  indexname {
                    prefixexp {
                    }
                    Name: "\375\377\377\377"
                  }
                }
              }
              exp {
              }
            }
          }
        }
      }
      stopexp {
        number: 336.50018978118896
      }
      stepexp {
        unary {
          unop {
          }
          exp {
            function {
              body {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                }
                stopexp {
                  true: 1818848768
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                  unary {
                    unop {
                    }
                    exp {
                    }
                  }
                }
                stopexp {
                  str: "+\000\000\000\000\000\000\000"
                }
                stepexp {
                  unary {
                    unop {
                      negate: 0
                    }
                    exp {
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 0
                          }
                          startexp {
                          }
                          stopexp {
                            true: 1818848768
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 0
                          }
                          startexp {
                            unary {
                              unop {
                              }
                              exp {
                              }
                            }
                          }
                          stopexp {
                            str: "+\000\000\000\000\000\000\000"
                          }
                          stepexp {
                            unary {
                              unop {
                                negate: 0
                              }
                              exp {
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
}
