chunk {
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
                binary {
                  leftexp {
                    str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
                  }
                  binop {
                    sub: 0
                  }
                  rightexp {
                    binary {
                      leftexp {
                        str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
                      }
                      binop {
                        sub: 2105344
                      }
                      rightexp {
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      list {
                        varlist {
                          var {
                          }
                          vars {
                            indexname {
                              prefixexp {
                              }
                              Name: ""
                            }
                          }
                        }
                        explist {
                          explast {
                            tableconstructor {
                            }
                          }
                        }
                      }
                    }
                    stat {
                    }
                  }
                }
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                expressions {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          function {
                            body {
                              block {
                                chunk {
                                  laststat {
                                    semicolon: true
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        field {
                        }
                        sep {
                          semicolon: 0
                        }
                      }
                      fields {
                        field {
                          namedassign {
                            name {
                              name: ""
                              num: 0
                            }
                            value {
                              ellipsis: "load"
                            }
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
                expressions {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                          str: "\'"
                        }
                      }
                    }
                  }
                }
                expressions {
                  tableconstructor {
                    fieldlist {
                      firstField {
                      }
                    }
                  }
                }
                expressions {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        namedassign {
                          name {
                            name: ""
                            num: 0
                          }
                          value {
                          }
                        }
                      }
                    }
                  }
                }
                expressions {
                  tableconstructor {
                  }
                }
                expressions {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            false: 67108864
                          }
                          value {
                          }
                        }
                      }
                    }
                  }
                }
                expressions {
                }
                expressions {
                  tableconstructor {
                    fieldlist {
                      firstField {
                      }
                    }
                  }
                }
                expressions {
                  tableconstructor {
                  }
                }
                explast {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                          str: "os.setlocale\'"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        str: "\033"
      }
    }
  }
  laststat {
    explist {
      explist {
        expressions {
          ellipsis: "\330"
        }
        explast {
        }
      }
    }
    semicolon: true
  }
}
