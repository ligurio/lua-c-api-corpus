chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
            number: -3.0002212524414062
          }
          binop {
            mod: 0
          }
          rightexp {
            number: 0
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    explist {
      explist {
        expressions {
          nil: 16252928
        }
        explast {
          binary {
            leftexp {
              function {
                body {
                  parlist {
                    ellipsis
                  }
                  block {
                    chunk {
                      stat {
                        repeatcycle {
                          block {
                            chunk {
                            }
                          }
                          condition {
                            str: "string.sub"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            binop {
              div: 0
            }
            rightexp {
              tableconstructor {
                fieldlist {
                  firstField {
                  }
                  lastSep {
                    comma: 1543503872
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
