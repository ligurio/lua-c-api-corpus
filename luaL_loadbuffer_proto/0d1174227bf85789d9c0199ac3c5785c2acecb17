chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: "getmetatable"
          num: 0
        }
      }
      expressions {
        explast {
          prefixexp {
            var {
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          tableconstructor {
          }
        }
        expressions {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                }
                args {
                  str: "\'"
                }
              }
            }
          }
        }
        expressions {
          number: 0
        }
        expressions {
          false: 8192
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
                expression {
                  str: "coroutine.running"
                }
              }
            }
          }
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
                expression {
                  str: "coroutine.running"
                }
              }
            }
          }
        }
        expressions {
        }
        expressions {
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
                exprassign {
                  key {
                  }
                  value {
                    false: 0
                  }
                }
              }
            }
          }
        }
        explast {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                }
                args {
                  str: "\'"
                }
              }
            }
          }
        }
      }
    }
  }
  laststat {
    break: 0
  }
}
