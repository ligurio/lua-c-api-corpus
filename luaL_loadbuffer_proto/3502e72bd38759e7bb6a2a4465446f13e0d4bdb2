chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
    semicolon: true
  }
  stat {
    forcyclename {
      name {
        name: "~"
        num: 0
      }
      startexp {
        unary {
          unop {
            not: 16449536
          }
          exp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    str: "\'<66>.633332<\'<8"
                  }
                  binop {
                  }
                  rightexp {
                    str: "\'<66>.633332<\'<8"
                  }
                }
              }
              binop {
                sub: 0
              }
              rightexp {
                str: "\'<66>.633332<\'<8"
              }
            }
          }
        }
      }
      stopexp {
        unary {
          unop {
            not: 16449536
          }
          exp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    str: "\'<66>.633332<\'<8"
                  }
                  binop {
                    sub: 0
                  }
                  rightexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            str: "\'<66>.633332<\'<8"
                          }
                          binop {
                          }
                          rightexp {
                            str: "\'<66>.633332<\'<8"
                          }
                        }
                      }
                      binop {
                        sub: 0
                      }
                      rightexp {
                        str: "\'<66>.633332<\'<8"
                      }
                    }
                  }
                }
              }
              binop {
              }
              rightexp {
                str: "\'<66>.633332<\'<8"
              }
            }
          }
        }
      }
      stepexp {
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: "~"
                            num: 0
                          }
                          startexp {
                            unary {
                              unop {
                                not: 16449536
                              }
                              exp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        str: "\'<66>.633332<\'<8"
                                      }
                                      binop {
                                      }
                                      rightexp {
                                        str: "\'<66>.633332<\'<8"
                                      }
                                    }
                                  }
                                  binop {
                                    sub: 0
                                  }
                                  rightexp {
                                    str: "\'<66>.633332<\'<8"
                                  }
                                }
                              }
                            }
                          }
                          stopexp {
                            unary {
                              unop {
                                not: 16449536
                              }
                              exp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        str: "\'<66>.633332<\'<8"
                                      }
                                      binop {
                                        sub: 0
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                            binary {
                                              leftexp {
                                                str: "\'<66>.633332<\'<8"
                                              }
                                              binop {
                                              }
                                              rightexp {
                                                str: "\'<66>.633332<\'<8"
                                              }
                                            }
                                          }
                                          binop {
                                            sub: 0
                                          }
                                          rightexp {
                                            str: "\'<66>.633332<\'<8"
                                          }
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                  }
                                  rightexp {
                                    str: "\'<66>.633332<\'<8"
                                  }
                                }
                              }
                            }
                          }
                          stepexp {
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  whilecycle {
                                    condition {
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                          stat {
                                            semicolon: true
                                          }
                                        }
                                      }
                                    }
                                  }
                                  semicolon: false
                                }
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
              semicolon: false
            }
          }
        }
      }
    }
    semicolon: true
  }
}
