chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
          stat {
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                  functioncall {
                    prefArgs {
                      prefixexp {
                        functioncall {
                          prefArgs {
                            prefixexp {
                            }
                            args {
                              str: "\'string.upper \'stat {\n              localnames {\n"
                            }
                          }
                        }
                      }
                      args {
                        str: "\'string.upper \'stat {\n              localnames {\n"
                      }
                    }
                  }
                }
                args {
                  explist {
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
            list {
              varlist {
                var {
                }
                vars {
                  name {
                    name: "io.write"
                    num: 0
                  }
                }
                vars {
                }
              }
              explist {
                expressions {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        namedassign {
                          name {
                            name: ""
                            num: 0
                          }
                          value {
                          }
                        }
                      }
                      fields {
                        field {
                          expression {
                            binary {
                              leftexp {
                                number: -4.9591064453125e-05
                              }
                              binop {
                                mult: 4
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    number: -4.9591064453125e-05
                                  }
                                  binop {
                                    mult: 4
                                  }
                                  rightexp {
                                    binary {
                                      leftexp {
                                        number: -4.9591064453125e-05
                                      }
                                      binop {
                                        mult: 4
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                            number: -4.9591064453125e-05
                                          }
                                          binop {
                                            mult: 4
                                          }
                                          rightexp {
                                            binary {
                                              leftexp {
                                                number: -3.0517578125e-05
                                              }
                                              binop {
                                                mult: 4
                                              }
                                              rightexp {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          expression {
                            prefixexp {
                              exp {
                                str: " "
                              }
                            }
                          }
                        }
                        sep {
                        }
                      }
                      lastSep {
                        comma: 8192
                      }
                    }
                  }
                }
                expressions {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                          str: "\'"
                        }
                      }
                    }
                  }
                }
                expressions {
                  binary {
                    leftexp {
                      ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                    }
                    binop {
                      greaterEqual: 2097152
                    }
                    rightexp {
                      true: 570425344
                    }
                  }
                }
                expressions {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  namedassign {
                                    name {
                                      name: ""
                                      num: 0
                                    }
                                    value {
                                    }
                                  }
                                }
                                fields {
                                  field {
                                    expression {
                                      binary {
                                        leftexp {
                                          number: -4.9591064453125e-05
                                        }
                                        binop {
                                          mult: 4
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                              number: -4.9591064453125e-05
                                            }
                                            binop {
                                              mult: 4
                                            }
                                            rightexp {
                                              binary {
                                                leftexp {
                                                  number: -4.9591064453125e-05
                                                }
                                                binop {
                                                  mult: 4
                                                }
                                                rightexp {
                                                  binary {
                                                    leftexp {
                                                      number: -4.9591064453125e-05
                                                    }
                                                    binop {
                                                      mult: 4
                                                    }
                                                    rightexp {
                                                      binary {
                                                        leftexp {
                                                          number: -3.0517578125e-05
                                                        }
                                                        binop {
                                                          mult: 4
                                                        }
                                                        rightexp {
                                                          binary {
                                                            leftexp {
                                                              number: -3.0517578125e-05
                                                            }
                                                            binop {
                                                              concat: 4
                                                            }
                                                            rightexp {
                                                              str: "getupvalue"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  sep {
                                  }
                                }
                                fields {
                                  field {
                                    expression {
                                      prefixexp {
                                        exp {
                                          str: " "
                                        }
                                      }
                                    }
                                  }
                                  sep {
                                  }
                                }
                                lastSep {
                                  comma: 8192
                                }
                              }
                            }
                          }
                          value {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                }
                                lastSep {
                                  comma: 538968064
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                expressions {
                  tableconstructor {
                  }
                }
                expressions {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          var {
                          }
                        }
                        args {
                          str: "io.write"
                        }
                      }
                    }
                  }
                }
                expressions {
                }
                expressions {
                  tableconstructor {
                  }
                }
                expressions {
                  tableconstructor {
                  }
                }
                explast {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                          str: "\'"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        unary {
          unop {
            not: 0
          }
          exp {
            str: "\'string.upper \'"
          }
        }
      }
    }
  }
}
