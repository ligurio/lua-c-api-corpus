chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: "\021"
          num: 127
        }
        names {
          name: "collectgarbage"
          num: 101
        }
        names {
          name: ""
          num: 127
        }
      }
      expressions {
        expressions {
          prefixexp {
            var {
              name {
                name: "pcall"
                num: 127
              }
            }
          }
        }
        explast {
          function {
            body {
              parlist {
                namelist {
                  namelist {
                    firstname {
                      name: ""
                      num: 0
                    }
                  }
                }
              }
              block {
                chunk {
                  stat {
                    call {
                    }
                  }
                  stat {
                    whilecycle {
                      condition {
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  stat {
                    whilecycle {
                      condition {
                        tableconstructor {
                          fieldlist {
                            firstField {
                              exprassign {
                                key {
                                  binary {
                                    leftexp {
                                      binary {
                                        leftexp {
                                          binary {
                                            leftexp {
                                              number: -207.999999996275
                                            }
                                            binop {
                                              add: 4
                                            }
                                            rightexp {
                                              binary {
                                                leftexp {
                                                  binary {
                                                    leftexp {
                                                      function {
                                                        body {
                                                          block {
                                                            chunk {
                                                              laststat {
                                                                break: 4
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    binop {
                                                      greaterEqual: 2147483648
                                                    }
                                                    rightexp {
                                                      str: "\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345\345"
                                                    }
                                                  }
                                                }
                                                binop {
                                                }
                                                rightexp {
                                                  binary {
                                                    leftexp {
                                                      str: "\'<coroutane.yiel>>\'<coroutane.yiel>>>>>>>>>>>>>>>>>>>>d"
                                                    }
                                                    binop {
                                                      exp: 1886679808
                                                    }
                                                    rightexp {
                                                      number: -4.9591064453125e-05
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        binop {
                                          div: 0
                                        }
                                        rightexp {
                                          number: -4.9591064453125e-05
                                        }
                                      }
                                    }
                                    binop {
                                      add: 4
                                    }
                                    rightexp {
                                      number: -4.9591064453125e-05
                                    }
                                  }
                                }
                                value {
                                }
                              }
                            }
                          }
                        }
                      }
                      doblock {
                        block {
                          chunk {
                            stat {
                              whilecycle {
                                condition {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        exprassign {
                                          key {
                                            binary {
                                              leftexp {
                                                binary {
                                                  leftexp {
                                                    number: -207.999999996275
                                                  }
                                                  binop {
                                                    add: 4
                                                  }
                                                  rightexp {
                                                    binary {
                                                      leftexp {
                                                        number: -4.9591064453125e-05
                                                      }
                                                      binop {
                                                      }
                                                      rightexp {
                                                        binary {
                                                          leftexp {
                                                            str: "\'<coroutane.yiel>>\'<coroutane.yiel>>>>>>>>>>>>>>>>>>>>d"
                                                          }
                                                          binop {
                                                            exp: 1886679808
                                                          }
                                                          rightexp {
                                                            number: 0
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              binop {
                                                div: 0
                                              }
                                              rightexp {
                                                number: -4.9591064453125e-05
                                              }
                                            }
                                          }
                                          value {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                doblock {
                                  block {
                                    chunk {
                                      stat {
                                      }
                                      laststat {
                                        break: 4294967289
                                        semicolon: true
                                      }
                                    }
                                  }
                                }
                              }
                              semicolon: false
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          laststat {
                            explist {
                              explist {
                                expressions {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                    }
                                    rightexp {
                                      unary {
                                        unop {
                                          length: 2147483648
                                        }
                                        exp {
                                          binary {
                                            leftexp {
                                              tableconstructor {
                                                fieldlist {
                                                  firstField {
                                                    expression {
                                                      number: 0
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            binop {
                                            }
                                            rightexp {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                explast {
                                }
                              }
                            }
                          }
                        }
                      }
                      condition {
                        nil: 8224
                      }
                    }
                  }
                  laststat {
                    break: 4294967289
                    semicolon: true
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              func {
                name {
                  firstname {
                    name: "tonumber"
                    num: 2048
                  }
                }
                body {
                  parlist {
                    namelist {
                      namelist {
                        firstname {
                          name: "tonumber"
                          num: 2048
                        }
                      }
                    }
                  }
                  block {
                    chunk {
                      stat {
                        localnames {
                          namelist {
                            firstname {
                              name: ""
                              num: 0
                            }
                          }
                        }
                      }
                      stat {
                        list {
                          varlist {
                            var {
                              name {
                                name: ""
                                num: 4278190080
                              }
                            }
                            vars {
                            }
                          }
                          explist {
                            expressions {
                              number: 6.63123684676648e-316
                            }
                            expressions {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                      str: "\'"
                                    }
                                  }
                                }
                              }
                            }
                            expressions {
                              str: "debug.traceback"
                            }
                            expressions {
                              ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                            }
                            expressions {
                              unary {
                                unop {
                                }
                                exp {
                                  nil: 4
                                }
                              }
                            }
                            expressions {
                              tableconstructor {
                              }
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                              binary {
                                leftexp {
                                }
                                binop {
                                  mod: 8192
                                }
                                rightexp {
                                  nil: 0
                                }
                              }
                            }
                            expressions {
                              tableconstructor {
                              }
                            }
                            expressions {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                    namedassign {
                                      name {
                                        name: "\215\215\215\215\215\215\215\215"
                                        num: 0
                                      }
                                      value {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            explast {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                      str: "\'"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            laststat {
              explist {
                explist {
                  explast {
                    prefixexp {
                      functioncall {
                        namedArgs {
                          prefixexp {
                            var {
                              name {
                                name: ""
                                num: 0
                              }
                            }
                          }
                          name {
                            name: ""
                            num: 0
                          }
                          args {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  laststat {
    semicolon: true
  }
}
