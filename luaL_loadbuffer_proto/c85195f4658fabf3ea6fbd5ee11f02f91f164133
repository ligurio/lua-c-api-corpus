chunk {
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
          stat {
            semicolon: true
          }
        }
      }
      last {
        chunk {
          laststat {
            explist {
              explist {
                explast {
                  str: "\010"
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: "@@"
        num: 0
      }
      funcbody {
        parlist {
          ellipsis: "\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263"
        }
        block {
          chunk {
            stat {
              semicolon: true
            }
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 0
                  }
                  names {
                    name: "@"
                    num: 0
                  }
                }
                expressions {
                  explast {
                  }
                }
                doblock {
                  block {
                    chunk {
                      laststat {
                        explist {
                          explist {
                            explast {
                              ellipsis: "@"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              semicolon: true
            }
            stat {
              ifstat {
                condition {
                  function {
                    body {
                      parlist {
                        ellipsis: "\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263\263"
                      }
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                first {
                  chunk {
                  }
                }
              }
            }
            laststat {
              explist {
                explist {
                  explast {
                    ellipsis: "@"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 0
        }
        args {
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        ellipsis: "z"
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
