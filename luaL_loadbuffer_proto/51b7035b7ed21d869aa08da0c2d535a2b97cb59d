chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: ""
                  num: 1
                }
                names {
                  name: ""
                  num: 0
                }
              }
            }
          }
          stat {
            forcyclelist {
              names {
                firstname {
                  name: ""
                  num: 1
                }
              }
              expressions {
                explast {
                }
              }
              doblock {
                block {
                  chunk {
                    laststat {
                      semicolon: true
                    }
                  }
                }
              }
            }
          }
          stat {
            func {
              name {
                firstname {
                  name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                  num: 0
                }
              }
              body {
                parlist {
                  namelist {
                    namelist {
                      firstname {
                        name: ""
                        num: 0
                      }
                    }
                    ellipsis: ":"
                  }
                }
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            localfunc {
              name {
                name: ""
                num: 4
              }
              funcbody {
                block {
                  chunk {
                    stat {
                      list {
                        varlist {
                          var {
                            indexname {
                              prefixexp {
                                functioncall {
                                  namedArgs {
                                    prefixexp {
                                    }
                                    name {
                                      name: ""
                                      num: 0
                                    }
                                    args {
                                      explist {
                                        explist {
                                          explast {
                                            binary {
                                              leftexp {
                                              }
                                              binop {
                                              }
                                              rightexp {
                                                str: "\336"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              Name: ""
                            }
                          }
                          vars {
                            name {
                              name: ""
                              num: 1
                            }
                          }
                        }
                        explist {
                          explast {
                          }
                        }
                      }
                    }
                    stat {
                    }
                    stat {
                      forcyclename {
                        name {
                          name: "z"
                          num: 134217728
                        }
                        startexp {
                          str: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                        }
                        stopexp {
                        }
                        stepexp {
                          number: 0
                        }
                        doblock {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                    laststat {
                    }
                  }
                }
              }
            }
          }
          stat {
            forcyclelist {
              names {
                firstname {
                  name: ""
                  num: 1
                }
                names {
                  name: ""
                  num: 4
                }
              }
              expressions {
                explast {
                  unary {
                    unop {
                    }
                    exp {
                      ellipsis: "\377"
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      semicolon: false
                    }
                  }
                }
              }
            }
          }
          laststat {
          }
        }
      }
      condition {
        function {
          body {
            block {
              chunk {
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
}
