chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            func {
              name {
                firstname {
                  name: ""
                  num: 0
                }
              }
              body {
                block {
                  chunk {
                    laststat {
                      explist {
                        explist {
                          expressions {
                            prefixexp {
                              exp {
                                binary {
                                  leftexp {
                                    nil: 0
                                  }
                                  binop {
                                  }
                                  rightexp {
                                  }
                                }
                              }
                            }
                          }
                          expressions {
                          }
                          expressions {
                          }
                          explast {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            whilecycle {
              condition {
                binary {
                  leftexp {
                  }
                  binop {
                    concat: 0
                  }
                  rightexp {
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      whilecycle {
                        condition {
                        }
                        doblock {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                    stat {
                      whilecycle {
                        condition {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                exprassign {
                                  key {
                                  }
                                  value {
                                    true: 0
                                  }
                                }
                              }
                              fields {
                                field {
                                  exprassign {
                                    key {
                                      unary {
                                        unop {
                                        }
                                        exp {
                                          prefixexp {
                                            functioncall {
                                              prefArgs {
                                                prefixexp {
                                                }
                                                args {
                                                  explist {
                                                    explist {
                                                      explast {
                                                        ellipsis: "&"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    value {
                                      tableconstructor {
                                      }
                                    }
                                  }
                                }
                                sep {
                                }
                              }
                              lastSep {
                              }
                            }
                          }
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                              }
                            }
                          }
                        }
                      }
                    }
                    stat {
                      whilecycle {
                        condition {
                        }
                        doblock {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                    stat {
                      whilecycle {
                        condition {
                        }
                        doblock {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
          }
          stat {
            whilecycle {
              condition {
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        true: 0
      }
    }
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            prefixexp {
              var {
                indexname {
                  prefixexp {
                  }
                  Name: "\001\000\000\000\000\000\013\037"
                }
              }
            }
          }
          binop {
            concat: 0
          }
          rightexp {
            number: 0
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  laststat {
    explist {
    }
    semicolon: true
  }
}
