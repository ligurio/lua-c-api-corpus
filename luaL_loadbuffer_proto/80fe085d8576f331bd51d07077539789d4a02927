chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              break: 0
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
        }
      }
      explist {
        explast {
          binary {
            leftexp {
              binary {
                leftexp {
                }
                binop {
                  or: 0
                }
                rightexp {
                  tableconstructor {
                    fieldlist {
                      firstField {
                      }
                      lastSep {
                        comma: 36608
                      }
                    }
                  }
                }
              }
            }
            binop {
              notEqual: 0
            }
            rightexp {
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          binary {
            leftexp {
            }
            binop {
              or: 0
            }
            rightexp {
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          binary {
            leftexp {
            }
            binop {
              or: 0
            }
            rightexp {
              prefixexp {
                functioncall {
                  prefArgs {
                    prefixexp {
                      functioncall {
                        namedArgs {
                          prefixexp {
                          }
                          name {
                            name: ""
                            num: 0
                          }
                          args {
                            str: "hotexit=1"
                          }
                        }
                      }
                    }
                    args {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          binary {
            leftexp {
            }
            binop {
              or: 2097152000
            }
            rightexp {
              prefixexp {
                exp {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          exp {
                            unary {
                              unop {
                              }
                              exp {
                                ellipsis: "\255"
                              }
                            }
                          }
                        }
                        args {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          binary {
            leftexp {
            }
            binop {
              or: 0
            }
            rightexp {
              prefixexp {
                functioncall {
                  prefArgs {
                    prefixexp {
                      functioncall {
                        namedArgs {
                          prefixexp {
                          }
                          name {
                            name: ""
                            num: 0
                          }
                          args {
                            str: "hotexit=1"
                          }
                        }
                      }
                    }
                    args {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
