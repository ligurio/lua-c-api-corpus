chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 2
      }
      funcbody {
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: ""
                  num: 2
                }
                funcbody {
                  block {
                    chunk {
                      stat {
                        localfunc {
                          name {
                            name: ""
                            num: 0
                          }
                          funcbody {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 2
      }
      funcbody {
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: ""
                  num: 2
                }
                funcbody {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 4
      }
      funcbody {
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: ""
                  num: 2
                }
                funcbody {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: ""
                  num: 0
                }
                funcbody {
                  block {
                    chunk {
                      laststat {
                        explist {
                          explist {
                            explast {
                              str: "\234"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: false
            }
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 4
      }
      funcbody {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                    laststat {
                      explist {
                        explist {
                          explast {
                            unary {
                              unop {
                              }
                              exp {
                                prefixexp {
                                  functioncall {
                                    prefArgs {
                                      prefixexp {
                                      }
                                      args {
                                        str: "\234"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                condition {
                }
              }
            }
          }
        }
      }
    }
  }
}
