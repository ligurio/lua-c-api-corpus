chunk {
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            indexexpr {
              prefixexp {
                functioncall {
                  prefArgs {
                    prefixexp {
                      var {
                        indexexpr {
                          prefixexp {
                            functioncall {
                              namedArgs {
                                prefixexp {
                                  functioncall {
                                  }
                                }
                                name {
                                  name: ""
                                  num: 16384
                                }
                                args {
                                }
                              }
                            }
                          }
                          exp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    str: ",\\000\\000\\z    LUA_INIT_5_4                                                                      000"
                                  }
                                  binop {
                                    and: 0
                                  }
                                  rightexp {
                                    str: ",\\000\\000\\z    LUA_INIT_5_4                                                                      000"
                                  }
                                }
                              }
                              binop {
                                and: 0
                              }
                              rightexp {
                                str: ",\\000\\000\\z    LUA_INIT_5_4                                                                      000"
                              }
                            }
                          }
                        }
                      }
                    }
                    args {
                      explist {
                      }
                    }
                  }
                }
              }
              exp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        str: ",\\000\\000\\z    LUA_INIT_5_4                                                                      000"
                      }
                      binop {
                        and: 0
                      }
                      rightexp {
                        str: ",\\000\\000\\z    LUA_INIT_5_4                                                                      000"
                      }
                    }
                  }
                  binop {
                    and: 0
                  }
                  rightexp {
                    str: ",\\000\\000\\z    LUA_INIT_5_4                                                                      000"
                  }
                }
              }
            }
          }
        }
        args {
          explist {
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            indexexpr {
              prefixexp {
                exp {
                }
              }
              exp {
                binary {
                  leftexp {
                    str: ",\\000\\000\\z    LUA_INIT_5_4                                                                      000"
                  }
                  binop {
                    and: 0
                  }
                  rightexp {
                    str: ",\\000\\000\\z    LUA_INIT_5_4                                                                      000"
                  }
                }
              }
            }
          }
        }
        args {
          explist {
          }
        }
      }
    }
  }
  laststat {
    explist {
    }
    semicolon: false
  }
}
