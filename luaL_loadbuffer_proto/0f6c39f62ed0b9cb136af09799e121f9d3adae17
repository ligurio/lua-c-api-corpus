chunk {
  stat {
    localfunc {
      name {
        name: "\'>6662&6%332<<\'8"
        num: 0
      }
      funcbody {
        block {
          chunk {
            laststat {
              explist {
                explist {
                  expressions {
                    str: "\'>6662&6%332<<\'8"
                  }
                  expressions {
                    str: "\'>6662&6%3<\'8"
                  }
                  expressions {
                  }
                  expressions {
                    str: "\'>6662&6%332<<\'8"
                  }
                  explast {
                    ellipsis: "-"
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    localfunc {
      name {
        name: "\'>6662&6%332<<\'8"
        num: 0
      }
      funcbody {
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: "\'>6662&6%332<<\'8"
                  num: 0
                }
                funcbody {
                  block {
                    chunk {
                      stat {
                      }
                      laststat {
                        explist {
                          explist {
                            expressions {
                              true: 0
                            }
                            expressions {
                              str: "\'>6662&6%3<\'8"
                            }
                            expressions {
                            }
                            expressions {
                              binary {
                                leftexp {
                                  str: "\'-666633332<\'<8<8"
                                }
                                binop {
                                  div: 0
                                }
                                rightexp {
                                  str: "\'-66333623<\'<8<8"
                                }
                              }
                            }
                            explast {
                              nil: 4
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: false
            }
            laststat {
              explist {
                explist {
                  expressions {
                    true: 0
                  }
                  expressions {
                    str: "\'>666:&6%3<\'8"
                  }
                  expressions {
                  }
                  expressions {
                    binary {
                      leftexp {
                        str: "\'-666633332<\'<8<8"
                      }
                      binop {
                        div: 0
                      }
                      rightexp {
                        str: "\'-666333623<\'<8<8"
                      }
                    }
                  }
                  explast {
                    nil: 4
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: false
  }
}
