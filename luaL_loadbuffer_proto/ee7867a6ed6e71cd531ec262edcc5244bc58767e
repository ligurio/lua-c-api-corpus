chunk {
  stat {
    forcyclename {
      name {
        name: "count\\r_+"
        num: 0
      }
      startexp {
        unary {
          unop {
            negate: 65
          }
          exp {
            str: "\001\000\000\000"
          }
        }
      }
      stopexp {
        true: 0
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                          }
                        }
                      }
                      exp {
                        binary {
                          leftexp {
                          }
                          binop {
                            add: 0
                          }
                          rightexp {
                            prefixexp {
                            }
                          }
                        }
                      }
                    }
                  }
                }
                explist {
                  expressions {
                    number: 3.95252516672997e-323
                  }
                  expressions {
                    str: "::mathns::.i::::::::::::[::::::::::::::::::::::::::::::::::"
                  }
                  explast {
                  }
                }
              }
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                    var {
                      name {
                        name: "load"
                        num: 0
                      }
                    }
                  }
                  args {
                    explist {
                      explist {
                        explast {
                          function {
                            body {
                              parlist {
                                namelist {
                                  namelist {
                                    firstname {
                                      name: ""
                                      num: 21
                                    }
                                  }
                                  ellipsis: "*"
                                }
                              }
                              block {
                                chunk {
                                  stat {
                                    repeatcycle {
                                      block {
                                        chunk {
                                          stat {
                                            call {
                                              prefArgs {
                                                prefixexp {
                                                  var {
                                                    name {
                                                      name: "load"
                                                      num: 0
                                                    }
                                                  }
                                                }
                                                args {
                                                  explist {
                                                    explist {
                                                      explast {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          stat {
                                            call {
                                              prefArgs {
                                                prefixexp {
                                                  var {
                                                    name {
                                                      name: "load"
                                                      num: 50331649
                                                    }
                                                  }
                                                }
                                                args {
                                                  explist {
                                                    explist {
                                                      explast {
                                                        str: "\000\000\000\000"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      condition {
                                        binary {
                                          leftexp {
                                            binary {
                                              leftexp {
                                                binary {
                                                  leftexp {
                                                  }
                                                  binop {
                                                    exp: 8192
                                                  }
                                                  rightexp {
                                                    str: "\'&~packqge.ioeload\'"
                                                  }
                                                }
                                              }
                                              binop {
                                                exp: 8192
                                              }
                                              rightexp {
                                                unary {
                                                  unop {
                                                  }
                                                  exp {
                                                    ellipsis: "q"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          binop {
                                            div: 175
                                          }
                                          rightexp {
                                            number: -1.6122275479153505e+265
                                          }
                                        }
                                      }
                                    }
                                  }
                                  laststat {
                                    semicolon: true
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              call {
                namedArgs {
                  prefixexp {
                  }
                  name {
                    name: ""
                    num: 0
                  }
                  args {
                    str: "\206"
                  }
                }
              }
              semicolon: false
            }
          }
        }
      }
    }
    semicolon: false
  }
}
