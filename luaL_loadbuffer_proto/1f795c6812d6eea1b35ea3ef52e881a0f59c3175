chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        parlist {
          namelist {
            namelist {
              firstname {
                name: "_ENV"
                num: 8
              }
              names {
                name: ""
                num: 8
              }
              names {
                name: ""
                num: 8
              }
              names {
                name: ""
                num: 8
              }
            }
            ellipsis: "math.rad"
          }
        }
        block {
          chunk {
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                expressions {
                  expressions {
                    binary {
                      leftexp {
                        str: "\'<<\'<<8"
                      }
                      binop {
                        div: 8388608
                      }
                      rightexp {
                      }
                    }
                  }
                  expressions {
                    str: ","
                  }
                  expressions {
                  }
                  expressions {
                    nil: 3472883712
                  }
                  explast {
                  }
                }
                doblock {
                  block {
                    chunk {
                      laststat {
                      }
                    }
                  }
                }
              }
            }
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
                exprassign {
                  key {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                            var {
                              name {
                                name: "xpcall"
                                num: 0
                              }
                            }
                          }
                          args {
                            explist {
                              explist {
                                expressions {
                                  prefixexp {
                                  }
                                }
                                expressions {
                                  prefixexp {
                                    var {
                                      name {
                                        name: "collectgarbage"
                                        num: 0
                                      }
                                    }
                                  }
                                }
                                explast {
                                  tableconstructor {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  value {
                  }
                }
              }
              fields {
                field {
                  exprassign {
                    key {
                      prefixexp {
                        functioncall {
                          prefArgs {
                            prefixexp {
                              var {
                                name {
                                  name: "xpcall"
                                  num: 0
                                }
                              }
                            }
                            args {
                              explist {
                                explist {
                                  expressions {
                                    prefixexp {
                                    }
                                  }
                                  expressions {
                                    prefixexp {
                                      var {
                                        name {
                                          name: "collectgarbage"
                                          num: 0
                                        }
                                      }
                                    }
                                  }
                                  explast {
                                    tableconstructor {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    value {
                      binary {
                        leftexp {
                          number: 2
                        }
                        binop {
                          exp: 0
                        }
                        rightexp {
                          ellipsis: "xpcall"
                        }
                      }
                    }
                  }
                }
                sep {
                  comma: 128
                }
              }
              fields {
                field {
                  exprassign {
                    key {
                      prefixexp {
                      }
                    }
                    value {
                    }
                  }
                }
                sep {
                  semicolon: 1560281088
                }
              }
            }
          }
        }
      }
    }
  }
  laststat {
    semicolon: true
  }
}
