chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
      explist {
        explast {
          tableconstructor {
          }
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: "\001\000\000\000"
          num: 0
        }
      }
      body {
        block {
          chunk {
            stat {
              call {
                namedArgs {
                  prefixexp {
                    var {
                      indexname {
                        prefixexp {
                        }
                        Name: ""
                      }
                    }
                  }
                  name {
                    name: ""
                    num: 0
                  }
                  args {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                }
                args {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          str: "\003\000\000\000\000\000\000\000"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        prefixexp {
          functioncall {
          }
        }
      }
    }
  }
}
