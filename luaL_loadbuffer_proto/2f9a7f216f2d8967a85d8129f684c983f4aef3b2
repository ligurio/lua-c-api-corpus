chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            ifstat {
              condition {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                      }
                      binop {
                        div: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                              }
                              binop {
                                div: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                  }
                                  binop {
                                    div: 0
                                  }
                                  rightexp {
                                  }
                                }
                              }
                            }
                          }
                          binop {
                          }
                          rightexp {
                            true: 0
                          }
                        }
                      }
                    }
                  }
                  binop {
                    div: 0
                  }
                  rightexp {
                    true: 0
                  }
                }
              }
              first {
                chunk {
                }
              }
              last {
                chunk {
                }
              }
            }
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          number: 0
        }
        explast {
          tableconstructor {
          }
        }
      }
    }
  }
}
