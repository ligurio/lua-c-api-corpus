chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 33537
        }
        names {
          name: ""
          num: 32
        }
        names {
          name: "\000\000\000\000"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ","
          num: 1
        }
        names {
          name: ""
          num: 1684104562
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\n"
          num: 0
        }
        names {
          name: ","
          num: 262144
        }
        names {
          name: ""
          num: 150994944
        }
        names {
          name: "\000\000\000\000"
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "string.packsize"
          num: 0
        }
        names {
          name: "\317"
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\000\000\000\000"
          num: 0
        }
        names {
          name: ""
          num: 4
        }
        names {
          name: ","
          num: 1
        }
        names {
          name: ","
          num: 262144
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 4
        }
      }
      explist {
        explast {
        }
      }
    }
  }
  stat {
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 4
        }
        names {
          name: " "
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 42752
        }
        names {
          name: ""
          num: 33537
        }
        names {
          name: "\272,"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 19
        }
        names {
          name: ""
          num: 42973
        }
        names {
          name: ","
          num: 1
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: "/"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ","
          num: 262144
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
    }
    semicolon: true
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 33537
        }
        names {
          name: ""
          num: 32
        }
        names {
          name: "\000\000\000\000"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ","
          num: 1
        }
        names {
          name: ""
          num: 1684104562
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\n"
          num: 0
        }
        names {
          name: ","
          num: 262144
        }
        names {
          name: ""
          num: 150994944
        }
        names {
          name: "\000\000\000\000"
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "string.packsize"
          num: 0
        }
        names {
          name: "\317"
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\000\000\000\000"
          num: 4
        }
        names {
          name: ""
          num: 4
        }
        names {
          name: ","
          num: 1
        }
        names {
          name: ","
          num: 262144
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 4
        }
      }
      explist {
        explast {
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: "A"
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ","
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: "\000\000\000\000\000\000\000\004"
          num: 197
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\374\374\374\374\374\374\374"
          num: 0
        }
        names {
          name: "\000\000\000\000"
          num: 1
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: "}}}}}}}z}}}}}}}}"
          num: 1
        }
        names {
          name: ""
          num: 1701080931
        }
        names {
          name: "#"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        expressions {
          prefixexp {
            functioncall {
              namedArgs {
                prefixexp {
                }
                name {
                  name: ""
                  num: 0
                }
                args {
                  tableconstructor {
                    fieldlist {
                      firstField {
                      }
                      fields {
                        field {
                        }
                        sep {
                          semicolon: 536870912
                        }
                      }
                      lastSep {
                        comma: 0
                      }
                    }
                  }
                }
              }
            }
          }
        }
        explast {
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  explast {
                    binary {
                      leftexp {
                      }
                      binop {
                        add: 2
                      }
                      rightexp {
                        binary {
                          leftexp {
                            prefixexp {
                            }
                          }
                          binop {
                            mult: 0
                          }
                          rightexp {
                            prefixexp {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              forcyclename {
                name {
                  name: "\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244"
                  num: 2097152
                }
                startexp {
                  prefixexp {
                    exp {
                    }
                  }
                }
                stopexp {
                  binary {
                    leftexp {
                      prefixexp {
                      }
                    }
                    binop {
                      concat: 0
                    }
                    rightexp {
                      prefixexp {
                        exp {
                        }
                      }
                    }
                  }
                }
                stepexp {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                            }
                          }
                          explist {
                            explast {
                              binary {
                                leftexp {
                                }
                                binop {
                                  add: 2
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                      }
                                    }
                                    binop {
                                      mult: 0
                                    }
                                    rightexp {
                                      prefixexp {
                                        functioncall {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        forcyclename {
                          name {
                            name: "\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244"
                            num: 2
                          }
                          startexp {
                            prefixexp {
                              exp {
                              }
                            }
                          }
                          stopexp {
                            binary {
                              leftexp {
                                prefixexp {
                                  functioncall {
                                    namedArgs {
                                      prefixexp {
                                        functioncall {
                                          namedArgs {
                                            prefixexp {
                                              functioncall {
                                                prefArgs {
                                                  prefixexp {
                                                    var {
                                                      name {
                                                        name: "__le"
                                                        num: 0
                                                      }
                                                    }
                                                  }
                                                  args {
                                                    explist {
                                                      explist {
                                                        expressions {
                                                          prefixexp {
                                                            exp {
                                                              binary {
                                                                leftexp {
                                                                  binary {
                                                                    leftexp {
                                                                      number: 0
                                                                    }
                                                                    binop {
                                                                      sub: 0
                                                                    }
                                                                    rightexp {
                                                                      binary {
                                                                        leftexp {
                                                                        }
                                                                        binop {
                                                                          add: 5046272
                                                                        }
                                                                        rightexp {
                                                                          binary {
                                                                            leftexp {
                                                                            }
                                                                            binop {
                                                                              add: 2
                                                                            }
                                                                            rightexp {
                                                                              binary {
                                                                                leftexp {
                                                                                  prefixexp {
                                                                                  }
                                                                                }
                                                                                binop {
                                                                                  mult: 0
                                                                                }
                                                                                rightexp {
                                                                                  nil: 2
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                                binop {
                                                                  add: 23
                                                                }
                                                                rightexp {
                                                                  binary {
                                                                    leftexp {
                                                                    }
                                                                    binop {
                                                                      mult: 25393
                                                                    }
                                                                    rightexp {
                                                                      prefixexp {
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                        expressions {
                                                          unary {
                                                            unop {
                                                              negate: 538976288
                                                            }
                                                            exp {
                                                              prefixexp {
                                                              }
                                                            }
                                                          }
                                                        }
                                                        explast {
                                                          ellipsis: "\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            name {
                                              name: ""
                                              num: 0
                                            }
                                            args {
                                            }
                                          }
                                        }
                                      }
                                      name {
                                        name: ""
                                        num: 0
                                      }
                                      args {
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                concat: 23
                              }
                              rightexp {
                                prefixexp {
                                }
                              }
                            }
                          }
                          stepexp {
                            true: 1
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  list {
                                    varlist {
                                      var {
                                      }
                                    }
                                    explist {
                                      explast {
                                        binary {
                                          leftexp {
                                          }
                                          binop {
                                            add: 2
                                          }
                                          rightexp {
                                            binary {
                                              leftexp {
                                                prefixexp {
                                                }
                                              }
                                              binop {
                                                mult: 0
                                              }
                                              rightexp {
                                                prefixexp {
                                                  functioncall {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                stat {
                                  forcyclename {
                                    name {
                                      name: "\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177"
                                      num: 2
                                    }
                                    startexp {
                                      prefixexp {
                                        functioncall {
                                          namedArgs {
                                            prefixexp {
                                              functioncall {
                                                namedArgs {
                                                  prefixexp {
                                                    functioncall {
                                                      prefArgs {
                                                        prefixexp {
                                                          functioncall {
                                                            namedArgs {
                                                              prefixexp {
                                                                functioncall {
                                                                  prefArgs {
                                                                    prefixexp {
                                                                      var {
                                                                        name {
                                                                          name: "__le"
                                                                          num: 0
                                                                        }
                                                                      }
                                                                    }
                                                                    args {
                                                                      explist {
                                                                        explist {
                                                                          expressions {
                                                                            prefixexp {
                                                                              exp {
                                                                                binary {
                                                                                  leftexp {
                                                                                    binary {
                                                                                      leftexp {
                                                                                        number: 0
                                                                                      }
                                                                                      binop {
                                                                                        sub: 0
                                                                                      }
                                                                                      rightexp {
                                                                                        binary {
                                                                                          leftexp {
                                                                                          }
                                                                                          binop {
                                                                                            add: 5046272
                                                                                          }
                                                                                          rightexp {
                                                                                            binary {
                                                                                              leftexp {
                                                                                              }
                                                                                              binop {
                                                                                                add: 2
                                                                                              }
                                                                                              rightexp {
                                                                                                binary {
                                                                                                  leftexp {
                                                                                                    prefixexp {
                                                                                                    }
                                                                                                  }
                                                                                                  binop {
                                                                                                    mult: 0
                                                                                                  }
                                                                                                  rightexp {
                                                                                                    nil: 2
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                  binop {
                                                                                    add: 23
                                                                                  }
                                                                                  rightexp {
                                                                                    binary {
                                                                                      leftexp {
                                                                                      }
                                                                                      binop {
                                                                                        mult: 25393
                                                                                      }
                                                                                      rightexp {
                                                                                        prefixexp {
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                          expressions {
                                                                            unary {
                                                                              unop {
                                                                                negate: 538976288
                                                                              }
                                                                              exp {
                                                                                prefixexp {
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                          explast {
                                                                            ellipsis: "\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              name {
                                                                name: ""
                                                                num: 0
                                                              }
                                                              args {
                                                              }
                                                            }
                                                          }
                                                        }
                                                        args {
                                                          explist {
                                                            explist {
                                                              expressions {
                                                                prefixexp {
                                                                  exp {
                                                                    binary {
                                                                      leftexp {
                                                                        binary {
                                                                          leftexp {
                                                                            number: 0
                                                                          }
                                                                          binop {
                                                                            sub: 0
                                                                          }
                                                                          rightexp {
                                                                            binary {
                                                                              leftexp {
                                                                              }
                                                                              binop {
                                                                                add: 5046272
                                                                              }
                                                                              rightexp {
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                      binop {
                                                                        notEqual: 538976288
                                                                      }
                                                                      rightexp {
                                                                        binary {
                                                                          leftexp {
                                                                          }
                                                                          binop {
                                                                            mult: 25393
                                                                          }
                                                                          rightexp {
                                                                            prefixexp {
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              expressions {
                                                                unary {
                                                                  unop {
                                                                    negate: 538976288
                                                                  }
                                                                  exp {
                                                                    prefixexp {
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              explast {
                                                                ellipsis: "\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  name {
                                                    name: ""
                                                    num: 0
                                                  }
                                                  args {
                                                  }
                                                }
                                              }
                                            }
                                            name {
                                              name: ""
                                              num: 0
                                            }
                                            args {
                                            }
                                          }
                                        }
                                      }
                                    }
                                    stopexp {
                                      binary {
                                        leftexp {
                                          prefixexp {
                                            functioncall {
                                              namedArgs {
                                                prefixexp {
                                                  functioncall {
                                                    namedArgs {
                                                      prefixexp {
                                                        functioncall {
                                                          prefArgs {
                                                            prefixexp {
                                                              var {
                                                                name {
                                                                  name: "__le"
                                                                  num: 0
                                                                }
                                                              }
                                                            }
                                                            args {
                                                              explist {
                                                                explist {
                                                                  expressions {
                                                                    prefixexp {
                                                                    }
                                                                  }
                                                                  expressions {
                                                                    unary {
                                                                      unop {
                                                                        negate: 538976288
                                                                      }
                                                                      exp {
                                                                        prefixexp {
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                  explast {
                                                                    ellipsis: "\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      name {
                                                        name: ""
                                                        num: 3892314112
                                                      }
                                                      args {
                                                      }
                                                    }
                                                  }
                                                }
                                                name {
                                                  name: ""
                                                  num: 0
                                                }
                                                args {
                                                }
                                              }
                                            }
                                          }
                                        }
                                        binop {
                                          concat: 23
                                        }
                                        rightexp {
                                          prefixexp {
                                          }
                                        }
                                      }
                                    }
                                    stepexp {
                                      true: 1
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                          stat {
                                            list {
                                              varlist {
                                                var {
                                                }
                                              }
                                              explist {
                                                expressions {
                                                  true: 0
                                                }
                                                explast {
                                                  binary {
                                                    leftexp {
                                                    }
                                                    binop {
                                                      add: 2
                                                    }
                                                    rightexp {
                                                      binary {
                                                        leftexp {
                                                          prefixexp {
                                                          }
                                                        }
                                                        binop {
                                                          mult: 0
                                                        }
                                                        rightexp {
                                                          nil: 2
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          stat {
                                            block {
                                              block {
                                                chunk {
                                                  stat {
                                                    whilecycle {
                                                      condition {
                                                        tableconstructor {
                                                          fieldlist {
                                                            firstField {
                                                            }
                                                            fields {
                                                              field {
                                                              }
                                                              sep {
                                                                semicolon: 536870912
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      doblock {
                                                        block {
                                                          chunk {
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
            laststat {
              explist {
                explist {
                  expressions {
                    number: 1.6543614223212817e-24
                  }
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    semicolon: true
  }
}
