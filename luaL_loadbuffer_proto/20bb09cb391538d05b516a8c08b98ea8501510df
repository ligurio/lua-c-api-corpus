chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        function {
          body {
            block {
              chunk {
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        function {
          body {
            block {
              chunk {
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
        function {
          body {
            block {
              chunk {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    semicolon: false
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
                vars {
                }
                vars {
                }
                vars {
                  indexname {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                            tableconstructor {
                            }
                          }
                        }
                      }
                    }
                    Name: ""
                  }
                }
                vars {
                  name {
                    name: ""
                    num: 64
                  }
                }
                vars {
                  name {
                    name: "\335\376\377\377"
                    num: 1
                  }
                }
                vars {
                }
                vars {
                  name {
                    name: "T"
                    num: 64
                  }
                }
                vars {
                }
                vars {
                  name {
                    name: ""
                    num: 67174393
                  }
                }
                vars {
                }
                vars {
                  name {
                    name: "callunroll"
                    num: 4294967002
                  }
                }
                vars {
                  name {
                    name: "\000\000\000\000"
                    num: 0
                  }
                }
                vars {
                  name {
                    name: "i"
                    num: 2097152
                  }
                }
                vars {
                }
              }
              explist {
                expressions {
                  ellipsis: "T"
                }
                expressions {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                          tableconstructor {
                          }
                        }
                      }
                    }
                  }
                }
                explast {
                }
              }
            }
          }
        }
      }
      condition {
        ellipsis: ""
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
}
