chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 2621440
      }
      funcbody {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
              }
              args {
                explist {
                  explist {
                    expressions {
                      ellipsis: "\324"
                    }
                    expressions {
                    }
                    expressions {
                      prefixexp {
                        functioncall {
                          prefArgs {
                            prefixexp {
                            }
                            args {
                              explist {
                                explist {
                                  expressions {
                                    ellipsis: "\324"
                                  }
                                  expressions {
                                  }
                                  expressions {
                                  }
                                  explast {
                                    false: 64
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    explast {
                      false: 64
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
