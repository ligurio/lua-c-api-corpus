chunk {
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 1024
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              parlist {
                ellipsis: ""
              }
              block {
                chunk {
                  laststat {
                    semicolon: false
                  }
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  laststat {
                    break: 0
                  }
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
          function {
            body {
              block {
                chunk {
                  stat {
                    localnames {
                      namelist {
                        firstname {
                          name: "\001\000\000\000\001\000\000\000"
                          num: 0
                        }
                        names {
                          name: "\001\000\000\000\001\000\000\000"
                          num: 0
                        }
                      }
                    }
                  }
                  stat {
                    forcyclelist {
                      names {
                        firstname {
                          name: ""
                          num: 0
                        }
                      }
                      expressions {
                        expressions {
                          nil: 0
                        }
                        expressions {
                          unary {
                            unop {
                            }
                            exp {
                              binary {
                                leftexp {
                                  nil: 0
                                }
                                binop {
                                  or: 0
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                        exp {
                                          binary {
                                            leftexp {
                                              prefixexp {
                                                exp {
                                                  binary {
                                                    leftexp {
                                                      prefixexp {
                                                        exp {
                                                          prefixexp {
                                                            exp {
                                                              binary {
                                                                leftexp {
                                                                  prefixexp {
                                                                    functioncall {
                                                                    }
                                                                  }
                                                                }
                                                                binop {
                                                                }
                                                                rightexp {
                                                                  binary {
                                                                    leftexp {
                                                                    }
                                                                    binop {
                                                                      mod: 1684955392
                                                                    }
                                                                    rightexp {
                                                                      nil: 7628659
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    binop {
                                                      and: 4096
                                                    }
                                                    rightexp {
                                                      prefixexp {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            binop {
                                            }
                                            rightexp {
                                              number: 0
                                            }
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                    }
                                    rightexp {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          unary {
                            unop {
                            }
                            exp {
                              binary {
                                leftexp {
                                  str: "or"
                                }
                                binop {
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          prefixexp {
                          }
                        }
                        explast {
                          true: 1
                        }
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                    semicolon: false
                  }
                  stat {
                    func {
                      name {
                        firstname {
                          name: "\001\000"
                          num: 4294770688
                        }
                        lastname {
                          name: "\001\000"
                          num: 4294770688
                        }
                      }
                      body {
                        parlist {
                          ellipsis: "s"
                        }
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                    semicolon: false
                  }
                  laststat {
                    semicolon: false
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              function {
                body {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
      explist {
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                    list {
                      varlist {
                        var {
                        }
                      }
                      explist {
                        expressions {
                          true: 0
                        }
                        expressions {
                          function {
                            body {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          function {
                            body {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          function {
                            body {
                              block {
                                chunk {
                                  stat {
                                    localnames {
                                      namelist {
                                        firstname {
                                          name: "\001\000\000\000\001\000\000\000"
                                          num: 0
                                        }
                                        names {
                                          name: "\001\000\000\000\001\000\000\000"
                                          num: 0
                                        }
                                      }
                                    }
                                  }
                                  stat {
                                    forcyclelist {
                                      names {
                                        firstname {
                                          name: "\252"
                                          num: 0
                                        }
                                      }
                                      expressions {
                                        expressions {
                                          nil: 0
                                        }
                                        expressions {
                                          unary {
                                            unop {
                                            }
                                            exp {
                                              binary {
                                                leftexp {
                                                  nil: 0
                                                }
                                                binop {
                                                  or: 0
                                                }
                                                rightexp {
                                                  binary {
                                                    leftexp {
                                                      prefixexp {
                                                        exp {
                                                          binary {
                                                            leftexp {
                                                              prefixexp {
                                                                exp {
                                                                  binary {
                                                                    leftexp {
                                                                      tableconstructor {
                                                                        fieldlist {
                                                                          firstField {
                                                                          }
                                                                          fields {
                                                                            field {
                                                                              expression {
                                                                                number: 2.12170437918978e-314
                                                                              }
                                                                            }
                                                                            sep {
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                    binop {
                                                                      and: 4096
                                                                    }
                                                                    rightexp {
                                                                      prefixexp {
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                            binop {
                                                            }
                                                            rightexp {
                                                              number: 0
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    binop {
                                                    }
                                                    rightexp {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        expressions {
                                          nil: 13172736
                                        }
                                        expressions {
                                          prefixexp {
                                            exp {
                                              tableconstructor {
                                                fieldlist {
                                                  firstField {
                                                  }
                                                  fields {
                                                    field {
                                                      expression {
                                                        number: 2.12170437918978e-314
                                                      }
                                                    }
                                                    sep {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        explast {
                                          true: 1
                                        }
                                      }
                                      doblock {
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                    semicolon: false
                                  }
                                  stat {
                                    func {
                                      name {
                                        firstname {
                                          name: "\001\000"
                                          num: 4294770688
                                        }
                                        names {
                                          name: "\033LJ\002\010\004fuzz\201\002\000\000\006\000\007\001#$\r\n6\000\000\000)\001\005\000\001\001\000\000X\000\001\200K\000\001\0006\000\000\000\026\000\000\0007\000\000\0006\000\001\0005\002\002\0005\003"
                                          num: 0
                                        }
                                      }
                                      body {
                                        parlist {
                                          ellipsis: "s"
                                        }
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                    semicolon: false
                                  }
                                  laststat {
                                    semicolon: false
                                  }
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          function {
                            body {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          function {
                            body {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          function {
                            body {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          function {
                            body {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          function {
                            body {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        explast {
                          function {
                            body {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          ellipsis: ""
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                    localnames {
                      namelist {
                        firstname {
                          name: "\001\000\000\000\001\000\000\000"
                          num: 0
                        }
                        names {
                          name: "\001\000\000\000\001\000\000\000"
                          num: 0
                        }
                      }
                    }
                  }
                  stat {
                    forcyclelist {
                      names {
                        firstname {
                          name: "\001\000"
                          num: 4294770688
                        }
                      }
                      expressions {
                        expressions {
                          tableconstructor {
                            fieldlist {
                              firstField {
                              }
                              fields {
                                field {
                                  expression {
                                    number: 2.12170437918978e-314
                                  }
                                }
                                sep {
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          unary {
                            unop {
                            }
                            exp {
                              binary {
                                leftexp {
                                  nil: 0
                                }
                                binop {
                                  or: 0
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                        exp {
                                          binary {
                                            leftexp {
                                              prefixexp {
                                                exp {
                                                  binary {
                                                    leftexp {
                                                      prefixexp {
                                                        exp {
                                                          prefixexp {
                                                            var {
                                                              name {
                                                                name: "\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265"
                                                                num: 0
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    binop {
                                                      and: 4096
                                                    }
                                                    rightexp {
                                                      prefixexp {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            binop {
                                            }
                                            rightexp {
                                              number: 0
                                            }
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                    }
                                    rightexp {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          unary {
                            unop {
                            }
                            exp {
                              binary {
                                leftexp {
                                  str: "or"
                                }
                                binop {
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                    }
                                    rightexp {
                                      nil: 538968064
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          prefixexp {
                          }
                        }
                        explast {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                  nil: 0
                                }
                              }
                            }
                          }
                        }
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                    semicolon: false
                  }
                  stat {
                    func {
                      name {
                        firstname {
                          name: "\001\000"
                          num: 4294770688
                        }
                        lastname {
                          name: "\001\001"
                          num: 4294770688
                        }
                      }
                      body {
                        parlist {
                          ellipsis: ""
                        }
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                    semicolon: false
                  }
                  laststat {
                  }
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
        }
        expressions {
          function {
            body {
              parlist {
              }
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
        }
        expressions {
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                    localnames {
                      namelist {
                        firstname {
                          name: "\001\000\000\000\001\000\000\000"
                          num: 0
                        }
                        names {
                          name: "\001\000\000\000\001\000\000\000"
                          num: 0
                        }
                      }
                    }
                  }
                  stat {
                    forcyclelist {
                      names {
                        firstname {
                          name: "\252"
                          num: 0
                        }
                      }
                      expressions {
                        expressions {
                          nil: 0
                        }
                        expressions {
                          unary {
                            unop {
                            }
                            exp {
                              binary {
                                leftexp {
                                  nil: 0
                                }
                                binop {
                                  or: 0
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                        exp {
                                          binary {
                                            leftexp {
                                              prefixexp {
                                                exp {
                                                  binary {
                                                    leftexp {
                                                      prefixexp {
                                                        exp {
                                                          prefixexp {
                                                            exp {
                                                              binary {
                                                                leftexp {
                                                                  prefixexp {
                                                                    functioncall {
                                                                    }
                                                                  }
                                                                }
                                                                binop {
                                                                }
                                                                rightexp {
                                                                  binary {
                                                                    leftexp {
                                                                      number: 0
                                                                    }
                                                                    binop {
                                                                      mod: 1684955392
                                                                    }
                                                                    rightexp {
                                                                      nil: 7628659
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    binop {
                                                      and: 4096
                                                    }
                                                    rightexp {
                                                      prefixexp {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            binop {
                                            }
                                            rightexp {
                                              number: 0
                                            }
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                    }
                                    rightexp {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          unary {
                            unop {
                            }
                            exp {
                              binary {
                                leftexp {
                                  str: "or"
                                }
                                binop {
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                    }
                                    rightexp {
                                      nil: 538968064
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          prefixexp {
                            exp {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                  }
                                  fields {
                                    field {
                                      expression {
                                        number: 2.12170437918978e-314
                                      }
                                    }
                                    sep {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        explast {
                          true: 1
                        }
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                    semicolon: false
                  }
                  stat {
                    func {
                      name {
                        firstname {
                          name: "\001\000"
                          num: 4294770688
                        }
                        names {
                          name: "\033LJ\002\010\004fuzz\201\002\000\000\006\000\007\001#$\r\n6\000\000\000)\001\005\000\001\001\000\000X\000\001\200K\000\001\0006\000\000\000\026\000\000\0007\000\000\0006\000\001\0005\002\002\0005\003"
                          num: 0
                        }
                        lastname {
                          name: "\001\000"
                          num: 4294770688
                        }
                      }
                      body {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                    semicolon: false
                  }
                  laststat {
                    semicolon: false
                  }
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
        }
        expressions {
          str: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
  laststat {
    explist {
      explist {
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              parlist {
              }
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
        }
        expressions {
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
          number: 0
        }
      }
    }
  }
}
