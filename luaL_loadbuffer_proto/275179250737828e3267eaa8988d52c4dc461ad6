chunk {
  stat {
    ifstat {
      condition {
        number: 0
      }
      first {
        chunk {
          stat {
            semicolon: true
          }
        }
      }
      last {
        chunk {
          stat {
            forcyclelist {
              names {
                firstname {
                  name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                  num: 0
                }
              }
              expressions {
                explast {
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
                number: 0
              }
              first {
                chunk {
                }
              }
              last {
                chunk {
                  stat {
                    forcyclelist {
                      names {
                        firstname {
                          name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                          num: 0
                        }
                      }
                      expressions {
                        expressions {
                          unary {
                            unop {
                              negate: 128
                            }
                            exp {
                            }
                          }
                        }
                        explast {
                        }
                      }
                      doblock {
                        block {
                          chunk {
                            stat {
                              localfunc {
                                name {
                                  name: ""
                                  num: 0
                                }
                                funcbody {
                                  block {
                                    chunk {
                                      stat {
                                        block {
                                          block {
                                            chunk {
                                              stat {
                                                localfunc {
                                                  name {
                                                    name: ""
                                                    num: 0
                                                  }
                                                  funcbody {
                                                    block {
                                                      chunk {
                                                        stat {
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        semicolon: true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                  }
                  laststat {
                    semicolon: false
                  }
                }
              }
            }
            semicolon: true
          }
          laststat {
            semicolon: true
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              function {
                body {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
      explist {
        expressions {
          binary {
            leftexp {
            }
            binop {
              div: 538968064
            }
            rightexp {
              number: -4.9591064453125e-05
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              parlist {
                ellipsis: "\000\000\000\000\000\000\000\000"
              }
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                    forcyclelist {
                      names {
                        firstname {
                          name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                          num: 0
                        }
                      }
                      expressions {
                        explast {
                        }
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  stat {
                    ifstat {
                      condition {
                      }
                      first {
                        chunk {
                          laststat {
                            explist {
                              explist {
                                expressions {
                                  prefixexp {
                                    functioncall {
                                      namedArgs {
                                        prefixexp {
                                          functioncall {
                                            namedArgs {
                                              prefixexp {
                                                functioncall {
                                                }
                                              }
                                              name {
                                                name: ""
                                                num: 0
                                              }
                                              args {
                                                str: "\'<<\'<<8"
                                              }
                                            }
                                          }
                                        }
                                        name {
                                          name: ""
                                          num: 0
                                        }
                                        args {
                                          str: "\'<<\'<<8"
                                        }
                                      }
                                    }
                                  }
                                }
                                explast {
                                }
                              }
                            }
                            semicolon: false
                          }
                        }
                      }
                      clauses {
                        condition {
                        }
                        block {
                          chunk {
                          }
                        }
                      }
                      clauses {
                        condition {
                          prefixexp {
                            functioncall {
                              namedArgs {
                                prefixexp {
                                }
                                name {
                                  name: ""
                                  num: 0
                                }
                                args {
                                  tableconstructor {
                                  }
                                }
                              }
                            }
                          }
                        }
                        block {
                          chunk {
                          }
                        }
                      }
                      clauses {
                        condition {
                        }
                        block {
                          chunk {
                            laststat {
                              explist {
                                explist {
                                  explast {
                                    true: 0
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      clauses {
                        condition {
                        }
                        block {
                          chunk {
                            laststat {
                              semicolon: true
                            }
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                  laststat {
                    semicolon: true
                  }
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              parlist {
                ellipsis: "\244"
              }
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
  laststat {
  }
}
