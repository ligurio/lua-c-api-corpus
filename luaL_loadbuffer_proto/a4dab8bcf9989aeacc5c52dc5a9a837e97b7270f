chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: 4
      }
      stopexp {
        number: 4
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 11520
                }
                startexp {
                  number: 3
                }
                stopexp {
                  number: 3
                }
                stepexp {
                  number: -0
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 0
                          }
                          startexp {
                            number: 3
                          }
                          stopexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        binary {
                                          leftexp {
                                            number: 3
                                          }
                                          binop {
                                            sub: 4
                                          }
                                          rightexp {
                                            binary {
                                              leftexp {
                                                number: 3
                                              }
                                              binop {
                                                sub: 0
                                              }
                                              rightexp {
                                                number: 3
                                              }
                                            }
                                          }
                                        }
                                      }
                                      binop {
                                        sub: 4
                                      }
                                      rightexp {
                                        number: 3
                                      }
                                    }
                                  }
                                  binop {
                                    sub: 0
                                  }
                                  rightexp {
                                    number: 3
                                  }
                                }
                              }
                              binop {
                                sub: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    number: 3
                                  }
                                  binop {
                                    sub: 0
                                  }
                                  rightexp {
                                    number: 3
                                  }
                                }
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                  unary {
                    unop {
                      length: 2
                    }
                    exp {
                      tableconstructor {
                        fieldlist {
                          firstField {
                          }
                          lastSep {
                            comma: 1660944384
                          }
                        }
                      }
                    }
                  }
                }
                stopexp {
                  prefixexp {
                  }
                }
                stepexp {
                  number: 0
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                  number: 0
                }
                stopexp {
                  prefixexp {
                  }
                }
                stepexp {
                  unary {
                    unop {
                      length: 2
                    }
                    exp {
                      tableconstructor {
                        fieldlist {
                          firstField {
                          }
                          lastSep {
                            comma: 1660944384
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
            }
            laststat {
            }
          }
        }
      }
    }
  }
}
