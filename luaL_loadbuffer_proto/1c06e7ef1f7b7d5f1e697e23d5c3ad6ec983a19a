chunk {
  stat {
    ifstat {
      condition {
        binary {
              }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
       explast {
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
     vavarlist {
     plast {
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
       explast {
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
     varlist {
        vCr {
        }
      }
      explist {
        explast {
        }     plast {
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
       explast {
        }
      }
    }
    semicolon: true }
  stat {
    list {
      varlist {
     plast {
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
       explast {
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
     varlist {
        vCr {
        }
      }
      explist {
        explast {
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
     plast {
        }
    
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
     plast {
          }
      }
    }
    semicolon: true
  }
  stat {
    list {
      vaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaarlist {
       explast {
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
     varlist {
        vCr {
        }
      }
      explist {
        explast {
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
     plast {
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
       explast {
        }
      }
    }
    semicolon: true }
  stat {
    list {
      varlist {
     plast {
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
       explast {
        }
      }
    }
    semicolon: true
  }
chunk {
  stat {
    list {
      varlist {
        var {
          indexexpr {
            prefixexp {
            }
            exp {
            }
          }
        }
      }
      explist {
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
              }
              fields {
                field {
                        num: 0
                  }
                }
                expressions {
                  explast {
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                expressions {
                  explast {
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                expressions {
                  explast {
                  }
                }
     }
                sep {
                }
              }
              fields {
                field {
                }
                sep {
                }
              }
              fields {
                field {
                }
                sep {
                }
              }
              fields {
                field {
                  expression {
                  }
                }
                sep {
                }
              }
              fields {
                field {
                }
                sep {
                }
              }
            }
          }
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
              }
              fields {
                field {
                  expression {
                  }
                }
                sep {
                }
              }
              fields {
                field {
                  expression {
                  }
                }
                sep {
                }
              }
              fields {
                field {
                }
                sep {
                }
              }
              fields {
                field {
                  expression {
                  }
                }
                sep {
                }
              }
              fields {
                field {
                }
                sep {
                  comma: 0
                }
              }
            }
          }
        }
        explast {
          tableconstructor {
            fieldlist {
              firstField {
       expression {
                }
              }
              fields {
                field {
                  expression {
                  }
                }
                sep {
                }
              }
              fields {
                field {
                }
                sep {
                }
              }
              fields {
                field {
                  expression {
                  }
                }
                sep {
                }
              }
              fields {
                field {
                }
                sep {
                }
              }
              fields {
                field {
                }
                sep {
                }
              }
            }
          }
        }
      }
    }
  }