chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    forcyclelist {
                      names {
                        firstname {
                          name: "\000"
                          num: 0
                        }
                        names {
                          name: "\'-6>6&33332<\'<8<8"
                          num: 0
                        }
                      }
                      expressions {
                        explast {
                          tableconstructor {
                          }
                        }
                      }
                      doblock {
                        block {
                          chunk {
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                    stat {
                                      repeatcycle {
                                        block {
                                          chunk {
                                            stat {
                                              repeatcycle {
                                                block {
                                                  chunk {
                                                  }
                                                }
                                                condition {
                                                  binary {
                                                    leftexp {
                                                      prefixexp {
                                                        functioncall {
                                                          prefArgs {
                                                            prefixexp {
                                                              exp {
                                                                prefixexp {
                                                                  functioncall {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                            args {
                                                              str: "}\001\'//\'  pni  pnil"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    binop {
                                                      exp: 0
                                                    }
                                                    rightexp {
                                                      function {
                                                        body {
                                                          block {
                                                            chunk {
                                                              stat {
                                                                semicolon: true
                                                              }
                                                              stat {
                                                                repeatcycle {
                                                                  block {
                                                                    chunk {
                                                                      stat {
                                                                        repeatcycle {
                                                                          block {
                                                                            chunk {
                                                                            }
                                                                          }
                                                                          condition {
                                                                            binary {
                                                                              leftexp {
                                                                                prefixexp {
                                                                                  functioncall {
                                                                                  }
                                                                                }
                                                                              }
                                                                              binop {
                                                                                add: 538976256
                                                                              }
                                                                              rightexp {
                                                                                function {
                                                                                  body {
                                                                                    block {
                                                                                      chunk {
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                      laststat {
                                                                      }
                                                                    }
                                                                  }
                                                                  condition {
                                                                    binary {
                                                                      leftexp {
                                                                        prefixexp {
                                                                          functioncall {
                                                                            prefArgs {
                                                                              prefixexp {
                                                                                exp {
                                                                                  prefixexp {
                                                                                    functioncall {
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                              args {
                                                                                str: "}\001\'//\'  pni  pnil"
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                      binop {
                                                                        exp: 0
                                                                      }
                                                                      rightexp {
                                                                        function {
                                                                          body {
                                                                            block {
                                                                              chunk {
                                                                                laststat {
                                                                                  explist {
                                                                                    explist {
                                                                                      expressions {
                                                                                        true: 0
                                                                                      }
                                                                                      explast {
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              laststat {
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            laststat {
                                            }
                                          }
                                        }
                                        condition {
                                          binary {
                                            leftexp {
                                              prefixexp {
                                                functioncall {
                                                  prefArgs {
                                                    prefixexp {
                                                      exp {
                                                        prefixexp {
                                                          functioncall {
                                                          }
                                                        }
                                                      }
                                                    }
                                                    args {
                                                      str: "}\001\'//\'  pni  pnil"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            binop {
                                              exp: 0
                                            }
                                            rightexp {
                                              function {
                                                body {
                                                  block {
                                                    chunk {
                                                      laststat {
                                                        explist {
                                                          explist {
                                                            expressions {
                                                              true: 0
                                                            }
                                                            explast {
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    laststat {
                                    }
                                  }
                                }
                                condition {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          prefixexp {
                                            functioncall {
                                              prefArgs {
                                                prefixexp {
                                                  exp {
                                                    prefixexp {
                                                      functioncall {
                                                      }
                                                    }
                                                  }
                                                }
                                                args {
                                                }
                                              }
                                            }
                                          }
                                        }
                                        binop {
                                          exp: 0
                                        }
                                        rightexp {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            stat {
                              forcyclename {
                                name {
                                  name: ""
                                  num: 0
                                }
                                startexp {
                                  tableconstructor {
                                  }
                                }
                                stopexp {
                                }
                                doblock {
                                  block {
                                    chunk {
                                      stat {
                                        forcyclelist {
                                          names {
                                            firstname {
                                              name: ""
                                              num: 0
                                            }
                                          }
                                          expressions {
                                            explast {
                                              tableconstructor {
                                              }
                                            }
                                          }
                                          doblock {
                                            block {
                                              chunk {
                                                stat {
                                                  forcyclelist {
                                                    names {
                                                      firstname {
                                                        name: ""
                                                        num: 0
                                                      }
                                                    }
                                                    expressions {
                                                      explast {
                                                        tableconstructor {
                                                        }
                                                      }
                                                    }
                                                    doblock {
                                                      block {
                                                        chunk {
                                                        }
                                                      }
                                                    }
                                                  }
                                                  semicolon: true
                                                }
                                              }
                                            }
                                          }
                                        }
                                        semicolon: true
                                      }
                                    }
                                  }
                                }
                              }
                              semicolon: true
                            }
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                }
              }
              condition {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        number: -424
                      }
                      binop {
                        mult: 48
                      }
                      rightexp {
                        binary {
                          leftexp {
                            number: -1418.75
                          }
                          binop {
                            mult: 0
                          }
                          rightexp {
                            unary {
                              unop {
                                negate: 2304
                              }
                              exp {
                                binary {
                                  leftexp {
                                    number: -424
                                  }
                                  binop {
                                    mult: 48
                                  }
                                  rightexp {
                                    binary {
                                      leftexp {
                                        binary {
                                          leftexp {
                                            number: -424
                                          }
                                          binop {
                                            mult: 0
                                          }
                                          rightexp {
                                            binary {
                                              leftexp {
                                                number: -1418.75
                                              }
                                              binop {
                                                mult: 0
                                              }
                                              rightexp {
                                                binary {
                                                  leftexp {
                                                    function {
                                                      body {
                                                        block {
                                                          chunk {
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  binop {
                                                    mult: 0
                                                  }
                                                  rightexp {
                                                    unary {
                                                      unop {
                                                        not: 2348810240
                                                      }
                                                      exp {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      binop {
                                        div: 0
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                            number: -1418.75
                                          }
                                          binop {
                                            div: 21
                                          }
                                          rightexp {
                                            str: "\'&~33~33333333.+\'"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  binop {
                    div: 6
                  }
                  rightexp {
                    str: "\'-6>6&33332<\'<8<8"
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  laststat {
                    semicolon: true
                  }
                }
              }
              condition {
                binary {
                  leftexp {
                  }
                  binop {
                    mod: 0
                  }
                  rightexp {
                    str: "\'-6>6&33332<\'<8<8"
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            whilecycle {
              condition {
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                number: -424
              }
              binop {
                mult: 48
              }
              rightexp {
                binary {
                  leftexp {
                    number: -1418.75
                  }
                  binop {
                    mult: 0
                  }
                  rightexp {
                    unary {
                      unop {
                        negate: 2304
                      }
                      exp {
                        binary {
                          leftexp {
                            number: -13.25
                          }
                          binop {
                            mult: 48
                          }
                          rightexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    number: -424
                                  }
                                  binop {
                                    mult: 0
                                  }
                                  rightexp {
                                    binary {
                                      leftexp {
                                        number: -1418.75
                                      }
                                      binop {
                                        mult: 0
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                            function {
                                              body {
                                                block {
                                                  chunk {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          binop {
                                            mult: 0
                                          }
                                          rightexp {
                                            unary {
                                              unop {
                                                not: 4
                                              }
                                              exp {
                                                binary {
                                                  leftexp {
                                                  }
                                                  binop {
                                                    mult: 48
                                                  }
                                                  rightexp {
                                                    binary {
                                                      leftexp {
                                                        binary {
                                                          leftexp {
                                                            ellipsis: ""
                                                          }
                                                          binop {
                                                            div: 21
                                                          }
                                                          rightexp {
                                                            str: "\'&~33~33333333.+\'"
                                                          }
                                                        }
                                                      }
                                                      binop {
                                                        mod: 64256
                                                      }
                                                      rightexp {
                                                        binary {
                                                          leftexp {
                                                            nil: 16
                                                          }
                                                          binop {
                                                            mult: 0
                                                          }
                                                          rightexp {
                                                            unary {
                                                              unop {
                                                                negate: 2304
                                                              }
                                                              exp {
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                add: 538976256
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    number: -1418.75
                                  }
                                  binop {
                                    div: 21
                                  }
                                  rightexp {
                                    str: "\'&~33~33333333.+\'"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          binop {
            div: 6
          }
          rightexp {
            str: "\'-6>6&33332<\'<8<8"
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
      condition {
        binary {
          leftexp {
          }
          binop {
            mod: 262144
          }
          rightexp {
            str: "\'-6>6&33332<\'<8<8"
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
}
