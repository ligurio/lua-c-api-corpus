chunk {
  stat {
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            tableconstructor {
              fieldlist {
                firstField {
                  expression {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          expression {
                            tableconstructor {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          binop {
          }
          rightexp {
          }
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        binary {
          leftexp {
            number: -243.28789731564265
          }
          binop {
            exp: 0
          }
          rightexp {
            number: 116.95316997449845
          }
        }
      }
      stopexp {
      }
      stepexp {
        number: 3.95252516672997e-323
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: false
  }
  stat {
  }
  stat {
  }
  stat {
    localfunc {
      name {
        name: "\004\004\004\004\004\004\004\004\004\004\004\004\004\004\004\004\004\004\004\004\004\004"
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: "\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350\350"
          num: 0
        }
      }
      expressions {
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
                exprassign {
                  key {
                    binary {
                      leftexp {
                        number: -416
                      }
                      binop {
                        exp: 0
                      }
                      rightexp {
                        number: 116.95316997449845
                      }
                    }
                  }
                  value {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                          }
                          binop {
                            exp: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    number: -243.28789731564265
                                  }
                                  binop {
                                    exp: 0
                                  }
                                  rightexp {
                                    number: 116.95316997449845
                                  }
                                }
                              }
                              binop {
                              }
                              rightexp {
                                nil: 0
                              }
                            }
                          }
                        }
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                      }
                    }
                  }
                }
              }
              fields {
                field {
                }
                sep {
                  semicolon: 4
                }
              }
            }
          }
        }
        explast {
          number: 0
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
            laststat {
              explist {
                explist {
                  expressions {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            number: -243.28789731564265
                          }
                          binop {
                            exp: 0
                          }
                          rightexp {
                            number: 116.95316997449845
                          }
                        }
                      }
                      binop {
                      }
                      rightexp {
                        nil: 0
                      }
                    }
                  }
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
}
