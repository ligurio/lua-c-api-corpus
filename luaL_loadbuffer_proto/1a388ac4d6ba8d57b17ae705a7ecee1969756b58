chunk {
  stat {
    whilecycle {
      condition {
        tableconstructor {
        }
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  explast {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            prefixexp {
                            }
                          }
                          binop {
                            add: 1
                          }
                          rightexp {
                            str: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                          }
                        }
                      }
                      binop {
                        add: 2
                      }
                      rightexp {
                        prefixexp {
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              forcyclename {
                name {
                  name: "____________"
                  num: 7
                }
                startexp {
                  prefixexp {
                  }
                }
                stopexp {
                  binary {
                    leftexp {
                    }
                    binop {
                      mod: 2
                    }
                    rightexp {
                      number: 0
                    }
                  }
                }
                stepexp {
                  binary {
                    leftexp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                              false: 3
                            }
                            binop {
                              sub: 2
                            }
                            rightexp {
                              prefixexp {
                              }
                            }
                          }
                        }
                      }
                    }
                    binop {
                      concat: 2
                    }
                    rightexp {
                      prefixexp {
                        functioncall {
                          prefArgs {
                            prefixexp {
                            }
                            args {
                              explist {
                                explist {
                                  expressions {
                                    unary {
                                      unop {
                                        not: 0
                                      }
                                      exp {
                                      }
                                    }
                                  }
                                  explast {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  explast {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            prefixexp {
                            }
                          }
                          binop {
                            add: 1
                          }
                          rightexp {
                            str: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                          }
                        }
                      }
                      binop {
                        add: 2
                      }
                      rightexp {
                        prefixexp {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
