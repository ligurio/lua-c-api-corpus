chunk {
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                }
                value {
                }
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    binary {
                      leftexp {
                        unary {
                          unop {
                            length: 0
                          }
                          exp {
                          }
                        }
                      }
                      binop {
                        sub: 2
                      }
                      rightexp {
                        number: -416
                      }
                    }
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                namedassign {
                  name {
                    name: "E"
                    num: 0
                  }
                  value {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            unary {
                              unop {
                                negate: 11776
                              }
                              exp {
                                number: 0
                              }
                            }
                          }
                          binop {
                            lessEqual: 2
                          }
                          rightexp {
                            binary {
                              leftexp {
                                unary {
                                  unop {
                                    length: 2
                                  }
                                  exp {
                                    tableconstructor {
                                    }
                                  }
                                }
                              }
                              binop {
                                sub: 2
                              }
                              rightexp {
                                unary {
                                  unop {
                                    length: 41
                                  }
                                  exp {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      binop {
                        add: 41
                      }
                      rightexp {
                        binary {
                          leftexp {
                            unary {
                              unop {
                                length: 0
                              }
                              exp {
                              }
                            }
                          }
                          binop {
                            sub: 2
                          }
                          rightexp {
                            number: -416
                          }
                        }
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
            lastSep {
              comma: 2
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 1
      }
      startexp {
        number: -0
      }
      stopexp {
        true: 2
      }
      stepexp {
        nil: 1
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
