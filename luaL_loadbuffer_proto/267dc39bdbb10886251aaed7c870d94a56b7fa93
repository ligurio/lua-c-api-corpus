chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: "atan"
          num: 0
        }
        names {
          name: "7__eq"
          num: 0
        }
        names {
          name: "\357__eq"
          num: 2
        }
        names {
          name: "\\001\\000\\001\\000"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\013\000\000\000\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
          num: 0
        }
        names {
          name: "\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "7__eq"
          num: 252
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 10
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            unary {
              unop {
              }
              exp {
                prefixexp {
                }
              }
            }
          }
          binop {
            notEqual: 0
          }
          rightexp {
            binary {
              leftexp {
                str: ""
              }
              binop {
                notEqual: 0
              }
              rightexp {
                unary {
                  unop {
                    length: 2
                  }
                  exp {
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
}
