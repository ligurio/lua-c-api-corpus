chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 5
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 5
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 5
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                str: "debug"
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  laststat {
                    explist {
                      explist {
                        explast {
                          nil: 8192
                        }
                      }
                    }
                  }
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 1
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            block {
              block {
                chunk {
                  stat {
                    semicolon: true
                  }
                }
              }
            }
          }
          stat {
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
            semicolon: true
          }
          stat {
            whilecycle {
              condition {
                binary {
                  leftexp {
                    ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                  }
                  binop {
                    greaterEqual: 2097152
                  }
                  rightexp {
                    true: 570425344
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 5
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 5
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 5
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        str: "debug"
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 9
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    semicolon: true
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          laststat {
                            explist {
                              explist {
                                explast {
                                }
                              }
                            }
                          }
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 5
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 5
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 131072
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        number: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 1701869940
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                  stat {
                                    forcyclename {
                                      name {
                                        name: ""
                                        num: 0
                                      }
                                      startexp {
                                        ellipsis: "*"
                                      }
                                      stopexp {
                                      }
                                      doblock {
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            semicolon: true
                          }
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        unary {
                                          unop {
                                            negate: 3
                                          }
                                          exp {
                                            function {
                                              body {
                                                block {
                                                  chunk {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      binop {
                                        sub: 0
                                      }
                                      rightexp {
                                        number: 6.8708622966413854e+180
                                      }
                                    }
                                  }
                                  binop {
                                    sub: 0
                                  }
                                  rightexp {
                                    number: 6.8708622966413854e+180
                                  }
                                }
                              }
                              binop {
                                mult: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    unary {
                                      unop {
                                        negate: 3
                                      }
                                      exp {
                                        binary {
                                          leftexp {
                                            unary {
                                              unop {
                                                not: 3
                                              }
                                              exp {
                                                binary {
                                                  leftexp {
                                                    str: "\'<<8<\'<9"
                                                  }
                                                  binop {
                                                    sub: 1819175258
                                                  }
                                                  rightexp {
                                                    prefixexp {
                                                      functioncall {
                                                        namedArgs {
                                                          prefixexp {
                                                          }
                                                          name {
                                                            name: ""
                                                            num: 0
                                                          }
                                                          args {
                                                            tableconstructor {
                                                              fieldlist {
                                                                firstField {
                                                                }
                                                                lastSep {
                                                                  comma: 0
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          binop {
                                            mult: 0
                                          }
                                          rightexp {
                                            binary {
                                              leftexp {
                                                unary {
                                                  unop {
                                                    negate: 3
                                                  }
                                                  exp {
                                                    binary {
                                                      leftexp {
                                                        str: "\'<<8<\'<9"
                                                      }
                                                      binop {
                                                        sub: 1819175258
                                                      }
                                                      rightexp {
                                                        binary {
                                                          leftexp {
                                                            tableconstructor {
                                                              fieldlist {
                                                                firstField {
                                                                }
                                                                fields {
                                                                  field {
                                                                  }
                                                                  sep {
                                                                    semicolon: 0
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          binop {
                                                            and: 67108864
                                                          }
                                                          rightexp {
                                                            str: "\'~~9~9~\'9~"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              binop {
                                                mult: 0
                                              }
                                              rightexp {
                                                binary {
                                                  leftexp {
                                                    binary {
                                                      leftexp {
                                                        unary {
                                                          unop {
                                                            negate: 3
                                                          }
                                                          exp {
                                                            binary {
                                                              leftexp {
                                                                unary {
                                                                  unop {
                                                                    negate: 3
                                                                  }
                                                                  exp {
                                                                    binary {
                                                                      leftexp {
                                                                        str: "\'<<8<\'<9"
                                                                      }
                                                                      binop {
                                                                        sub: 1819175258
                                                                      }
                                                                      rightexp {
                                                                        binary {
                                                                          leftexp {
                                                                            tableconstructor {
                                                                              fieldlist {
                                                                                firstField {
                                                                                }
                                                                                fields {
                                                                                  field {
                                                                                  }
                                                                                  sep {
                                                                                    semicolon: 0
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                          binop {
                                                                            and: 67108864
                                                                          }
                                                                          rightexp {
                                                                            str: "\'~~9~9~\'9~"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              binop {
                                                                mult: 0
                                                              }
                                                              rightexp {
                                                                binary {
                                                                  leftexp {
                                                                    binary {
                                                                      leftexp {
                                                                        unary {
                                                                          unop {
                                                                            negate: 3
                                                                          }
                                                                          exp {
                                                                            binary {
                                                                              leftexp {
                                                                                str: "\'<<8<\'<9"
                                                                              }
                                                                              binop {
                                                                                sub: 1819175258
                                                                              }
                                                                              rightexp {
                                                                                binary {
                                                                                  leftexp {
                                                                                    number: 1.06099789548264e-314
                                                                                  }
                                                                                  binop {
                                                                                    add: 67108864
                                                                                  }
                                                                                  rightexp {
                                                                                    str: "\'~~9~9~\'9~"
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                      binop {
                                                                        sub: 0
                                                                      }
                                                                      rightexp {
                                                                        number: 6.8708622966413854e+180
                                                                      }
                                                                    }
                                                                  }
                                                                  binop {
                                                                    sub: 0
                                                                  }
                                                                  rightexp {
                                                                    number: 6.8708622966413854e+180
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      binop {
                                                        sub: 0
                                                      }
                                                      rightexp {
                                                        number: 6.8708622966413854e+180
                                                      }
                                                    }
                                                  }
                                                  binop {
                                                    sub: 0
                                                  }
                                                  rightexp {
                                                    number: 6.8708622966413854e+180
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                    sub: 0
                                  }
                                  rightexp {
                                    number: 6.8708622966413854e+180
                                  }
                                }
                              }
                            }
                          }
                          binop {
                            or: 9
                          }
                          rightexp {
                            binary {
                              leftexp {
                                unary {
                                  unop {
                                    negate: 3
                                  }
                                  exp {
                                    function {
                                      body {
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                sub: 0
                              }
                              rightexp {
                                number: 6.8708622966413854e+180
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        unary {
                                          unop {
                                            length: 65536
                                          }
                                          exp {
                                            binary {
                                              leftexp {
                                                str: "\'<<8<\'<9"
                                              }
                                              binop {
                                                sub: 1819175258
                                              }
                                              rightexp {
                                                binary {
                                                  leftexp {
                                                    tableconstructor {
                                                      fieldlist {
                                                        firstField {
                                                        }
                                                        fields {
                                                          field {
                                                          }
                                                          sep {
                                                            semicolon: 0
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  binop {
                                                    add: 67108864
                                                  }
                                                  rightexp {
                                                    str: "\'~~9~9~\'9~"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      binop {
                                        sub: 0
                                      }
                                      rightexp {
                                        number: 6.8708622966413854e+180
                                      }
                                    }
                                  }
                                  binop {
                                    sub: 0
                                  }
                                  rightexp {
                                    number: 6.8708622966413854e+180
                                  }
                                }
                              }
                              binop {
                                mult: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    unary {
                                      unop {
                                        negate: 3
                                      }
                                      exp {
                                        binary {
                                          leftexp {
                                            unary {
                                              unop {
                                                not: 3
                                              }
                                              exp {
                                                binary {
                                                  leftexp {
                                                    str: "\'<<8<\'<9"
                                                  }
                                                  binop {
                                                    sub: 1819175258
                                                  }
                                                  rightexp {
                                                    prefixexp {
                                                      functioncall {
                                                        namedArgs {
                                                          prefixexp {
                                                          }
                                                          name {
                                                            name: ""
                                                            num: 0
                                                          }
                                                          args {
                                                            tableconstructor {
                                                              fieldlist {
                                                                firstField {
                                                                }
                                                                lastSep {
                                                                  comma: 0
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          binop {
                                            mult: 0
                                          }
                                          rightexp {
                                            binary {
                                              leftexp {
                                                unary {
                                                  unop {
                                                    negate: 3
                                                  }
                                                  exp {
                                                    binary {
                                                      leftexp {
                                                        str: "\'<<8<\'<9"
                                                      }
                                                      binop {
                                                        sub: 1819175258
                                                      }
                                                      rightexp {
                                                        binary {
                                                          leftexp {
                                                            tableconstructor {
                                                              fieldlist {
                                                                firstField {
                                                                }
                                                                fields {
                                                                  field {
                                                                  }
                                                                  sep {
                                                                    semicolon: 0
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          binop {
                                                            add: 67108864
                                                          }
                                                          rightexp {
                                                            str: "\'~~9~9~\'9~"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              binop {
                                                mult: 0
                                              }
                                              rightexp {
                                                binary {
                                                  leftexp {
                                                    binary {
                                                      leftexp {
                                                        unary {
                                                          unop {
                                                            negate: 3
                                                          }
                                                          exp {
                                                            binary {
                                                              leftexp {
                                                                str: "\'<<8<\'<9"
                                                              }
                                                              binop {
                                                                sub: 1819175258
                                                              }
                                                              rightexp {
                                                                binary {
                                                                  leftexp {
                                                                    number: 1.06099789548264e-314
                                                                  }
                                                                  binop {
                                                                    add: 67108864
                                                                  }
                                                                  rightexp {
                                                                    str: "\'~~9~9~\'9~"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      binop {
                                                        sub: 0
                                                      }
                                                      rightexp {
                                                        number: 6.8708622966413854e+180
                                                      }
                                                    }
                                                  }
                                                  binop {
                                                    sub: 0
                                                  }
                                                  rightexp {
                                                    number: 6.8708622966413854e+180
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                    sub: 0
                                  }
                                  rightexp {
                                    binary {
                                      leftexp {
                                        unary {
                                          unop {
                                            not: 3
                                          }
                                          exp {
                                            binary {
                                              leftexp {
                                                str: "\'<<8<\'<9"
                                              }
                                              binop {
                                                sub: 1819175258
                                              }
                                              rightexp {
                                                prefixexp {
                                                  functioncall {
                                                    namedArgs {
                                                      prefixexp {
                                                      }
                                                      name {
                                                        name: ""
                                                        num: 0
                                                      }
                                                      args {
                                                        tableconstructor {
                                                          fieldlist {
                                                            firstField {
                                                            }
                                                            lastSep {
                                                              comma: 0
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      binop {
                                        mult: 0
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                          }
                                          binop {
                                            mult: 0
                                          }
                                          rightexp {
                                            binary {
                                              leftexp {
                                                binary {
                                                  leftexp {
                                                    unary {
                                                      unop {
                                                        negate: 3
                                                      }
                                                      exp {
                                                        binary {
                                                          leftexp {
                                                            str: "\'<<8<\'<9"
                                                          }
                                                          binop {
                                                            sub: 1819175258
                                                          }
                                                          rightexp {
                                                            binary {
                                                              leftexp {
                                                                number: 1.06099789548264e-314
                                                              }
                                                              binop {
                                                                add: 67108864
                                                              }
                                                              rightexp {
                                                                str: "\'~~9~9~\'9~"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  binop {
                                                    sub: 0
                                                  }
                                                  rightexp {
                                                    number: 6.8708622966413854e+180
                                                  }
                                                }
                                              }
                                              binop {
                                                sub: 0
                                              }
                                              rightexp {
                                                number: 6.8708622966413854e+180
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          binop {
                            or: 9
                          }
                          rightexp {
                            binary {
                              leftexp {
                                unary {
                                  unop {
                                    negate: 3
                                  }
                                  exp {
                                    function {
                                      body {
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                sub: 0
                              }
                              rightexp {
                                number: 6.8708622966413854e+180
                              }
                            }
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            forcyclename {
                              name {
                                name: ""
                                num: 0
                              }
                              startexp {
                                binary {
                                  leftexp {
                                  }
                                  binop {
                                    notEqual: 0
                                  }
                                  rightexp {
                                  }
                                }
                              }
                              stopexp {
                              }
                              doblock {
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 1
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 5
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                  stat {
                                    repeatcycle {
                                      block {
                                        chunk {
                                        }
                                      }
                                      condition {
                                        nil: 0
                                      }
                                    }
                                  }
                                }
                              }
                              condition {
                                nil: 5
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                            semicolon: true
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                }
              }
              condition {
                nil: 5
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        true: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 5
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 1
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 5
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                        }
                      }
                      condition {
                        nil: 5
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                    semicolon: true
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    call {
                      namedArgs {
                        prefixexp {
                          exp {
                            true: 16
                          }
                        }
                        name {
                          name: ""
                          num: 0
                        }
                        args {
                        }
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 5
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                    semicolon: true
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 1
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        false: 2560
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        tableconstructor {
                          fieldlist {
                            firstField {
                            }
                            lastSep {
                              comma: 0
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    whilecycle {
                      condition {
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                }
              }
              condition {
                nil: 5
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 5
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        function {
                          body {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 1
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 5
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                        }
                      }
                      condition {
                        nil: 5
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                    semicolon: true
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 5
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 1
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 5
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                        }
                      }
                      condition {
                        nil: 5
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                    semicolon: true
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 4
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 2097152
              }
            }
            semicolon: true
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
        }
      }
      condition {
        nil: 5
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 5
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 1
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 5
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                }
              }
              condition {
                nil: 5
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
            semicolon: true
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    call {
                      prefArgs {
                        prefixexp {
                          var {
                            name {
                              name: "load"
                              num: 0
                            }
                          }
                        }
                        args {
                          explist {
                            explist {
                              expressions {
                                function {
                                  body {
                                    block {
                                      chunk {
                                      }
                                    }
                                  }
                                }
                              }
                              explast {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              condition {
                nil: 0
              }
            }
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        str: "#\000\000\000\000\000\000\000"
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  laststat {
                    explist {
                      explist {
                        explast {
                          nil: 8192
                        }
                      }
                    }
                  }
                }
              }
              condition {
                nil: 5
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
            semicolon: true
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 1
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                false: 2560
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                function {
                  body {
                    block {
                      chunk {
                        stat {
                          func {
                            name {
                              firstname {
                                name: ""
                                num: 0
                              }
                            }
                            body {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
            semicolon: true
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
        }
      }
      condition {
        nil: 5
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        unary {
                          unop {
                            negate: 3
                          }
                          exp {
                            binary {
                              leftexp {
                                str: "\'<<8<\'<9"
                              }
                              binop {
                                sub: 1819175258
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    tableconstructor {
                                      fieldlist {
                                        firstField {
                                        }
                                        fields {
                                          field {
                                          }
                                          sep {
                                            semicolon: 0
                                          }
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                    add: 67108864
                                  }
                                  rightexp {
                                    str: "\'~~9~9~\'9~"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      binop {
                        sub: 0
                      }
                      rightexp {
                        number: 6.8708622966413854e+180
                      }
                    }
                  }
                  binop {
                    sub: 0
                  }
                  rightexp {
                    number: 6.8708622966413854e+180
                  }
                }
              }
              binop {
                mult: 0
              }
              rightexp {
                binary {
                  leftexp {
                    unary {
                      unop {
                        negate: 3
                      }
                      exp {
                        binary {
                          leftexp {
                            unary {
                              unop {
                                not: 3
                              }
                              exp {
                                binary {
                                  leftexp {
                                    str: "\'<<8<\'<9"
                                  }
                                  binop {
                                    sub: 1819175258
                                  }
                                  rightexp {
                                    prefixexp {
                                      functioncall {
                                        namedArgs {
                                          prefixexp {
                                          }
                                          name {
                                            name: ""
                                            num: 0
                                          }
                                          args {
                                            tableconstructor {
                                              fieldlist {
                                                firstField {
                                                }
                                                lastSep {
                                                  comma: 0
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          binop {
                            mult: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                                unary {
                                  unop {
                                    negate: 3
                                  }
                                  exp {
                                    binary {
                                      leftexp {
                                        str: "\'<<8<\'<9"
                                      }
                                      binop {
                                        sub: 1819175258
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                            tableconstructor {
                                              fieldlist {
                                                firstField {
                                                }
                                                fields {
                                                  field {
                                                  }
                                                  sep {
                                                    semicolon: 0
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          binop {
                                            add: 67108864
                                          }
                                          rightexp {
                                            str: "\'~~9~9~\'9~"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                mult: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        unary {
                                          unop {
                                            negate: 3
                                          }
                                          exp {
                                            binary {
                                              leftexp {
                                                str: "\'<<8<\'<9"
                                              }
                                              binop {
                                                sub: 1819175258
                                              }
                                              rightexp {
                                                binary {
                                                  leftexp {
                                                    number: 1.06099789548264e-314
                                                  }
                                                  binop {
                                                    add: 67108864
                                                  }
                                                  rightexp {
                                                    str: "\'~~9~9~\'9~"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      binop {
                                        sub: 0
                                      }
                                      rightexp {
                                        number: 6.8708622966413854e+180
                                      }
                                    }
                                  }
                                  binop {
                                    sub: 0
                                  }
                                  rightexp {
                                    number: 6.8708622966413854e+180
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  binop {
                    sub: 0
                  }
                  rightexp {
                    number: 6.8708622966413854e+180
                  }
                }
              }
            }
          }
          binop {
            or: 9
          }
          rightexp {
            binary {
              leftexp {
                unary {
                  unop {
                    negate: 3
                  }
                  exp {
                    function {
                      body {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
              }
              binop {
                sub: 0
              }
              rightexp {
                number: 6.8708622966413854e+180
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 5
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 1
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 5
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                }
              }
              condition {
                nil: 5
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
            semicolon: true
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                }
              }
              condition {
                nil: 0
              }
            }
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 5
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 1
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 5
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                }
              }
              condition {
                nil: 5
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
            semicolon: true
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 4
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        prefixexp {
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        str: "\'~~9~9~\'9~"
      }
    }
  }
}
