chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    explist {
      explist {
        explast {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                  exp {
                    function {
                      body {
                        parlist {
                          ellipsis: "\000\002"
                        }
                        block {
                          chunk {
                            stat {
                              list {
                                varlist {
                                  var {
                                  }
                                  vars {
                                    indexexpr {
                                      prefixexp {
                                      }
                                      exp {
                                      }
                                    }
                                  }
                                  vars {
                                  }
                                  vars {
                                  }
                                  vars {
                                  }
                                  vars {
                                  }
                                }
                                explist {
                                  expressions {
                                  }
                                  explast {
                                  }
                                }
                              }
                            }
                            laststat {
                            }
                          }
                        }
                      }
                    }
                  }
                }
                args {
                  explist {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
