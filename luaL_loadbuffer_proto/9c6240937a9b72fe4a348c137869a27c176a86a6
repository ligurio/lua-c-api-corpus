chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  explast {
                    binary {
                      leftexp {
                      }
                      binop {
                        add: 2
                      }
                      rightexp {
                        binary {
                          leftexp {
                            prefixexp {
                            }
                          }
                          binop {
                            mult: 536870912
                          }
                          rightexp {
                            unary {
                              unop {
                                negate: 0
                              }
                              exp {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              forcyclename {
                name {
                  name: "\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244+\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244chunk {\n  stat {\n    whilecycle {\n      condition {\n      }\n      doblock {\n        block {\n          chunk {\n            stat {\n              list {\n                varlist {\n                  var {\n                  }\n                }\n                explist {\n                  explast {\n                    binary {\n                      leftexp {\n                      }\n                      binop {\n                        add: 2\n                      }\n                      rightexp {\n                        binary {\n                          leftexp {\n                            prefixexp {\n                            }\n                          }\n                          binop {\n                            mult: 0\n                          }\n                          rightexp {\n                            unary {\n                              unop {\n                                negate: 538976288\n                              }\n                              exp {\n                                prefixexp {\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            stat {\n              forcyclename {\n                name {\n                  name: \"\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\"\n                  num: 2097152\n                }\n                startexp {\n                  prefixexp {\n                    functioncall {\n                      namedArgs {\n                        prefixexp {\n                          functioncall {\n                            prefArgs {\n                              prefixexp {\n                                var {\n                                  name {\n                                    name: \"__le\"\n                                    num: 0\n                                  }\n                                }\n                              }\n                              args {\n                                explist {\n                                  explist {\n                                    expressions {\n                                      prefixexp {\n                                        exp {\n                                          binary {\n                                            leftexp {\n                                              binary {\n                                                leftexp {\n                                                  number: 0\n                                                }\n                                                binop {\n                                                  sub: 0\n                                                }\n                                                rightexp {\n                                                  str: \"\\000\\000\\000\\000\"\n                                                }\n                                              }\n                                            }\n                                            binop {\n                                              div: 2\n                                            }\n                                            rightexp {\n                                              binary {\n                                                leftexp {\n                                                }\n                                                binop {\n                                                  mult: 25393\n                                                }\n                                                rightexp {\n                                                  prefixexp {\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    expressions {\n                                      unary {\n                                        unop {\n                                          negate: 538976288\n                             \244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244           }\n                                        exp {\n                                          prefixexp {\n                                          }\n                                        }\n                                      }\n                                    }\n                                    explast {\n                                      ellipsis: \"\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\"\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                        name {\n                          name: \"\"\n                          num: 0\n                        }\n                        args {\n                          tableconstructor {\n                            fieldlist {\n                              firstField {\n                              }\n                              fields {\n                                field {\n                                  exprassign {\n                                    key {\n                                      ellipsis: \"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\"\n                                    }\n                                    value {\n                                    }\n                                  }\n                                }\n                                sep {\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n                stopexp {\n                  binary {\n                    leftexp {\n                      prefixexp {\n                        exp {\n                        }\n                      }\n                    }\n                    binop {\n                      concat: 0\n                    }\n                    rightexp {\n                      binary {\n                        leftexp {\n                          number: 0\n                        }\n                        binop {\n                          sub: 0\n                        }\n                        rightexp {\n                          str: \"\\000\\000\\000\\000\"\n                        }\n                      }\n                    }\n                  }\n                }\n                stepexp {\n                }\n                doblock {\n                  block {\n                    chunk {\n                      stat {\n                        list {\n                          varlist {\n                            var {\n                            }\n                          }\n                          explist {\n                            explast {\n                              binary {\n                                leftexp {\n                                }\n                                binop {\n                                  add: 2\n                                }\n                                rightexp {\n                                  binary {\n                                    leftexp {\n                                      prefixexp {\n                                        exp {\n                                          function {\n                                            body {\n                                              parlist {\n                                                namelist {\n                                                  namelist {\n                                                    firstname {\n                                                      name: \"\"\n                                                      num: 0\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                              block {\n                                                chunk {\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    binop {\n                                      mult: 0\n                                    }\n                                    rightexp {\n                                      prefixexp {\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                      stat {\n                        forcyclename {\n                          name {\n                            name: \"\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\"\n                            num: 2097152\n                          }\n                          startexp {\n                            prefixexp {\n                              functioncall {\n                                namedArgs {\n                                  prefixexp {\n                                    functioncall {\n                                      prefArgs {\n                                        prefixexp {\n                                          var {\n                                            name {\n                                              name: \"__le\"\n                                              num: 0\n                                            }\n                                          }\n                                        }\n                                        args {\n                                          explist {\n                                            explist {\n                                              expressions {\n                                                prefixexp {\n                                                  exp {\n                                                    binary {\n                                                      leftexp {\n                                                        binary {\n                                                          leftexp {\n                                                            number: 0\n                                                          }\n                                                          binop {\n                                                            sub: 0\n                                                          }\n                                                          rightexp {\n                                                            str: \"\\000\\000\\000\\000\"\n                                                          }\n                                                        }\n                                                      }\n                                                      binop {\n                                                        div: 2\n                                                      }\n                                                      rightexp {\n                                                        binary {\n                                                          leftexp {\n                                                          }\n                                                          binop {\n                                                            mult: 25393\n                                                          }\n                                                          rightexp {\n                                                            prefixexp {\n                                                            }\n                                                          }\n                                                        }\n                                                      }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                              expressions {\n                                                unary {\n                                                  unop {\n                                                    negate: 538976288\n                                                  }\n                                                  exp {\n                                                    prefixexp {\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                              explast {\n                                                ellipsis: \"\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\"\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                  name {\n                                    name: \"\"\n                                    num: 0\n                                  }\n                                  args {\n                                    tableconstructor {\n                                      fieldlist {\n                                        firstField {\n                                        }\n                                        fields {\n                                          field {\n                                            exprassign {\n                                              key {\n                                                ellipsis: \"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\"\n                                              }\n                                              value {\n                                              }\n                                            }\n                                          }\n                                          sep {\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                          stopexloadn                            binary {\n                              leftexp {\n                                prefixexp {\n                                  exp {\n                                  }\n                                }\n                              }\n                              binop {\n                                concat: 0\n                              }\n                              rightexp {\n                                prefixexp {\n                                  exp {\n                                  }\n                                }\n                              }\n                            }\n                          }\n                          stepexp {\n                          }\n                          doblock {\n                            block {\n                              chunk {\n                                stat {\n                                  list {\n                                    varlist {\n                                      var {\n                                      }\n                                    }\n                                    explist {\n                                      explast {\n                                        binary {\n                                          leftexp {\n                                          }\n                                          binop {\n                                            add: 2\n                                          }\n                                          rightexp {\n                                            binary {\n                                              leftexp {\n                                                prefixexp {\n                                                  functioncall {\n                                                    prefArgs {\n                                                      prefixexp {\n                                                      }\n                                                      args {\n                                                        tableconstructor {\n                                                          fieldlist {\n                                                            firstField {\n                                                            }\n                                                            lastSep {\n                                                              semicolon: 1885696512\n                                                            }\n                                                          }\n                                                        }\n                                                      }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                              binop {\n                                                mult: 0\n                                              }\n                                              rightexp {\n                                                prefixexp {\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                                stat {\n                                  forcyclename {\n                                    name {\n                                      name: \"\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\\244\"\n                                      num: 2097152\n                                    }\n                                    startexp {\n                                      prefixexp {\n                                        functioncall {\n                                          namedArgs {\n                                            prefixexp {\n                                              functioncall {\n                                                prefArgs {\n                                                  prefixexp {\n                                                    var {\n                                                      name {\n                                                        name: \"__le\"\n                                                        num: 0\n                                                      }\n                                                    }\n                                                  }\n                                                  args {\n                                                    explist {\n                                                      explist {\n                                                        expressions {\n                                                          prefixexp {\n                                                            exp {\n                                                              ellipsis: \"\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\"\n                                                            }\n                                                          }\n                                                        }\n                                                        expressions {\n                                                          unary {\n                                                            unop {\n                                                              negate: 538976288\n                                                            }\n                                                            exp {\n                                                              prefixexp {\n                                                              }\n                                                            }\n                                                          }\n                                                        }\n                                                        explast {\n                                                          ellipsis: \"\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\\177\"\n                                                        }\n                                                      }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                            name {\n                                              name: \"\"\n                                              num: 0\n                                            }\n                                            args {\n                                              tableconstructor {\n                                                fieldlist {\n                                                  firstField {\n                                                  }\n                                                \244\244\244\244\244\244\244\244\244\244  fields {\n                                                    field {\n                                                      exprassign {\n                                                        key {\n                                                          ellipsis: \"\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\"\n                                                        }\n                                                        value {\n                                                        }\n                                                      }\n                                                    }\n                                                    sep {\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    stopexp {\n                                      binary {\n                                        leftexp {\n                                          prefixexp {\n                                            exp {\n                                            }\n                                          }\n                                        }\n                                        binop {\n                                          concat: 0\n                                        }\n                                        rightexp {\n                                          prefixexp {\n                                            exp {\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    stepexp {\n                                    }\n                                    doblock {\n                                      block {\n                                        chunk {\n                                          stat {\n                                            list {\n                                              varlist {\n                                                var {\n                                                }\n                                              }\n                                              explist {\n                                                explast {\n                                                  binary {\n                                                    leftexp {\n                                                    }\n                                                    binop {\n                                                      add: 2\n                                                    }\n                                                    rightexp {\n                                                      binary {\n                                                        leftexp {\n                                                          prefixexp {\n                                                          }\n                                                        }\n                                                        binop {\n                                                          mult: 536870912\n                                                        }\n                                                        rightexp {\n                                                        }\n                                                      }\n                                                    }\n                            "
                  num: 2
                }
                startexp {
                  prefixexp {
                    exp {
                    }
                  }
                }
                stopexp {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                          prefixexp {
                            functioncall {
                              namedArgs {
                                prefixexp {
                                  functioncall {
                                    prefArgs {
                                      prefixexp {
                                        var {
                                          name {
                                            name: "__le"
                                            num: 0
                                          }
                                        }
                                      }
                                      args {
                                        explist {
                                          explist {
                                            expressions {
                                              prefixexp {
                                                exp {
                                                  binary {
                                                    leftexp {
                                                      binary {
                                                        leftexp {
                                                          number: 0
                                                        }
                                                        binop {
                                                          sub: 0
                                                        }
                                                        rightexp {
                                                          str: "\000\000\000\000"
                                                        }
                                                      }
                                                    }
                                                    binop {
                                                      div: 2
                                                    }
                                                    rightexp {
                                                      binary {
                                                        leftexp {
                                                        }
                                                        binop {
                                                          mult: 25393
                                                        }
                                                        rightexp {
                                                          prefixexp {
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            expressions {
                                              unary {
                                                unop {
                                                  negate: 538976288
                                                }
                                                exp {
                                                  prefixexp {
                                                  }
                                                }
                                              }
                                            }
                                            explast {
                                              ellipsis: "\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177\177"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                name {
                                  name: ""
                                  num: 0
                                }
                                args {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                      }
                                      fields {
                                        field {
                                          exprassign {
                                            key {
                                              ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                            }
                                            value {
                                            }
                                          }
                                        }
                                        sep {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        binop {
                          concat: 23
                        }
                        rightexp {
                          prefixexp {
                          }
                        }
                      }
                    }
                    binop {
                      concat: 23
                    }
                    rightexp {
                      prefixexp {
                      }
                    }
                  }
                }
                stepexp {
                  true: 1
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                            }
                          }
                          explist {
                            explast {
                              binary {
                                leftexp {
                                }
                                binop {
                                  add: 2
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                      mult: 1
                                    }
                                    rightexp {
                                      prefixexp {
                                        functioncall {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        forcyclename {
                          name {
                            name: "\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244"
                            num: 2050
                          }
                          startexp {
                            prefixexp {
                              exp {
                              }
                            }
                          }
                          stopexp {
                            prefixexp {
                            }
                          }
                          stepexp {
                            true: 0
                          }
                          doblock {
                            block {
                              chunk {
                                laststat {
                                  semicolon: true
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: false
  }
  laststat {
    break: 6291456
    semicolon: true
  }
}
