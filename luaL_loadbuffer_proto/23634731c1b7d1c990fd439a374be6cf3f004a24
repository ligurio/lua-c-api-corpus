chunk {
  stat {
    semicolon: true
  }
  stat {
    forcyclename {
      name {
        name: "_ENV"
        num: 0
      }
      startexp {
      }
      stopexp {
        number: -1.6122275479622725e+265
      }
      stepexp {
        unary {
          unop {
            negate: 0
          }
          exp {
            nil: 4
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: ""
                  num: 0
                }
                funcbody {
                  block {
                    chunk {
                      stat {
                        localfunc {
                          name {
                            name: ""
                            num: 0
                          }
                          funcbody {
                            parlist {
                              namelist {
                                namelist {
                                  firstname {
                                    name: ""
                                    num: 4
                                  }
                                  names {
                                    name: "rawset"
                                    num: 0
                                  }
                                  names {
                                    name: ""
                                    num: 4
                                  }
                                }
                                ellipsis: "J"
                              }
                            }
                            block {
                              chunk {
                                stat {
                                  semicolon: true
                                }
                              }
                            }
                          }
                        }
                      }
                      laststat {
                        explist {
                          explist {
                            expressions {
                              ellipsis: "`"
                            }
                            explast {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                      explist {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                    explist {
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
}
