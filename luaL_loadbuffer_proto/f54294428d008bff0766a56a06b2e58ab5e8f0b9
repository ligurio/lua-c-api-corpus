chunk {
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                expressions {
                  binary {
                    leftexp {
                      unary {
                        unop {
                          length: 0
                        }
                        exp {
                          tableconstructor {
                          }
                        }
                      }
                    }
                    binop {
                      concat: 4
                    }
                    rightexp {
                      str: "xc3333333333333333333333333333333333333333333333333333333333k"
                    }
                  }
                }
                explast {
                  str: "___________"
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        unary {
                          unop {
                            negate: 0
                          }
                          exp {
                            prefixexp {
                            }
                          }
                        }
                      }
                      binop {
                        mod: 0
                      }
                      rightexp {
                        prefixexp {
                        }
                      }
                    }
                  }
                  binop {
                  }
                  rightexp {
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                unary {
                  unop {
                    negate: 0
                  }
                  exp {
                    prefixexp {
                    }
                  }
                }
              }
              binop {
                mod: 0
              }
              rightexp {
                prefixexp {
                }
              }
            }
          }
          binop {
          }
          rightexp {
          }
        }
      }
    }
    semicolon: true
  }
}
