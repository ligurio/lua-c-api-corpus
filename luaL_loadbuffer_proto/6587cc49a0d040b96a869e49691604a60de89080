chunk {
  stat {
  }
  stat {
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: 4.0001301765441895
      }
      stopexp {
        number: -38
      }
      stepexp {
        number: -38
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        whilecycle {
                          condition {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  expression {
                                    binary {
                                      leftexp {
                                        prefixexp {
                                          functioncall {
                                          }
                                        }
                                      }
                                      binop {
                                        mod: 65536
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                            binary {
                                              leftexp {
                                                tableconstructor {
                                                  fieldlist {
                                                    firstField {
                                                    }
                                                    lastSep {
                                                      semicolon: 1667391744
                                                    }
                                                  }
                                                }
                                              }
                                              binop {
                                                sub: 2
                                              }
                                              rightexp {
                                                unary {
                                                  unop {
                                                    length: 0
                                                  }
                                                  exp {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          binop {
                                            sub: 2
                                          }
                                          rightexp {
                                            number: 0
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                fields {
                                  field {
                                    exprassign {
                                      key {
                                      }
                                      value {
                                        binary {
                                          leftexp {
                                            binary {
                                              leftexp {
                                              }
                                              binop {
                                                concat: 0
                                              }
                                              rightexp {
                                                binary {
                                                  leftexp {
                                                    binary {
                                                      leftexp {
                                                      }
                                                      binop {
                                                        or: 2
                                                      }
                                                      rightexp {
                                                        number: 116.95316997449845
                                                      }
                                                    }
                                                  }
                                                  binop {
                                                  }
                                                  rightexp {
                                                    nil: 0
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          binop {
                                          }
                                          rightexp {
                                          }
                                        }
                                      }
                                    }
                                  }
                                  sep {
                                    comma: 2
                                  }
                                }
                                fields {
                                  field {
                                    exprassign {
                                      key {
                                      }
                                      value {
                                        function {
                                          body {
                                            parlist {
                                              ellipsis: "\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276"
                                            }
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  sep {
                                  }
                                }
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  whilecycle {
                                    condition {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                            expression {
                                              binary {
                                                leftexp {
                                                  prefixexp {
                                                    functioncall {
                                                    }
                                                  }
                                                }
                                                binop {
                                                  mod: 65536
                                                }
                                                rightexp {
                                                  binary {
                                                    leftexp {
                                                      binary {
                                                        leftexp {
                                                          tableconstructor {
                                                            fieldlist {
                                                              firstField {
                                                              }
                                                              lastSep {
                                                                semicolon: 1667391744
                                                              }
                                                            }
                                                          }
                                                        }
                                                        binop {
                                                          sub: 2
                                                        }
                                                        rightexp {
                                                          unary {
                                                            unop {
                                                              length: 0
                                                            }
                                                            exp {
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    binop {
                                                      sub: 2
                                                    }
                                                    rightexp {
                                                      number: 0
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          fields {
                                            field {
                                              exprassign {
                                                key {
                                                }
                                                value {
                                                  binary {
                                                    leftexp {
                                                      binary {
                                                        leftexp {
                                                        }
                                                        binop {
                                                          concat: 0
                                                        }
                                                        rightexp {
                                                          binary {
                                                            leftexp {
                                                              binary {
                                                                leftexp {
                                                                }
                                                                binop {
                                                                  or: 2
                                                                }
                                                                rightexp {
                                                                  number: 116.95316997449845
                                                                }
                                                              }
                                                            }
                                                            binop {
                                                            }
                                                            rightexp {
                                                              nil: 0
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    binop {
                                                    }
                                                    rightexp {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            sep {
                                              comma: 2
                                            }
                                          }
                                          fields {
                                            field {
                                              exprassign {
                                                key {
                                                }
                                                value {
                                                  function {
                                                    body {
                                                      parlist {
                                                        ellipsis: "\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276"
                                                      }
                                                      block {
                                                        chunk {
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            sep {
                                            }
                                          }
                                        }
                                      }
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              whilecycle {
                condition {
                  binary {
                    leftexp {
                      unary {
                        unop {
                          length: 4
                        }
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                  unary {
                                    unop {
                                      length: 0
                                    }
                                    exp {
                                    }
                                  }
                                }
                              }
                              fields {
                                field {
                                  expression {
                                  }
                                }
                                sep {
                                  semicolon: 4
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    binop {
                      and: 0
                    }
                    rightexp {
                      str: ""
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                      }
                      stat {
                        whilecycle {
                          condition {
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  whilecycle {
                                    condition {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                            expression {
                                              binary {
                                                leftexp {
                                                  prefixexp {
                                                    functioncall {
                                                    }
                                                  }
                                                }
                                                binop {
                                                  mod: 65536
                                                }
                                                rightexp {
                                                  binary {
                                                    leftexp {
                                                      binary {
                                                        leftexp {
                                                          tableconstructor {
                                                            fieldlist {
                                                              firstField {
                                                              }
                                                              lastSep {
                                                                semicolon: 1667391744
                                                              }
                                                            }
                                                          }
                                                        }
                                                        binop {
                                                          sub: 2
                                                        }
                                                        rightexp {
                                                          unary {
                                                            unop {
                                                              length: 0
                                                            }
                                                            exp {
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    binop {
                                                      sub: 2
                                                    }
                                                    rightexp {
                                                      number: 0
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          fields {
                                            field {
                                              exprassign {
                                                key {
                                                }
                                                value {
                                                  binary {
                                                    leftexp {
                                                      binary {
                                                        leftexp {
                                                        }
                                                        binop {
                                                          concat: 0
                                                        }
                                                        rightexp {
                                                          binary {
                                                            leftexp {
                                                              binary {
                                                                leftexp {
                                                                }
                                                                binop {
                                                                  or: 2
                                                                }
                                                                rightexp {
                                                                  number: 116.95316997449845
                                                                }
                                                              }
                                                            }
                                                            binop {
                                                            }
                                                            rightexp {
                                                              nil: 0
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    binop {
                                                    }
                                                    rightexp {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            sep {
                                              comma: 2
                                            }
                                          }
                                          fields {
                                            field {
                                              exprassign {
                                                key {
                                                }
                                                value {
                                                  function {
                                                    body {
                                                      parlist {
                                                        ellipsis: "\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276"
                                                      }
                                                      block {
                                                        chunk {
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            sep {
                                            }
                                          }
                                        }
                                      }
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                          stat {
                                            whilecycle {
                                              condition {
                                                tableconstructor {
                                                  fieldlist {
                                                    firstField {
                                                      expression {
                                                        binary {
                                                          leftexp {
                                                            prefixexp {
                                                              functioncall {
                                                              }
                                                            }
                                                          }
                                                          binop {
                                                            mod: 65536
                                                          }
                                                          rightexp {
                                                            binary {
                                                              leftexp {
                                                                binary {
                                                                  leftexp {
                                                                    tableconstructor {
                                                                    }
                                                                  }
                                                                  binop {
                                                                    sub: 2
                                                                  }
                                                                  rightexp {
                                                                    number: 0.00048828125
                                                                  }
                                                                }
                                                              }
                                                              binop {
                                                                sub: 2
                                                              }
                                                              rightexp {
                                                                number: 0
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    fields {
                                                      field {
                                                        exprassign {
                                                          key {
                                                          }
                                                          value {
                                                            binary {
                                                              leftexp {
                                                                binary {
                                                                  leftexp {
                                                                  }
                                                                  binop {
                                                                    concat: 0
                                                                  }
                                                                  rightexp {
                                                                    binary {
                                                                      leftexp {
                                                                        binary {
                                                                          leftexp {
                                                                          }
                                                                          binop {
                                                                            or: 2
                                                                          }
                                                                          rightexp {
                                                                            number: 116.95316997449845
                                                                          }
                                                                        }
                                                                      }
                                                                      binop {
                                                                      }
                                                                      rightexp {
                                                                        nil: 0
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              binop {
                                                              }
                                                              rightexp {
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      sep {
                                                        comma: 2
                                                      }
                                                    }
                                                    fields {
                                                      field {
                                                        exprassign {
                                                          key {
                                                          }
                                                          value {
                                                            function {
                                                              body {
                                                                parlist {
                                                                  ellipsis: "\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276\276"
                                                                }
                                                                block {
                                                                  chunk {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      sep {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              doblock {
                                                block {
                                                  chunk {
                                                    stat {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                laststat {
                                  semicolon: true
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        whilecycle {
                          condition {
                            tableconstructor {
                            }
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                }
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                      stat {
                        whilecycle {
                          condition {
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                      stat {
                        whilecycle {
                          condition {
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: 4.0001301765441895
      }
      stopexp {
        number: -38
      }
      stepexp {
        number: -2
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 16
                }
                startexp {
                  prefixexp {
                  }
                }
                stopexp {
                  number: 0.00048828125
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              semicolon: true
            }
          }
        }
      }
    }
  }
}
