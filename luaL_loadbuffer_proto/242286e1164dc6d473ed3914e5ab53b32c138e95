chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                number: -2
              }
              binop {
                mod: 4
              }
              rightexp {
              }
            }
          }
          binop {
            mod: 4
          }
          rightexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        number: -2
                      }
                      binop {
                        mod: 4
                      }
                      rightexp {
                        number: 3
                      }
                    }
                  }
                  binop {
                    mod: 4
                  }
                  rightexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            number: -2
                          }
                          binop {
                            mod: 4
                          }
                          rightexp {
                            number: 3
                          }
                        }
                      }
                      binop {
                        mod: 4
                      }
                      rightexp {
                        number: 1.35874042990245e-312
                      }
                    }
                  }
                }
              }
              binop {
                mod: 0
              }
              rightexp {
                number: 3
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                number: -2
              }
              binop {
                mod: 4
              }
              rightexp {
              }
            }
          }
          binop {
            mod: 4
          }
          rightexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                  }
                  binop {
                    mod: 4
                  }
                  rightexp {
                    number: 3
                  }
                }
              }
              binop {
                mod: 4
              }
              rightexp {
                number: 1.35874042990245e-312
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                number: 1.35874042990245e-312
              }
              binop {
                mod: 4
              }
              rightexp {
                number: 3
              }
            }
          }
          binop {
            mod: 4
          }
          rightexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    number: -2
                  }
                  binop {
                    mod: 4
                  }
                  rightexp {
                    number: 3
                  }
                }
              }
              binop {
                mod: 4
              }
              rightexp {
                number: 1.35874042990245e-312
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
