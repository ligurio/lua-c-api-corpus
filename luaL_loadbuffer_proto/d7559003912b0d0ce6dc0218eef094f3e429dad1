chunk {
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
    semicolon: true
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
          stat {
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
          stat {
          }
          stat {
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
            semicolon: true
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                }
              }
              last {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        false: 0
                      }
                    }
                    semicolon: false
                  }
                }
              }
            }
          }
          stat {
          }
          stat {
          }
          stat {
            call {
              namedArgs {
                prefixexp {
                  var {
                    name {
                      name: ""
                      num: 0
                    }
                  }
                }
                name {
                  name: ""
                  num: 0
                }
                args {
                }
              }
            }
          }
          stat {
            call {
              namedArgs {
                prefixexp {
                  var {
                    name {
                      name: ""
                      num: 0
                    }
                  }
                }
                name {
                  name: ""
                  num: 0
                }
                args {
                }
              }
            }
          }
          stat {
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                }
                args {
                  explist {
                    explist {
                      expressions {
                        unary {
                          unop {
                          }
                          exp {
                            true: 538968064
                          }
                        }
                      }
                      explast {
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
          }
          stat {
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
        }
      }
      last {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
            semicolon: false
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
    call {
      namedArgs {
        prefixexp {
          var {
            name {
              name: ""
              num: 0
            }
          }
        }
        name {
          name: ""
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
          var {
            name {
              name: ""
              num: 0
            }
          }
        }
        name {
          name: ""
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          explist {
            explist {
              expressions {
                unary {
                  unop {
                  }
                  exp {
                    true: 28259
                  }
                }
              }
              explast {
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
    semicolon: false
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
            semicolon: true
          }
          stat {
          }
          stat {
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
            semicolon: true
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                }
              }
              last {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        false: 0
                      }
                    }
                    semicolon: false
                  }
                }
              }
            }
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
            call {
              namedArgs {
                prefixexp {
                  var {
                    name {
                      name: ""
                      num: 0
                    }
                  }
                }
                name {
                  name: ""
                  num: 0
                }
                args {
                }
              }
            }
          }
          stat {
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                }
                args {
                  explist {
                    explist {
                      expressions {
                        unary {
                          unop {
                          }
                          exp {
                            true: 538968064
                          }
                        }
                      }
                      explast {
                        tableconstructor {
                          fieldlist {
                            firstField {
                              exprassign {
                                key {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        expression {
                                          binary {
                                            leftexp {
                                              prefixexp {
                                                exp {
                                                  binary {
                                                    leftexp {
                                                      number: 4.4860009659285654e-308
                                                    }
                                                    binop {
                                                      or: 0
                                                    }
                                                    rightexp {
                                                      nil: 4127195136
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            binop {
                                              exp: 25344
                                            }
                                            rightexp {
                                              number: 2.07507571253324e-322
                                            }
                                          }
                                        }
                                      }
                                      fields {
                                        field {
                                          expression {
                                            tableconstructor {
                                              fieldlist {
                                                firstField {
                                                }
                                              }
                                            }
                                          }
                                        }
                                        sep {
                                          comma: 0
                                        }
                                      }
                                      lastSep {
                                      }
                                    }
                                  }
                                }
                                value {
                                }
                              }
                            }
                            fields {
                              field {
                                exprassign {
                                  key {
                                  }
                                  value {
                                    prefixexp {
                                    }
                                  }
                                }
                              }
                              sep {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 1
              }
              startexp {
              }
              stopexp {
                number: -2
              }
              stepexp {
                tableconstructor {
                  fieldlist {
                    firstField {
                      exprassign {
                        key {
                          binary {
                            leftexp {
                              number: 2.90116612046033e-315
                            }
                            binop {
                              lessEqual: 0
                            }
                            rightexp {
                              prefixexp {
                                exp {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                      or: 1
                                    }
                                    rightexp {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        value {
                        }
                      }
                    }
                    fields {
                      field {
                        exprassign {
                          key {
                            binary {
                              leftexp {
                                number: 2.90116612046033e-315
                              }
                              binop {
                                lessEqual: 0
                              }
                              rightexp {
                                prefixexp {
                                  exp {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                        or: 1
                                      }
                                      rightexp {
                                        number: 0
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          value {
                          }
                        }
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        exprassign {
                          key {
                            binary {
                              leftexp {
                                number: -0.00023651123046875
                              }
                              binop {
                                sub: 32
                              }
                              rightexp {
                              }
                            }
                          }
                          value {
                          }
                        }
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        exprassign {
                          key {
                            binary {
                              leftexp {
                                number: -11.596000671386719
                              }
                              binop {
                                greaterEqual: 1
                              }
                              rightexp {
                                prefixexp {
                                  exp {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                        or: 1
                                      }
                                      rightexp {
                                        ellipsis: "coroutine.close"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          value {
                          }
                        }
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        expression {
                          nil: 0
                        }
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        exprassign {
                          key {
                            ellipsis: "V"
                          }
                          value {
                          }
                        }
                      }
                      sep {
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                binary {
                  leftexp {
                    number: -0.00023651123046875
                  }
                  binop {
                    mod: 0
                  }
                  rightexp {
                    prefixexp {
                    }
                  }
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
            semicolon: false
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                }
              }
              condition {
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
          stat {
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: ""
                  num: 0
                }
              }
              explist {
                explast {
                  str: "math.cos"
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
}
