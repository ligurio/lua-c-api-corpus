chunk {
  stat {
    semicolon: true
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        expressions {
          str: "\001\000\000\001"
        }
        expressions {
          true: 2054845798
        }
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
          stat {
            forcyclename {
              name {
                name: "~"
                num: 0
              }
              startexp {
                unary {
                  unop {
                    not: 16449536
                  }
                  exp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            str: "\'<66>.633332<\'<8"
                          }
                          binop {
                          }
                          rightexp {
                            str: "\'<66>.633332<\'<8"
                          }
                        }
                      }
                      binop {
                        sub: 0
                      }
                      rightexp {
                        str: "\'<66>.633332<\'<8"
                      }
                    }
                  }
                }
              }
              stopexp {
                unary {
                  unop {
                    not: 16449536
                  }
                  exp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        binary {
                                          leftexp {
                                            binary {
                                              leftexp {
                                                binary {
                                                  leftexp {
                                                    str: "\'<66>.633332<\'<8"
                                                  }
                                                  binop {
                                                    sub: 0
                                                  }
                                                  rightexp {
                                                    nil: 32768
                                                  }
                                                }
                                              }
                                              binop {
                                              }
                                              rightexp {
                                                str: "\'<66>.633332<\'<8"
                                              }
                                            }
                                          }
                                          binop {
                                          }
                                          rightexp {
                                            str: "\'<66>.633332<\'<8"
                                          }
                                        }
                                      }
                                      binop {
                                        sub: 0
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                            binary {
                                              leftexp {
                                                str: "\'<66>.633332<\'<8"
                                              }
                                              binop {
                                                or: 0
                                              }
                                              rightexp {
                                                str: "\'<66>.6<<333\'328"
                                              }
                                            }
                                          }
                                          binop {
                                            sub: 0
                                          }
                                          rightexp {
                                            str: "\'<66>.633036<\'<8"
                                          }
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                    sub: 1801675120
                                  }
                                  rightexp {
                                    str: "\'<66>.633332<\'<8"
                                  }
                                }
                              }
                              binop {
                                sub: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    false: 0
                                  }
                                  binop {
                                  }
                                  rightexp {
                                    str: "\'<66>.633332<\'<8"
                                  }
                                }
                              }
                            }
                          }
                          binop {
                            sub: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    str: "\'<66>.633332<\'<8"
                                  }
                                  binop {
                                  }
                                  rightexp {
                                    str: "\'<66>.633332<\'<8"
                                  }
                                }
                              }
                              binop {
                                sub: 0
                              }
                              rightexp {
                                str: "\'<66>.633332<\'<8"
                              }
                            }
                          }
                        }
                      }
                      binop {
                      }
                      rightexp {
                      }
                    }
                  }
                }
              }
              stepexp {
              }
              doblock {
                block {
                  chunk {
                    stat {
                      forcyclename {
                        name {
                          name: "~"
                          num: 0
                        }
                        startexp {
                          unary {
                            unop {
                              negate: 37
                            }
                            exp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      str: "\'<66>.633332<\'<8"
                                    }
                                    binop {
                                    }
                                    rightexp {
                                      str: "\'<66>.633332<\'<8"
                                    }
                                  }
                                }
                                binop {
                                  sub: 0
                                }
                                rightexp {
                                  str: "\'<66>.633332<\'<8"
                                }
                              }
                            }
                          }
                        }
                        stopexp {
                          unary {
                            unop {
                              not: 16449536
                            }
                            exp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      tableconstructor {
                                      }
                                    }
                                    binop {
                                      sub: 0
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          binary {
                                            leftexp {
                                              str: "\'<66>.633332<\'<8"
                                            }
                                            binop {
                                            }
                                            rightexp {
                                              str: "\'<66>.633332<\'<8"
                                            }
                                          }
                                        }
                                        binop {
                                          sub: 0
                                        }
                                        rightexp {
                                          str: "\'<66>.633332<\'<8"
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                        stepexp {
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                whilecycle {
                                  condition {
                                    tableconstructor {
                                    }
                                  }
                                  doblock {
                                    block {
                                      chunk {
                                        stat {
                                        }
                                      }
                                    }
                                  }
                                }
                                semicolon: false
                              }
                            }
                          }
                        }
                      }
                      semicolon: true
                    }
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    semicolon: true
  }
}
