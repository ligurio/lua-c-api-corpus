chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            forcyclename {
              name {
                name: "~"
                num: 0
              }
              startexp {
                unary {
                  unop {
                  }
                  exp {
                  }
                }
              }
              stopexp {
                unary {
                  unop {
                    negate: 7995392
                  }
                  exp {
                    binary {
                      leftexp {
                      }
                      binop {
                      }
                      rightexp {
                        str: "\'<66>.633332<\'<8"
                      }
                    }
                  }
                }
              }
              stepexp {
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
            semicolon: false
          }
          stat {
            semicolon: true
          }
        }
      }
      condition {
        binary {
          leftexp {
            unary {
              unop {
              }
              exp {
                binary {
                  leftexp {
                    str: "\'<66>.633332<\'<8"
                  }
                  binop {
                  }
                  rightexp {
                    str: "\'<66>.633332<\'<8"
                  }
                }
              }
            }
          }
          binop {
          }
          rightexp {
            str: "\'<66>.633332<\'<8"
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    explist {
    }
    semicolon: true
  }
}
