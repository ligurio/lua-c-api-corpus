chunk {
  stat {
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              call {
                prefArgs {
                  prefixexp {
                    var {
                    }
                  }
                  args {
                    str: "break"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: "\030\000\000\000"
        num: 6490687
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        unary {
          unop {
            not: 0
          }
          exp {
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        function {
          body {
            block {
              chunk {
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    func {
      name {
        firstname {
          name: "\007"
          num: 0
        }
        lastname {
          name: "pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
          num: 5
        }
      }
      body {
        parlist {
          ellipsis: "\242\000\000\000"
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: "counter_+"
                  num: 6513008
                }
                names {
                  name: "counter_8"
                  num: 0
                }
                names {
                  name: "qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq"
                  num: 4177526784
                }
              }
              explist {
                expressions {
                  ellipsis: "package.loadlib"
                }
                explast {
                  number: -709.375
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    whilecycle {
                      condition {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                              }
                              binop {
                                div: 6619136
                              }
                              rightexp {
                                str: "\'~~9~9~\'9~"
                              }
                            }
                          }
                          binop {
                            mod: 587202560
                          }
                          rightexp {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                }
                                lastSep {
                                  semicolon: 1684104562
                                }
                              }
                            }
                          }
                        }
                      }
                      doblock {
                        block {
                          chunk {
                            stat {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              condition {
                str: "math.atan"
              }
            }
          }
        }
      }
      condition {
        false: 1023410176
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            ifstat {
              condition {
                number: 3.7548121362309023e-308
              }
              first {
                chunk {
                }
              }
            }
          }
        }
      }
      condition {
        nil: 1
      }
    }
  }
  stat {
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: ""
                  num: 0
                }
              }
              explist {
                expressions {
                }
                explast {
                }
              }
            }
          }
          stat {
            semicolon: true
          }
        }
      }
      condition {
        nil: 5
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        unary {
          unop {
          }
          exp {
            prefixexp {
              exp {
              }
            }
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: "\030\000\000\000"
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
  }
  laststat {
    break: 128
  }
}
