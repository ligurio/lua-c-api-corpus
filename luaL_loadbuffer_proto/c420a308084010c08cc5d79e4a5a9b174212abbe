chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                  prefixexp {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      exp {
                        unary {
                          unop {
                            length: 4
                          }
                          exp {
                          }
                        }
                      }
                    }
                  }
                }
                explist {
                  explast {
                    binary {
                      leftexp {
                      }
                      binop {
                        div: 4194304
                      }
                      rightexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        number: -4.9591064453125e-05
                                      }
                                      binop {
                                        div: 0
                                      }
                                      rightexp {
                                        number: -4.9591064453125e-05
                                      }
                                    }
                                  }
                                  binop {
                                    div: 0
                                  }
                                  rightexp {
                                    number: -4.9591064453125e-05
                                  }
                                }
                              }
                              binop {
                                or: 13312
                              }
                              rightexp {
                                function {
                                  body {
                                    parlist {
                                      ellipsis: "-"
                                    }
                                    block {
                                      chunk {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          binop {
                            div: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    number: -4.9591064453125e-05
                                  }
                                  binop {
                                    div: 0
                                  }
                                  rightexp {
                                    number: -4.9591064453125e-05
                                  }
                                }
                              }
                              binop {
                                div: 0
                              }
                              rightexp {
                                number: -4.9591064453125e-05
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
