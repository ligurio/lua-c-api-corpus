chunk {
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "error"
              num: 128
            }
          }
        }
        args {
          explist {
            explist {
              expressions {
              }
              expressions {
                binary {
                  leftexp {
                    number: -424
                  }
                  binop {
                    mult: 0
                  }
                  rightexp {
                    binary {
                      leftexp {
                      }
                      binop {
                        mult: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                            number: 4.7074870285911823e-46
                          }
                          binop {
                            sub: 8
                          }
                          rightexp {
                          }
                        }
                      }
                    }
                  }
                }
              }
              expressions {
                function {
                  body {
                    block {
                      chunk {
                      }
                    }
                  }
                }
              }
              expressions {
                number: 3.6842187509576013e+180
              }
              expressions {
                prefixexp {
                  functioncall {
                    namedArgs {
                      prefixexp {
                      }
                      name {
                        name: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                        num: 0
                      }
                      args {
                      }
                    }
                  }
                }
              }
              explast {
              }
            }
          }
        }
      }
    }
  }
}
