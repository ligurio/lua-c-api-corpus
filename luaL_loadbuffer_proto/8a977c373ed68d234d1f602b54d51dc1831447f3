chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  laststat {
    explist {
      explist {
        expressions {
          ellipsis: "("
        }
        explast {
          binary {
            leftexp {
              binary {
                leftexp {
                  binary {
                    leftexp {
                      number: -11.596000671386719
                    }
                    binop {
                      concat: 96
                    }
                    rightexp {
                      number: -11.596000671386719
                    }
                  }
                }
                binop {
                  concat: 96
                }
                rightexp {
                  binary {
                    leftexp {
                      str: "\000\000"
                    }
                    binop {
                      greaterEqual: 0
                    }
                    rightexp {
                      binary {
                        leftexp {
                          number: -11.596000671386719
                        }
                        binop {
                          concat: 96
                        }
                        rightexp {
                          binary {
                            leftexp {
                              str: "\000\000"
                            }
                            binop {
                              concat: 4
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  number: 0
                                }
                                binop {
                                  exp: 4
                                }
                                rightexp {
                                  unary {
                                    unop {
                                      length: 4
                                    }
                                    exp {
                                      tableconstructor {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            binop {
            }
            rightexp {
            }
          }
        }
      }
    }
    semicolon: false
  }
}
