chunk {
  stat {
    forcyclename {
      name {
        name: "\036\000\000\000\000\000\000\000"
        num: 7424
      }
      startexp {
        number: -1.5000000000000016
      }
      stopexp {
        binary {
          leftexp {
          }
          binop {
            exp: 7424
          }
          rightexp {
            str: "load"
          }
        }
      }
      stepexp {
        str: "?\000\000\000\000\000\000\000"
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  expressions {
                    prefixexp {
                    }
                  }
                  explast {
                    false: 1024
                  }
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      semicolon: true
                    }
                    laststat {
                      explist {
                        explist {
                          explast {
                            tableconstructor {
                            }
                          }
                        }
                      }
                    }
                  }
                }
                condition {
                  binary {
                    leftexp {
                      number: 0
                    }
                    binop {
                      add: 0
                    }
                    rightexp {
                      str: "\'<<66*i .flush\'<"
                    }
                  }
                }
              }
              semicolon: false
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                    var {
                      indexname {
                        prefixexp {
                        }
                        Name: ""
                      }
                    }
                  }
                  args {
                    explist {
                      explist {
                        expressions {
                          function {
                            body {
                              parlist {
                              }
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        expressions {
                        }
                        expressions {
                          function {
                            body {
                              parlist {
                                namelist {
                                  namelist {
                                    firstname {
                                      name: ""
                                      num: 0
                                    }
                                    names {
                                      name: ""
                                      num: 262144
                                    }
                                  }
                                  ellipsis: "\\377\\003"
                                }
                              }
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        expressions {
                        }
                        expressions {
                        }
                        expressions {
                        }
                        expressions {
                          function {
                            body {
                              parlist {
                                namelist {
                                  namelist {
                                    firstname {
                                      name: ""
                                      num: 0
                                    }
                                  }
                                  ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                }
                              }
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        explast {
                          function {
                            body {
                              block {
                                chunk {
                                  laststat {
                                    semicolon: true
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            laststat {
            }
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    call {
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
            nil: 392960
          }
          binop {
          }
          rightexp {
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    explist {
      explist {
        expressions {
          binary {
            leftexp {
              ellipsis: "\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346\346"
            }
            binop {
            }
            rightexp {
            }
          }
        }
        explast {
        }
      }
    }
  }
}
