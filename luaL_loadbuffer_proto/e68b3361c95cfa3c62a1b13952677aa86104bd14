chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localfunc {
              name {
                name: ""
                num: 0
              }
              funcbody {
                parlist {
                  ellipsis: "os.difftime"
                }
                block {
                  chunk {
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                  }
                                }
                                condition {
                                  ellipsis: ""
                                }
                              }
                              semicolon: true
                            }
                            stat {
                              whilecycle {
                                condition {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        exprassign {
                                          key {
                                            tableconstructor {
                                              fieldlist {
                                                firstField {
                                                }
                                                fields {
                                                  field {
                                                    expression {
                                                      prefixexp {
                                                      }
                                                    }
                                                  }
                                                  sep {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          value {
                                          }
                                        }
                                      }
                                      fields {
                                        field {
                                          exprassign {
                                            key {
                                              tableconstructor {
                                                fieldlist {
                                                  firstField {
                                                    exprassign {
                                                      key {
                                                        binary {
                                                          leftexp {
                                                          }
                                                          binop {
                                                          }
                                                          rightexp {
                                                            str: "?"
                                                          }
                                                        }
                                                      }
                                                      value {
                                                      }
                                                    }
                                                  }
                                                  fields {
                                                    field {
                                                      expression {
                                                      }
                                                    }
                                                    sep {
                                                    }
                                                  }
                                                  fields {
                                                    field {
                                                      namedassign {
                                                        name {
                                                          name: "\326\326\326\326\326\326\326\326\326\326\326\326\326\326\326\326\326"
                                                          num: 0
                                                        }
                                                        value {
                                                        }
                                                      }
                                                    }
                                                    sep {
                                                      comma: 0
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            value {
                                            }
                                          }
                                        }
                                        sep {
                                        }
                                      }
                                      fields {
                                        field {
                                          exprassign {
                                            key {
                                            }
                                            value {
                                            }
                                          }
                                        }
                                        sep {
                                          comma: 268435456
                                        }
                                      }
                                      fields {
                                        field {
                                          expression {
                                            prefixexp {
                                            }
                                          }
                                        }
                                        sep {
                                          comma: 8256
                                        }
                                      }
                                    }
                                  }
                                }
                                doblock {
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        condition {
                          ellipsis: ""
                        }
                      }
                      semicolon: true
                    }
                    stat {
                      whilecycle {
                        condition {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                exprassign {
                                  key {
                                    tableconstructor {
                                      fieldlist {
                                        firstField {
                                          expression {
                                          }
                                        }
                                        fields {
                                          field {
                                            expression {
                                              prefixexp {
                                                functioncall {
                                                  prefArgs {
                                                    prefixexp {
                                                    }
                                                    args {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          sep {
                                          }
                                        }
                                        lastSep {
                                          semicolon: 268435456
                                        }
                                      }
                                    }
                                  }
                                  value {
                                  }
                                }
                              }
                              fields {
                                field {
                                  exprassign {
                                    key {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                            expression {
                                              tableconstructor {
                                                fieldlist {
                                                  firstField {
                                                  }
                                                  fields {
                                                    field {
                                                      exprassign {
                                                        key {
                                                          binary {
                                                            leftexp {
                                                            }
                                                            binop {
                                                            }
                                                            rightexp {
                                                              ellipsis: "\326\326\326\326\326\326\326\326\326\326\326\326\326\326\326\326\326"
                                                            }
                                                          }
                                                        }
                                                        value {
                                                        }
                                                      }
                                                    }
                                                    sep {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    value {
                                      number: 0
                                    }
                                  }
                                }
                                sep {
                                }
                              }
                              fields {
                                field {
                                  exprassign {
                                    key {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                            expression {
                                            }
                                          }
                                          fields {
                                            field {
                                              expression {
                                                prefixexp {
                                                  functioncall {
                                                    prefArgs {
                                                      prefixexp {
                                                      }
                                                      args {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            sep {
                                            }
                                          }
                                        }
                                      }
                                    }
                                    value {
                                      ellipsis: "debug.getuservalue"
                                    }
                                  }
                                }
                                sep {
                                }
                              }
                              fields {
                                field {
                                  expression {
                                    false: 0
                                  }
                                }
                                sep {
                                  comma: 32
                                }
                              }
                            }
                          }
                        }
                        doblock {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                    laststat {
                      break: 0
                      semicolon: true
                    }
                  }
                }
              }
            }
          }
          laststat {
          }
        }
      }
      condition {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
              }
              args {
              }
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  laststat {
    break: 1
  }
}
