chunk {
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          name {
            name: ""
            num: 7
          }
        }
        vars {
        }
        vars {
          name {
            name: ""
            num: 8
          }
        }
      }
      explist {
        explast {
          tableconstructor {
            fieldlist {
              firstField {
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
              }
              doblock {
                block {
                  chunk {
                    laststat {
                      explist {
                        explist {
                          expressions {
                            binary {
                              leftexp {
                              }
                              binop {
                              }
                              rightexp {
                                ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                              }
                            }
                          }
                          explast {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
}
