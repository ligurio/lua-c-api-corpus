chunk {
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              unary {
                unop {
                  length: 6912
                }
                exp {
                }
              }
            }
          }
        }
      }
      explist {
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "____________"
        }
        expressions {
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        explast {
          str: "\'<mathn<7<<7<\'<9"
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              unary {
                unop {
                  negate: 6912
                }
                exp {
                }
              }
            }
          }
        }
      }
      explist {
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          prefixexp {
            exp {
              binary {
                leftexp {
                }
                binop {
                  or: 0
                }
                rightexp {
                  tableconstructor {
                  }
                }
              }
            }
          }
        }
        expressions {
          unary {
            unop {
              negate: 0
            }
            exp {
              prefixexp {
                exp {
                  binary {
                    leftexp {
                    }
                    binop {
                      or: 0
                    }
                    rightexp {
                      tableconstructor {
                      }
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        explast {
          str: "\'<mathn<7<<7<\'<9"
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          str: "\'<mathn<7<pack<7<\'<9\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        explast {
          str: "\'<mathn<7<<7<\'<9"
        }
      }
    }
  }
}
