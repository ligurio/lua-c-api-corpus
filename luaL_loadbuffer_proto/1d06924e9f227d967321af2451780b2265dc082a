chunk {
  stat {
    call {
      namedArgs {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
                functioncall {
                  prefArgs {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                  functioncall {
                                    namedArgs {
                                      prefixexp {
                                        functioncall {
                                          prefArgs {
                                            prefixexp {
                                              functioncall {
                                                prefArgs {
                                                  prefixexp {
                                                    functioncall {
                                                      namedArgs {
                                                        prefixexp {
                                                          functioncall {
                                                          }
                                                        }
                                                        name {
                                                          name: ""
                                                          num: 0
                                                        }
                                                        args {
                                                        }
                                                      }
                                                    }
                                                  }
                                                  args {
                                                    str: "debug.getuservalue"
                                                  }
                                                }
                                              }
                                            }
                                            args {
                                              str: "debug.getuservalue"
                                            }
                                          }
                                        }
                                      }
                                      name {
                                        name: ""
                                        num: 0
                                      }
                                      args {
                                        str: "\'"
                                      }
                                    }
                                  }
                                }
                                args {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        namedassign {
                                          name {
                                            name: ""
                                            num: 0
                                          }
                                          value {
                                            binary {
                                              leftexp {
                                              }
                                              binop {
                                              }
                                              rightexp {
                                                ellipsis: "\000\000\000\000\000\000\000\032"
                                              }
                                            }
                                          }
                                        }
                                      }
                                      lastSep {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          args {
                            str: "debug.getuservalue"
                          }
                        }
                      }
                    }
                    args {
                      str: "debug.getuservalue"
                    }
                  }
                }
              }
              args {
                str: "debug.getuservalue"
              }
            }
          }
        }
        name {
          name: ""
          num: 0
        }
        args {
          str: "\'"
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        unary {
          unop {
            not: 0
          }
          exp {
            prefixexp {
              var {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                    name {
                      name: ""
                      num: 262144
                    }
                  }
                }
                explist {
                  expressions {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                      }
                    }
                  }
                  expressions {
                  }
                  expressions {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          expression {
                            str: "math.tointeger"
                          }
                        }
                        lastSep {
                        }
                      }
                    }
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                    unary {
                      unop {
                      }
                      exp {
                        binary {
                          leftexp {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                }
                                lastSep {
                                  semicolon: 0
                                }
                              }
                            }
                          }
                          binop {
                          }
                          rightexp {
                          }
                        }
                      }
                    }
                  }
                  expressions {
                    ellipsis: "\'"
                  }
                  expressions {
                    tableconstructor {
                    }
                  }
                  expressions {
                  }
                  explast {
                    prefixexp {
                      functioncall {
                        namedArgs {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                  functioncall {
                                    prefArgs {
                                      prefixexp {
                                        functioncall {
                                          prefArgs {
                                            prefixexp {
                                              functioncall {
                                                prefArgs {
                                                  prefixexp {
                                                    functioncall {
                                                      namedArgs {
                                                        prefixexp {
                                                          functioncall {
                                                            prefArgs {
                                                              prefixexp {
                                                                functioncall {
                                                                  prefArgs {
                                                                    prefixexp {
                                                                      functioncall {
                                                                        namedArgs {
                                                                          prefixexp {
                                                                            functioncall {
                                                                              prefArgs {
                                                                                prefixexp {
                                                                                }
                                                                                args {
                                                                                  explist {
                                                                                    explist {
                                                                                      expressions {
                                                                                        nil: 524544
                                                                                      }
                                                                                      explast {
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                          name {
                                                                            name: ""
                                                                            num: 0
                                                                          }
                                                                          args {
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                    args {
                                                                      str: "debug.getuservalue"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              args {
                                                                str: "debug.getuservalue"
                                                              }
                                                            }
                                                          }
                                                        }
                                                        name {
                                                          name: ""
                                                          num: 0
                                                        }
                                                        args {
                                                          str: "\'"
                                                        }
                                                      }
                                                    }
                                                  }
                                                  args {
                                                    tableconstructor {
                                                      fieldlist {
                                                        firstField {
                                                          namedassign {
                                                            name {
                                                              name: ""
                                                              num: 0
                                                            }
                                                            value {
                                                              binary {
                                                                leftexp {
                                                                }
                                                                binop {
                                                                }
                                                                rightexp {
                                                                  ellipsis: "\000\000\000\000\000\000\000\032"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                        lastSep {
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            args {
                                              str: "debug.getuservalue"
                                            }
                                          }
                                        }
                                      }
                                      args {
                                        str: "debug.getuservalue"
                                      }
                                    }
                                  }
                                }
                                args {
                                  str: "debug.getuservalue"
                                }
                              }
                            }
                          }
                          name {
                            name: ""
                            num: 0
                          }
                          args {
                            str: "\'"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
  laststat {
    explist {
    }
    semicolon: true
  }
}
