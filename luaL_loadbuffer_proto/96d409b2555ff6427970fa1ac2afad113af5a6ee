chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
              localfunc {
                name {
                  name: ""
                  num: 538968064
                }
                funcbody {
                  block {
                    chunk {
                      stat {
                      }
                    }
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      whilecycle {
                        condition {
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                              }
                              stat {
                                localfunc {
                                  name {
                                    name: ""
                                    num: 538968064
                                  }
                                  funcbody {
                                    block {
                                      chunk {
                                        stat {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                              }
                              stat {
                                repeatcycle {
                                  block {
                                    chunk {
                                    }
                                  }
                                  condition {
                                    nil: 0
                                  }
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                                semicolon: true
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                whilecycle {
                                  condition {
                                  }
                                  doblock {
                                    block {
                                      chunk {
                                        laststat {
                                          break: 14417920
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                                semicolon: false
                              }
                              stat {
                                call {
                                }
                                semicolon: true
                              }
                              stat {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                condition {
                  nil: 0
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              semicolon: true
            }
            stat {
              call {
              }
            }
            stat {
              call {
                namedArgs {
                  prefixexp {
                  }
                  name {
                    name: ""
                    num: 0
                  }
                  args {
                  }
                }
              }
              semicolon: true
            }
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                }
                stopexp {
                  function {
                    body {
                      parlist {
                        namelist {
                          namelist {
                            firstname {
                              name: ""
                              num: 0
                            }
                          }
                          ellipsis: "hotexit"
                        }
                      }
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              call {
                namedArgs {
                  prefixexp {
                  }
                  name {
                    name: ""
                    num: 0
                  }
                  args {
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      laststat {
                        break: 14417920
                      }
                    }
                  }
                }
              }
            }
            stat {
              call {
                namedArgs {
                  prefixexp {
                  }
                  name {
                    name: ""
                    num: 0
                  }
                  args {
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
            }
          }
        }
      }
    }
  }
  laststat {
    break: 14417920
  }
}
