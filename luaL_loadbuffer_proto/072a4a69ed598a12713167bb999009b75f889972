chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
            str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
          }
          binop {
            greaterEqual: 2097152
          }
          rightexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          expression {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                  }
                                  binop {
                                  }
                                  rightexp {
                                    number: 0
                                  }
                                }
                              }
                              binop {
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  binop {
                    greaterEqual: 2097152
                  }
                  rightexp {
                    ellipsis: "\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364"
                  }
                }
              }
              binop {
              }
              rightexp {
                function {
                  body {
                    parlist {
                      ellipsis: "\\325\\377\\377\\377"
                    }
                    block {
                      chunk {
                        stat {
                          forcyclename {
                            name {
                              name: ""
                              num: 0
                            }
                            startexp {
                              nil: 8
                            }
                            stopexp {
                              function {
                                body {
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                            stepexp {
                              function {
                                body {
                                  parlist {
                                    ellipsis: "8"
                                  }
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                            doblock {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                          semicolon: true
                        }
                        stat {
                          call {
                            prefArgs {
                              prefixexp {
                              }
                              args {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  laststat {
    semicolon: true
  }
}
