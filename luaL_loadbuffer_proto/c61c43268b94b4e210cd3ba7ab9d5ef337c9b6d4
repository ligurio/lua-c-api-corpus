chunk {
  stat {
    block {
      block {
        chunk {
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localfunc {
              name {
                name: ""
                num: 0
              }
              funcbody {
                block {
                  chunk {
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            semicolon: true
          }
          stat {
            whilecycle {
              condition {
                binary {
                  leftexp {
                  }
                  binop {
                  }
                  rightexp {
                    prefixexp {
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                  }
                  binop {
                    concat: 0
                  }
                  rightexp {
                    number: 108.75
                  }
                }
              }
              binop {
              }
              rightexp {
                binary {
                  leftexp {
                    number: -0.0038368449486786416
                  }
                  binop {
                    exp: 0
                  }
                  rightexp {
                    number: 108.75000000000084
                  }
                }
              }
            }
          }
          binop {
            concat: 0
          }
          rightexp {
          }
        }
      }
    }
  }
}
