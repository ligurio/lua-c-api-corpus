chunk {
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 128
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
              }
              lastSep {
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    func {
      name {
        firstname {
          name: "tonumber"
          num: 2048
        }
      }
      body {
        parlist {
          namelist {
            namelist {
              firstname {
                name: ""
                num: 0
              }
            }
          }
        }
        block {
          chunk {
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                expressions {
                  explast {
                    number: 6.63123684676648e-316
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              list {
                varlist {
                  var {
                    indexname {
                      prefixexp {
                        exp {
                          str: "debug.traceback"
                        }
                      }
                      Name: ""
                    }
                  }
                  vars {
                    indexname {
                      prefixexp {
                        functioncall {
                          prefArgs {
                            prefixexp {
                              var {
                                name {
                                  name: "tonumber"
                                  num: 2048
                                }
                              }
                            }
                            args {
                              explist {
                                explist {
                                  expressions {
                                    unary {
                                      unop {
                                      }
                                      exp {
                                      }
                                    }
                                  }
                                  expressions {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                        concat: 0
                                      }
                                      rightexp {
                                      }
                                    }
                                  }
                                  explast {
                                    number: 960
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      Name: ""
                    }
                  }
                }
                explist {
                  expressions {
                    number: 6.63123684676648e-316
                  }
                  expressions {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                            str: "\'"
                          }
                        }
                      }
                    }
                  }
                  expressions {
                    binary {
                      leftexp {
                        ellipsis: ""
                      }
                      binop {
                        lessEqual: 0
                      }
                      rightexp {
                        true: 8224
                      }
                    }
                  }
                  expressions {
                    unary {
                      unop {
                      }
                      exp {
                      }
                    }
                  }
                  expressions {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                        lastSep {
                        }
                      }
                    }
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                    binary {
                      leftexp {
                      }
                      binop {
                      }
                      rightexp {
                        nil: 0
                      }
                    }
                  }
                  expressions {
                    tableconstructor {
                    }
                  }
                  expressions {
                    str: "debug.traceback"
                  }
                  explast {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                            str: "string.format\'"
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    explist {
    }
    semicolon: true
  }
}
