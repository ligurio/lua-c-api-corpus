chunk {
  stat {
    semicolon: false
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        unary {
          unop {
          }
          exp {
            unary {
              unop {
                length: 4
              }
              exp {
                tableconstructor {
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          number: 0
        }
        expressions {
          binary {
            leftexp {
              number: 2.42831309967065e-312
            }
            binop {
            }
            rightexp {
            }
          }
        }
        expressions {
          number: -2.75
        }
        expressions {
        }
        expressions {
        }
        expressions {
          number: 1.5
        }
        expressions {
          nil: 39
        }
        explast {
          str: "\000\000\000\000\000\000\000\017"
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          number: 1.5
        }
        expressions {
          number: 1.5
        }
        expressions {
          ellipsis: "\000\000\000\000\000\000\000\017"
        }
        expressions {
          number: 1.5
        }
        expressions {
          prefixexp {
            exp {
              binary {
                leftexp {
                  binary {
                    leftexp {
                      number: 358.08969533209165
                    }
                    binop {
                      mod: 0
                    }
                    rightexp {
                      number: 118.78498777467757
                    }
                  }
                }
                binop {
                  greaterEqual: 4
                }
                rightexp {
                  unary {
                    unop {
                    }
                    exp {
                      unary {
                        unop {
                          not: 0
                        }
                        exp {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          number: 1.5
        }
        expressions {
          unary {
            unop {
            }
            exp {
            }
          }
        }
        expressions {
          unary {
            unop {
              not: 0
            }
            exp {
            }
          }
        }
        explast {
          unary {
            unop {
            }
            exp {
              prefixexp {
                var {
                  indexname {
                    prefixexp {
                      functioncall {
                        namedArgs {
                          prefixexp {
                            var {
                              indexexpr {
                                prefixexp {
                                }
                                exp {
                                  function {
                                    body {
                                      block {
                                        chunk {
                                          laststat {
                                            break: 65536
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          name {
                            name
                            num: 4
                          }
                          args {
                          }
                        }
                      }
                    }
                    Name: ""
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
