chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: "utf8.char"
                  num: 2097152
                }
                startexp {
                  str: "\'<mathn<math.asin\'49"
                }
                stopexp {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        repeatcycle {
                          block {
                            chunk {
                            }
                          }
                          condition {
                            prefixexp {
                              functioncall {
                                prefArgs {
                                  prefixexp {
                                  }
                                  args {
                                    explist {
                                      explist {
                                        expressions {
                                          unary {
                                            unop {
                                            }
                                            exp {
                                              str: "\000&\'>table.unpack\'\\321\\377\\377\\377\000\000&\'>\'"
                                            }
                                          }
                                        }
                                        explast {
                                          false: 1024
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
}
