chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              func {
                name {
                  firstname {
                    name: "type"
                    num: 0
                  }
                }
                body {
                  block {
                    chunk {
                      stat {
                      }
                      stat {
                        localfunc {
                          name {
                            name: ""
                            num: 0
                          }
                          funcbody {
                            parlist {
                              namelist {
                                namelist {
                                  firstname {
                                    name: "require"
                                    num: 0
                                  }
                                  names {
                                    name: ""
                                    num: 0
                                  }
                                }
                              }
                            }
                            block {
                              chunk {
                                stat {
                                  repeatcycle {
                                    block {
                                      chunk {
                                        stat {
                                        }
                                        stat {
                                          list {
                                            varlist {
                                              var {
                                                indexname {
                                                  prefixexp {
                                                  }
                                                  Name: ""
                                                }
                                              }
                                            }
                                            explist {
                                              expressions {
                                                ellipsis: "table.pack"
                                              }
                                              expressions {
                                                prefixexp {
                                                  functioncall {
                                                    prefArgs {
                                                      prefixexp {
                                                        exp {
                                                        }
                                                      }
                                                      args {
                                                        str: "\'"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              expressions {
                                                binary {
                                                  leftexp {
                                                    ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                                  }
                                                  binop {
                                                    greaterEqual: 2097152
                                                  }
                                                  rightexp {
                                                    true: 2097152
                                                  }
                                                }
                                              }
                                              expressions {
                                              }
                                              expressions {
                                                tableconstructor {
                                                }
                                              }
                                              expressions {
                                                prefixexp {
                                                  functioncall {
                                                    prefArgs {
                                                      prefixexp {
                                                        var {
                                                          name {
                                                            name: "load"
                                                            num: 16776448
                                                          }
                                                        }
                                                      }
                                                      args {
                                                        explist {
                                                          explist {
                                                            explast {
                                                              binary {
                                                                leftexp {
                                                                  binary {
                                                                    leftexp {
                                                                      binary {
                                                                        leftexp {
                                                                          prefixexp {
                                                                            functioncall {
                                                                              prefArgs {
                                                                                prefixexp {
                                                                                  var {
                                                                                  }
                                                                                }
                                                                                args {
                                                                                  explist {
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                        binop {
                                                                          concat: 2054845798
                                                                        }
                                                                        rightexp {
                                                                          true: 2
                                                                        }
                                                                      }
                                                                    }
                                                                    binop {
                                                                      mod: 2105344
                                                                    }
                                                                    rightexp {
                                                                      unary {
                                                                        unop {
                                                                          negate: 0
                                                                        }
                                                                        exp {
                                                                          binary {
                                                                            leftexp {
                                                                              binary {
                                                                                leftexp {
                                                                                  prefixexp {
                                                                                  }
                                                                                }
                                                                                binop {
                                                                                  concat: 704643072
                                                                                }
                                                                                rightexp {
                                                                                }
                                                                              }
                                                                            }
                                                                            binop {
                                                                              concat: 0
                                                                            }
                                                                            rightexp {
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                                binop {
                                                                  mod: 2105344
                                                                }
                                                                rightexp {
                                                                  unary {
                                                                    unop {
                                                                      negate: 0
                                                                    }
                                                                    exp {
                                                                      binary {
                                                                        leftexp {
                                                                          binary {
                                                                            leftexp {
                                                                              prefixexp {
                                                                              }
                                                                            }
                                                                            binop {
                                                                              concat: 704643072
                                                                            }
                                                                            rightexp {
                                                                              str: "debug.traceback"
                                                                            }
                                                                          }
                                                                        }
                                                                        binop {
                                                                          concat: 0
                                                                        }
                                                                        rightexp {
                                                                          prefixexp {
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              expressions {
                                              }
                                              expressions {
                                                tableconstructor {
                                                }
                                              }
                                              expressions {
                                                unary {
                                                  unop {
                                                    negate: 1644167168
                                                  }
                                                  exp {
                                                    binary {
                                                      leftexp {
                                                      }
                                                      binop {
                                                        concat: 0
                                                      }
                                                      rightexp {
                                                        ellipsis: "*"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              explast {
                                                prefixexp {
                                                  functioncall {
                                                    prefArgs {
                                                      prefixexp {
                                                      }
                                                      args {
                                                        str: "\'"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        laststat {
                                        }
                                      }
                                    }
                                    condition {
                                      prefixexp {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                      stat {
                        call {
                          prefArgs {
                            prefixexp {
                              var {
                              }
                            }
                            args {
                              str: "\377\377\377\007"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
          var {
            indexname {
              prefixexp {
              }
              Name: "z"
            }
          }
        }
        name {
          name: ""
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
    }
    semicolon: true
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: "\203"
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "load"
              num: 5
            }
          }
        }
        args {
          explist {
            explist {
              explast {
                str: "oad"
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
              }
              args {
                str: "_G"
              }
            }
          }
        }
        args {
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
    call {
    }
  }
  laststat {
  }
}
