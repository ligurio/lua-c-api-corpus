chunk {
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              expression {
                number: 116.95316997449845
              }
            }
            fields {
              field {
                expression {
                  binary {
                    leftexp {
                    }
                    binop {
                      exp: 1
                    }
                    rightexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              number: -416
                            }
                            binop {
                              exp: 0
                            }
                            rightexp {
                              number: 116.95316997449845
                            }
                          }
                        }
                        binop {
                          mod: 65536
                        }
                        rightexp {
                          binary {
                            leftexp {
                            }
                            binop {
                              equal: 0
                            }
                            rightexp {
                              number: 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  nil: 0
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
