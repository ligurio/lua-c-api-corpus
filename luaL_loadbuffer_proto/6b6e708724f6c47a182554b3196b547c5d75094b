chunk {
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
            }
            fields {
              field {
              }
              sep {
              }
            }
            fields {
              field {
              }
              sep {
              }
            }
            lastSep {
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                  }
                  binop {
                    mult: 0
                  }
                  rightexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                              }
                              binop {
                                mult: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    unary {
                                      unop {
                                      }
                                      exp {
                                      }
                                    }
                                  }
                                  binop {
                                    mult: 0
                                  }
                                  rightexp {
                                    number: -424
                                  }
                                }
                              }
                            }
                          }
                          binop {
                            mult: 11008
                          }
                          rightexp {
                            binary {
                              leftexp {
                                true: 3657433088
                              }
                              binop {
                                mult: 48
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                      }
                      binop {
                        mult: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                          }
                          binop {
                            mult: 0
                          }
                          rightexp {
                            true: 0
                          }
                        }
                      }
                    }
                  }
                }
              }
              binop {
                mult: 0
              }
              rightexp {
                binary {
                  leftexp {
                    number: -27262976.03125
                  }
                  binop {
                    mult: 0
                  }
                  rightexp {
                  }
                }
              }
            }
          }
          binop {
            mult: 0
          }
          rightexp {
            binary {
              leftexp {
              }
              binop {
                mult: 0
              }
              rightexp {
                binary {
                  leftexp {
                    false: 10496
                  }
                  binop {
                    mult: 0
                  }
                  rightexp {
                    number: -27262976.03125
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                            }
                            binop {
                              mult: 0
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      binary {
                                        leftexp {
                                          ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                        }
                                        binop {
                                          mult: 0
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                              unary {
                                                unop {
                                                }
                                                exp {
                                                }
                                              }
                                            }
                                            binop {
                                              mult: 0
                                            }
                                            rightexp {
                                              number: -424
                                            }
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                      mult: 11008
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          true: 3657433088
                                        }
                                        binop {
                                          mult: 48
                                        }
                                        rightexp {
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  mult: 0
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                      mult: 0
                                    }
                                    rightexp {
                                      true: 0
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        binop {
                          mult: 0
                        }
                        rightexp {
                          binary {
                            leftexp {
                              number: -27262976.03125
                            }
                            binop {
                              mult: 0
                            }
                            rightexp {
                            }
                          }
                        }
                      }
                    }
                    binop {
                      mult: 0
                    }
                    rightexp {
                      binary {
                        leftexp {
                        }
                        binop {
                          mult: 0
                        }
                        rightexp {
                          binary {
                            leftexp {
                              false: 10496
                            }
                            binop {
                              mult: 0
                            }
                            rightexp {
                              number: -27262976.03125
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        whilecycle {
                          condition {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                }
                                lastSep {
                                }
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                  }
                  binop {
                    mult: 0
                  }
                  rightexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                              }
                              binop {
                                mult: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    unary {
                                      unop {
                                      }
                                      exp {
                                      }
                                    }
                                  }
                                  binop {
                                    mult: 0
                                  }
                                  rightexp {
                                    number: -424
                                  }
                                }
                              }
                            }
                          }
                          binop {
                            mult: 11008
                          }
                          rightexp {
                            binary {
                              leftexp {
                                number: -27262976.03125
                              }
                              binop {
                                mult: 48
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                      }
                      binop {
                        mult: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                          }
                          binop {
                            mult: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                                false: 10496
                              }
                              binop {
                                mult: 0
                              }
                              rightexp {
                                number: -27262976.03125
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              binop {
                mult: 0
              }
              rightexp {
                binary {
                  leftexp {
                    number: -27262976.03125
                  }
                  binop {
                    mult: 0
                  }
                  rightexp {
                  }
                }
              }
            }
          }
          binop {
            mult: 0
          }
          rightexp {
            binary {
              leftexp {
              }
              binop {
                mult: 0
              }
              rightexp {
                binary {
                  leftexp {
                    false: 10496
                  }
                  binop {
                    mult: 0
                  }
                  rightexp {
                    number: -27262976.03125
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            unary {
              unop {
              }
              exp {
              }
            }
          }
          binop {
            or: 0
          }
          rightexp {
            binary {
              leftexp {
                unary {
                  unop {
                  }
                  exp {
                  }
                }
              }
              binop {
                mult: 2304
              }
              rightexp {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              break: 0
            }
          }
        }
      }
    }
    semicolon: true
  }
}
