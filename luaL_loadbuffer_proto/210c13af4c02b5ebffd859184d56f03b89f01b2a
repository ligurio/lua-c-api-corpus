chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 127
        }
        names {
          name: "pcal\354"
          num: 127
        }
        names {
          name: "load"
          num: 0
        }
      }
      expressions {
        expressions {
          prefixexp {
            var {
              name {
                name: "pcall"
                num: 0
              }
            }
          }
        }
        explast {
          prefixexp {
            var {
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              func {
                name {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                body {
                  block {
                    chunk {
                      stat {
                        func {
                          name {
                            firstname {
                              name: ""
                              num: 0
                            }
                          }
                          body {
                            parlist {
                              namelist {
                                namelist {
                                  firstname {
                                    name: ""
                                    num: 0
                                  }
                                }
                                ellipsis: "A"
                              }
                            }
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 127
                  }
                  names {
                    name: "pcal\354"
                    num: 6841215
                  }
                  names {
                    name: "load"
                    num: 0
                  }
                }
                expressions {
                  expressions {
                    prefixexp {
                      var {
                        name {
                          name: "pcall"
                          num: 0
                        }
                      }
                    }
                  }
                  explast {
                    prefixexp {
                      var {
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 2
                }
                startexp {
                }
                stopexp {
                  binary {
                    leftexp {
                      str: "\'<8<<\'<9"
                    }
                    binop {
                      div: 8224
                    }
                    rightexp {
                      number: 12
                    }
                  }
                }
                stepexp {
                  nil: 127
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
