chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        unary {
          unop {
          }
          exp {
            str: "\377\377\377\377\377\377\377"
          }
        }
      }
      stopexp {
        unary {
          unop {
          }
          exp {
          }
        }
      }
      stepexp {
        prefixexp {
          exp {
            unary {
              unop {
              }
              exp {
                unary {
                  unop {
                  }
                  exp {
                    unary {
                      unop {
                      }
                      exp {
                        true: 2105344
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        unary {
          unop {
          }
          exp {
            unary {
              unop {
              }
              exp {
                str: "\377\377\377\377\377\377\377"
              }
            }
          }
        }
      }
      stopexp {
        unary {
          unop {
          }
          exp {
          }
        }
      }
      stepexp {
        prefixexp {
          exp {
            unary {
              unop {
              }
              exp {
                unary {
                  unop {
                  }
                  exp {
                    unary {
                      unop {
                      }
                      exp {
                        true: 2105344
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
        function {
          body {
            block {
              chunk {
              }
            }
          }
        }
      }
      stepexp {
        tableconstructor {
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              break: 1023410176
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                }
              }
              clauses {
                condition {
                  number: 4.05143315650222e-317
                }
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        nil: 7699744
      }
    }
  }
  laststat {
    explist {
      explist {
        explast {
          prefixexp {
            exp {
              nil: 7699744
            }
          }
        }
      }
    }
  }
}
