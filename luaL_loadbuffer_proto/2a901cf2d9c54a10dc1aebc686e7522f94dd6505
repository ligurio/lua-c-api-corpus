chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            forcyclelist {
              names {
                firstname {
                  name: ""
                  num: 0
                }
              }
              expressions {
                explast {
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                }
                vars {
                }
              }
              explist {
                explast {
                  binary {
                    leftexp {
                      true: 0
                    }
                    binop {
                      mult: 538976260
                    }
                    rightexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              number: 8.09477154146298e-320
                            }
                            binop {
                              add: 2
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  prefixexp {
                                  }
                                }
                                binop {
                                  add: 2
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                        binop {
                          mult: 538976260
                        }
                        rightexp {
                          binary {
                            leftexp {
                              prefixexp {
                              }
                            }
                            binop {
                              mult: 538976260
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  prefixexp {
                                    var {
                                    }
                                  }
                                }
                                binop {
                                  add: 2
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        nil: 2
      }
    }
  }
  stat {
    list {
      varlist {
        var {
          indexexpr {
            prefixexp {
            }
            exp {
              nil: 0
            }
          }
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              true: 1024
            }
          }
        }
      }
      explist {
        explast {
          binary {
            leftexp {
              str: "\'<coroutane.yiel>>\'<coroutane.yiel>>>>>>>>>>>>>>>>>>>>d"
            }
            binop {
              sub: 0
            }
            rightexp {
              binary {
                leftexp {
                  prefixexp {
                  }
                }
                binop {
                  add: 2
                }
                rightexp {
                  tableconstructor {
                    fieldlist {
                      firstField {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
