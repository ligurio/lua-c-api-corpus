chunk {
  stat {
    block {
      block {
        chunk {
          stat {
            semicolon: false
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                  var {
                    name {
                      name: "tonumber"
                      num: 0
                    }
                  }
                }
                args {
                  explist {
                    explist {
                      expressions {
                        str: "__mul"
                      }
                      expressions {
                        number: 2
                      }
                      explast {
                        prefixexp {
                          exp {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: false
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                  var {
                    name {
                      name: "tonumber"
                      num: 4143906816
                    }
                  }
                }
                args {
                  explist {
                    explist {
                      expressions {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                prefixexp {
                                  var {
                                    indexexpr {
                                      prefixexp {
                                        exp {
                                          ellipsis: "\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277"
                                        }
                                      }
                                      exp {
                                        binary {
                                          leftexp {
                                            prefixexp {
                                              exp {
                                                prefixexp {
                                                  exp {
                                                    true: 4
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          binop {
                                            sub: 0
                                          }
                                          rightexp {
                                            prefixexp {
                                              var {
                                                indexexpr {
                                                  prefixexp {
                                                    var {
                                                      indexexpr {
                                                        prefixexp {
                                                          exp {
                                                            nil: 0
                                                          }
                                                        }
                                                        exp {
                                                        }
                                                      }
                                                    }
                                                  }
                                                  exp {
                                                    str: "A"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                concat: 7237475
                              }
                              rightexp {
                                ellipsis: "\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277"
                              }
                            }
                          }
                          binop {
                            concat: 7237475
                          }
                          rightexp {
                            prefixexp {
                              exp {
                                binary {
                                  leftexp {
                                    prefixexp {
                                    }
                                  }
                                  binop {
                                    mult: 1885434487
                                  }
                                  rightexp {
                                    prefixexp {
                                      exp {
                                        prefixexp {
                                          var {
                                            indexexpr {
                                              prefixexp {
                                                exp {
                                                  ellipsis: "\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277"
                                                }
                                              }
                                              exp {
                                                binary {
                                                  leftexp {
                                                    binary {
                                                      leftexp {
                                                        prefixexp {
                                                        }
                                                      }
                                                      binop {
                                                      }
                                                      rightexp {
                                                        str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                      }
                                                    }
                                                  }
                                                  binop {
                                                    sub: 0
                                                  }
                                                  rightexp {
                                                    function {
                                                      body {
                                                        block {
                                                          chunk {
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      expressions {
                        number: 2
                      }
                      expressions {
                        number: 2
                      }
                      explast {
                        prefixexp {
                          functioncall {
                            namedArgs {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                      var {
                                        indexname {
                                          prefixexp {
                                            exp {
                                              prefixexp {
                                                exp {
                                                  tableconstructor {
                                                    fieldlist {
                                                      firstField {
                                                      }
                                                      fields {
                                                        field {
                                                        }
                                                        sep {
                                                          semicolon: 0
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          Name: ""
                                        }
                                      }
                                    }
                                    args {
                                    }
                                  }
                                }
                              }
                              name {
                                name: ""
                                num: 0
                              }
                              args {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              function {
                body {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
      explist {
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
              }
              fields {
                field {
                }
                sep {
                }
              }
              fields {
                field {
                }
                sep {
                }
              }
              lastSep {
              }
            }
          }
        }
        expressions {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                }
                args {
                  str: "\'"
                }
              }
            }
          }
        }
        expressions {
          binary {
            leftexp {
              ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
            }
            binop {
              greaterEqual: 2097152
            }
            rightexp {
              true: 570425344
            }
          }
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
                exprassign {
                  key {
                  }
                  value {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          exprassign {
                            key {
                            }
                            value {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                  }
                                  fields {
                                    field {
                                      namedassign {
                                        name {
                                          name: ""
                                          num: 0
                                        }
                                        value {
                                        }
                                      }
                                    }
                                    sep {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        lastSep {
                          comma: 2048
                        }
                      }
                    }
                  }
                }
              }
              lastSep {
                semicolon: 0
              }
            }
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                  functioncall {
                    prefArgs {
                      prefixexp {
                        functioncall {
                        }
                      }
                      args {
                        str: "math.rad"
                      }
                    }
                  }
                }
                args {
                  str: "math.rad"
                }
              }
            }
          }
        }
        expressions {
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
                exprassign {
                  key {
                  }
                  value {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                        fields {
                          field {
                            namedassign {
                              name {
                                name: ""
                                num: 0
                              }
                              value {
                              }
                            }
                          }
                          sep {
                          }
                        }
                      }
                    }
                  }
                }
              }
              lastSep {
                comma: 2048
              }
            }
          }
        }
        expressions {
          tableconstructor {
          }
        }
        explast {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                }
                args {
                  str: "\'"
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
