chunk {
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
              }
              fields {
                field {
                }
                sep {
                  comma: 65536
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
        ellipsis: "\310\000\000\000\000\000\000\000"
      }
      doblock {
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
            stat {
              semicolon: false
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
        false: 42
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    block {
      block {
        chunk {
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
            stat {
              semicolon: false
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
                exprassign {
                  key {
                  }
                  value {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            number: -709.375
                          }
                          binop {
                            mult: 8
                          }
                          rightexp {
                            number: 960
                          }
                        }
                      }
                      binop {
                      }
                      rightexp {
                        false: 0
                      }
                    }
                  }
                }
              }
              fields {
                field {
                }
                sep {
                  comma: 0
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            laststat {
              break: 18176
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            function {
              body {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          binop {
            div: 1280
          }
          rightexp {
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                    indexexpr {
                      prefixexp {
                      }
                      exp {
                        true: 67108864
                      }
                    }
                  }
                  vars {
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                      }
                      exp {
                      }
                    }
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                      }
                      exp {
                      }
                    }
                  }
                  vars {
                  }
                }
                explist {
                  expressions {
                    binary {
                      leftexp {
                        prefixexp {
                          var {
                            name {
                              name: ""
                              num: 4160749568
                            }
                          }
                        }
                      }
                      binop {
                        equal: 1952645120
                      }
                      rightexp {
                      }
                    }
                  }
                  explast {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          exprassign {
                            key {
                            }
                            value {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                      var {
                                        indexname {
                                          prefixexp {
                                          }
                                          Name: "\001\000\000\000\000\000\000\000"
                                        }
                                      }
                                    }
                                    args {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        lastSep {
                          semicolon: 327680
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            false: 4211015680
                          }
                          value {
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        whilecycle {
                          condition {
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    block {
      block {
        chunk {
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            laststat {
              break: 18176
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    block {
      block {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          exp {
            number: 6.63123689617304e-316
          }
        }
        args {
        }
      }
    }
    semicolon: false
  }
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "load"
              num: 50
            }
          }
        }
        args {
          explist {
            explist {
              explast {
                tableconstructor {
                  fieldlist {
                    firstField {
                      exprassign {
                        key {
                          false: 4211015680
                        }
                        value {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
              namedArgs {
                prefixexp {
                }
                name {
                  name: ""
                  num: 0
                }
                args {
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            block {
              block {
                chunk {
                  laststat {
                    break: 0
                  }
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                  exp {
                    number: 6.63123689617304e-316
                  }
                }
                args {
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
              namedArgs {
                prefixexp {
                }
                name {
                  name: ""
                  num: 0
                }
                args {
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
          exp {
            str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
        name {
          name: ""
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
              namedArgs {
                prefixexp {
                }
                name {
                  name: ""
                  num: 0
                }
                args {
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            block {
              block {
                chunk {
                  laststat {
                    break: 0
                  }
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                  exp {
                    number: 6.63123689617304e-316
                  }
                }
                args {
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
              namedArgs {
                prefixexp {
                }
                name {
                  name: ""
                  num: 0
                }
                args {
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            localnames {
              namelist {
                firstname {
                  name: ""
                  num: 0
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                }
                args {
                  explist {
                    explist {
                      explast {
                        str: "A"
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                }
                args {
                  str: "getmetatable"
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
              namedArgs {
                prefixexp {
                }
                name {
                  name: "\000+"
                  num: 0
                }
                args {
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            localfunc {
              name {
                name: ""
                num: 0
              }
              funcbody {
                block {
                  chunk {
                    laststat {
                      break: 18176
                    }
                  }
                }
              }
            }
          }
          laststat {
            semicolon: true
          }
        }
      }
      condition {
      }
    }
  }
  stat {
  }
}
