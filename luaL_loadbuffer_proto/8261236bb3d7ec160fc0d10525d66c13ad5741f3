chunk {
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: "\000\000\000\000\000\000\000\000"
          num: 0
        }
      }
    }
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    block {
      block {
        chunk {
          laststat {
            explist {
              explist {
                explast {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            indexexpr {
              prefixexp {
              }
              exp {
                true: 0
              }
            }
          }
        }
        args {
        }
      }
    }
  }
  stat {
    block {
      block {
        chunk {
          laststat {
            explist {
              explist {
                expressions {
                  nil: 4096
                }
                explast {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
              }
              fields {
                field {
                }
                sep {
                  semicolon: 0
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: false
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            indexexpr {
              prefixexp {
              }
              exp {
                str: "\377\377\377\377\377\377\377\377"
              }
            }
          }
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            indexexpr {
              prefixexp {
              }
              exp {
                str: "\377\377\377\377\377\377\377\377"
              }
            }
          }
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
  }
}
