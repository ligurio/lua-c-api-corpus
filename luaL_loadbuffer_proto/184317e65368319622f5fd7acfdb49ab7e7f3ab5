chunk {
  stat {
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    semicolon: true
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "load"
              num: 65
            }
          }
        }
        args {
          str: "c0[=="
        }
      }
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "load"
              num: 4
            }
          }
        }
        args {
          str: "c0[=="
        }
      }
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
    semicolon: false
  }
  stat {
    call {
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      stepexp {
        str: "\'<mathn<7<pack<7<\'<9"
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "load"
              num: 65
            }
          }
        }
        args {
          str: "c0[A\000"
        }
      }
    }
    semicolon: false
  }
  stat {
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "load"
              num: 65
            }
          }
        }
        args {
          str: "c0[=="
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      stepexp {
        function {
          body {
            parlist {
              namelist {
                namelist {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                ellipsis: "io.input"
              }
            }
            block {
              chunk {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
}
