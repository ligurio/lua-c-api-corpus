chunk {
  stat {
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            str: "sor"
          }
          binop {
            mult: 0
          }
          rightexp {
            false: 9
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      semicolon: true
                    }
                  }
                }
                condition {
                }
              }
            }
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    localfunc {
      name {
        name: "\030\000\000\000"
        num: 8192
      }
      funcbody {
        block {
          chunk {
            laststat {
              break: 131200
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: "counter_+"
          num: 6513008
        }
        lastname {
          name: ""
          num: 2105344
        }
      }
      body {
        block {
          chunk {
            stat {
              localnames {
                namelist {
                  firstname {
                    name: "load"
                    num: 0
                  }
                  names {
                    name: "xpcall"
                    num: 0
                  }
                }
              }
              semicolon: false
            }
            stat {
              func {
                name {
                  firstname {
                    name: "os.clock"
                    num: 0
                  }
                }
                body {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
            }
            laststat {
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 1073741824
        }
        lastname {
          name: "TTTTT"
          num: 0
        }
      }
      body {
        block {
          chunk {
            stat {
              semicolon: true
            }
            stat {
              semicolon: true
            }
            stat {
              semicolon: true
            }
            stat {
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
                clauses {
                  condition {
                    number: 1.04418803259127e-312
                  }
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: "\\002$"
                  num: 6513008
                }
                names {
                  name: "counter_8"
                  num: 0
                }
              }
              explist {
                expressions {
                }
                explast {
                  number: -1.6521494533380543e+265
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    whilecycle {
                      condition {
                      }
                      doblock {
                        block {
                          chunk {
                            stat {
                              call {
                                prefArgs {
                                  prefixexp {
                                    var {
                                      name {
                                        name: "rawlen"
                                        num: 0
                                      }
                                    }
                                  }
                                  args {
                                    str: "de\001ug.getmath.tointegerqpvalue"
                                  }
                                }
                              }
                            }
                            stat {
                              semicolon: true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              condition {
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        prefixexp {
          exp {
            unary {
              unop {
              }
              exp {
                tableconstructor {
                  fieldlist {
                    firstField {
                      namedassign {
                        name {
                          name: "\'<mathn<7<pack<7<\'<9"
                          num: 249
                        }
                        value {
                          nil: 1970495327
                        }
                      }
                    }
                    lastSep {
                      semicolon: 538968064
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    call {
      namedArgs {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
              }
              args {
                tableconstructor {
                  fieldlist {
                    firstField {
                      exprassign {
                        key {
                          str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                        }
                        value {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        name {
          name: "call"
          num: 0
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
                expression {
                  true: 6
                }
              }
              fields {
                field {
                }
                sep {
                }
              }
              lastSep {
              }
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    semicolon: false
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
          stat {
            call {
              prefArgs {
                prefixexp {
                  var {
                    name {
                      name: "load"
                      num: 6513008
                    }
                  }
                }
                args {
                  str: "debug.getmath.tointegerqpvalue"
                }
              }
            }
          }
          stat {
            semicolon: true
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
          indexname {
            prefixexp {
              var {
                indexexpr {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          var {
                            name {
                              name: "load"
                              num: 6513008
                            }
                          }
                        }
                        args {
                        }
                      }
                    }
                  }
                  exp {
                  }
                }
              }
            }
            Name: ""
          }
        }
        vars {
          name {
            name: "load"
            num: 6513008
          }
        }
      }
      explist {
        explast {
          str: "\\002$"
        }
      }
    }
  }
  laststat {
    break: 131072
  }
}
