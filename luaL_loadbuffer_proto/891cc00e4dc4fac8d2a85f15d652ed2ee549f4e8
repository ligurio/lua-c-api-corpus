chunk {
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          tableconstructor {
                          }
                        }
                      }
                    }
                  }
                }
                value {
                }
              }
            }
            fields {
              field {
                expression {
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  expression {
                                    false: 0
                                  }
                                }
                              }
                            }
                          }
                          value {
                          }
                        }
                      }
                      fields {
                        field {
                          expression {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        unary {
                                          unop {
                                            length: 4
                                          }
                                          exp {
                                            tableconstructor {
                                            }
                                          }
                                        }
                                      }
                                      binop {
                                        concat: 4
                                      }
                                      rightexp {
                                      }
                                    }
                                  }
                                  binop {
                                    concat: 0
                                  }
                                  rightexp {
                                    unary {
                                      unop {
                                        length: 4
                                      }
                                      exp {
                                        tableconstructor {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                mod: 4
                              }
                              rightexp {
                                number: 2
                              }
                            }
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
