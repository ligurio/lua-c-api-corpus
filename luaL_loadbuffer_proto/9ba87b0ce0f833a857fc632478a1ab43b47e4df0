chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
          }
          binop {
            concat: 0
          }
          rightexp {
            binary {
              leftexp {
                prefixexp {
                  var {
                  }
                }
              }
              binop {
                exp: 0
              }
              rightexp {
                number: 0
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              ifstat {
                condition {
                  binary {
                    leftexp {
                    }
                    binop {
                      and: 4
                    }
                    rightexp {
                    }
                  }
                }
                first {
                  chunk {
                    stat {
                      ifstat {
                        condition {
                          binary {
                            leftexp {
                            }
                            binop {
                              and: 4
                            }
                            rightexp {
                            }
                          }
                        }
                        first {
                          chunk {
                          }
                        }
                      }
                    }
                    stat {
                      ifstat {
                        condition {
                          binary {
                            leftexp {
                            }
                            binop {
                              and: 4
                            }
                            rightexp {
                            }
                          }
                        }
                        first {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    block {
      block {
        chunk {
          laststat {
            explist {
              explist {
                expressions {
                  number: 3.1151034019100819e-307
                }
                explast {
                }
              }
            }
          }
        }
      }
    }
  }
}
