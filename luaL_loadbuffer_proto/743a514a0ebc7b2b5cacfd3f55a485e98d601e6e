chunk {
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            ifstat {
                              condition {
                              }
                              first {
                                chunk {
                                  stat {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      condition {
                        prefixexp {
                          functioncall {
                            prefArgs {
                              prefixexp {
                                exp {
                                  prefixexp {
                                    functioncall {
                                    }
                                  }
                                }
                              }
                              args {
                                str: "}\001\'//\'  pni  pnil"
                              }
                            }
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                }
              }
            }
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                number: -424
              }
              binop {
                mult: 9520
              }
              rightexp {
                binary {
                  leftexp {
                    number: -1418.75
                  }
                  binop {
                    mult: 0
                  }
                  rightexp {
                    unary {
                      unop {
                        negate: 2304
                      }
                      exp {
                        binary {
                          leftexp {
                          }
                          binop {
                            lessEqual: 63232
                          }
                          rightexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    tableconstructor {
                                      fieldlist {
                                        firstField {
                                          expression {
                                            nil: 32
                                          }
                                        }
                                        fields {
                                          field {
                                          }
                                          sep {
                                            semicolon: 0
                                          }
                                        }
                                        fields {
                                          field {
                                          }
                                          sep {
                                            semicolon: 0
                                          }
                                        }
                                        lastSep {
                                          semicolon: 0
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                    div: 0
                                  }
                                  rightexp {
                                    str: "\'&~3333.+\'"
                                  }
                                }
                              }
                              binop {
                                mod: 64256
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    number: 9.4647308553052651e+218
                                  }
                                  binop {
                                    mult: 0
                                  }
                                  rightexp {
                                    unary {
                                      unop {
                                        negate: 2304
                                      }
                                      exp {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          binop {
          }
          rightexp {
            str: "\'-6>6&33332<\'<8<8"
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
      condition {
        tableconstructor {
          fieldlist {
            firstField {
            }
            fields {
              field {
              }
              sep {
                semicolon: 63232
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
}
