chunk {
  stat {
    whilecycle {
      condition {
        str: "\000\000\000$"
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
                tableconstructor {
                  fieldlist {
                    firstField {
                      expression {
                        unary {
                          unop {
                          }
                          exp {
                            unary {
                              unop {
                                not: 0
                              }
                              exp {
                                unary {
                                  unop {
                                    not: 0
                                  }
                                  exp {
                                    tableconstructor {
                                      fieldlist {
                                        firstField {
                                          expression {
                                          }
                                        }
                                        fields {
                                          field {
                                          }
                                          sep {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      whilecycle {
                        condition {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                  unary {
                                    unop {
                                    }
                                    exp {
                                      unary {
                                        unop {
                                          not: 0
                                        }
                                        exp {
                                          ellipsis: ""
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              fields {
                                field {
                                }
                                sep {
                                }
                              }
                            }
                          }
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                whilecycle {
                                  condition {
                                    ellipsis: "Q"
                                  }
                                  doblock {
                                    block {
                                      chunk {
                                      }
                                    }
                                  }
                                }
                                semicolon: false
                              }
                              laststat {
                              }
                            }
                          }
                        }
                      }
                      semicolon: false
                    }
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
      }
    }
    semicolon: true
  }
}
