chunk {
  stat {
    semicolon: false
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
          name {
            name: "\036"
            num: 0
          }
        }
      }
      explist {
        explast {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          binary {
            leftexp {
            }
            binop {
              and: 0
            }
            rightexp {
              binary {
                leftexp {
                  false: 0
                }
                binop {
                  and: 0
                }
                rightexp {
                  binary {
                    leftexp {
                      true: 0
                    }
                    binop {
                      and: 0
                    }
                    rightexp {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          binary {
            leftexp {
            }
            binop {
              and: 0
            }
            rightexp {
              binary {
                leftexp {
                  false: 0
                }
                binop {
                  and: 0
                }
                rightexp {
                  binary {
                    leftexp {
                      true: 0
                    }
                    binop {
                      and: 0
                    }
                    rightexp {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
