chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                expressions {
                  false: 8
                }
                expressions {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                          str: "\'"
                        }
                      }
                    }
                  }
                }
                expressions {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          binary {
                            leftexp {
                              str: "string.pack"
                            }
                            binop {
                            }
                            rightexp {
                            }
                          }
                        }
                      }
                      lastSep {
                        comma: 0
                      }
                    }
                  }
                }
                expressions {
                }
                expressions {
                }
                expressions {
                  binary {
                    leftexp {
                      str: "string.pack"
                    }
                    binop {
                    }
                    rightexp {
                    }
                  }
                }
                expressions {
                  tableconstructor {
                    fieldlist {
                      firstField {
                      }
                      lastSep {
                        comma: 0
                      }
                    }
                  }
                }
                expressions {
                  prefixexp {
                    var {
                      indexexpr {
                        prefixexp {
                          var {
                          }
                        }
                        exp {
                          binary {
                            leftexp {
                              str: "string.pack"
                            }
                            binop {
                            }
                            rightexp {
                            }
                          }
                        }
                      }
                    }
                  }
                }
                expressions {
                  tableconstructor {
                  }
                }
                explast {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          exp {
                            binary {
                              leftexp {
                                str: "string.pack"
                              }
                              binop {
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                        args {
                          str: "\'"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
          }
          laststat {
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
}
