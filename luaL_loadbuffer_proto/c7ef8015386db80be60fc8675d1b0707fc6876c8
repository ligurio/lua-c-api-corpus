chunk {
  stat {
    forcyclename {
      name {
        name: "math.deg"
        num: 7424
      }
      startexp {
        tableconstructor {
          fieldlist {
            firstField {
            }
            fields {
              field {
                exprassign {
                  key {
                  }
                  value {
                    binary {
                      leftexp {
                        unary {
                          unop {
                            negate: 150994945
                          }
                          exp {
                            str: "\'<6636;3~=32.<\'<8"
                          }
                        }
                      }
                      binop {
                      }
                      rightexp {
                        str: ""
                      }
                    }
                  }
                }
              }
              sep {
                semicolon: 1
              }
            }
            fields {
              field {
              }
              sep {
                comma: 2048
              }
            }
            fields {
              field {
                exprassign {
                  key {
                  }
                  value {
                    binary {
                      leftexp {
                        unary {
                          unop {
                            negate: 150994945
                          }
                          exp {
                            str: "\'<6636;3>=32.<\'<8"
                          }
                        }
                      }
                      binop {
                        mod: 46080
                      }
                      rightexp {
                        str: "\'<6636;3>=32.<\'<8"
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                  }
                  value {
                    binary {
                      leftexp {
                        unary {
                          unop {
                            negate: 150994945
                          }
                          exp {
                            str: "\'<6636;3~=32.<\'<8"
                          }
                        }
                      }
                      binop {
                        mod: 536870912
                      }
                      rightexp {
                        str: "\'<6636;3>=32.<\'<8"
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
      stopexp {
        tableconstructor {
          fieldlist {
            firstField {
            }
            fields {
              field {
                exprassign {
                  key {
                  }
                  value {
                    binary {
                      leftexp {
                        unary {
                          unop {
                            negate: 150994945
                          }
                          exp {
                            str: "\'<6636;3~=32.<\'<8"
                          }
                        }
                      }
                      binop {
                      }
                      rightexp {
                        str: "\'<6636;3>=32.<\'<8"
                      }
                    }
                  }
                }
              }
              sep {
                semicolon: 1
              }
            }
            fields {
              field {
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                  }
                  value {
                    binary {
                      leftexp {
                        unary {
                          unop {
                            negate: 150994945
                          }
                          exp {
                            str: "\'<6636;3>=32.<\'<8"
                          }
                        }
                      }
                      binop {
                        mod: 536870912
                      }
                      rightexp {
                        str: "\'<6636;3>=32.<\'<8"
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  str: "\'<6636;3>=32.<\'<8"
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  explast {
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              forcyclename {
                name {
                  name: "math.deg"
                  num: 7424
                }
                startexp {
                  tableconstructor {
                  }
                }
                stopexp {
                  binary {
                    leftexp {
                    }
                    binop {
                    }
                    rightexp {
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                            }
                          }
                          explist {
                            explast {
                            }
                          }
                        }
                      }
                      stat {
                        ifstat {
                          condition {
                          }
                          first {
                            chunk {
                            }
                          }
                        }
                      }
                      stat {
                        forcyclename {
                          name {
                            name: "__shl"
                            num: 0
                          }
                          startexp {
                          }
                          stopexp {
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
}
