chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                prefixexp {
                  functioncall {
                    prefArgs {
                      prefixexp {
                        exp {
                          function {
                            body {
                              parlist {
                                namelist {
                                  namelist {
                                    firstname {
                                      name: "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
                                      num: 0
                                    }
                                  }
                                }
                              }
                              block {
                                chunk {
                                  stat {
                                    list {
                                      varlist {
                                        var {
                                          indexname {
                                            prefixexp {
                                            }
                                            Name: "*"
                                          }
                                        }
                                        vars {
                                          indexexpr {
                                            prefixexp {
                                              var {
                                                indexname {
                                                  prefixexp {
                                                  }
                                                  Name: "*"
                                                }
                                              }
                                            }
                                            exp {
                                              true: 0
                                            }
                                          }
                                        }
                                        vars {
                                          indexexpr {
                                            prefixexp {
                                            }
                                            exp {
                                              str: "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
                                            }
                                          }
                                        }
                                        vars {
                                          indexname {
                                            prefixexp {
                                            }
                                            Name: "*"
                                          }
                                        }
                                      }
                                      explist {
                                        explast {
                                        }
                                      }
                                    }
                                  }
                                  laststat {
                                    semicolon: false
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      args {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
