chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
        }
        expressions {
        }
        expressions {
          number: 0
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
        }
        expressions {
        }
        expressions {
          str: "\'<mahn<7<pack<7<\'\356<99"
        }
        explast {
          unary {
            unop {
              length: 768
            }
            exp {
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
          name {
            name: "\\000\\000\\000\\000\\000\\000\\011\\325"
            num: 0
          }
        }
        vars {
          indexexpr {
            prefixexp {
              exp {
                number: 6.1189531108948038e-308
              }
            }
            exp {
            }
          }
        }
        vars {
          name {
            name: "tonumber"
            num: 8448
          }
        }
        vars {
          indexexpr {
            prefixexp {
              exp {
                number: 6.1189531108948038e-308
              }
            }
            exp {
            }
          }
        }
        vars {
        }
      }
      explist {
        expressions {
          number: 56.00000274553895
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
        }
        expressions {
          binary {
            leftexp {
              str: "\'<mathn<7<<7<\'<9"
            }
            binop {
              div: 8448
            }
            rightexp {
            }
          }
        }
        explast {
          unary {
            unop {
            }
            exp {
              binary {
                leftexp {
                  str: "\'<mathn<7<<7<\'<9"
                }
                binop {
                  div: 8448
                }
                rightexp {
                }
              }
            }
          }
        }
      }
    }
  }
}
