chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 33537
        }
        names {
          name: ""
          num: 32
        }
        names {
          name: "\000\000\000\000"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ","
          num: 1
        }
        names {
          name: ""
          num: 1684104562
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\n"
          num: 0
        }
        names {
          name: ","
          num: 262144
        }
        names {
          name: ""
          num: 150994944
        }
        names {
          name: "\000\000\000\000"
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "}}}}}}}z}}}}}}}}"
          num: 0
        }
        names {
          name: "\317"
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\000\000\000\000"
          num: 0
        }
        names {
          name: ""
          num: 4
        }
        names {
          name: ","
          num: 1
        }
        names {
          name: ","
          num: 262144
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 4
        }
      }
      explist {
        expressions {
          prefixexp {
            functioncall {
              namedArgs {
                prefixexp {
                  functioncall {
                    namedArgs {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                              str: "\'-666633332<\'<8<8"
                            }
                            binop {
                              div: 0
                            }
                            rightexp {
                              str: "\'-666333623<\'<8<8"
                            }
                          }
                        }
                      }
                      name {
                        name: ""
                        num: 0
                      }
                      args {
                      }
                    }
                  }
                }
                name {
                  name: ""
                  num: 0
                }
                args {
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: "os.getenv"
          num: 67108864
        }
        names {
          name: "os.getenv"
          num: 1
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: "io.st]out"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
      explist {
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          binary {
            leftexp {
            }
            binop {
              greaterEqual: 0
            }
            rightexp {
            }
          }
        }
        expressions {
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 4
        }
        names {
          name: " "
          num: 0
        }
        names {
          name: ""
          num: 4
        }
        names {
          name: ""
          num: 167
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\272,"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 19
        }
        names {
          name: ""
          num: 42973
        }
        names {
          name: ","
          num: 973078529
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: "/"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ","
          num: 1
        }
        names {
          name: ","
          num: 262144
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
    }
    semicolon: true
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 42752
        }
        names {
          name: ""
          num: 32
        }
        names {
          name: "\000\000\000\000"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ","
          num: 1
        }
        names {
          name: ""
          num: 1684370017
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\n"
          num: 0
        }
        names {
          name: ","
          num: 262144
        }
        names {
          name: ""
          num: 150994944
        }
        names {
          name: "\000\000\000\000"
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "string.packsize"
          num: 0
        }
        names {
          name: "\317"
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\000\000\000\000"
          num: 0
        }
        names {
          name: ""
          num: 4
        }
        names {
          name: ","
          num: 1
        }
        names {
          name: ","
          num: 262144
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 4
        }
      }
      explist {
        explast {
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: "A"
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ","
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: "\000\000\000\000\000\000\000\004"
          num: 197
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\374\374\374\374\374\374\374"
          num: 0
        }
        names {
          name: "\000\000\000\000"
          num: 1
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: "}}}}}}}z}}}}}}}}"
          num: 1
        }
        names {
          name: ""
          num: 1701080931
        }
        names {
          name: "#"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              namedassign {
                name {
                  name: ""
                  num: 0
                }
                value {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  expression {
                                    false: 35
                                  }
                                }
                              }
                            }
                          }
                          value {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  expression {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      fields {
                        field {
                          namedassign {
                            name {
                              name: ""
                              num: 0
                            }
                            value {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                    exprassign {
                                      key {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                              expression {
                                                unary {
                                                  unop {
                                                  }
                                                  exp {
                                                    str: "string.packsize"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      value {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                              expression {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  fields {
                                    field {
                                      namedassign {
                                        name {
                                          name: ""
                                          num: 0
                                        }
                                        value {
                                        }
                                      }
                                    }
                                    sep {
                                      semicolon: 16384
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
              }
            }
            fields {
              field {
                namedassign {
                  name {
                    name: ""
                    num: 0
                  }
                  value {
                  }
                }
              }
              sep {
                semicolon: 16384
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  laststat {
    semicolon: true
  }
}
