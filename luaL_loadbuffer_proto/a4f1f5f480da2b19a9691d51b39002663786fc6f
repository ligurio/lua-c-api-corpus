chunk {
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexexpr {
            prefixexp {
              var {
                name {
                  name: ""
                  num: 0
                }
              }
            }
            exp {
              binary {
                leftexp {
                }
                binop {
                  add: 0
                }
                rightexp {
                  prefixexp {
                  }
                }
              }
            }
          }
        }
      }
      explist {
        expressions {
          binary {
            leftexp {
              prefixexp {
                exp {
                  str: "pairs"
                }
              }
            }
            binop {
              div: 654311424
            }
            rightexp {
              prefixexp {
                exp {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      binary {
                                        leftexp {
                                          binary {
                                            leftexp {
                                              binary {
                                                leftexp {
                                                  binary {
                                                    leftexp {
                                                      binary {
                                                        leftexp {
                                                          binary {
                                                            leftexp {
                                                            }
                                                            binop {
                                                              greater: 0
                                                            }
                                                            rightexp {
                                                              str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                            }
                                                          }
                                                        }
                                                        binop {
                                                          div: 0
                                                        }
                                                        rightexp {
                                                          str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                        }
                                                      }
                                                    }
                                                    binop {
                                                      div: 0
                                                    }
                                                    rightexp {
                                                      binary {
                                                        leftexp {
                                                          binary {
                                                            leftexp {
                                                              str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                            }
                                                            binop {
                                                            }
                                                            rightexp {
                                                            }
                                                          }
                                                        }
                                                        binop {
                                                          div: 0
                                                        }
                                                        rightexp {
                                                          prefixexp {
                                                            functioncall {
                                                              prefArgs {
                                                                prefixexp {
                                                                }
                                                                args {
                                                                  str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                binop {
                                                }
                                                rightexp {
                                                  binary {
                                                    leftexp {
                                                      str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                    }
                                                    binop {
                                                    }
                                                    rightexp {
                                                      str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            binop {
                                            }
                                            rightexp {
                                              str: "\'-8<table.pack\'\'/8<\'<8<8"
                                            }
                                          }
                                        }
                                        binop {
                                          div: 0
                                        }
                                        rightexp {
                                          str: "\'-8<table.pack\'\'/8<\'<8<8"
                                        }
                                      }
                                    }
                                    binop {
                                      notEqual: 3080192
                                    }
                                    rightexp {
                                      unary {
                                        unop {
                                          not: 150994945
                                        }
                                        exp {
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  mult: 16385
                                }
                                rightexp {
                                  str: "\'-8<table.pack\'\'/8<\'<8<8"
                                }
                              }
                            }
                            binop {
                              add: 0
                            }
                            rightexp {
                              str: "\'-8<table.pack\'\'/8<\'<8<8"
                            }
                          }
                        }
                        binop {
                          concat: 654311424
                        }
                        rightexp {
                          str: "\'-8<table.pack\'\'/8<\'<8<8"
                        }
                      }
                    }
                    binop {
                      concat: 11520
                    }
                    rightexp {
                      str: "\'-8<table.pack\'\'/8<\'<8<8"
                    }
                  }
                }
              }
            }
          }
        }
        explast {
          true: 0
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                  indexexpr {
                    prefixexp {
                      exp {
                        str: "pairs"
                      }
                    }
                    exp {
                      binary {
                        leftexp {
                        }
                        binop {
                          add: 0
                        }
                        rightexp {
                          prefixexp {
                          }
                        }
                      }
                    }
                  }
                }
                vars {
                  indexexpr {
                    prefixexp {
                      exp {
                        tableconstructor {
                        }
                      }
                    }
                    exp {
                      binary {
                        leftexp {
                          number: 5.8408188785814036e-308
                        }
                        binop {
                          add: 0
                        }
                        rightexp {
                          prefixexp {
                            exp {
                              binary {
                                leftexp {
                                  prefixexp {
                                  }
                                }
                                binop {
                                  concat: 654311424
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              explist {
                expressions {
                  prefixexp {
                  }
                }
                expressions {
                  prefixexp {
                  }
                }
                expressions {
                  str: "::mathns::.i::::::::::::[::::::::::::::::::::::::::::::::::"
                }
                explast {
                }
              }
            }
          }
          laststat {
            semicolon: true
          }
        }
      }
      condition {
        binary {
          leftexp {
            ellipsis: ""
          }
          binop {
            concat: 1
          }
          rightexp {
            binary {
              leftexp {
                str: "\000\'>io.open\'.\000&&\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\363\'>\'\000\000&\'>\'"
              }
              binop {
                concat: 2752512
              }
              rightexp {
                nil: 0
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
}
