chunk {
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              binary {
                leftexp {
                }
                binop {
                }
                rightexp {
                  function {
                    body {
                      block {
                        chunk {
                          stat {
                            ifstat {
                              condition {
                              }
                              first {
                                chunk {
                                  stat {
                                    ifstat {
                                      condition {
                                      }
                                      first {
                                        chunk {
                                        }
                                      }
                                      last {
                                        chunk {
                                          laststat {
                                            semicolon: true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              clauses {
                                condition {
                                }
                                block {
                                  chunk {
                                    laststat {
                                      break: 7077888
                                      semicolon: true
                                    }
                                  }
                                }
                              }
                              last {
                                chunk {
                                  stat {
                                    ifstat {
                                      condition {
                                      }
                                      first {
                                        chunk {
                                        }
                                      }
                                      last {
                                        chunk {
                                          laststat {
                                            semicolon: true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      explist {
        expressions {
          number: -1.0624980926513672
        }
        expressions {
          number: -0
        }
        expressions {
        }
        expressions {
          binary {
            leftexp {
              ellipsis: "\000"
            }
            binop {
            }
            rightexp {
            }
          }
        }
        expressions {
          number: 4
        }
        expressions {
        }
        expressions {
          number: 34
        }
        expressions {
          number: 4.0000037103891364
        }
        expressions {
          number: 4
        }
        expressions {
          number: 3
        }
        expressions {
          number: 0
        }
        expressions {
        }
        explast {
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: 2.47539513343365e-307
      }
      stopexp {
      }
      stepexp {
        number: -0
      }
      doblock {
        block {
          chunk {
            stat {
            }
          }
        }
      }
    }
  }
}
