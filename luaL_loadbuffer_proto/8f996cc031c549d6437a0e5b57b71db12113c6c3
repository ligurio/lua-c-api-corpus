chunk {
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                  tableconstructor {
                    fieldlist {
                      firstField {
                      }
                      lastSep {
                        comma: 536870912
                      }
                    }
                  }
                }
                value {
                  number: 3.60739284464096e-312
                }
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    number: -4.9591064453125e-05
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  str: "\\377\\377\\377\\374"
                }
              }
              sep {
                semicolon: 0
              }
            }
            fields {
              field {
                expression {
                  nil: 0
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: "\377\377\377\377\377\377\377\377"
        num: 1536
      }
      startexp {
        number: 2.8125
      }
      stopexp {
        number: 2.8125
      }
      stepexp {
      }
      doblock {
        block {
          chunk {
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                  }
                }
              }
              semicolon: true
            }
            stat {
              forcyclename {
                name {
                  name: "\022"
                  num: 7
                }
                startexp {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                stopexp {
                  number: 2.8125
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              semicolon: true
            }
            stat {
            }
            stat {
              localfunc {
                name {
                  name: ""
                  num: 0
                }
                funcbody {
                  parlist {
                    ellipsis: "os.difftime"
                  }
                  block {
                    chunk {
                      stat {
                        repeatcycle {
                          block {
                            chunk {
                              stat {
                                repeatcycle {
                                  block {
                                    chunk {
                                    }
                                  }
                                  condition {
                                    ellipsis: ""
                                  }
                                }
                                semicolon: true
                              }
                              stat {
                                whilecycle {
                                  condition {
                                  }
                                  doblock {
                                    block {
                                      chunk {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          condition {
                            ellipsis: ""
                          }
                        }
                        semicolon: true
                      }
                      stat {
                        call {
                          prefArgs {
                            prefixexp {
                              exp {
                                str: "`"
                              }
                            }
                            args {
                              str: ""
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              forcyclename {
                name {
                  name: "\022"
                  num: 7
                }
                startexp {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                stopexp {
                  number: 2.8125
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
            }
          }
        }
      }
    }
  }
}
