chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
              prefArgs {
                prefixexp {
                  functioncall {
                    prefArgs {
                      prefixexp {
                        functioncall {
                        }
                      }
                      args {
                      }
                    }
                  }
                }
                args {
                }
              }
            }
          }
          stat {
            func {
              name {
                firstname {
                  name: ""
                  num: 0
                }
              }
              body {
                parlist {
                  ellipsis: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                }
                block {
                  chunk {
                    stat {
                      call {
                        prefArgs {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                  functioncall {
                                  }
                                }
                                args {
                                }
                              }
                            }
                          }
                          args {
                          }
                        }
                      }
                    }
                    stat {
                      func {
                        name {
                          firstname {
                            name: ""
                            num: 0
                          }
                        }
                        body {
                          parlist {
                            ellipsis: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                          }
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                          }
                        }
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                      semicolon: true
                    }
                    stat {
                      forcyclename {
                        name {
                          name: ""
                          num: 7
                        }
                        startexp {
                        }
                        stopexp {
                          number: 45
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                call {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                }
                args {
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
            semicolon: true
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 7
              }
              startexp {
              }
              stopexp {
                number: 45
              }
              doblock {
                block {
                  chunk {
                    stat {
                      call {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          str: "inf"
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
}
