chunk {
  stat {
    whilecycle {
      condition {
        str: "counter_8"
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
              localnames {
                namelist {
                  firstname {
                    name: "_\022\000____\376________\376_"
                    num: 0
                  }
                  names {
                    name: "counr_8"
                    num: 0
                  }
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      semicolon: true
                    }
                  }
                }
                condition {
                  nil: 536870912
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        str: "_\022\000____\376________\376_"
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            semicolon: false
          }
        }
      }
      condition {
        nil: 1
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
        }
      }
      explist {
        expressions {
          ellipsis: ""
        }
        expressions {
          number: -35651608.12500108
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          number: -35651608.12500108
        }
        explast {
          str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
            stat {
              semicolon: true
            }
            laststat {
              explist {
                explist {
                  explast {
                  }
                }
              }
              semicolon: false
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            semicolon: true
          }
          stat {
            semicolon: false
          }
          laststat {
            semicolon: true
          }
        }
      }
      condition {
        str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
          stat {
            localnames {
              namelist {
                firstname {
                  name: "_\022\000____\376________\376_"
                  num: 0
                }
                names {
                  name: "counter_8"
                  num: 0
                }
              }
              explist {
                expressions {
                }
                explast {
                  number: -35651608.12500108
                }
              }
            }
            semicolon: false
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    list {
                      varlist {
                        var {
                        }
                      }
                      explist {
                        expressions {
                          ellipsis: ""
                        }
                        expressions {
                          number: -35651608.12500108
                        }
                        expressions {
                          str: "\'<mathn<7<<7<\'<9"
                        }
                        expressions {
                          number: -35651608.12500108
                        }
                        explast {
                          str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
                        }
                      }
                    }
                    semicolon: false
                  }
                  stat {
                    func {
                      name {
                        firstname {
                          name: ""
                          num: 0
                        }
                      }
                      body {
                        block {
                          chunk {
                            stat {
                              semicolon: true
                            }
                            laststat {
                              explist {
                                explist {
                                  explast {
                                  }
                                }
                              }
                              semicolon: true
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                str: "ld"
                              }
                            }
                          }
                        }
                      }
                      condition {
                        str: "\000\000\000\000\000\000"
                      }
                    }
                  }
                }
              }
              condition {
                unary {
                  unop {
                  }
                  exp {
                    true: 4
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    ifstat {
      condition {
        nil: 1
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            semicolon: true
          }
        }
      }
      condition {
        nil: 536894208
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
        lastname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
            stat {
              semicolon: false
            }
          }
        }
      }
    }
  }
  stat {
    semicolon: false
  }
  stat {
    semicolon: false
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
        }
      }
      condition {
        ellipsis: "qqqqqqqqqqqqqLUA_CPATH_5_3qqqqqqqqqqqqqqqqqqqqqqqq"
      }
    }
    semicolon: true
  }
  stat {
    block {
      block {
        chunk {
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            semicolon: false
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  laststat {
    semicolon: true
  }
}
