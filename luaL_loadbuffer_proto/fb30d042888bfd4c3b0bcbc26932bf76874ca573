chunk {
  stat {
    block {
      block {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            forcyclename {
              name {
                name: ""
                num: 1
              }
              startexp {
                prefixexp {
                }
              }
              stopexp {
                number: nan
              }
              doblock {
                block {
                  chunk {
                    stat {
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        nil: 9
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          str: ","
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
              }
            }
          }
        }
        expressions {
        }
        expressions {
          prefixexp {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        explast {
          prefixexp {
            functioncall {
            }
          }
        }
      }
    }
  }
}
