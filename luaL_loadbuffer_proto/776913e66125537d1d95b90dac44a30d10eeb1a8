chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  prefixexp {
                    var {
                      indexexpr {
                        prefixexp {
                          exp {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  expression {
                                  }
                                }
                                fields {
                                  field {
                                    exprassign {
                                      key {
                                      }
                                      value {
                                      }
                                    }
                                  }
                                  sep {
                                  }
                                }
                              }
                            }
                          }
                        }
                        exp {
                          binary {
                            leftexp {
                              unary {
                                unop {
                                  length: 0
                                }
                                exp {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        expression {
                                          tableconstructor {
                                          }
                                        }
                                      }
                                      fields {
                                        field {
                                          exprassign {
                                            key {
                                            }
                                            value {
                                            }
                                          }
                                        }
                                        sep {
                                        }
                                      }
                                      lastSep {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                              greater: 2734592
                            }
                            rightexp {
                              unary {
                                unop {
                                  length: 640268800
                                }
                                exp {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      laststat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            laststat {
              explist {
                explist {
                  expressions {
                    str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                  }
                  expressions {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                            str: "\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215"
                          }
                        }
                      }
                    }
                  }
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    semicolon: true
  }
  laststat {
    break: 12318464
    semicolon: true
  }
}
