chunk {
  stat {
    ifstat {
      condition {
        number: 0
      }
      first {
        chunk {
        }
      }
      last {
        chunk {
          laststat {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
          }
        }
      }
      condition {
        binary {
          leftexp {
            unary {
              unop {
                negate: 1543766016
              }
              exp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                          }
                          binop {
                            div: 0
                          }
                          rightexp {
                            str: "\'~~9~9~\'9~"
                          }
                        }
                      }
                      binop {
                        div: 0
                      }
                      rightexp {
                        number: 0
                      }
                    }
                  }
                  binop {
                    div: 0
                  }
                  rightexp {
                    function {
                      body {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          binop {
          }
          rightexp {
            binary {
              leftexp {
                str: "\000\000\000\000\000\000\000\202\t"
              }
              binop {
              }
              rightexp {
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
