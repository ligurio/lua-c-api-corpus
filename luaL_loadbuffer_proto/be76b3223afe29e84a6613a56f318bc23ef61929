chunk {
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
            stat {
              func {
                name {
                  firstname {
                    name: ""
                    num: 0
                  }
                  lastname {
                    name: ""
                    num: 0
                  }
                }
                body {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
            tableconstructor {
              fieldlist {
                firstField {
                }
              }
            }
          }
          binop {
          }
          rightexp {
            tableconstructor {
              fieldlist {
                firstField {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
            tableconstructor {
              fieldlist {
                firstField {
                }
                fields {
                  field {
                  }
                  sep {
                  }
                }
                lastSep {
                  comma: 1701080931
                }
              }
            }
          }
          binop {
          }
          rightexp {
            tableconstructor {
              fieldlist {
                firstField {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        ellipsis: "\273"
      }
    }
  }
}
