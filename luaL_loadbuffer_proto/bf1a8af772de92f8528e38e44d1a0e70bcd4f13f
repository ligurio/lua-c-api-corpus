chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 1
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          function {
            body {
              parlist {
                ellipsis: "\377\377\377\377\377\377\377\377"
              }
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          ellipsis: "&"
        }
      }
    }
    semicolon: false
  }
  stat {
    whilecycle {
      condition {
        function {
          body {
            block {
              chunk {
                stat {
                  repeatcycle {
                    block {
                      chunk {
                        stat {
                          semicolon: true
                        }
                      }
                    }
                    condition {
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 6712937
                }
                startexp {
                }
                stopexp {
                }
                stepexp {
                  number: -0
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                            }
                            vars {
                              name {
                                name: ""
                                num: 1
                              }
                            }
                          }
                          explist {
                            expressions {
                            }
                            explast {
                              prefixexp {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
