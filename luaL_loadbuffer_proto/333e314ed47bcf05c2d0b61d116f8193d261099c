chunk {
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
            namedArgs {
              prefixexp {
              }
              name {
                name: "\'\r\nutf8.codes \'"
                num: 7471300
              }
              args {
                str: "\'\r\nutf8.codes \'"
              }
            }
          }
        }
        args {
          explist {
            explist {
              expressions {
                str: "s\276tep"
              }
              expressions {
                unary {
                  unop {
                    negate: 100728983
                  }
                  exp {
                    binary {
                      leftexp {
                        tableconstructor {
                          fieldlist {
                            firstField {
                            }
                            lastSep {
                              comma: 0
                            }
                          }
                        }
                      }
                      binop {
                        div: 536876320
                      }
                      rightexp {
                        binary {
                          leftexp {
                          }
                          binop {
                            mult: 4
                          }
                          rightexp {
                            number: -1418.75
                          }
                        }
                      }
                    }
                  }
                }
              }
              explast {
                number: 0
              }
            }
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
            namedArgs {
              prefixexp {
              }
              name {
                name: "\'\r\nutf8.codes \'"
                num: 7471300
              }
              args {
                str: "\'\r\nutf8.codes \'"
              }
            }
          }
        }
        args {
          explist {
            explist {
              expressions {
                str: "step"
              }
              expressions {
                unary {
                  unop {
                  }
                  exp {
                    binary {
                      leftexp {
                        tableconstructor {
                          fieldlist {
                            firstField {
                            }
                            fields {
                              field {
                              }
                              sep {
                                comma: 0
                              }
                            }
                            lastSep {
                              comma: 0
                            }
                          }
                        }
                      }
                      binop {
                        div: 536876320
                      }
                      rightexp {
                      }
                    }
                  }
                }
              }
              explast {
                true: 2105376
              }
            }
          }
        }
      }
    }
  }
}
