chunk {
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexexpr {
            prefixexp {
              exp {
                str: ""
              }
            }
            exp {
            }
          }
        }
      }
      explist {
        expressions {
          ellipsis: ""
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<matk<7<\'<9"
        }
        explast {
          str: "\'<mathn<7<pack<7<\'<9"
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
          name {
            name: ""
            num: 0
          }
        }
      }
      explist {
        expressions {
          unary {
            unop {
            }
            exp {
              binary {
                leftexp {
                }
                binop {
                }
                rightexp {
                }
              }
            }
          }
        }
        expressions {
          str: "\'<mathn<7<<7<N\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            list {
                              varlist {
                                var {
                                }
                                vars {
                                  indexexpr {
                                    prefixexp {
                                      exp {
                                        str: "]"
                                      }
                                    }
                                    exp {
                                    }
                                  }
                                }
                              }
                              explist {
                                expressions {
                                  ellipsis: ""
                                }
                                expressions {
                                  str: "\'<mathn<7<<7<\'<9"
                                }
                                expressions {
                                  str: "\'<mathn<7<pack<7<\'<9"
                                }
                                expressions {
                                  str: "\'<mathn<7<<7<\'<9"
                                }
                                expressions {
                                  str: "\'<mathn<7<pack<7<\'<9"
                                }
                                expressions {
                                  str: "\'<mathn<7<pack<7<\'<9"
                                }
                                explast {
                                  str: "\'<mathn<7<<7<\'<9"
                                }
                              }
                            }
                          }
                        }
                      }
                      condition {
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            list {
                              varlist {
                                var {
                                }
                                vars {
                                  indexexpr {
                                    prefixexp {
                                      exp {
                                        str: "]"
                                      }
                                    }
                                    exp {
                                    }
                                  }
                                }
                              }
                              explist {
                                expressions {
                                  ellipsis: ""
                                }
                                expressions {
                                  str: "\'<mathn<7<<7<\'<9"
                                }
                                expressions {
                                  str: "\'<mathn<7<pack<7<\'<9"
                                }
                                expressions {
                                  str: "\'<mathn<7<<7<\'<9"
                                }
                                expressions {
                                  str: "\'<mathn<7<pack<7<\'<9"
                                }
                                expressions {
                                  str: "\'<mathn<7<pack<7<\'<9"
                                }
                                explast {
                                  str: "\'<mathn<7<<7<\'<9"
                                }
                              }
                            }
                          }
                        }
                      }
                      condition {
                      }
                    }
                  }
                }
              }
            }
          }
        }
        explast {
          str: "\'<mathn<7<pack<7<\'<9"
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          str: "h\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          nil: 32
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pa\'\000\000\000\000\000\000\000ck<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        explast {
          str: "\'<mathn<7<pa\'\000\000\000\000\000\000\000ck<7<\'<9"
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
                vars {
                  indexexpr {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                            explist {
                            }
                          }
                        }
                      }
                    }
                    exp {
                    }
                  }
                }
              }
              explist {
                expressions {
                  ellipsis: ""
                }
                expressions {
                  str: "\'<mathn<7<<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                explast {
                  str: "\'<mathn<7<<7<\'<9"
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
    semicolon: true
  }
  laststat {
    semicolon: true
  }
}
