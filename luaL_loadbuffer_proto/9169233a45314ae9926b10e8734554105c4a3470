chunk {
  stat {
    list {
      varlist {
        var {
          name {
            name: ""
            num: 0
          }
        }
        vars {
          indexname {
            prefixexp {
              functioncall {
              }
            }
            Name: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000chunk {\n  stat {\n  }\n  stat {\n  }\n  laststat {\n    explist {\n      explist {\n        explast {\n          binary {\n            leftexp {\n              \000\000function {\n                body {\n                  parlist {\n                  }\n                  block {\n                    chunk {\n                      stat {\n                        semicolon: true\n                      }\n                      stat {\n                      }\n                    }\n                 \000 }\n                }\n              }\n            }\n            binop {\n            }\n            rightexp"
          }
        }
      }
      explist {
        expressions {
          nil: 67108864
        }
        explast {
          binary {
            leftexp {
              function {
                body {
                  parlist {
                  }
                  block {
                    chunk {
                      stat {
                      }
                      laststat {
                      }
                    }
                  }
                }
              }
            }
            binop {
            }
            rightexp {
              function {
                body {
                  parlist {
                  }
                  block {
                    chunk {
                      stat {
                      }
                      laststat {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    explist {
      explist {
        expressions {
          str: "z"
        }
        explast {
          binary {
            leftexp {
              function {
                body {
                  parlist {
                  }
                  block {
                    chunk {
                      stat {
                      }
                      laststat {
                      }
                    }
                  }
                }
              }
            }
            binop {
            }
            rightexp {
              function {
                body {
                  parlist {
                  }
                  block {
                    chunk {
                      stat {
                      }
                      laststat {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
