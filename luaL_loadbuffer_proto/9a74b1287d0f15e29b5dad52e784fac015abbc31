chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: "os"
          num: 0
        }
      }
      expressions {
        expressions {
          binary {
            leftexp {
              tableconstructor {
              }
            }
            binop {
              and: 0
            }
            rightexp {
              binary {
                leftexp {
                  tableconstructor {
                  }
                }
                binop {
                  and: 0
                }
                rightexp {
                  binary {
                    leftexp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                              tableconstructor {
                              }
                            }
                            binop {
                              and: 0
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  str: "coroutine.close"
                                }
                                binop {
                                  and: 0
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      ellipsis: ""
                                    }
                                    binop {
                                      and: 0
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          tableconstructor {
                                          }
                                        }
                                        binop {
                                          and: 0
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                              tableconstructor {
                                              }
                                            }
                                            binop {
                                              and: 0
                                            }
                                            rightexp {
                                              binary {
                                                leftexp {
                                                  prefixexp {
                                                  }
                                                }
                                                binop {
                                                  and: 0
                                                }
                                                rightexp {
                                                  ellipsis: ":"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    binop {
                      and: 0
                    }
                    rightexp {
                      ellipsis: ":"
                    }
                  }
                }
              }
            }
          }
        }
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  laststat {
  }
}
