chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 251
        }
        names {
          name: "\377"
          num: 0
        }
      }
      expressions {
        explast {
          function {
            body {
              parlist {
                ellipsis: "\377"
              }
              block {
                chunk {
                  stat {
                    semicolon: true
                  }
                  stat {
                    whilecycle {
                      condition {
                        binary {
                          leftexp {
                            unary {
                              unop {
                                length: 4
                              }
                              exp {
                                tableconstructor {
                                  fieldlist {
                                    firstField {
                                      exprassign {
                                        key {
                                          tableconstructor {
                                          }
                                        }
                                        value {
                                        }
                                      }
                                    }
                                    fields {
                                      field {
                                        exprassign {
                                          key {
                                          }
                                          value {
                                            prefixexp {
                                            }
                                          }
                                        }
                                      }
                                      sep {
                                        comma: 0
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          binop {
                            notEqual: 65536
                          }
                          rightexp {
                            unary {
                              unop {
                                negate: 5
                              }
                              exp {
                                binary {
                                  leftexp {
                                    number: 6.81701549787126e-313
                                  }
                                  binop {
                                    exp: 0
                                  }
                                  rightexp {
                                    unary {
                                      unop {
                                        length: 0
                                      }
                                      exp {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                  laststat {
                    explist {
                      explist {
                        expressions {
                          number: 9.12627949778344e-310
                        }
                        explast {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
