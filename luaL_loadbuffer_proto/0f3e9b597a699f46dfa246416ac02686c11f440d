chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    unary {
                      unop {
                        length: 260
                      }
                      exp {
                        tableconstructor {
                        }
                      }
                    }
                  }
                  binop {
                    concat: 5963776
                  }
                  rightexp {
                    unary {
                      unop {
                        length: 4
                      }
                      exp {
                        tableconstructor {
                          fieldlist {
                            firstField {
                              exprassign {
                                key {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        expression {
                                          tableconstructor {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                value {
                                  unary {
                                    unop {
                                      negate: 0
                                    }
                                    exp {
                                      prefixexp {
                                        exp {
                                          binary {
                                            leftexp {
                                              number: -104
                                            }
                                            binop {
                                              concat: 0
                                            }
                                            rightexp {
                                              str: "0.3E2"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            fields {
                              field {
                                expression {
                                  number: -104
                                }
                              }
                              sep {
                                comma: 5963776
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              binop {
                greaterEqual: 0
              }
              rightexp {
              }
            }
          }
          binop {
          }
          rightexp {
            true: 1073741824
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
          }
          binop {
          }
          rightexp {
            binary {
              leftexp {
                false: 4259840
              }
              binop {
                mod: 1073741824
              }
              rightexp {
                false: 16777216
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
