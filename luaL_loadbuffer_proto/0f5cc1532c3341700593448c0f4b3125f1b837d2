chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 43
        }
      }
      expressions {
        expressions {
          unary {
            unop {
              not: 0
            }
            exp {
            }
          }
        }
        expressions {
          str: "\'<table.remove\'<9"
        }
        expressions {
          str: "\'<mathn<7<<7.<\'<9"
        }
        explast {
          str: "\'<mathn   <7.<\'<9"
        }
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 43
                  }
                }
                expressions {
                  expressions {
                    str: "\'<mathn<7<<7<\'<9"
                  }
                  expressions {
                    str: "\'<mathn<7<<7.<\'<9"
                  }
                  expressions {
                    str: "\'<mathn<7<<7.<\'<9"
                  }
                  explast {
                    str: "\'<mathn   <7.<\'<9"
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 43
        }
      }
      expressions {
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<<7.<\'<9"
        }
        expressions {
          str: "\'<mathn<7<<7.<\'<9"
        }
        explast {
          str: "\'<mathn   <7.<\'<9"
        }
      }
      doblock {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      list {
                        varlist {
                          var {
                            indexname {
                              prefixexp {
                              }
                              Name: "tmpfile"
                            }
                          }
                        }
                        explist {
                          expressions {
                            tableconstructor {
                            }
                          }
                          explast {
                            prefixexp {
                            }
                          }
                        }
                      }
                    }
                    stat {
                      list {
                        varlist {
                          var {
                          }
                          vars {
                          }
                        }
                        explist {
                          explast {
                            binary {
                              leftexp {
                              }
                              binop {
                                add: 1660944384
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    prefixexp {
                                    }
                                  }
                                  binop {
                                    mult: 0
                                  }
                                  rightexp {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                        add: 1660944384
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                          }
                                          binop {
                                            add: 1660944384
                                          }
                                          rightexp {
                                            binary {
                                              leftexp {
                                                prefixexp {
                                                  var {
                                                    indexexpr {
                                                      prefixexp {
                                                        var {
                                                          indexexpr {
                                                            prefixexp {
                                                              var {
                                                                name {
                                                                  name: "select"
                                                                  num: 32768
                                                                }
                                                              }
                                                            }
                                                            exp {
                                                              binary {
                                                                leftexp {
                                                                  unary {
                                                                    unop {
                                                                      length: 0
                                                                    }
                                                                    exp {
                                                                      str: "\'<66>.633332<\'<8"
                                                                    }
                                                                  }
                                                                }
                                                                binop {
                                                                  and: 0
                                                                }
                                                                rightexp {
                                                                  str: "\'<66>.633332<\'<8"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      exp {
                                                        binary {
                                                          leftexp {
                                                            prefixexp {
                                                              var {
                                                              }
                                                            }
                                                          }
                                                          binop {
                                                            and: 8388608
                                                          }
                                                          rightexp {
                                                            prefixexp {
                                                              var {
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              binop {
                                                mult: 0
                                              }
                                              rightexp {
                                                binary {
                                                  leftexp {
                                                    prefixexp {
                                                    }
                                                  }
                                                  binop {
                                                    mult: 1684957542
                                                  }
                                                  rightexp {
                                                    unary {
                                                      unop {
                                                        length: 0
                                                      }
                                                      exp {
                                                        str: "__________\376_"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                condition {
                }
              }
            }
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 43
        }
      }
      expressions {
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<<7.<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        explast {
          str: "\'<mathn   <7.<\'<9"
        }
      }
      doblock {
        block {
          chunk {
            stat {
              ifstat {
                condition {
                  true: 0
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                  true: 0
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                  true: 0
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                  true: 0
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                  true: 0
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                  true: 0
                }
                first {
                  chunk {
                    stat {
                      call {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                            explist {
                              explist {
                                expressions {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                      notEqual: 32256
                                    }
                                    rightexp {
                                    }
                                  }
                                }
                                expressions {
                                  function {
                                    body {
                                      parlist {
                                        namelist {
                                          namelist {
                                            firstname {
                                              name: ""
                                              num: 0
                                            }
                                          }
                                          ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                        }
                                      }
                                      block {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                }
                                explast {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              ifstat {
                condition {
                  true: 0
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                  true: 0
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                      }
                    }
                  }
                }
                first {
                  chunk {
                  }
                }
                last {
                  chunk {
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                          }
                        }
                        condition {
                        }
                      }
                    }
                    laststat {
                    }
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                  number: 0
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                  true: 0
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                  true: 4
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                  true: 0
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              list {
                varlist {
                  var {
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        var {
                          indexexpr {
                            prefixexp {
                              var {
                                name {
                                  name: "select"
                                  num: 32768
                                }
                              }
                            }
                            exp {
                              binary {
                                leftexp {
                                  unary {
                                    unop {
                                      length: 0
                                    }
                                    exp {
                                      str: "\'<66>.633332<\'<8"
                                    }
                                  }
                                }
                                binop {
                                  and: 0
                                }
                                rightexp {
                                  str: "\'<66>.633332<\'<8"
                                }
                              }
                            }
                          }
                        }
                      }
                      exp {
                        binary {
                          leftexp {
                            prefixexp {
                              var {
                              }
                            }
                          }
                          binop {
                          }
                          rightexp {
                            prefixexp {
                              var {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                explist {
                  explast {
                  }
                }
              }
            }
            stat {
              ifstat {
                condition {
                  true: 0
                }
                first {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  laststat {
    semicolon: true
  }
}
