chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        prefixexp {
          var {
            indexname {
              prefixexp {
                exp {
                }
              }
              Name: "\313"
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
              semicolon: false
            }
            stat {
            }
            stat {
              ifstat {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            unary {
                              unop {
                                length: 0
                              }
                              exp {
                              }
                            }
                          }
                          value {
                          }
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              unary {
                                unop {
                                  negate: 0
                                }
                                exp {
                                  unary {
                                    unop {
                                      length: 0
                                    }
                                    exp {
                                    }
                                  }
                                }
                              }
                            }
                            value {
                              ellipsis: ""
                            }
                          }
                        }
                        sep {
                        }
                      }
                      lastSep {
                      }
                    }
                  }
                }
                first {
                  chunk {
                  }
                }
              }
              semicolon: false
            }
          }
        }
      }
    }
  }
  laststat {
    explist {
      explist {
        expressions {
          binary {
            leftexp {
              nil: 8960
            }
            binop {
            }
            rightexp {
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
}
