chunk {
  stat {
    forcyclename {
      name {
        name: "count\\r_+"
        num: 0
      }
      startexp {
        unary {
          unop {
            not: 0
          }
          exp {
            str: "\001\000\000\000"
          }
        }
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  binary {
                    leftexp {
                      unary {
                        unop {
                          negate: 0
                        }
                        exp {
                          str: "\'<8<\'-8 "
                        }
                      }
                    }
                    binop {
                      less: 0
                    }
                    rightexp {
                      true: 0
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                    var {
                      name {
                        name: "load"
                        num: 0
                      }
                    }
                  }
                  args {
                    explist {
                      explist {
                        expressions {
                          str: "::mathns::.i::::::::::::[::::::::::::::::::::::::::::::::::"
                        }
                        explast {
                          number: 0
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
}
