chunk {
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 1024
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              function {
                body {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
      explist {
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                    localfunc {
                      name {
                        name: "narrow"
                        num: 0
                      }
                      funcbody {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  stat {
                    func {
                      name {
                        firstname {
                          name: "\377\377\377\006"
                          num: 0
                        }
                      }
                      body {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  stat {
                    func {
                      name {
                        firstname {
                          name: ""
                          num: 0
                        }
                        lastname {
                          name: "\377\377\377\006"
                          num: 0
                        }
                      }
                      body {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  stat {
                    call {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                          str: "*"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          ellipsis: "]"
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                    list {
                      varlist {
                        var {
                        }
                      }
                      explist {
                        expressions {
                          function {
                            body {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          function {
                            body {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          function {
                            body {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          function {
                            body {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          function {
                            body {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          function {
                            body {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          function {
                            body {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          function {
                            body {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        explast {
                          function {
                            body {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          false: 0
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          false: 0
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              parlist {
                ellipsis: "next"
              }
              block {
                chunk {
                  stat {
                    semicolon: true
                  }
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
  laststat {
    explist {
      explist {
        explast {
          prefixexp {
            exp {
            }
          }
        }
      }
    }
  }
}
