chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
    semicolon: true
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 4
      }
      funcbody {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      func {
                        name {
                          firstname {
                            name: ""
                            num: 0
                          }
                          names {
                            name: ""
                            num: 0
                          }
                        }
                        body {
                          block {
                            chunk {
                              laststat {
                                semicolon: true
                              }
                            }
                          }
                        }
                      }
                    }
                    laststat {
                    }
                  }
                }
                condition {
                  nil: 4
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
          prefixexp {
            var {
              name {
                name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                num: 4
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            laststat {
            }
          }
        }
      }
    }
  }
}
