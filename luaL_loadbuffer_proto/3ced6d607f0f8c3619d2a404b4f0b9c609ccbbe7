chunk {
  stat {
  }
  stat {
  }
  stat {
    localfunc {
      name {
        name: "\000\000\000\000\000\000\000\000\000\000\000\000\000"
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: false
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  laststat {
    explist {
      explist {
        expressions {
          binary {
            leftexp {
              prefixexp {
                exp {
                  binary {
                    leftexp {
                      number: -567485438885888
                    }
                    binop {
                      concat: 16128
                    }
                    rightexp {
                      binary {
                        leftexp {
                          number: 0
                        }
                        binop {
                          concat: 0
                        }
                        rightexp {
                          binary {
                            leftexp {
                              number: 118.78498777467757
                            }
                            binop {
                              exp: 0
                            }
                            rightexp {
                              number: 118.78498777467757
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            binop {
              mod: 0
            }
            rightexp {
              prefixexp {
              }
            }
          }
        }
        explast {
          str: ""
        }
      }
    }
  }
}
