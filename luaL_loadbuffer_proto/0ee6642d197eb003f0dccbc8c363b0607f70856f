chunk {
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              parlist {
              }
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          unary {
            unop {
              not: 0
            }
            exp {
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexexpr {
            prefixexp {
              var {
                indexexpr {
                  prefixexp {
                  }
                  exp {
                    nil: 0
                  }
                }
              }
            }
            exp {
              function {
                body {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
        vars {
        }
      }
      explist {
        expressions {
          function {
            body {
              parlist {
                namelist {
                  namelist {
                    firstname {
                      name: ""
                      num: 0
                    }
                  }
                  ellipsis: ""
                }
              }
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                    whilecycle {
                      condition {
                        tableconstructor {
                          fieldlist {
                            firstField {
                              expression {
                                tableconstructor {
                                  fieldlist {
                                    firstField {
                                      expression {
                                        binary {
                                          leftexp {
                                            str: "$"
                                          }
                                          binop {
                                            concat: 0
                                          }
                                          rightexp {
                                            binary {
                                              leftexp {
                                                unary {
                                                  unop {
                                                    length: 0
                                                  }
                                                  exp {
                                                    tableconstructor {
                                                      fieldlist {
                                                        firstField {
                                                          expression {
                                                            binary {
                                                              leftexp {
                                                                str: "$"
                                                              }
                                                              binop {
                                                                concat: 0
                                                              }
                                                              rightexp {
                                                                binary {
                                                                  leftexp {
                                                                    unary {
                                                                      unop {
                                                                        length: 0
                                                                      }
                                                                      exp {
                                                                        tableconstructor {
                                                                          fieldlist {
                                                                            firstField {
                                                                              expression {
                                                                                binary {
                                                                                  leftexp {
                                                                                    str: "$"
                                                                                  }
                                                                                  binop {
                                                                                    concat: 0
                                                                                  }
                                                                                  rightexp {
                                                                                    binary {
                                                                                      leftexp {
                                                                                        unary {
                                                                                          unop {
                                                                                            length: 0
                                                                                          }
                                                                                          exp {
                                                                                            tableconstructor {
                                                                                              fieldlist {
                                                                                                firstField {
                                                                                                }
                                                                                                fields {
                                                                                                  field {
                                                                                                    expression {
                                                                                                      prefixexp {
                                                                                                        exp {
                                                                                                          binary {
                                                                                                            leftexp {
                                                                                                            }
                                                                                                            binop {
                                                                                                              and: 0
                                                                                                            }
                                                                                                            rightexp {
                                                                                                              binary {
                                                                                                                leftexp {
                                                                                                                  number: 358.08969533209165
                                                                                                                }
                                                                                                                binop {
                                                                                                                  exp: 0
                                                                                                                }
                                                                                                                rightexp {
                                                                                                                  number: 118.78498777467757
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                  sep {
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                      binop {
                                                                                        lessEqual: 0
                                                                                      }
                                                                                      rightexp {
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                            lastSep {
                                                                              comma: 536872960
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                  binop {
                                                                    and: 0
                                                                  }
                                                                  rightexp {
                                                                    str: "$"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                        fields {
                                                          field {
                                                            expression {
                                                              prefixexp {
                                                                exp {
                                                                  binary {
                                                                    leftexp {
                                                                    }
                                                                    binop {
                                                                      and: 0
                                                                    }
                                                                    rightexp {
                                                                      binary {
                                                                        leftexp {
                                                                          number: 358.08969533209165
                                                                        }
                                                                        binop {
                                                                          exp: 0
                                                                        }
                                                                        rightexp {
                                                                          number: 118.78498777467757
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          sep {
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              binop {
                                                lessEqual: 0
                                              }
                                              rightexp {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    lastSep {
                                      comma: 536872960
                                    }
                                  }
                                }
                              }
                            }
                            lastSep {
                              comma: 2052
                            }
                          }
                        }
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
                expression {
                  binary {
                    leftexp {
                      str: "$"
                    }
                    binop {
                      concat: 0
                    }
                    rightexp {
                      binary {
                        leftexp {
                          unary {
                            unop {
                              length: 0
                            }
                            exp {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                    expression {
                                      binary {
                                        leftexp {
                                          str: "$"
                                        }
                                        binop {
                                          concat: 0
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                              str: "$"
                                            }
                                            binop {
                                              and: 0
                                            }
                                            rightexp {
                                              str: "$"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  fields {
                                    field {
                                      expression {
                                        prefixexp {
                                          exp {
                                            binary {
                                              leftexp {
                                              }
                                              binop {
                                                and: 0
                                              }
                                              rightexp {
                                                binary {
                                                  leftexp {
                                                    number: 358.08969533209165
                                                  }
                                                  binop {
                                                    exp: 0
                                                  }
                                                  rightexp {
                                                    number: 118.78498777467757
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    sep {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        binop {
                          lessEqual: 0
                        }
                        rightexp {
                        }
                      }
                    }
                  }
                }
              }
              lastSep {
                comma: 536872960
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                    semicolon: true
                  }
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                    semicolon: true
                  }
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
          function {
            body {
              block {
                chunk {
                  stat {
                    whilecycle {
                      condition {
                        tableconstructor {
                          fieldlist {
                            firstField {
                              expression {
                                tableconstructor {
                                  fieldlist {
                                    firstField {
                                      expression {
                                        binary {
                                          leftexp {
                                            str: "os.ren\033LJ\002\010\004fuzz\201\001\000\000\002\000\002\001\023\024j\t6\000\000\000)\001\005\000\001\001\000\000X\000\001\200K\000\001\0006\000\000\000\026\000\000\0007\000\000\000U\000\t\377\377\377$\2006\000\001\000)\001ame$"
                                          }
                                          binop {
                                            concat: 0
                                          }
                                          rightexp {
                                            binary {
                                              leftexp {
                                                unary {
                                                  unop {
                                                    length: 0
                                                  }
                                                  exp {
                                                    str: "os.ren\033LJ\002\010\004fuzz\201\001\000\000\002\000\002\001\023\024j\t6\000\000\000)\001\005\000\001\001\000\000X\000\001\200K\000\001\0006\000\000\000\026\000\000\0007\000\000\000U\000\t\377\377\377$\2006\000\001\000)\001ame$"
                                                  }
                                                }
                                              }
                                              binop {
                                                lessEqual: 0
                                              }
                                              rightexp {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    lastSep {
                                      comma: 536872960
                                    }
                                  }
                                }
                              }
                            }
                            lastSep {
                              comma: 2052
                            }
                          }
                        }
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              parlist {
                namelist {
                  namelist {
                    firstname {
                      name: ""
                      num: 0
                    }
                  }
                  ellipsis: ""
                }
              }
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                    list {
                      varlist {
                        var {
                        }
                        vars {
                          name {
                            name: ""
                            num: 536870912
                          }
                        }
                      }
                      explist {
                        explast {
                          tableconstructor {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
  laststat {
    explist {
    }
  }
}
