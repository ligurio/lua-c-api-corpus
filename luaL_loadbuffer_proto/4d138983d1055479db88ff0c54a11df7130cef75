chunk {
  stat {
    block {
      block {
        chunk {
          stat {
            semicolon: true
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
            }
            fields {
              field {
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    true: 0
                  }
                  value {
                    number: -1.9843740463257398
                  }
                }
              }
              sep {
                comma: 2424832
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    binary {
                      leftexp {
                        tableconstructor {
                          fieldlist {
                            firstField {
                              expression {
                              }
                            }
                            lastSep {
                              semicolon: 0
                            }
                          }
                        }
                      }
                      binop {
                        add: 11776
                      }
                      rightexp {
                        number: -4.9591064453125e-05
                      }
                    }
                  }
                  value {
                    number: nan
                  }
                }
              }
              sep {
                semicolon: 0
              }
            }
            fields {
              field {
                expression {
                  nil: 67108864
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
