chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: "mat\001\000\000\006h.cos"
          num: 0
        }
        names {
          name: "_VERSOIN"
          num: 0
        }
      }
      explist {
        expressions {
          tableconstructor {
          }
        }
        explast {
          true: 1684957542
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclename {
      name {
        name: "_ENV"
        num: 0
      }
      startexp {
        binary {
          leftexp {
            prefixexp {
            }
          }
          binop {
            mult: 1684957542
          }
          rightexp {
            unary {
              unop {
                length: 0
              }
              exp {
                str: "__________\376_"
              }
            }
          }
        }
      }
      stopexp {
        number: -1.6122275479153505e+265
      }
      stepexp {
        unary {
          unop {
            negate: 25344
          }
          exp {
            tableconstructor {
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                  vars {
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                        functioncall {
                          prefArgs {
                            prefixexp {
                              var {
                                indexname {
                                  prefixexp {
                                    exp {
                                      ellipsis: "\354"
                                    }
                                  }
                                  Name: ""
                                }
                              }
                            }
                            args {
                              explist {
                                explist {
                                  expressions {
                                    tableconstructor {
                                    }
                                  }
                                  explast {
                                    true: 8
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      exp {
                        binary {
                          leftexp {
                            function {
                              body {
                                parlist {
                                  namelist {
                                    namelist {
                                      firstname {
                                        name: ""
                                        num: 0
                                      }
                                      names {
                                        name: "t"
                                        num: 0
                                      }
                                    }
                                    ellipsis: "io.type"
                                  }
                                }
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                          binop {
                          }
                          rightexp {
                          }
                        }
                      }
                    }
                  }
                  vars {
                  }
                }
                explist {
                  expressions {
                  }
                  explast {
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    semicolon: false
  }
  laststat {
    semicolon: true
  }
}
