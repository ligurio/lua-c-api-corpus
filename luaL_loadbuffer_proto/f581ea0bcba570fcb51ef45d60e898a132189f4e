chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        binary {
                                          leftexp {
                                            prefixexp {
                                              var {
                                              }
                                            }
                                          }
                                          binop {
                                            concat: 16384
                                          }
                                          rightexp {
                                            str: "\'>=strlowereboad\'"
                                          }
                                        }
                                      }
                                      binop {
                                        add: 0
                                      }
                                      rightexp {
                                        tableconstructor {
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                    concat: 0
                                  }
                                  rightexp {
                                    tableconstructor {
                                    }
                                  }
                                }
                              }
                              binop {
                                concat: 0
                              }
                              rightexp {
                                tableconstructor {
                                }
                              }
                            }
                          }
                          binop {
                            exp: 0
                          }
                          rightexp {
                            tableconstructor {
                            }
                          }
                        }
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        str: "\'>=strlowereboad\'"
                      }
                    }
                  }
                  binop {
                    exp: 0
                  }
                  rightexp {
                    tableconstructor {
                    }
                  }
                }
              }
              binop {
                concat: 0
              }
              rightexp {
                str: "\'>=strlowereboad\'"
              }
            }
          }
          binop {
            concat: 0
          }
          rightexp {
          }
        }
      }
      stopexp {
      }
      stepexp {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    prefixexp {
                                      var {
                                      }
                                    }
                                  }
                                  binop {
                                    concat: 16384
                                  }
                                  rightexp {
                                    str: "\'>=strlowereboad\'"
                                  }
                                }
                              }
                              binop {
                                concat: 0
                              }
                              rightexp {
                                tableconstructor {
                                }
                              }
                            }
                          }
                          binop {
                            concat: 0
                          }
                          rightexp {
                            tableconstructor {
                            }
                          }
                        }
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        tableconstructor {
                        }
                      }
                    }
                  }
                  binop {
                    concat: 0
                  }
                  rightexp {
                    tableconstructor {
                    }
                  }
                }
              }
              binop {
                concat: 0
              }
              rightexp {
                tableconstructor {
                }
              }
            }
          }
          binop {
            concat: 0
          }
          rightexp {
            prefixexp {
              exp {
                str: "                                                                                "
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
      explist {
        explast {
          ellipsis: "NNNNNNNNNNNNNNNNNNNN"
        }
      }
    }
    semicolon: false
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          false: 36
        }
        expressions {
          str: "\000\000\000\000\000\000\000w&\'>\'"
        }
        explast {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                  functioncall {
                    prefArgs {
                      prefixexp {
                        functioncall {
                          prefArgs {
                            prefixexp {
                              functioncall {
                                prefArgs {
                                  prefixexp {
                                    exp {
                                      nil: 4096
                                    }
                                  }
                                  args {
                                    tableconstructor {
                                    }
                                  }
                                }
                              }
                            }
                            args {
                              tableconstructor {
                              }
                            }
                          }
                        }
                      }
                      args {
                        tableconstructor {
                        }
                      }
                    }
                  }
                }
                args {
                  tableconstructor {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
