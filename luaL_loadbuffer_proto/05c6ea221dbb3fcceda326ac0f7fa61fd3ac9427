chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        function {
          body {
            parlist {
              ellipsis: "\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223"
            }
            block {
              chunk {
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: ""
                  num: 0
                }
              }
              explist {
                expressions {
                  number: 0
                }
                explast {
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 5
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        function {
                          body {
                            parlist {
                              ellipsis: "\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223\223"
                            }
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            localnames {
                              namelist {
                                firstname {
                                  name: ""
                                  num: 0
                                }
                              }
                              explist {
                                expressions {
                                  number: 0
                                }
                                explast {
                                }
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 5
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                false: 13056
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                false: 1
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 1
                              }
                            }
                          }
                          stat {
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            list {
                              varlist {
                                var {
                                  indexexpr {
                                    prefixexp {
                                      functioncall {
                                        prefArgs {
                                          prefixexp {
                                            exp {
                                            }
                                          }
                                          args {
                                          }
                                        }
                                      }
                                    }
                                    exp {
                                    }
                                  }
                                }
                              }
                              explist {
                                explast {
                                }
                              }
                            }
                            semicolon: true
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                false: 4194304000
                              }
                            }
                            semicolon: true
                          }
                        }
                      }
                      condition {
                        nil: 5
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        true: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            forcyclename {
                              name {
                                name: ""
                                num: 0
                              }
                              startexp {
                              }
                              stopexp {
                                tableconstructor {
                                  fieldlist {
                                    firstField {
                                      namedassign {
                                        name {
                                          name: "!"
                                          num: 0
                                        }
                                        value {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              doblock {
                                block {
                                  chunk {
                                    laststat {
                                      semicolon: true
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 1
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 5
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 5
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 131072
                              }
                            }
                          }
                          stat {
                            forcyclename {
                              name {
                                name: "load"
                                num: 0
                              }
                              startexp {
                              }
                              stopexp {
                                function {
                                  body {
                                    block {
                                      chunk {
                                      }
                                    }
                                  }
                                }
                              }
                              doblock {
                                block {
                                  chunk {
                                    stat {
                                      whilecycle {
                                        condition {
                                          unary {
                                            unop {
                                            }
                                            exp {
                                              unary {
                                                unop {
                                                  length: 0
                                                }
                                                exp {
                                                  prefixexp {
                                                    var {
                                                      name {
                                                        name: "load"
                                                        num: 45312
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        doblock {
                                          block {
                                            chunk {
                                              stat {
                                                semicolon: true
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                  stat {
                                    repeatcycle {
                                      block {
                                        chunk {
                                        }
                                      }
                                      condition {
                                        nil: 0
                                      }
                                    }
                                  }
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            forcyclename {
                              name {
                                name: "load"
                                num: 0
                              }
                              startexp {
                              }
                              stopexp {
                                function {
                                  body {
                                    block {
                                      chunk {
                                      }
                                    }
                                  }
                                }
                              }
                              stepexp {
                                nil: 0
                              }
                              doblock {
                                block {
                                  chunk {
                                    stat {
                                      whilecycle {
                                        condition {
                                          unary {
                                            unop {
                                            }
                                            exp {
                                              unary {
                                                unop {
                                                  length: 0
                                                }
                                                exp {
                                                  prefixexp {
                                                    var {
                                                      name {
                                                        name: "load"
                                                        num: 45312
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        doblock {
                                          block {
                                            chunk {
                                              stat {
                                                semicolon: true
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          stat {
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                  stat {
                                    semicolon: false
                                  }
                                }
                              }
                              condition {
                                tableconstructor {
                                  fieldlist {
                                    firstField {
                                      namedassign {
                                        name {
                                          name: ""
                                          num: 0
                                        }
                                        value {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          stat {
                            ifstat {
                              condition {
                                binary {
                                  leftexp {
                                  }
                                  binop {
                                    sub: 652
                                  }
                                  rightexp {
                                  }
                                }
                              }
                              first {
                                chunk {
                                }
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                            semicolon: true
                          }
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                }
                              }
                              condition {
                                nil: 0
                              }
                            }
                          }
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          laststat {
                            break: 0
                          }
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 2097152
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                    semicolon: true
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 1
              }
            }
          }
          stat {
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                  indexexpr {
                    prefixexp {
                      functioncall {
                        namedArgs {
                          prefixexp {
                            exp {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                  }
                                  fields {
                                    field {
                                    }
                                    sep {
                                      semicolon: 4194304000
                                    }
                                  }
                                }
                              }
                            }
                          }
                          name {
                            name: ""
                            num: 0
                          }
                          args {
                            str: ")\001\000\000\310"
                          }
                        }
                      }
                    }
                    exp {
                    }
                  }
                }
              }
              explist {
                explast {
                }
              }
            }
            semicolon: true
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        nil: 5
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        true: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            forcyclename {
              name {
                name: ""
                num: 0
              }
              startexp {
              }
              stopexp {
                tableconstructor {
                  fieldlist {
                    firstField {
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    laststat {
                      semicolon: true
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 1
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 5
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    forcyclename {
                      name {
                        name: ""
                        num: 0
                      }
                      startexp {
                      }
                      stopexp {
                        tableconstructor {
                          fieldlist {
                            firstField {
                              namedassign {
                                name {
                                  name: "!"
                                  num: 0
                                }
                                value {
                                }
                              }
                            }
                          }
                        }
                      }
                      doblock {
                        block {
                          chunk {
                            laststat {
                              semicolon: true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              condition {
                nil: 5
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 131072
              }
            }
          }
          stat {
            forcyclename {
              name {
                name: "load"
                num: 0
              }
              startexp {
              }
              stopexp {
                function {
                  body {
                    block {
                      chunk {
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      whilecycle {
                        condition {
                          unary {
                            unop {
                            }
                            exp {
                              unary {
                                unop {
                                  length: 0
                                }
                                exp {
                                  prefixexp {
                                    var {
                                      name {
                                        name: "load"
                                        num: 45312
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                semicolon: true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            forcyclename {
              name {
                name: "load"
                num: 0
              }
              startexp {
              }
              stopexp {
                function {
                  body {
                    block {
                      chunk {
                      }
                    }
                  }
                }
              }
              stepexp {
                nil: 0
              }
              doblock {
                block {
                  chunk {
                    stat {
                      whilecycle {
                        condition {
                          unary {
                            unop {
                            }
                            exp {
                              unary {
                                unop {
                                  length: 0
                                }
                                exp {
                                  prefixexp {
                                    var {
                                      name {
                                        name: "load"
                                        num: 45312
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                semicolon: true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        nil: 0
                      }
                    }
                  }
                }
              }
              condition {
                nil: 5
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    semicolon: false
                  }
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            ifstat {
              condition {
                binary {
                  leftexp {
                  }
                  binop {
                    sub: 652
                  }
                  rightexp {
                  }
                }
              }
              first {
                chunk {
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
            semicolon: true
          }
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                nil: 0
              }
            }
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
            break: 0
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 2097152
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
  }
}
