chunk {
  stat {
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        parlist {
        }
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 1900544
                }
                startexp {
                  number: -1.5000000000000016
                }
                stopexp {
                  binary {
                    leftexp {
                    }
                    binop {
                      mult: 4
                    }
                    rightexp {
                    }
                  }
                }
                stepexp {
                  str: "?\000\000\000\000\000\000\000"
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        call {
                          prefArgs {
                            prefixexp {
                              var {
                                name {
                                  name: "load"
                                  num: 4294967292
                                }
                              }
                            }
                            args {
                              explist {
                                explist {
                                  expressions {
                                    str: "%"
                                  }
                                  expressions {
                                  }
                                  expressions {
                                    number: 4.14452302922905e-316
                                  }
                                  explast {
                                    prefixexp {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            laststat {
              explist {
                explist {
                  expressions {
                    unary {
                      unop {
                      }
                      exp {
                        prefixexp {
                          exp {
                            nil: 1660944384
                          }
                        }
                      }
                    }
                  }
                  expressions {
                    binary {
                      leftexp {
                        false: 8192
                      }
                      binop {
                        mod: 1667719007
                      }
                      rightexp {
                        binary {
                          leftexp {
                            prefixexp {
                            }
                          }
                          binop {
                            sub: 1684957530
                          }
                          rightexp {
                            prefixexp {
                              exp {
                                binary {
                                  leftexp {
                                  }
                                  binop {
                                  }
                                  rightexp {
                                    prefixexp {
                                      exp {
                                        binary {
                                          leftexp {
                                            number: 1.6869608407943928e+69
                                          }
                                          binop {
                                            or: 0
                                          }
                                          rightexp {
                                            prefixexp {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  explast {
                  }
                }
              }
              semicolon: false
            }
          }
        }
      }
    }
  }
}
