chunk {
  stat {
    localfunc {
      name {
        name: "\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034"
        num: 538976288
      }
      funcbody {
        parlist {
          namelist {
            namelist {
              firstname {
                name: "\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034"
                num: 0
              }
            }
          }
        }
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      laststat {
                        explist {
                          explist {
                            expressions {
                              nil: 8388608
                            }
                            explast {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                ellipsis: "."
              }
              binop {
                sub: 0
              }
              rightexp {
                unary {
                  unop {
                    negate: 11264
                  }
                  exp {
                  }
                }
              }
            }
          }
          binop {
          }
          rightexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            number: -4.9591064453125e-05
                          }
                          binop {
                          }
                          rightexp {
                            number: -4.9591064453125e-05
                          }
                        }
                      }
                      binop {
                        or: 872415232
                      }
                      rightexp {
                        binary {
                          leftexp {
                            number: -4.9591064453125e-05
                          }
                          binop {
                            div: 2097152
                          }
                          rightexp {
                            number: 9.0836664961139866e+223
                          }
                        }
                      }
                    }
                  }
                  binop {
                    exp: 654311424
                  }
                  rightexp {
                    number: 2.12170437918978e-314
                  }
                }
              }
              binop {
                mult: 3003152485
              }
              rightexp {
                str: "\'-666&333.32<\'<8<8"
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              break: 8
              semicolon: true
            }
          }
        }
      }
    }
  }
}
