chunk {
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 0
      }
    }
    semicolon: false
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                  number: 415.93749916926026
                }
                value {
                }
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    ellipsis: ""
                  }
                  value {
                    ellipsis: "\234"
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    number: 415.8767100609839
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  prefixexp {
                    var {
                      indexexpr {
                        prefixexp {
                          functioncall {
                            prefArgs {
                              prefixexp {
                              }
                              args {
                                str: ""
                              }
                            }
                          }
                        }
                        exp {
                        }
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
