chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
          }
          binop {
            less: 0
          }
          rightexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    number: 4.74303020007597e-322
                  }
                  binop {
                  }
                  rightexp {
                    str: "\'<<8<\'d<9"
                  }
                }
              }
              binop {
                mod: 4
              }
              rightexp {
                str: "\'<<8<\'<9"
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
          }
          binop {
            less: 0
          }
          rightexp {
            function {
              body {
                block {
                  chunk {
                    stat {
                      whilecycle {
                        condition {
                          unary {
                            unop {
                              negate: 0
                            }
                            exp {
                            }
                          }
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                semicolon: true
                              }
                            }
                          }
                        }
                      }
                    }
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                          }
                        }
                        condition {
                        }
                      }
                    }
                    stat {
                    }
                    stat {
                    }
                    stat {
                      semicolon: false
                    }
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                          }
                        }
                        condition {
                        }
                      }
                    }
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                            stat {
                              whilecycle {
                                condition {
                                }
                                doblock {
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        condition {
                        }
                      }
                    }
                    stat {
                    }
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                            stat {
                              whilecycle {
                                condition {
                                }
                                doblock {
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                  }
                                }
                                condition {
                                }
                              }
                            }
                            stat {
                            }
                            stat {
                            }
                            stat {
                              semicolon: false
                            }
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                  }
                                }
                                condition {
                                }
                              }
                            }
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                  }
                                }
                                condition {
                                }
                              }
                            }
                            stat {
                            }
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                  }
                                }
                                condition {
                                }
                              }
                            }
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                  }
                                }
                                condition {
                                }
                              }
                            }
                            stat {
                              ifstat {
                                condition {
                                }
                                first {
                                  chunk {
                                  }
                                }
                                clauses {
                                  condition {
                                  }
                                  block {
                                    chunk {
                                      laststat {
                                        explist {
                                          explist {
                                            expressions {
                                              false: 30056
                                            }
                                            explast {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                  }
                                }
                                condition {
                                }
                              }
                            }
                            stat {
                            }
                            stat {
                              semicolon: true
                            }
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                  }
                                }
                                condition {
                                  nil: 12320768
                                }
                              }
                            }
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                  }
                                }
                                condition {
                                  number: 0
                                }
                              }
                            }
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                  }
                                }
                                condition {
                                }
                              }
                            }
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                    stat {
                                    }
                                  }
                                }
                                condition {
                                }
                              }
                            }
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                  }
                                }
                                condition {
                                }
                              }
                            }
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                  }
                                }
                                condition {
                                  function {
                                    body {
                                      block {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                  }
                                }
                                condition {
                                }
                              }
                            }
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                  }
                                }
                                condition {
                                }
                              }
                            }
                            stat {
                              repeatcycle {
                                block {
                                  chunk {
                                  }
                                }
                                condition {
                                }
                              }
                            }
                          }
                        }
                        condition {
                          ellipsis: "\000\000\000\000"
                        }
                      }
                    }
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                            stat {
                              whilecycle {
                                condition {
                                }
                                doblock {
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        condition {
                        }
                      }
                    }
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                            stat {
                              semicolon: true
                            }
                          }
                        }
                        condition {
                        }
                      }
                    }
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                          }
                        }
                        condition {
                        }
                      }
                    }
                    stat {
                    }
                    stat {
                      semicolon: false
                    }
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                          }
                        }
                        condition {
                        }
                      }
                    }
                    stat {
                      localfunc {
                        name {
                          name: ""
                          num: 0
                        }
                        funcbody {
                          parlist {
                            ellipsis: "\\000\\007"
                          }
                          block {
                            chunk {
                              stat {
                                whilecycle {
                                  condition {
                                  }
                                  doblock {
                                    block {
                                      chunk {
                                      }
                                    }
                                  }
                                }
                              }
                              stat {
                                forcyclelist {
                                  names {
                                    firstname {
                                      name: ""
                                      num: 0
                                    }
                                  }
                                  expressions {
                                    expressions {
                                      false: 4
                                    }
                                    explast {
                                    }
                                  }
                                  doblock {
                                    block {
                                      chunk {
                                      }
                                    }
                                  }
                                }
                                semicolon: true
                              }
                              stat {
                                list {
                                  varlist {
                                    var {
                                      indexname {
                                        prefixexp {
                                          var {
                                            name {
                                              name: "counter_+"
                                              num: 6513008
                                            }
                                          }
                                        }
                                        Name: "h"
                                      }
                                    }
                                    vars {
                                      indexexpr {
                                        prefixexp {
                                          exp {
                                            ellipsis: "math.pi"
                                          }
                                        }
                                        exp {
                                          true: 4
                                        }
                                      }
                                    }
                                  }
                                  explist {
                                    expressions {
                                      function {
                                        body {
                                          parlist {
                                            ellipsis: "?"
                                          }
                                          block {
                                            chunk {
                                            }
                                          }
                                        }
                                      }
                                    }
                                    expressions {
                                      prefixexp {
                                        functioncall {
                                          prefArgs {
                                            prefixexp {
                                              exp {
                                                tableconstructor {
                                                  fieldlist {
                                                    firstField {
                                                      expression {
                                                        str: "\243"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            args {
                                              str: "\'"
                                            }
                                          }
                                        }
                                      }
                                    }
                                    expressions {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                            exprassign {
                                              key {
                                                str: "string.reverse"
                                              }
                                              value {
                                                nil: 2
                                              }
                                            }
                                          }
                                          fields {
                                            field {
                                              exprassign {
                                                key {
                                                }
                                                value {
                                                  unary {
                                                    unop {
                                                      length: 0
                                                    }
                                                    exp {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            sep {
                                            }
                                          }
                                          lastSep {
                                            semicolon: 0
                                          }
                                        }
                                      }
                                    }
                                    expressions {
                                      tableconstructor {
                                      }
                                    }
                                    expressions {
                                    }
                                    expressions {
                                      ellipsis: "\343"
                                    }
                                    expressions {
                                    }
                                    expressions {
                                      str: "stringpairs"
                                    }
                                    expressions {
                                      tableconstructor {
                                      }
                                    }
                                    explast {
                                      prefixexp {
                                        functioncall {
                                          prefArgs {
                                            prefixexp {
                                              functioncall {
                                                prefArgs {
                                                  prefixexp {
                                                  }
                                                  args {
                                                    str: "math.tointeger"
                                                  }
                                                }
                                              }
                                            }
                                            args {
                                              str: "\'"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                semicolon: true
                              }
                              stat {
                              }
                            }
                          }
                        }
                      }
                    }
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                          }
                        }
                        condition {
                        }
                      }
                    }
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                          }
                        }
                        condition {
                        }
                      }
                    }
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                          }
                        }
                        condition {
                        }
                      }
                    }
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                            laststat {
                              explist {
                                explist {
                                  explast {
                                    nil: 1024
                                  }
                                }
                              }
                            }
                          }
                        }
                        condition {
                          function {
                            body {
                              block {
                                chunk {
                                  stat {
                                    whilecycle {
                                      condition {
                                      }
                                      doblock {
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                  }
                                  laststat {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
      condition {
      }
    }
  }
}
