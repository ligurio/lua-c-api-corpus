chunk {
  stat {
    block {
      block {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
        }
      }
      explist {
        expressions {
          binary {
            leftexp {
              binary {
                leftexp {
                  str: "\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353\353"
                }
                binop {
                }
                rightexp {
                }
              }
            }
            binop {
            }
            rightexp {
              nil: 6841088
            }
          }
        }
        expressions {
          function {
            body {
              parlist {
              }
              block {
                chunk {
                  stat {
                    localnames {
                      namelist {
                        firstname {
                          name: ""
                          num: 0
                        }
                        names {
                          name: ""
                          num: 0
                        }
                      }
                      explist {
                        expressions {
                          number: 0
                        }
                        expressions {
                          nil: 0
                        }
                        expressions {
                        }
                        explast {
                          nil: 0
                        }
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                    list {
                      varlist {
                        var {
                        }
                        vars {
                        }
                      }
                      explist {
                        expressions {
                        }
                        expressions {
                          false: 4
                        }
                        explast {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                }
                                binop {
                                }
                                rightexp {
                                }
                              }
                            }
                            binop {
                            }
                            rightexp {
                              nil: 6841088
                            }
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                }
              }
            }
          }
        }
        explast {
          binary {
            leftexp {
              binary {
                leftexp {
                }
                binop {
                }
                rightexp {
                }
              }
            }
            binop {
            }
            rightexp {
              binary {
                leftexp {
                }
                binop {
                }
                rightexp {
                  nil: 838860800
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
