chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  explast {
                    binary {
                      leftexp {
                        nil: 0
                      }
                      binop {
                        add: 2
                      }
                      rightexp {
                        binary {
                          leftexp {
                            prefixexp {
                            }
                          }
                          binop {
                            mult: 2
                          }
                          rightexp {
                            unary {
                              unop {
                                negate: 538976288
                              }
                              exp {
                                prefixexp {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              forcyclename {
                name {
                  name: "\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244"
                  num: 2097152
                }
                startexp {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                        }
                      }
                    }
                  }
                }
                stopexp {
                  binary {
                    leftexp {
                      prefixexp {
                        exp {
                          nil: 2097152
                        }
                      }
                    }
                    binop {
                      or: 1024
                    }
                    rightexp {
                      prefixexp {
                        exp {
                        }
                      }
                    }
                  }
                }
                stepexp {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                            }
                          }
                          explist {
                            explast {
                              binary {
                                leftexp {
                                }
                                binop {
                                  sub: 6
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                        functioncall {
                                          prefArgs {
                                            prefixexp {
                                            }
                                            args {
                                            }
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                      mult: 0
                                    }
                                    rightexp {
                                      prefixexp {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        forcyclename {
                          name {
                            name: "\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244"
                            num: 2097152
                          }
                          startexp {
                          }
                          stopexp {
                            binary {
                              leftexp {
                                prefixexp {
                                  exp {
                                  }
                                }
                              }
                              binop {
                                concat: 0
                              }
                              rightexp {
                                prefixexp {
                                  exp {
                                  }
                                }
                              }
                            }
                          }
                          stepexp {
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  list {
                                    varlist {
                                      var {
                                      }
                                    }
                                    explist {
                                      explast {
                                        binary {
                                          leftexp {
                                          }
                                          binop {
                                            add: 2
                                          }
                                          rightexp {
                                            binary {
                                              leftexp {
                                                prefixexp {
                                                  functioncall {
                                                    prefArgs {
                                                      prefixexp {
                                                      }
                                                      args {
                                                        tableconstructor {
                                                          fieldlist {
                                                            firstField {
                                                            }
                                                            lastSep {
                                                              semicolon: 1885696512
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              binop {
                                                mult: 0
                                              }
                                              rightexp {
                                                prefixexp {
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                stat {
                                  forcyclename {
                                    name {
                                      name: "\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244"
                                      num: 2097152
                                    }
                                    startexp {
                                      prefixexp {
                                        exp {
                                          nil: 0
                                        }
                                      }
                                    }
                                    stopexp {
                                      binary {
                                        leftexp {
                                          prefixexp {
                                          }
                                        }
                                        binop {
                                          concat: 0
                                        }
                                        rightexp {
                                          prefixexp {
                                            exp {
                                            }
                                          }
                                        }
                                      }
                                    }
                                    stepexp {
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                          stat {
                                            list {
                                              varlist {
                                                var {
                                                }
                                              }
                                              explist {
                                                explast {
                                                  binary {
                                                    leftexp {
                                                    }
                                                    binop {
                                                      add: 2
                                                    }
                                                    rightexp {
                                                      binary {
                                                        leftexp {
                                                          prefixexp {
                                                          }
                                                        }
                                                        binop {
                                                          mult: 536870912
                                                        }
                                                        rightexp {
                                                          str: "____________"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            semicolon: true
                                          }
                                          stat {
                                            forcyclename {
                                              name {
                                                name: "\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244\244"
                                                num: 2
                                              }
                                              startexp {
                                                prefixexp {
                                                  exp {
                                                  }
                                                }
                                              }
                                              stopexp {
                                                binary {
                                                  leftexp {
                                                    binary {
                                                      leftexp {
                                                        prefixexp {
                                                          functioncall {
                                                            namedArgs {
                                                              prefixexp {
                                                                functioncall {
                                                                  namedArgs {
                                                                    prefixexp {
                                                                      functioncall {
                                                                        namedArgs {
                                                                          prefixexp {
                                                                          }
                                                                          name {
                                                                            name: ""
                                                                            num: 0
                                                                          }
                                                                          args {
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                    name {
                                                                      name: ""
                                                                      num: 0
                                                                    }
                                                                    args {
                                                                      tableconstructor {
                                                                        fieldlist {
                                                                          firstField {
                                                                          }
                                                                          fields {
                                                                            field {
                                                                              exprassign {
                                                                                key {
                                                                                  ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                                                                }
                                                                                value {
                                                                                }
                                                                              }
                                                                            }
                                                                            sep {
                                                                            }
                                                                          }
                                                                          fields {
                                                                            field {
                                                                              expression {
                                                                                tableconstructor {
                                                                                  fieldlist {
                                                                                    firstField {
                                                                                    }
                                                                                    lastSep {
                                                                                      semicolon: 0
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                            sep {
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              name {
                                                                name: ""
                                                                num: 0
                                                              }
                                                              args {
                                                                tableconstructor {
                                                                  fieldlist {
                                                                    firstField {
                                                                    }
                                                                    fields {
                                                                      field {
                                                                        exprassign {
                                                                          key {
                                                                            ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                                                          }
                                                                          value {
                                                                          }
                                                                        }
                                                                      }
                                                                      sep {
                                                                      }
                                                                    }
                                                                    fields {
                                                                      field {
                                                                        expression {
                                                                          tableconstructor {
                                                                            fieldlist {
                                                                              firstField {
                                                                              }
                                                                              lastSep {
                                                                                semicolon: 0
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                      sep {
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      binop {
                                                        concat: 23
                                                      }
                                                      rightexp {
                                                        prefixexp {
                                                        }
                                                      }
                                                    }
                                                  }
                                                  binop {
                                                    concat: 23
                                                  }
                                                  rightexp {
                                                    prefixexp {
                                                    }
                                                  }
                                                }
                                              }
                                              stepexp {
                                                true: 1
                                              }
                                              doblock {
                                                block {
                                                  chunk {
                                                    laststat {
                                                      semicolon: true
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            semicolon: true
                                          }
                                        }
                                      }
                                    }
                                  }
                                  semicolon: true
                                }
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: false
  }
  laststat {
    break: 6291456
    semicolon: true
  }
}
