chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            prefixexp {
            }
          }
          binop {
          }
          rightexp {
            prefixexp {
              functioncall {
                prefArgs {
                  prefixexp {
                    var {
                      name {
                        name: "load"
                        num: 0
                      }
                    }
                  }
                  args {
                    explist {
                      explist {
                        explast {
                          function {
                            body {
                              parlist {
                                namelist {
                                  namelist {
                                    firstname {
                                      name: "lo\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000ad"
                                      num: 0
                                    }
                                    names {
                                      name: "lo\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000ad"
                                      num: 0
                                    }
                                  }
                                  ellipsis: "load"
                                }
                              }
                              block {
                                chunk {
                                  stat {
                                    semicolon: true
                                  }
                                  stat {
                                    call {
                                      prefArgs {
                                        prefixexp {
                                        }
                                        args {
                                          str: ":"
                                        }
                                      }
                                    }
                                  }
                                  laststat {
                                    explist {
                                      explist {
                                        expressions {
                                          true: 0
                                        }
                                        expressions {
                                          binary {
                                            leftexp {
                                              true: 100663297
                                            }
                                            binop {
                                              sub: 768
                                            }
                                            rightexp {
                                              binary {
                                                leftexp {
                                                  true: 100663297
                                                }
                                                binop {
                                                  div: 0
                                                }
                                                rightexp {
                                                  binary {
                                                    leftexp {
                                                      number: 8.65266319610061e-315
                                                    }
                                                    binop {
                                                      greater: 2097152
                                                    }
                                                    rightexp {
                                                      str: "\'>>string9~1~i\'9~"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        explast {
                                          str: "*"
                                        }
                                      }
                                    }
                                    semicolon: true
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  function {
                    body {
                      block {
                        chunk {
                          stat {
                            whilecycle {
                              condition {
                              }
                              doblock {
                                block {
                                  chunk {
                                    laststat {
                                      semicolon: true
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
            }
            lastSep {
              semicolon: 0
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  laststat {
    semicolon: true
  }
}
