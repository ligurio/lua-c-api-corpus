chunk {
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                        }
                        binop {
                          less: 32
                        }
                        rightexp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                }
                                binop {
                                  less: 32
                                }
                                rightexp {
                                }
                              }
                            }
                            binop {
                              less: 32
                            }
                            rightexp {
                            }
                          }
                        }
                      }
                    }
                    binop {
                      less: 32
                    }
                    rightexp {
                    }
                  }
                }
                value {
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              str: ""
            }
          }
        }
      }
      explist {
        explast {
          binary {
            leftexp {
            }
            binop {
              less: 32
            }
            rightexp {
            }
          }
        }
      }
    }
  }
}
