chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                  unary {
                    unop {
                      length: 3942645760
                    }
                    exp {
                    }
                  }
                }
                stopexp {
                  unary {
                    unop {
                      length: 3942645760
                    }
                    exp {
                      unary {
                        unop {
                          negate: 1024
                        }
                        exp {
                          number: 108.75
                        }
                      }
                    }
                  }
                }
                stepexp {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        whilecycle {
                          condition {
                            str: "debe__tostringtatable"
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                      stat {
                        localnames {
                          namelist {
                            firstname {
                              name: ""
                              num: 0
                            }
                          }
                          explist {
                            expressions {
                              str: "\001\000\000\000\000\000\000\000"
                            }
                            explast {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
