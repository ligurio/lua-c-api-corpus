chunk {
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            func {
              name {
                firstname {
                  name: ""
                  num: 0
                }
                lastname {
                  name: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                  num: 0
                }
              }
              body {
                parlist {
                  namelist {
                    namelist {
                      firstname {
                        name: ""
                        num: 0
                      }
                      names {
                        name: ""
                        num: 8192
                      }
                    }
                  }
                }
                block {
                  chunk {
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                }
              }
              last {
                chunk {
                  stat {
                    semicolon: true
                  }
                  stat {
                    semicolon: true
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
          }
          stat {
            call {
              namedArgs {
                prefixexp {
                }
                name {
                  name: ""
                  num: 0
                }
                args {
                }
              }
            }
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                }
                args {
                  explist {
                    explist {
                      explast {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                              }
                              binop {
                                greater: 538976256
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        number: 358.08969533209165
                                      }
                                      binop {
                                        div: 8192
                                      }
                                      rightexp {
                                        number: -4.9591064453125e-05
                                      }
                                    }
                                  }
                                  binop {
                                    add: 538976256
                                  }
                                  rightexp {
                                    false: 118
                                  }
                                }
                              }
                            }
                          }
                          binop {
                            greater: 538977280
                          }
                          rightexp {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    semicolon: true
                  }
                }
              }
              condition {
              }
            }
            semicolon: true
          }
          laststat {
            semicolon: true
          }
        }
      }
      condition {
      }
    }
    semicolon: true
  }
}
