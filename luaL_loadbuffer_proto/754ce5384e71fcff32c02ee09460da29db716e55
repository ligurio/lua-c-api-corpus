chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: -0
      }
      stopexp {
        number: -0
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        prefixexp {
          exp {
            true: 0
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: -2
      }
      stopexp {
        number: 0
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                  number: -0
                }
                stopexp {
                  number: -0
                }
                stepexp {
                  prefixexp {
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        whilecycle {
                          condition {
                            true: 1
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  forcyclelist {
                                    names {
                                      firstname {
                                        name: ""
                                        num: 0
                                      }
                                    }
                                    expressions {
                                      explast {
                                        function {
                                          body {
                                            block {
                                              chunk {
                                                laststat {
                                                  explist {
                                                    explist {
                                                      explast {
                                                        prefixexp {
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                          stat {
                                            forcyclelist {
                                              names {
                                                firstname {
                                                  name: ""
                                                  num: 0
                                                }
                                              }
                                              expressions {
                                                explast {
                                                  function {
                                                    body {
                                                      block {
                                                        chunk {
                                                          laststat {
                                                            explist {
                                                              explist {
                                                                expressions {
                                                                  str: "collectgarbage"
                                                                }
                                                                explast {
                                                                  prefixexp {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                            semicolon: false
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              doblock {
                                                block {
                                                  chunk {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      laststat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            binary {
                              leftexp {
                                unary {
                                  unop {
                                    length: 4
                                  }
                                  exp {
                                    number: 6.7359804783279327e+150
                                  }
                                }
                              }
                              binop {
                                equal: 4
                              }
                              rightexp {
                                number: 6.736042913298939e+150
                              }
                            }
                          }
                          value {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                  exprassign {
                                    key {
                                      binary {
                                        leftexp {
                                          unary {
                                            unop {
                                              length: 4
                                            }
                                            exp {
                                              tableconstructor {
                                              }
                                            }
                                          }
                                        }
                                        binop {
                                          exp: 0
                                        }
                                        rightexp {
                                          number: 6.736042913298939e+150
                                        }
                                      }
                                    }
                                    value {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                            exprassign {
                                              key {
                                                function {
                                                  body {
                                                    block {
                                                      chunk {
                                                        laststat {
                                                          explist {
                                                            explist {
                                                              expressions {
                                                                str: "collectgarbage"
                                                              }
                                                              explast {
                                                                prefixexp {
                                                                }
                                                              }
                                                            }
                                                          }
                                                          semicolon: false
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              value {
                                                tableconstructor {
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                lastSep {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
