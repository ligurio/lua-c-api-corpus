chunk {
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                  number: 1
                }
                value {
                }
              }
            }
            fields {
              field {
                expression {
                  prefixexp {
                    functioncall {
                    }
                  }
                }
              }
              sep {
                semicolon: 131072
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        unary {
          unop {
            not: 0
          }
          exp {
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                  number: 1
                }
                value {
                }
              }
            }
            fields {
              field {
                expression {
                  prefixexp {
                    functioncall {
                    }
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            number: 1
                          }
                          value {
                          }
                        }
                      }
                      fields {
                        field {
                          expression {
                            prefixexp {
                              functioncall {
                              }
                            }
                          }
                        }
                        sep {
                          semicolon: 131072
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                  unary {
                    unop {
                      not: 0
                    }
                    exp {
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                            number: 1
                          }
                          value {
                          }
                        }
                      }
                      fields {
                        field {
                          expression {
                            prefixexp {
                              functioncall {
                              }
                            }
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      laststat {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
