chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
        binary {
          leftexp {
            number: 499.0625
          }
          binop {
            mult: 2
          }
          rightexp {
            binary {
              leftexp {
                ellipsis: "ssssssssssssssssssssssssssssssssssssss"
              }
              binop {
                mult: 2
              }
              rightexp {
                binary {
                  leftexp {
                    number: 499.0625
                  }
                  binop {
                    mult: 0
                  }
                  rightexp {
                    number: -576
                  }
                }
              }
            }
          }
        }
      }
      stepexp {
        unary {
          unop {
            negate: 0
          }
          exp {
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: "\331"
          num: 0
        }
      }
      body {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  expressions {
                    nil: 0
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                    binary {
                      leftexp {
                        unary {
                          unop {
                            negate: 0
                          }
                          exp {
                          }
                        }
                      }
                      binop {
                        mod: 1902468959
                      }
                      rightexp {
                        prefixexp {
                          exp {
                            binary {
                              leftexp {
                                str: "os"
                              }
                              binop {
                                or: 0
                              }
                              rightexp {
                                prefixexp {
                                  functioncall {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
          indexname {
            prefixexp {
            }
            Name: "\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253"
          }
        }
      }
      explist {
        explast {
        }
      }
    }
    semicolon: false
  }
  stat {
    semicolon: false
  }
}
