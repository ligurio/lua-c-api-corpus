chunk {
  stat {
    localfunc {
      name {
        name: "."
        num: 0
      }
      funcbody {
        block {
          chunk {
            stat {
            }
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: "."
        num: 0
      }
      funcbody {
        block {
          chunk {
            laststat {
              explist {
                explist {
                  expressions {
                    unary {
                      unop {
                        length: 4
                      }
                      exp {
                        tableconstructor {
                          fieldlist {
                            firstField {
                            }
                          }
                        }
                      }
                    }
                  }
                  expressions {
                    str: ""
                  }
                  expressions {
                    nil: 393216
                  }
                  expressions {
                  }
                  expressions {
                    false: 1073741824
                  }
                  explast {
                    prefixexp {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                ellipsis: ""
              }
            }
            semicolon: true
          }
          stat {
            whilecycle {
              condition {
                tableconstructor {
                  fieldlist {
                    firstField {
                      expression {
                        tableconstructor {
                          fieldlist {
                            firstField {
                              expression {
                                ellipsis: ""
                              }
                            }
                            fields {
                              field {
                                expression {
                                  str: "bbbbbbbb"
                                }
                              }
                              sep {
                                comma: 2304
                              }
                            }
                          }
                        }
                      }
                    }
                    fields {
                      field {
                        expression {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                }
                                args {
                                }
                              }
                            }
                          }
                        }
                      }
                      sep {
                        comma: 2304
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        prefixexp {
          exp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    number: -3.7857669957336791e-270
                  }
                  binop {
                    mod: 4294967294
                  }
                  rightexp {
                    number: -3.7857669957336791e-270
                  }
                }
              }
              binop {
                concat: 0
              }
              rightexp {
                prefixexp {
                  exp {
                    str: "bbbbbbbb"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
}
