chunk {
  stat {
    block {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                  }
                }
              }
              condition {
                unary {
                  unop {
                    negate: 0
                  }
                  exp {
                    prefixexp {
                      exp {
                        binary {
                          leftexp {
                            number: -8.3711609936427134e+298
                          }
                          binop {
                            concat: 0
                          }
                          rightexp {
                            unary {
                              unop {
                                negate: 0
                              }
                              exp {
                                prefixexp {
                                  exp {
                                    binary {
                                      leftexp {
                                        number: -8.3711609936427134e+298
                                      }
                                      binop {
                                        concat: 0
                                      }
                                      rightexp {
                                        unary {
                                          unop {
                                            negate: 0
                                          }
                                          exp {
                                            prefixexp {
                                              exp {
                                                binary {
                                                  leftexp {
                                                    number: -8.3711609936427134e+298
                                                  }
                                                  binop {
                                                    concat: 0
                                                  }
                                                  rightexp {
                                                    unary {
                                                      unop {
                                                        negate: 0
                                                      }
                                                      exp {
                                                        prefixexp {
                                                          exp {
                                                            number: -8.3711609936427134e+298
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: "narrow"
          num: 65
        }
      }
      explist {
        expressions {
          number: 5.43867462942044e-320
        }
        explast {
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: "maxtrace"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
          tableconstructor {
            fieldlist {
              firstField {
                exprassign {
                  key {
                    binary {
                      leftexp {
                      }
                      binop {
                      }
                      rightexp {
                      }
                    }
                  }
                  value {
                  }
                }
              }
              fields {
                field {
                }
                sep {
                  semicolon: 268435456
                }
              }
              fields {
                field {
                  exprassign {
                    key {
                    }
                    value {
                      prefixexp {
                      }
                    }
                  }
                }
                sep {
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: ""
                  num: 0
                }
                funcbody {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: ""
                  num: 0
                }
                funcbody {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
}
