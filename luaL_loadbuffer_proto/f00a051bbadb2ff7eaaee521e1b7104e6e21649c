chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 1
        }
      }
      expressions {
        expressions {
          binary {
            leftexp {
            }
            binop {
              less: 0
            }
            rightexp {
              number: 0
            }
          }
        }
        expressions {
          binary {
            leftexp {
            }
            binop {
              less: 0
            }
            rightexp {
              number: 0
            }
          }
        }
        expressions {
          binary {
            leftexp {
            }
            binop {
              less: 0
            }
            rightexp {
              false: 2426880
            }
          }
        }
        explast {
          binary {
            leftexp {
            }
            binop {
              less: 0
            }
            rightexp {
              number: 0
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  laststat {
    explist {
      explist {
        expressions {
          binary {
            leftexp {
            }
            binop {
              less: 0
            }
            rightexp {
              number: 0
            }
          }
        }
        expressions {
          binary {
            leftexp {
            }
            binop {
              less: 0
            }
            rightexp {
              number: 0
            }
          }
        }
        expressions {
          binary {
            leftexp {
            }
            binop {
              less: 2424832
            }
            rightexp {
            }
          }
        }
        explast {
          binary {
            leftexp {
            }
            binop {
              less: 0
            }
            rightexp {
              number: 0
            }
          }
        }
      }
    }
  }
}
