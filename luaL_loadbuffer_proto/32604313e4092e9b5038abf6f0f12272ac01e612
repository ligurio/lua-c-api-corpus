chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
            str: "\'-6>6&33332<\'<8<8"
          }
          binop {
          }
          rightexp {
            function {
              body {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclename {
      name {
        name: "_ENV"
        num: 0
      }
      startexp {
        true: 0
      }
      stopexp {
        binary {
          leftexp {
            number: 6.181610107423694
          }
          binop {
            exp: 0
          }
          rightexp {
            number: 6.181610107423694
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
            stat {
              localfunc {
                name {
                  name: ""
                  num: 821624832
                }
                funcbody {
                  block {
                    chunk {
                      laststat {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
  laststat {
    explist {
      explist {
        expressions {
          nil: 0
        }
        explast {
        }
      }
    }
  }
}
