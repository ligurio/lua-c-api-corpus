chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 22784
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            stat {
              func {
                name {
                  firstname {
                    name: "tonumber"
                    num: 2048
                  }
                }
                body {
                  parlist {
                    namelist {
                      namelist {
                        firstname {
                          name: ""
                          num: 0
                        }
                      }
                    }
                  }
                  block {
                    chunk {
                      stat {
                        forcyclelist {
                          names {
                            firstname {
                              name: ""
                              num: 0
                            }
                          }
                          expressions {
                            explast {
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                      stat {
                        list {
                          varlist {
                            var {
                              indexname {
                                prefixexp {
                                }
                                Name: ""
                              }
                            }
                            vars {
                              indexexpr {
                                prefixexp {
                                  functioncall {
                                    prefArgs {
                                      prefixexp {
                                        var {
                                          indexname {
                                            prefixexp {
                                              exp {
                                                unary {
                                                  unop {
                                                  }
                                                  exp {
                                                    str: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                                  }
                                                }
                                              }
                                            }
                                            Name: ""
                                          }
                                        }
                                      }
                                      args {
                                      }
                                    }
                                  }
                                }
                                exp {
                                }
                              }
                            }
                            vars {
                              indexexpr {
                                prefixexp {
                                  functioncall {
                                    prefArgs {
                                      prefixexp {
                                      }
                                      args {
                                        str: "s"
                                      }
                                    }
                                  }
                                }
                                exp {
                                }
                              }
                            }
                          }
                          explist {
                            expressions {
                              number: 6.63123684676648e-316
                            }
                            expressions {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                      str: "\'"
                                    }
                                  }
                                }
                              }
                            }
                            expressions {
                              binary {
                                leftexp {
                                  ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                }
                                binop {
                                  greater: 3080192
                                }
                                rightexp {
                                  true: 8224
                                }
                              }
                            }
                            expressions {
                              unary {
                                unop {
                                }
                                exp {
                                  str: "os.date"
                                }
                              }
                            }
                            expressions {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                  }
                                  lastSep {
                                    comma: 8192
                                  }
                                }
                              }
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                              binary {
                                leftexp {
                                }
                                binop {
                                }
                                rightexp {
                                  nil: 0
                                }
                              }
                            }
                            expressions {
                              tableconstructor {
                              }
                            }
                            expressions {
                              str: "debug.traceback"
                            }
                            explast {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                      str: "\'"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              localfunc {
                name {
                  name: ""
                  num: 0
                }
                funcbody {
                  parlist {
                    ellipsis: "string.byte"
                  }
                  block {
                    chunk {
                      laststat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
}
