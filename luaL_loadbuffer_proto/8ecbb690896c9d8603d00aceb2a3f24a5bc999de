chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
      explist {
        expressions {
          number: 1.5
        }
        expressions {
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
                expression {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          tableconstructor {
                          }
                        }
                      }
                    }
                  }
                }
              }
              lastSep {
              }
            }
          }
        }
        expressions {
          number: 1.999755859375
        }
        expressions {
          number: 44.2510070498065
        }
        expressions {
          number: 44.0625
        }
        expressions {
          number: -0
        }
        expressions {
          true: 1701869940
        }
        expressions {
          true: 256
        }
        expressions {
        }
        expressions {
        }
        expressions {
          number: -0
        }
        explast {
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"
          num: 0
        }
      }
      expressions {
        expressions {
          number: 44.0625
        }
        expressions {
          ellipsis: "\'"
        }
        explast {
          binary {
            leftexp {
              str: "\213"
            }
            binop {
            }
            rightexp {
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
}
