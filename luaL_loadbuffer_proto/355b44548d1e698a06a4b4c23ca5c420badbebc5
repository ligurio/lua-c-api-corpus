chunk {
  stat {
    localfunc {
      name {
        name: "debug.setmetatable"
        num: 0
      }
      funcbody {
        parlist {
        }
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                    laststat {
                      semicolon: true
                    }
                  }
                }
                condition {
                }
              }
            }
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                number: -4.9591064453125e-05
                              }
                              binop {
                                add: 0
                              }
                              rightexp {
                                number: 9.0836664961139866e+223
                              }
                            }
                          }
                          binop {
                            less: 0
                          }
                          rightexp {
                            number: -4.9591064453125e-05
                          }
                        }
                      }
                      binop {
                        div: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                number: -4.9591064453125e-05
                              }
                              binop {
                                add: 0
                              }
                              rightexp {
                                number: 9.0836664961139866e+223
                              }
                            }
                          }
                          binop {
                            exp: 67108864
                          }
                          rightexp {
                            number: -4.9591064453125e-05
                          }
                        }
                      }
                    }
                  }
                  binop {
                  }
                  rightexp {
                    str: "debug.setmetatable"
                  }
                }
              }
              binop {
                add: 7
              }
              rightexp {
                ellipsis: "debug.setmetatable"
              }
            }
          }
          binop {
          }
          rightexp {
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      forcyclename {
                        name {
                          name: "_"
                          num: 0
                        }
                        startexp {
                          unary {
                            unop {
                              length: 0
                            }
                            exp {
                            }
                          }
                        }
                        stopexp {
                          nil: 0
                        }
                        doblock {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                  }
                }
                condition {
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
}
