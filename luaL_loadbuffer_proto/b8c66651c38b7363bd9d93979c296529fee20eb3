chunk {
  stat {
    list {
      varlist {
        var {
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              str: "\267"
            }
          }
        }
        vars {
          name {
            name: ""
            num: 0
          }
        }
      }
      explist {
        expressions {
          binary {
            leftexp {
            }
            binop {
            }
            rightexp {
              binary {
                leftexp {
                  binary {
                    leftexp {
                    }
                    binop {
                    }
                    rightexp {
                      tableconstructor {
                        fieldlist {
                          firstField {
                          }
                          lastSep {
                            comma: 50
                          }
                        }
                      }
                    }
                  }
                }
                binop {
                }
                rightexp {
                }
              }
            }
          }
        }
        expressions {
          binary {
            leftexp {
              prefixexp {
                exp {
                  binary {
                    leftexp {
                      number: 0
                    }
                    binop {
                      and: 0
                    }
                    rightexp {
                      binary {
                        leftexp {
                          number: 358.07407033209165
                        }
                        binop {
                          exp: 512
                        }
                        rightexp {
                          number: 118.78498777467757
                        }
                      }
                    }
                  }
                }
              }
            }
            binop {
            }
            rightexp {
              binary {
                leftexp {
                  number: nan
                }
                binop {
                }
                rightexp {
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
          indexname {
            prefixexp {
            }
            Name: ""
          }
        }
        vars {
          indexexpr {
            prefixexp {
              exp {
                binary {
                  leftexp {
                  }
                  binop {
                  }
                  rightexp {
                  }
                }
              }
            }
            exp {
              number: 3.16202013338398e-322
            }
          }
        }
        vars {
          indexexpr {
            prefixexp {
              functioncall {
              }
            }
            exp {
              function {
                body {
                  parlist {
                    ellipsis: "while"
                  }
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
      explist {
        expressions {
          unary {
            unop {
            }
            exp {
            }
          }
        }
        expressions {
          unary {
            unop {
              negate: 262144
            }
            exp {
              binary {
                leftexp {
                  binary {
                    leftexp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                              number: 0
                            }
                            binop {
                              and: 0
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  number: 358.07407033209165
                                }
                                binop {
                                  exp: 0
                                }
                                rightexp {
                                  number: 118.78498777467757
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    binop {
                      mod: 0
                    }
                    rightexp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                              number: 0
                            }
                            binop {
                              concat: 0
                            }
                            rightexp {
                              str: "!"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                binop {
                }
                rightexp {
                  binary {
                    leftexp {
                      true: 0
                    }
                    binop {
                    }
                    rightexp {
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          prefixexp {
            exp {
              binary {
                leftexp {
                  number: 7.0025861101854e-313
                }
                binop {
                  concat: 3276801
                }
                rightexp {
                  number: 0
                }
              }
            }
          }
        }
        explast {
          function {
            body {
              parlist {
                ellipsis: "while"
              }
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    semicolon: false
  }
}
