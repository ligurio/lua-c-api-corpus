chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                unary {
                  unop {
                    length: 9
                  }
                  exp {
                    unary {
                      unop {
                        length: 3
                      }
                      exp {
                        binary {
                          leftexp {
                            number: -424
                          }
                          binop {
                            mult: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        str: "\'<6662363332<<\'8"
                                      }
                                      binop {
                                        div: 8388608
                                      }
                                      rightexp {
                                        str: "package.cpath"
                                      }
                                    }
                                  }
                                  binop {
                                    div: 3472883712
                                  }
                                  rightexp {
                                    number: -4.9591064453125e-05
                                  }
                                }
                              }
                              binop {
                                add: 35
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        number: -424
                                      }
                                      binop {
                                        mult: 536870912
                                      }
                                      rightexp {
                                        binary {
                                          leftexp {
                                            number: nan
                                          }
                                          binop {
                                            mult: 0
                                          }
                                          rightexp {
                                            number: 5.5621876763668947e+180
                                          }
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                    add: 8224
                                  }
                                  rightexp {
                                    true: 4
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              binop {
                add: 0
              }
              rightexp {
                prefixexp {
                }
              }
            }
          }
          binop {
          }
          rightexp {
            unary {
              unop {
              }
              exp {
                number: 3.000122070316138
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    explist {
    }
  }
}
