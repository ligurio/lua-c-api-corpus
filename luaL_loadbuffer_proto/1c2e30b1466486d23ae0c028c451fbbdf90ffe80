chunk {
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    block {
      block {
        chunk {
        }
      }
    }
    semicolon: true
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "xpcall"
              num: 0
            }
          }
        }
        args {
          explist {
            explist {
              expressions {
                function {
                  body {
                    parlist {
                    }
                    block {
                      chunk {
                        stat {
                          call {
                            prefArgs {
                              prefixexp {
                                var {
                                  name {
                                    name: "error"
                                    num: 0
                                  }
                                }
                              }
                              args {
                                explist {
                                  explist {
                                    expressions {
                                    }
                                    expressions {
                                      binary {
                                        leftexp {
                                        }
                                        binop {
                                          mult: 0
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                              unary {
                                                unop {
                                                  length: 536870912
                                                }
                                                exp {
                                                }
                                              }
                                            }
                                            binop {
                                              mult: 0
                                            }
                                            rightexp {
                                            }
                                          }
                                        }
                                      }
                                    }
                                    expressions {
                                    }
                                    expressions {
                                      number: 3.6842187509576013e+180
                                    }
                                    explast {
                                      binary {
                                        leftexp {
                                          number: 3.6842187509576013e+180
                                        }
                                        binop {
                                          mult: 0
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                              number: -424
                                            }
                                            binop {
                                              equal: 8
                                            }
                                            rightexp {
                                              binary {
                                                leftexp {
                                                  unary {
                                                    unop {
                                                      length: 536870912
                                                    }
                                                    exp {
                                                      prefixexp {
                                                        var {
                                                          indexexpr {
                                                            prefixexp {
                                                            }
                                                            exp {
                                                              ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                binop {
                                                  mult: 0
                                                }
                                                rightexp {
                                                  str: "+"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        laststat {
                          semicolon: true
                        }
                      }
                    }
                  }
                }
              }
              expressions {
                prefixexp {
                  var {
                    name {
                      name: "select"
                      num: 0
                    }
                  }
                }
              }
              explast {
                tableconstructor {
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          prefixexp {
            var {
              indexexpr {
                prefixexp {
                }
                exp {
                  ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    explist {
      explist {
        explast {
          str: "\'<<8<\'<9"
        }
      }
    }
  }
}
