chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            forcyclename {
              name {
                name: ""
                num: 0
              }
              startexp {
              }
              stopexp {
                function {
                  body {
                    block {
                      chunk {
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                number: -424
              }
              binop {
                mult: 9520
              }
              rightexp {
                binary {
                  leftexp {
                  }
                  binop {
                    mult: 0
                  }
                  rightexp {
                    unary {
                      unop {
                        negate: 2304
                      }
                      exp {
                        binary {
                          leftexp {
                          }
                          binop {
                            mult: 48
                          }
                          rightexp {
                            binary {
                              leftexp {
                              }
                              binop {
                                add: 538976256
                              }
                              rightexp {
                                true: 255
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          binop {
            div: 32
          }
          rightexp {
            str: "\'-6>6&33332<\'<8<8"
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    function {
                      body {
                        block {
                          chunk {
                            stat {
                              semicolon: true
                            }
                          }
                        }
                      }
                    }
                  }
                  binop {
                    div: 21
                  }
                  rightexp {
                    str: "\'&~333.+\'"
                  }
                }
              }
              binop {
                mod: 64256
              }
              rightexp {
                str: "\'-6>6&33332<\'<8<8"
              }
            }
          }
          binop {
            div: 6
          }
          rightexp {
            str: "\'&~33~33333333.+\'"
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
}
