chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
          stat {
          }
          stat {
            forcyclename {
              name {
                name: "z"
                num: 0
              }
              startexp {
                number: 3.7541500178762438e+255
              }
              stopexp {
                number: 0
              }
              stepexp {
                binary {
                  leftexp {
                    number: -0
                  }
                  binop {
                    concat: 0
                  }
                  rightexp {
                    unary {
                      unop {
                        length: 48
                      }
                      exp {
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            whilecycle {
              condition {
              }
              doblock {
                block {
                  chunk {
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                            stat {
                              forcyclename {
                                name {
                                  name: ""
                                  num: 12
                                }
                                startexp {
                                  number: 0
                                }
                                stopexp {
                                  number: 0
                                }
                                doblock {
                                  block {
                                    chunk {
                                      stat {
                                      }
                                      stat {
                                      }
                                      stat {
                                        forcyclename {
                                          name {
                                            name: "z"
                                            num: 0
                                          }
                                          startexp {
                                            number: 3.7541500178762438e+255
                                          }
                                          stopexp {
                                            number: 0
                                          }
                                          stepexp {
                                            binary {
                                              leftexp {
                                                number: -0
                                              }
                                              binop {
                                                concat: 0
                                              }
                                              rightexp {
                                                unary {
                                                  unop {
                                                    length: 48
                                                  }
                                                  exp {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          doblock {
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                      }
                                      stat {
                                        whilecycle {
                                          condition {
                                          }
                                          doblock {
                                            block {
                                              chunk {
                                                stat {
                                                  localfunc {
                                                    name {
                                                      name: "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ"
                                                      num: 0
                                                    }
                                                    funcbody {
                                                      block {
                                                        chunk {
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              semicolon: true
                            }
                          }
                        }
                        condition {
                          number: 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        ellipsis: "z"
      }
    }
  }
}
