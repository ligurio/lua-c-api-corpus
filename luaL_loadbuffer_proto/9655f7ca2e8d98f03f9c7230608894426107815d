chunk {
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                  tableconstructor {
                    fieldlist {
                      firstField {
                      }
                    }
                  }
                }
                value {
                  function {
                    body {
                      parlist {
                        namelist {
                          namelist {
                            firstname {
                              name: ""
                              num: 0
                            }
                          }
                          ellipsis: "\207"
                        }
                      }
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
              }
            }
            fields {
              field {
                expression {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                          true: 2
                        }
                        binop {
                        }
                        rightexp {
                          binary {
                            leftexp {
                              unary {
                                unop {
                                  length: 2
                                }
                                exp {
                                  number: 1.01184644268287e-320
                                }
                              }
                            }
                            binop {
                              sub: 2
                            }
                            rightexp {
                              unary {
                                unop {
                                }
                                exp {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    binop {
                      mod: 4294901766
                    }
                    rightexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                            }
                            binop {
                              sub: 2
                            }
                            rightexp {
                              unary {
                                unop {
                                }
                                exp {
                                }
                              }
                            }
                          }
                        }
                        binop {
                          and: 0
                        }
                        rightexp {
                          number: 0
                        }
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
            lastSep {
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
