chunk {
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 0
        }
        args {
          explist {
            explist {
              expressions {
                false: 0
              }
              explast {
                tableconstructor {
                  fieldlist {
                    firstField {
                    }
                    fields {
                      field {
                      }
                      sep {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          binary {
            leftexp {
              prefixexp {
                var {
                  indexexpr {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                            var {
                              name {
                                name: ""
                                num: 1073741824
                              }
                            }
                          }
                          args {
                            explist {
                              explist {
                                expressions {
                                  false: 0
                                }
                                explast {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    exp {
                    }
                  }
                }
              }
            }
            binop {
              add: 0
            }
            rightexp {
              binary {
                leftexp {
                  unary {
                    unop {
                      length: 0
                    }
                    exp {
                    }
                  }
                }
                binop {
                  concat: 536870914
                }
                rightexp {
                  prefixexp {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    list {
      varlist {
        var {
          indexexpr {
            prefixexp {
            }
            exp {
              unary {
                unop {
                }
                exp {
                  nil: 0
                }
              }
            }
          }
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
              unary {
                unop {
                  length: 196608
                }
                exp {
                  nil: 0
                }
              }
            }
          }
        }
      }
      explist {
        explast {
          binary {
            leftexp {
              prefixexp {
                var {
                  indexexpr {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                            var {
                              name {
                                name: ""
                                num: 1073741824
                              }
                            }
                          }
                          args {
                            explist {
                              explist {
                                expressions {
                                  false: 0
                                }
                                explast {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    exp {
                    }
                  }
                }
              }
            }
            binop {
              add: 0
            }
            rightexp {
              binary {
                leftexp {
                  unary {
                    unop {
                      length: 0
                    }
                    exp {
                    }
                  }
                }
                binop {
                  div: 1073741824
                }
                rightexp {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 0
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
                exprassign {
                  key {
                    function {
                      body {
                        block {
                          chunk {
                            stat {
                              semicolon: true
                            }
                          }
                        }
                      }
                    }
                  }
                  value {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
                var {
                  indexexpr {
                    prefixexp {
                    }
                    exp {
                      nil: 8257536
                    }
                  }
                }
              }
              args {
              }
            }
          }
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
    semicolon: false
  }
  stat {
    call {
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            whilecycle {
              condition {
                false: 4
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    list {
                      varlist {
                        var {
                          indexexpr {
                            prefixexp {
                              var {
                                indexname {
                                  prefixexp {
                                    functioncall {
                                      namedArgs {
                                        prefixexp {
                                        }
                                        name {
                                          name: ""
                                          num: 0
                                        }
                                        args {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                                exprassign {
                                                  key {
                                                    function {
                                                      body {
                                                        block {
                                                          chunk {
                                                            stat {
                                                              semicolon: true
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  value {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  Name: ""
                                }
                              }
                            }
                            exp {
                            }
                          }
                        }
                      }
                      explist {
                        explast {
                        }
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    list {
                      varlist {
                        var {
                          indexexpr {
                            prefixexp {
                              var {
                                indexname {
                                  prefixexp {
                                    functioncall {
                                      namedArgs {
                                        prefixexp {
                                        }
                                        name {
                                          name: ""
                                          num: 0
                                        }
                                        args {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                                exprassign {
                                                  key {
                                                    function {
                                                      body {
                                                        block {
                                                          chunk {
                                                            stat {
                                                              semicolon: true
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  value {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  Name: ""
                                }
                              }
                            }
                            exp {
                            }
                          }
                        }
                      }
                      explist {
                        explast {
                        }
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: false
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                            semicolon: true
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            forcyclelist {
                              names {
                                firstname {
                                  name: ""
                                  num: 0
                                }
                              }
                              expressions {
                                explast {
                                }
                              }
                              doblock {
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                          }
                          stat {
                            call {
                            }
                          }
                        }
                      }
                      condition {
                      }
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                }
              }
              condition {
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: false
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                      namedArgs {
                        prefixexp {
                        }
                        name {
                          name: "string.unpack"
                          num: 2048
                        }
                        args {
                        }
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    forcyclename {
                      name {
                        name: ""
                        num: 0
                      }
                      startexp {
                      }
                      stopexp {
                      }
                      doblock {
                        block {
                          chunk {
                            laststat {
                              break: 0
                            }
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                      prefArgs {
                        prefixexp {
                          var {
                            name {
                              name: "\001\000\000\000\000 \000\000"
                              num: 0
                            }
                          }
                        }
                        args {
                        }
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                          explist {
                            explist {
                              expressions {
                                false: 1024
                              }
                              explast {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                }
              }
              condition {
              }
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
        }
      }
      condition {
        str: "\377\377\377\377\370\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "\001\000\000\000\000 \000\000"
              num: 0
            }
          }
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
    semicolon: false
  }
  stat {
    call {
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          binary {
            leftexp {
              prefixexp {
                var {
                  indexexpr {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                            var {
                              name {
                                name: ""
                                num: 1073741824
                              }
                            }
                          }
                          args {
                            explist {
                              explist {
                                expressions {
                                  false: 0
                                }
                                explast {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    exp {
                    }
                  }
                }
              }
            }
            binop {
              add: 0
            }
            rightexp {
              binary {
                leftexp {
                  unary {
                    unop {
                      length: 0
                    }
                    exp {
                    }
                  }
                }
                binop {
                  concat: 536870914
                }
                rightexp {
                  prefixexp {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "\001\000\000\000\000 \000\000"
              num: 0
            }
          }
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          explist {
            explist {
              expressions {
                false: 1024
              }
              explast {
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            forcyclelist {
              names {
                firstname {
                  name: ""
                  num: 0
                }
              }
              expressions {
                explast {
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
        }
      }
      condition {
      }
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
          exp {
            tableconstructor {
              fieldlist {
                firstField {
                  exprassign {
                    key {
                    }
                    value {
                    }
                  }
                }
              }
            }
          }
        }
        name {
          name: ""
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
                namedassign {
                  name {
                    name: "LUA_INIT_5_2"
                    num: 0
                  }
                  value {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                  var {
                    name {
                      name: "debug.setcstacklimit"
                      num: 0
                    }
                  }
                }
                args {
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            forcyclelist {
              names {
                firstname {
                  name: "UUUUUUU"
                  num: 0
                }
              }
              expressions {
                expressions {
                  binary {
                    leftexp {
                    }
                    binop {
                      greater: 33554658
                    }
                    rightexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                      or: 33554658
                                    }
                                    rightexp {
                                      prefixexp {
                                        exp {
                                          unary {
                                            unop {
                                              negate: 33554658
                                            }
                                            exp {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  greater: 0
                                }
                                rightexp {
                                  prefixexp {
                                    exp {
                                      binary {
                                        leftexp {
                                        }
                                        binop {
                                          or: 0
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                              binary {
                                                leftexp {
                                                }
                                                binop {
                                                  and: 5
                                                }
                                                rightexp {
                                                }
                                              }
                                            }
                                            binop {
                                              equal: 59
                                            }
                                            rightexp {
                                              prefixexp {
                                                exp {
                                                  binary {
                                                    leftexp {
                                                      tableconstructor {
                                                        fieldlist {
                                                          firstField {
                                                            exprassign {
                                                              key {
                                                              }
                                                              value {
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    binop {
                                                      or: 0
                                                    }
                                                    rightexp {
                                                      tableconstructor {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                              greater: 0
                            }
                            rightexp {
                              prefixexp {
                                exp {
                                  prefixexp {
                                    exp {
                                      binary {
                                        leftexp {
                                        }
                                        binop {
                                          or: 0
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                              binary {
                                                leftexp {
                                                }
                                                binop {
                                                  mod: 33554658
                                                }
                                                rightexp {
                                                  prefixexp {
                                                    var {
                                                      name {
                                                        name: "\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r"
                                                        num: 0
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            binop {
                                              and: 536870912
                                            }
                                            rightexp {
                                              prefixexp {
                                                exp {
                                                  number: 1.214551924694359e+224
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        binop {
                        }
                        rightexp {
                        }
                      }
                    }
                  }
                }
                explast {
                  tableconstructor {
                    fieldlist {
                      firstField {
                      }
                      fields {
                        field {
                        }
                        sep {
                          semicolon: 0
                        }
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
              namedArgs {
                prefixexp {
                }
                name {
                  name: "ddebug.setcstacklimitebug.setcstacklimit"
                  num: 63743
                }
                args {
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
            localnames {
              namelist {
                firstname {
                  name: ""
                  num: 0
                }
                names {
                  name: ""
                  num: 0
                }
              }
            }
          }
          stat {
            semicolon: true
          }
          stat {
          }
          stat {
            call {
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        expressions {
          binary {
            leftexp {
              tableconstructor {
                fieldlist {
                  firstField {
                    exprassign {
                      key {
                      }
                      value {
                      }
                    }
                  }
                }
              }
            }
            binop {
              or: 0
            }
            rightexp {
              binary {
                leftexp {
                  prefixexp {
                  }
                }
                binop {
                  less: 0
                }
                rightexp {
                  binary {
                    leftexp {
                      prefixexp {
                        exp {
                        }
                      }
                    }
                    binop {
                      less: 0
                    }
                    rightexp {
                    }
                  }
                }
              }
            }
          }
        }
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "\001\000\000\000\000 \000\000"
              num: 0
            }
          }
        }
        args {
        }
      }
    }
  }
}
