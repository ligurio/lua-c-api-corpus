chunk {
  stat {
    forcyclename {
      name {
        name: "Double"
        num: 0
      }
      startexp {
      }
      stopexp {
        number: 5.2220990168286e-315
      }
      stepexp {
        number: -0
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              list {
                varlist {
                  var {
                  }
                  vars {
                    indexname {
                      prefixexp {
                        var {
                          indexexpr {
                            prefixexp {
                            }
                            exp {
                              prefixexp {
                                exp {
                                  number: 5.4323092248711e-312
                                }
                              }
                            }
                          }
                        }
                      }
                      Name: ""
                    }
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                    name {
                      name: "Double"
                      num: 0
                    }
                  }
                }
                explist {
                  expressions {
                  }
                  expressions {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                      }
                    }
                  }
                  explast {
                    prefixexp {
                    }
                  }
                }
              }
            }
            laststat {
            }
          }
        }
      }
    }
  }
}
