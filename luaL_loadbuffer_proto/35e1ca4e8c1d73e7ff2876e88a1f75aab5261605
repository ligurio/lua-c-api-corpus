chunk {
  stat {
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          function {
            body {
              parlist {
                namelist {
                  namelist {
                    firstname {
                      name: ""
                      num: 0
                    }
                  }
                  ellipsis: "/"
                }
              }
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          unary {
            unop {
              not: 0
            }
            exp {
            }
          }
        }
        expressions {
          binary {
            leftexp {
            }
            binop {
            }
            rightexp {
            }
          }
        }
        explast {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: "\013"
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
          name {
            name: "\013"
            num: 0
          }
        }
      }
      explist {
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                    semicolon: true
                  }
                  laststat {
                    break: 0
                  }
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                    localfunc {
                      name {
                        name: ""
                        num: 1
                      }
                      funcbody {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          nil: 0
        }
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
          function {
            body {
              block {
                chunk {
                  stat {
                    semicolon: true
                  }
                  laststat {
                    break: 0
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        binary {
          leftexp {
          }
          binop {
          }
          rightexp {
          }
        }
      }
      stopexp {
      }
      stepexp {
        function {
          body {
            parlist {
              ellipsis: "="
            }
            block {
              chunk {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
