chunk {
  stat {
    localfunc {
      name {
        name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
        num: 0
      }
      funcbody {
        block {
          chunk {
            laststat {
              explist {
                explist {
                  explast {
                    nil: 4
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
        str: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
      }
      stepexp {
        number: -0
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  expressions {
                    number: 196608
                  }
                  expressions {
                    number: 2.0001220703125
                  }
                  expressions {
                    number: 0
                  }
                  expressions {
                    number: -2.75
                  }
                  expressions {
                    number: 4.75
                  }
                  expressions {
                    number: -3.05175781254146e-05
                  }
                  expressions {
                    number: 2.0004558488724342
                  }
                  expressions {
                    number: -0.011718750000106137
                  }
                  expressions {
                    number: -2.5
                  }
                  expressions {
                  }
                  expressions {
                    number: 8.4999999749707058
                  }
                  expressions {
                    nil: 32
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                    number: 2.0001220703125
                  }
                  expressions {
                    number: 4
                  }
                  explast {
                    prefixexp {
                      functioncall {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                }
                stopexp {
                }
                stepexp {
                  unary {
                    unop {
                      negate: 0
                    }
                    exp {
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                            }
                          }
                          explist {
                            expressions {
                              number: 196608
                            }
                            expressions {
                              number: 2.0001220703125
                            }
                            expressions {
                              number: 0
                            }
                            expressions {
                              number: -2.75
                            }
                            expressions {
                              number: 4.75
                            }
                            expressions {
                              number: -3.05175781254146e-05
                            }
                            expressions {
                              number: 2.0004558488724342
                            }
                            expressions {
                              number: -0.011718750000106137
                            }
                            expressions {
                              number: -2.5
                            }
                            expressions {
                              number: -2
                            }
                            expressions {
                              number: 8.4999999749707058
                            }
                            expressions {
                              true: 32
                            }
                            expressions {
                            }
                            expressions {
                              number: -2.46006546056159e+260
                            }
                            expressions {
                              number: 2.0001220703125
                            }
                            expressions {
                              number: 4
                            }
                            explast {
                              prefixexp {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
}
