chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                          }
                          binop {
                            concat: 0
                          }
                          rightexp {
                          }
                        }
                      }
                      binop {
                        concat: 262144
                      }
                      rightexp {
                        binary {
                          leftexp {
                          }
                          binop {
                            concat: 39
                          }
                          rightexp {
                            number: 4.022377432967034e-270
                          }
                        }
                      }
                    }
                  }
                  binop {
                    notEqual: 0
                  }
                  rightexp {
                    ellipsis: " "
                  }
                }
              }
              binop {
                lessEqual: 0
              }
              rightexp {
                binary {
                  leftexp {
                    number: 2.0000076293945312
                  }
                  binop {
                  }
                  rightexp {
                  }
                }
              }
            }
          }
          binop {
            concat: 0
          }
          rightexp {
            prefixexp {
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              call {
              }
            }
            stat {
              semicolon: true
            }
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: " "
                    num: 0
                  }
                }
                expressions {
                  expressions {
                    unary {
                      unop {
                      }
                      exp {
                        function {
                          body {
                            block {
                              chunk {
                                stat {
                                  semicolon: true
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  explast {
                  }
                }
                doblock {
                  block {
                    chunk {
                      laststat {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
}
