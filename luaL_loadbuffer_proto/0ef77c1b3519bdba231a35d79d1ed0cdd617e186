chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 18
        }
      }
      explist {
        expressions {
          str: "\001\000\000\000\000\000\000@"
        }
        explast {
          tableconstructor {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          name {
            name: "error"
            num: 2
          }
        }
      }
      explist {
        expressions {
          nil: 0
        }
        expressions {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                }
                args {
                  str: "\'"
                }
              }
            }
          }
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
                expression {
                  str: "math.tointeger"
                }
              }
            }
          }
        }
        expressions {
          prefixexp {
          }
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
                expression {
                  str: "math.tointeger"
                }
              }
            }
          }
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
              }
              fields {
                field {
                }
                sep {
                }
              }
            }
          }
        }
        expressions {
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
                expression {
                  str: "math.tointeger"
                }
              }
            }
          }
        }
        expressions {
          tableconstructor {
          }
        }
        explast {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                }
                args {
                  str: "\'"
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
}
