chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: "\021"
          num: 127
        }
        names {
          name: "collectgarbage"
          num: 101
        }
        names {
          name: ""
          num: 0
        }
      }
      expressions {
        expressions {
          prefixexp {
            var {
              name {
                name: "pcall"
                num: 127
              }
            }
          }
        }
        explast {
          function {
            body {
              parlist {
                namelist {
                  namelist {
                    firstname {
                      name: ""
                      num: 0
                    }
                  }
                  ellipsis: "__gc"
                }
              }
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                  stat {
                                    list {
                                      varlist {
                                        var {
                                        }
                                        vars {
                                        }
                                      }
                                      explist {
                                        expressions {
                                          unary {
                                            unop {
                                            }
                                            exp {
                                              true: 0
                                            }
                                          }
                                        }
                                        explast {
                                        }
                                      }
                                    }
                                  }
                                  stat {
                                    repeatcycle {
                                      block {
                                        chunk {
                                          stat {
                                            repeatcycle {
                                              block {
                                                chunk {
                                                  stat {
                                                    semicolon: false
                                                  }
                                                }
                                              }
                                              condition {
                                                false: 0
                                              }
                                            }
                                          }
                                        }
                                      }
                                      condition {
                                        false: 1845493760
                                      }
                                    }
                                  }
                                }
                              }
                              condition {
                                prefixexp {
                                  functioncall {
                                    namedArgs {
                                      prefixexp {
                                      }
                                      name {
                                        name: ""
                                        num: 0
                                      }
                                      args {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      condition {
                        prefixexp {
                          functioncall {
                            namedArgs {
                              prefixexp {
                              }
                              name {
                                name: ""
                                num: 0
                              }
                              args {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              func {
                name {
                  firstname {
                    name: "tonumber"
                    num: 0
                  }
                }
                body {
                  parlist {
                    ellipsis: "2"
                  }
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                              name {
                                name: ""
                                num: 1024
                              }
                            }
                          }
                          explist {
                            expressions {
                              number: 6.63123684676648e-316
                            }
                            expressions {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                      str: "\'"
                                    }
                                  }
                                }
                              }
                            }
                            expressions {
                              binary {
                                leftexp {
                                  ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                }
                                binop {
                                  greater: 3080192
                                }
                                rightexp {
                                  true: 8224
                                }
                              }
                            }
                            expressions {
                              unary {
                                unop {
                                }
                                exp {
                                  nil: 4
                                }
                              }
                            }
                            expressions {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                    expression {
                                      unary {
                                        unop {
                                          negate: 2293760
                                        }
                                        exp {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                              binary {
                                leftexp {
                                }
                                binop {
                                }
                                rightexp {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        expression {
                                          unary {
                                            unop {
                                              length: 127
                                            }
                                            exp {
                                            }
                                          }
                                        }
                                      }
                                      lastSep {
                                        semicolon: 8224
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            expressions {
                              tableconstructor {
                              }
                            }
                            expressions {
                              str: "debug.traceback"
                            }
                            explast {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                      str: "\'"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        list {
                          varlist {
                            var {
                              indexname {
                                prefixexp {
                                }
                                Name: ""
                              }
                            }
                            vars {
                            }
                          }
                          explist {
                            expressions {
                              ellipsis: "\'"
                            }
                            expressions {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                      str: "\'"
                                    }
                                  }
                                }
                              }
                            }
                            expressions {
                              nil: 127
                            }
                            expressions {
                            }
                            expressions {
                              str: "string.find"
                            }
                            expressions {
                              true: 2
                            }
                            expressions {
                              unary {
                                unop {
                                  negate: 4
                                }
                                exp {
                                }
                              }
                            }
                            expressions {
                            }
                            expressions {
                              tableconstructor {
                              }
                            }
                            expressions {
                              str: "debug.traceback"
                            }
                            explast {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                      functioncall {
                                        namedArgs {
                                          prefixexp {
                                            functioncall {
                                              namedArgs {
                                                prefixexp {
                                                }
                                                name {
                                                  name: ""
                                                  num: 0
                                                }
                                                args {
                                                }
                                              }
                                            }
                                          }
                                          name {
                                            name: ""
                                            num: 0
                                          }
                                          args {
                                          }
                                        }
                                      }
                                    }
                                    args {
                                      str: "\'"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                      stat {
                        repeatcycle {
                          block {
                            chunk {
                              stat {
                                whilecycle {
                                  condition {
                                  }
                                  doblock {
                                    block {
                                      chunk {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          condition {
                            unary {
                              unop {
                                length: 26992
                              }
                              exp {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            laststat {
              explist {
                explist {
                  expressions {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          namedassign {
                            name {
                              name: ""
                              num: 0
                            }
                            value {
                            }
                          }
                        }
                      }
                    }
                  }
                  explast {
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
        }
      }
      explist {
        expressions {
          unary {
            unop {
            }
            exp {
              true: 0
            }
          }
        }
        explast {
        }
      }
    }
  }
}
