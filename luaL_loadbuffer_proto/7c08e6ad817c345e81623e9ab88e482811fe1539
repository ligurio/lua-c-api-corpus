chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      stepexp {
        binary {
          leftexp {
            binary {
              leftexp {
                prefixexp {
                  exp {
                    binary {
                      leftexp {
                        nil: 0
                      }
                      binop {
                        and: 255
                      }
                      rightexp {
                        binary {
                          leftexp {
                            nil: 2048
                          }
                          binop {
                            exp: 4
                          }
                          rightexp {
                            prefixexp {
                              exp {
                                binary {
                                  leftexp {
                                    nil: 134217728
                                  }
                                  binop {
                                    div: 262285
                                  }
                                  rightexp {
                                    binary {
                                      leftexp {
                                        prefixexp {
                                          exp {
                                            binary {
                                              leftexp {
                                                prefixexp {
                                                  exp {
                                                    binary {
                                                      leftexp {
                                                        nil: 0
                                                      }
                                                      binop {
                                                        and: 255
                                                      }
                                                      rightexp {
                                                        unary {
                                                          unop {
                                                          }
                                                          exp {
                                                            ellipsis: "\\001\\000\\000\\000\\000\\000\\000\\000"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              binop {
                                                concat: 0
                                              }
                                              rightexp {
                                              }
                                            }
                                          }
                                        }
                                      }
                                      binop {
                                        less: 0
                                      }
                                      rightexp {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              binop {
                greaterEqual: 262144
              }
              rightexp {
              }
            }
          }
          binop {
            greaterEqual: 262144
          }
          rightexp {
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
