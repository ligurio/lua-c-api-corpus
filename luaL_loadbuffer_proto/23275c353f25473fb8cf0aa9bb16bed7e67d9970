chunk {
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                expressions {
                  explast {
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
              semicolon: true
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              semicolon: true
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
              semicolon: false
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
                namedArgs {
                  prefixexp {
                  }
                  name {
                    name: ""
                    num: 0
                  }
                  args {
                  }
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
            }
            stat {
              call {
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                      semicolon: true
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                      semicolon: false
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                            stat {
                              call {
                              }
                            }
                            stat {
                              forcyclename {
                                name {
                                  name: ""
                                  num: 0
                                }
                                startexp {
                                }
                                stopexp {
                                }
                                doblock {
                                  block {
                                    chunk {
                                      stat {
                                        whilecycle {
                                          condition {
                                          }
                                          doblock {
                                            block {
                                              chunk {
                                                stat {
                                                  semicolon: true
                                                }
                                                stat {
                                                }
                                                stat {
                                                }
                                                stat {
                                                }
                                                stat {
                                                }
                                                stat {
                                                }
                                                stat {
                                                }
                                                stat {
                                                  semicolon: true
                                                }
                                                stat {
                                                }
                                                stat {
                                                }
                                                stat {
                                                }
                                                stat {
                                                }
                                                stat {
                                                  list {
                                                    varlist {
                                                      var {
                                                      }
                                                      vars {
                                                        indexexpr {
                                                          prefixexp {
                                                            exp {
                                                              tableconstructor {
                                                              }
                                                            }
                                                          }
                                                          exp {
                                                            unary {
                                                              unop {
                                                                length: 7635712
                                                              }
                                                              exp {
                                                                tableconstructor {
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      vars {
                                                        indexexpr {
                                                          prefixexp {
                                                            exp {
                                                              tableconstructor {
                                                                fieldlist {
                                                                  firstField {
                                                                    expression {
                                                                      tableconstructor {
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          exp {
                                                            unary {
                                                              unop {
                                                                length: 34560
                                                              }
                                                              exp {
                                                                tableconstructor {
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      vars {
                                                        indexexpr {
                                                          prefixexp {
                                                            exp {
                                                              tableconstructor {
                                                                fieldlist {
                                                                  firstField {
                                                                    expression {
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          exp {
                                                            tableconstructor {
                                                            }
                                                          }
                                                        }
                                                      }
                                                      vars {
                                                        indexexpr {
                                                          prefixexp {
                                                            exp {
                                                              tableconstructor {
                                                                fieldlist {
                                                                  firstField {
                                                                    expression {
                                                                      true: 268500480
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          exp {
                                                            unary {
                                                              unop {
                                                                length: 4
                                                              }
                                                              exp {
                                                                tableconstructor {
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      vars {
                                                        indexexpr {
                                                          prefixexp {
                                                            exp {
                                                              tableconstructor {
                                                                fieldlist {
                                                                  firstField {
                                                                    expression {
                                                                      binary {
                                                                        leftexp {
                                                                        }
                                                                        binop {
                                                                          or: 0
                                                                        }
                                                                        rightexp {
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                  fields {
                                                                    field {
                                                                      namedassign {
                                                                        name {
                                                                          name: ""
                                                                          num: 150994944
                                                                        }
                                                                        value {
                                                                        }
                                                                      }
                                                                    }
                                                                    sep {
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          exp {
                                                            unary {
                                                              unop {
                                                                length: 4
                                                              }
                                                              exp {
                                                                tableconstructor {
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      vars {
                                                        indexexpr {
                                                          prefixexp {
                                                            var {
                                                              indexexpr {
                                                                prefixexp {
                                                                }
                                                                exp {
                                                                  number: 0
                                                                }
                                                              }
                                                            }
                                                          }
                                                          exp {
                                                          }
                                                        }
                                                      }
                                                      vars {
                                                        indexexpr {
                                                          prefixexp {
                                                            exp {
                                                              tableconstructor {
                                                                fieldlist {
                                                                  firstField {
                                                                    expression {
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          exp {
                                                            unary {
                                                              unop {
                                                                length: 4
                                                              }
                                                              exp {
                                                                tableconstructor {
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      vars {
                                                        indexexpr {
                                                          prefixexp {
                                                            exp {
                                                              tableconstructor {
                                                                fieldlist {
                                                                  firstField {
                                                                    expression {
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          exp {
                                                          }
                                                        }
                                                      }
                                                      vars {
                                                        indexexpr {
                                                          prefixexp {
                                                            exp {
                                                              tableconstructor {
                                                                fieldlist {
                                                                  firstField {
                                                                    expression {
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          exp {
                                                            unary {
                                                              unop {
                                                                length: 4
                                                              }
                                                              exp {
                                                                tableconstructor {
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    explist {
                                                      expressions {
                                                        tableconstructor {
                                                          fieldlist {
                                                            firstField {
                                                              expression {
                                                                tableconstructor {
                                                                  fieldlist {
                                                                    firstField {
                                                                      expression {
                                                                        tableconstructor {
                                                                          fieldlist {
                                                                            firstField {
                                                                              expression {
                                                                                tableconstructor {
                                                                                  fieldlist {
                                                                                    firstField {
                                                                                      expression {
                                                                                        tableconstructor {
                                                                                          fieldlist {
                                                                                            firstField {
                                                                                              expression {
                                                                                                tableconstructor {
                                                                                                  fieldlist {
                                                                                                    firstField {
                                                                                                    }
                                                                                                    lastSep {
                                                                                                      comma: 4160749568
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      explast {
                                                        str: ""
                                                      }
                                                    }
                                                  }
                                                  semicolon: true
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      stat {
                                        whilecycle {
                                          condition {
                                            true: 4
                                          }
                                          doblock {
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                        semicolon: true
                                      }
                                      stat {
                                        whilecycle {
                                          condition {
                                          }
                                          doblock {
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                      }
                                      stat {
                                        whilecycle {
                                          condition {
                                            tableconstructor {
                                              fieldlist {
                                                firstField {
                                                  exprassign {
                                                    key {
                                                      tableconstructor {
                                                        fieldlist {
                                                          firstField {
                                                            expression {
                                                              binary {
                                                                leftexp {
                                                                }
                                                                binop {
                                                                  or: 0
                                                                }
                                                                rightexp {
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    value {
                                                    }
                                                  }
                                                }
                                                fields {
                                                  field {
                                                    expression {
                                                      ellipsis: "?????"
                                                    }
                                                  }
                                                  sep {
                                                  }
                                                }
                                                fields {
                                                  field {
                                                    expression {
                                                      tableconstructor {
                                                        fieldlist {
                                                          firstField {
                                                            exprassign {
                                                              key {
                                                                true: 4
                                                              }
                                                              value {
                                                              }
                                                            }
                                                          }
                                                          fields {
                                                            field {
                                                            }
                                                            sep {
                                                            }
                                                          }
                                                          fields {
                                                            field {
                                                              exprassign {
                                                                key {
                                                                }
                                                                value {
                                                                  prefixexp {
                                                                  }
                                                                }
                                                              }
                                                            }
                                                            sep {
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  sep {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          doblock {
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            stat {
                              forcyclename {
                                name {
                                  name: ""
                                  num: 0
                                }
                                startexp {
                                }
                                stopexp {
                                }
                                stepexp {
                                  prefixexp {
                                    exp {
                                      number: 5.32366304037368e-310
                                    }
                                  }
                                }
                                doblock {
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                            stat {
                              call {
                              }
                            }
                            stat {
                              call {
                                namedArgs {
                                  prefixexp {
                                    functioncall {
                                      prefArgs {
                                        prefixexp {
                                        }
                                        args {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                                expression {
                                                  ellipsis: ""
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  name {
                                    name: ""
                                    num: 0
                                  }
                                  args {
                                  }
                                }
                              }
                            }
                            stat {
                              call {
                              }
                            }
                            stat {
                              call {
                              }
                            }
                            stat {
                              forcyclename {
                                name {
                                  name: ""
                                  num: 0
                                }
                                startexp {
                                }
                                stopexp {
                                }
                                stepexp {
                                  prefixexp {
                                    exp {
                                      number: 5.32366304037368e-310
                                    }
                                  }
                                }
                                doblock {
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                            stat {
                              call {
                              }
                            }
                            stat {
                              call {
                                namedArgs {
                                  prefixexp {
                                  }
                                  name {
                                    name: ""
                                    num: 0
                                  }
                                  args {
                                    explist {
                                      explist {
                                        explast {
                                          binary {
                                            leftexp {
                                            }
                                            binop {
                                            }
                                            rightexp {
                                              true: 1024
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            stat {
                              call {
                              }
                            }
                            stat {
                              call {
                              }
                            }
                            stat {
                              semicolon: false
                            }
                            stat {
                              call {
                              }
                            }
                            stat {
                              call {
                              }
                            }
                            stat {
                              call {
                              }
                            }
                            stat {
                              call {
                              }
                            }
                            stat {
                              call {
                              }
                            }
                            stat {
                              call {
                              }
                            }
                            stat {
                              call {
                              }
                            }
                            stat {
                              call {
                              }
                            }
                            stat {
                              call {
                              }
                            }
                            stat {
                              call {
                              }
                            }
                            stat {
                              call {
                              }
                            }
                            stat {
                            }
                            stat {
                              call {
                              }
                            }
                          }
                        }
                        condition {
                        }
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                    }
                    stat {
                      call {
                      }
                      semicolon: false
                    }
                    stat {
                      call {
                      }
                    }
                  }
                }
                condition {
                }
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
            stat {
              call {
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: false
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: false
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    call {
                    }
                  }
                  stat {
                    forcyclename {
                      name {
                        name: ""
                        num: 0
                      }
                      startexp {
                      }
                      stopexp {
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: false
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    semicolon: false
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                }
              }
              condition {
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: false
          }
          stat {
            call {
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
}
