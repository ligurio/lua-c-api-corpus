chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
        number: -8.5
      }
      stepexp {
        number: -8.5
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: "\r\000\000\000\000\000\000\000"
                  num: 4
                }
                startexp {
                }
                stopexp {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              forcyclename {
                name {
                  name: "\341"
                  num: 4
                }
                startexp {
                  number: -0
                }
                stopexp {
                  prefixexp {
                  }
                }
                stepexp {
                  number: -8.5
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 0
                          }
                          startexp {
                          }
                          stopexp {
                            unary {
                              unop {
                                length: 0
                              }
                              exp {
                              }
                            }
                          }
                          stepexp {
                            number: -0.125
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 4
                          }
                          startexp {
                          }
                          stopexp {
                          }
                          stepexp {
                            number: -0.1328125
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                      stat {
                        repeatcycle {
                          block {
                            chunk {
                              stat {
                                call {
                                }
                              }
                              stat {
                                func {
                                  name {
                                    firstname {
                                      name: "hotexit"
                                      num: 0
                                    }
                                  }
                                  body {
                                    parlist {
                                    }
                                    block {
                                      chunk {
                                      }
                                    }
                                  }
                                }
                                semicolon: true
                              }
                            }
                          }
                          condition {
                            nil: 0
                          }
                        }
                      }
                      laststat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
