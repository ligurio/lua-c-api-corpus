chunk {
  stat {
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
            }
            laststat {
            }
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: "\000\030\000\000"
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: ""
                  num: 0
                }
              }
              explist {
                expressions {
                  str: "8"
                }
                explast {
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: ""
                  num: 0
                }
                funcbody {
                  parlist {
                  }
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: ""
                  num: 0
                }
                names {
                  name: "counter_8"
                  num: 0
                }
                names {
                  name: "qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq"
                  num: 4177526784
                }
              }
              explist {
                expressions {
                  binary {
                    leftexp {
                      number: 2.08055056067298e-314
                    }
                    binop {
                      sub: 0
                    }
                    rightexp {
                    }
                  }
                }
                explast {
                  number: -243.67054748535156
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    localnames {
                      namelist {
                        firstname {
                          name: ""
                          num: 0
                        }
                      }
                      explist {
                        expressions {
                          str: "8"
                        }
                        explast {
                        }
                      }
                    }
                    semicolon: false
                  }
                  laststat {
                  }
                }
              }
              condition {
                prefixexp {
                  functioncall {
                    prefArgs {
                      prefixexp {
                        var {
                          name {
                            name: "load"
                            num: 0
                          }
                        }
                      }
                      args {
                        explist {
                          explist {
                            explast {
                              prefixexp {
                                var {
                                  name {
                                    name: "rawlen"
                                    num: 0
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        number: -709.375
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: ""
                  num: 0
                }
                names {
                  name: "counter_8"
                  num: 0
                }
                names {
                  name: "qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq"
                  num: 4177526784
                }
              }
              explist {
                expressions {
                  binary {
                    leftexp {
                      number: 2.08055056067298e-314
                    }
                    binop {
                      sub: 0
                    }
                    rightexp {
                    }
                  }
                }
                explast {
                  number: -243.67054748535156
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    localnames {
                      namelist {
                        firstname {
                          name: ""
                          num: 0
                        }
                      }
                      explist {
                        expressions {
                          str: "8"
                        }
                        explast {
                        }
                      }
                    }
                    semicolon: false
                  }
                  laststat {
                  }
                }
              }
              condition {
                prefixexp {
                  functioncall {
                    prefArgs {
                      prefixexp {
                        var {
                          name {
                            name: "load"
                            num: 0
                          }
                        }
                      }
                      args {
                        explist {
                          explist {
                            explast {
                              prefixexp {
                                var {
                                  name {
                                    name: "require"
                                    num: 5
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
          laststat {
            explist {
              explist {
                expressions {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                          str: "\'<mathn<7<<7<\'<9"
                        }
                        binop {
                          div: 0
                        }
                        rightexp {
                          number: 0
                        }
                      }
                    }
                    binop {
                      div: 0
                    }
                    rightexp {
                      binary {
                        leftexp {
                          true: 1668767583
                        }
                        binop {
                          div: 0
                        }
                        rightexp {
                          str: "\'|\'"
                        }
                      }
                    }
                  }
                }
                expressions {
                  prefixexp {
                    functioncall {
                    }
                  }
                }
                explast {
                  str: "*"
                }
              }
            }
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 5
      }
    }
  }
  stat {
    semicolon: false
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
          name {
            name: "load"
            num: 16
          }
        }
      }
      explist {
        expressions {
          function {
            body {
              parlist {
              }
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
  laststat {
    break: 61
    semicolon: true
  }
}
