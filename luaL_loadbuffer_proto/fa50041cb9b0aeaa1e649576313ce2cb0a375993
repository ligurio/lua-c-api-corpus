chunk {
  stat {
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            forcyclelist {
              names {
                firstname {
                  name: ""
                  num: 0
                }
              }
              expressions {
                explast {
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      forcyclename {
                        name {
                          name: ""
                          num: 4
                        }
                        startexp {
                        }
                        stopexp {
                        }
                        stepexp {
                          number: -0
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                list {
                                  varlist {
                                    var {
                                    }
                                  }
                                  explist {
                                    expressions {
                                      tableconstructor {
                                      }
                                    }
                                    expressions {
                                      tableconstructor {
                                      }
                                    }
                                    expressions {
                                      tableconstructor {
                                      }
                                    }
                                    expressions {
                                      tableconstructor {
                                      }
                                    }
                                    expressions {
                                      tableconstructor {
                                      }
                                    }
                                    expressions {
                                      tableconstructor {
                                      }
                                    }
                                    expressions {
                                      prefixexp {
                                      }
                                    }
                                    expressions {
                                      tableconstructor {
                                      }
                                    }
                                    expressions {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                          }
                                        }
                                      }
                                    }
                                    expressions {
                                      tableconstructor {
                                      }
                                    }
                                    expressions {
                                      tableconstructor {
                                      }
                                    }
                                    expressions {
                                      tableconstructor {
                                      }
                                    }
                                    expressions {
                                      tableconstructor {
                                      }
                                    }
                                    expressions {
                                      tableconstructor {
                                      }
                                    }
                                    explast {
                                      unary {
                                        unop {
                                        }
                                        exp {
                                          prefixexp {
                                            exp {
                                              binary {
                                                leftexp {
                                                }
                                                binop {
                                                  greaterEqual: 0
                                                }
                                                rightexp {
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                semicolon: true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        nil: 4
      }
    }
  }
}
