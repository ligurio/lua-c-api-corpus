chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
                tableconstructor {
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            whilecycle {
              condition {
                tableconstructor {
                  fieldlist {
                    firstField {
                      expression {
                        binary {
                          leftexp {
                            number: 0
                          }
                          binop {
                          }
                          rightexp {
                            number: 0
                          }
                        }
                      }
                    }
                    fields {
                      field {
                        expression {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                  binary {
                                    leftexp {
                                      number: -3.0517578125e-05
                                    }
                                    binop {
                                      greaterEqual: 0
                                    }
                                    rightexp {
                                      number: 0
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      sep {
                        comma: 2507436800
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        ellipsis: ""
      }
    }
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
            }
            lastSep {
              semicolon: 46080
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
                tableconstructor {
                  fieldlist {
                    firstField {
                      expression {
                        tableconstructor {
                          fieldlist {
                            firstField {
                              expression {
                                tableconstructor {
                                  fieldlist {
                                    firstField {
                                      expression {
                                        binary {
                                          leftexp {
                                            number: 0
                                          }
                                          binop {
                                          }
                                          rightexp {
                                            number: 0
                                          }
                                        }
                                      }
                                    }
                                    fields {
                                      field {
                                        expression {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                                expression {
                                                  binary {
                                                    leftexp {
                                                      number: 0
                                                    }
                                                    binop {
                                                      greaterEqual: 0
                                                    }
                                                    rightexp {
                                                      number: 0
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      sep {
                                        semicolon: 1276
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            fields {
                              field {
                                expression {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                      }
                                      fields {
                                        field {
                                          expression {
                                            number: 0
                                          }
                                        }
                                        sep {
                                          semicolon: 0
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              sep {
                                comma: 0
                              }
                            }
                            lastSep {
                              semicolon: 0
                            }
                          }
                        }
                      }
                    }
                    lastSep {
                      comma: 0
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        ellipsis: ""
      }
    }
  }
  stat {
    block {
      block {
        chunk {
        }
      }
    }
  }
}
