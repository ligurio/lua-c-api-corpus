chunk {
  stat {
    whilecycle {
      condition {
        true: 1
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                    indexexpr {
                      prefixexp {
                        exp {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                  prefixexp {
                                    var {
                                      indexexpr {
                                        prefixexp {
                                        }
                                        exp {
                                          false: 1793
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              fields {
                                field {
                                  expression {
                                    function {
                                      body {
                                        parlist {
                                          ellipsis: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                                        }
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                sep {
                                }
                              }
                              fields {
                                field {
                                  expression {
                                  }
                                }
                                sep {
                                }
                              }
                              fields {
                                field {
                                  expression {
                                    nil: 1936679831
                                  }
                                }
                                sep {
                                }
                              }
                              fields {
                                field {
                                  expression {
                                  }
                                }
                                sep {
                                }
                              }
                            }
                          }
                        }
                      }
                      exp {
                        true: 1793
                      }
                    }
                  }
                }
                explist {
                  explast {
                    binary {
                      leftexp {
                      }
                      binop {
                        mult: 0
                      }
                      rightexp {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        number: 1.269748709812e-321
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 0
                          }
                          startexp {
                            unary {
                              unop {
                                length: 3942645760
                              }
                              exp {
                                tableconstructor {
                                  fieldlist {
                                    firstField {
                                    }
                                    fields {
                                      field {
                                        expression {
                                          str: "math.deg"
                                        }
                                      }
                                      sep {
                                      }
                                    }
                                    fields {
                                      field {
                                        expression {
                                        }
                                      }
                                      sep {
                                        semicolon: 0
                                      }
                                    }
                                    fields {
                                      field {
                                        expression {
                                        }
                                      }
                                      sep {
                                        semicolon: 7282758
                                      }
                                    }
                                    fields {
                                      field {
                                        expression {
                                          nil: 0
                                        }
                                      }
                                      sep {
                                      }
                                    }
                                    fields {
                                      field {
                                      }
                                      sep {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          stopexp {
                          }
                          doblock {
                            block {
                              chunk {
                                laststat {
                                  explist {
                                    explist {
                                      expressions {
                                      }
                                      explast {
                                        str: "\000"
                                      }
                                    }
                                  }
                                  semicolon: true
                                }
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                      laststat {
                        explist {
                          explist {
                            expressions {
                            }
                            explast {
                              str: "\000"
                            }
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        whilecycle {
                          condition {
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  forcyclename {
                                    name {
                                      name: ""
                                      num: 0
                                    }
                                    startexp {
                                      unary {
                                        unop {
                                          length: 3942645760
                                        }
                                        exp {
                                        }
                                      }
                                    }
                                    stopexp {
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                          laststat {
                                            explist {
                                              explist {
                                                explast {
                                                  number: 1.269748709812e-321
                                                }
                                              }
                                            }
                                            semicolon: true
                                          }
                                        }
                                      }
                                    }
                                  }
                                  semicolon: true
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        semicolon: true
                      }
                      stat {
                        semicolon: true
                      }
                      stat {
                        func {
                          name {
                            firstname {
                              name: "getupvalue"
                              num: 1969775360
                            }
                            names {
                              name: ""
                              num: 0
                            }
                            names {
                              name: ""
                              num: 0
                            }
                            names {
                              name: "\\377\\377\\377\\020"
                              num: 0
                            }
                            lastname {
                              name: "\\377\\377\\377\\020"
                              num: 2105344
                            }
                          }
                          body {
                            parlist {
                            }
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
            stat {
              localnames {
                namelist {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                explist {
                  expressions {
                    nil: 262144
                  }
                  explast {
                  }
                }
              }
              semicolon: true
            }
            stat {
              semicolon: true
            }
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
}
