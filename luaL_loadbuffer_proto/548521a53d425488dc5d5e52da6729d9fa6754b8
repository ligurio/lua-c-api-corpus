chunk {
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        parlist {
          ellipsis: "\255"
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    block {
      block {
        chunk {
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    whilecycle {
      condition {
        false: 0
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    whilecycle {
      condition {
        false: 0
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
    whilecycle {
      condition {
        false: 0
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
          }
          binop {
            greater: 0
          }
          rightexp {
          }
        }
      }
      first {
        chunk {
          stat {
          }
          stat {
            whilecycle {
              condition {
                function {
                  body {
                    parlist {
                      ellipsis: "__lt"
                    }
                    block {
                      chunk {
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
            semicolon: true
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
            block {
              block {
                chunk {
                }
              }
            }
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
            semicolon: true
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
            semicolon: true
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
            ifstat {
              condition {
                binary {
                  leftexp {
                  }
                  binop {
                    greater: 0
                  }
                  rightexp {
                  }
                }
              }
              first {
                chunk {
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                  laststat {
                    explist {
                      explist {
                        explast {
                          binary {
                            leftexp {
                            }
                            binop {
                              sub: 16580608
                            }
                            rightexp {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            func {
              name {
                firstname {
                  name: ""
                  num: 0
                }
              }
              body {
                parlist {
                  ellipsis: "\255"
                }
                block {
                  chunk {
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
          }
          stat {
          }
          stat {
            func {
              name {
                firstname {
                  name: ""
                  num: 0
                }
              }
              body {
                block {
                  chunk {
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                }
              }
            }
          }
          stat {
            func {
              name {
                firstname {
                  name: ""
                  num: 0
                }
              }
              body {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
          }
          stat {
            func {
              name {
                firstname {
                  name: ""
                  num: 0
                }
              }
              body {
                parlist {
                  ellipsis: "\255"
                }
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
          }
          stat {
            semicolon: true
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 0
              }
              startexp {
                tableconstructor {
                  fieldlist {
                    firstField {
                    }
                    fields {
                      field {
                        exprassign {
                          key {
                            prefixexp {
                              var {
                                indexexpr {
                                  prefixexp {
                                  }
                                  exp {
                                    false: 0
                                  }
                                }
                              }
                            }
                          }
                          value {
                          }
                        }
                      }
                      sep {
                      }
                    }
                  }
                }
              }
              stopexp {
              }
              stepexp {
                true: 196608
              }
              doblock {
                block {
                  chunk {
                    stat {
                      list {
                        varlist {
                          var {
                            indexname {
                              prefixexp {
                              }
                              Name: ""
                            }
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                            name {
                              name: ""
                              num: 0
                            }
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                            indexname {
                              prefixexp {
                                exp {
                                  binary {
                                    leftexp {
                                      function {
                                        body {
                                          block {
                                            chunk {
                                            }
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                      or: 0
                                    }
                                    rightexp {
                                    }
                                  }
                                }
                              }
                              Name: ""
                            }
                          }
                          vars {
                          }
                          vars {
                            indexname {
                              prefixexp {
                                exp {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                      or: 524288
                                    }
                                    rightexp {
                                      prefixexp {
                                        exp {
                                          binary {
                                            leftexp {
                                            }
                                            binop {
                                              or: 0
                                            }
                                            rightexp {
                                              prefixexp {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              Name: "\000\000\000\000"
                            }
                          }
                          vars {
                          }
                          vars {
                            indexname {
                              prefixexp {
                              }
                              Name: "\000\000\000\000"
                            }
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                            indexname {
                              prefixexp {
                                exp {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                    }
                                    rightexp {
                                    }
                                  }
                                }
                              }
                              Name: ""
                            }
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                          vars {
                          }
                        }
                        explist {
                          explast {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: false
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
          }
          laststat {
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      stepexp {
        true: 196608
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                    indexname {
                      prefixexp {
                      }
                      Name: ""
                    }
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                    name {
                      name: ""
                      num: 0
                    }
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                    indexname {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                              function {
                                body {
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                              or: 0
                            }
                            rightexp {
                            }
                          }
                        }
                      }
                      Name: ""
                    }
                  }
                  vars {
                  }
                  vars {
                    indexname {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                            }
                            binop {
                              or: 524288
                            }
                            rightexp {
                              prefixexp {
                                exp {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                      or: 0
                                    }
                                    rightexp {
                                      prefixexp {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      Name: "\000\000\000\000"
                    }
                  }
                  vars {
                  }
                  vars {
                    indexname {
                      prefixexp {
                      }
                      Name: "\000\000\000\000"
                    }
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                    indexname {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                            }
                            binop {
                            }
                            rightexp {
                            }
                          }
                        }
                      }
                      Name: ""
                    }
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                  vars {
                  }
                }
                explist {
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  laststat {
  }
}
