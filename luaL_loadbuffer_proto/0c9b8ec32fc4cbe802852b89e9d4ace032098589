chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        number: 0
      }
    }
    semicolon: false
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                }
              }
              condition {
                binary {
                  leftexp {
                    ellipsis: ""
                  }
                  binop {
                    exp: 2
                  }
                  rightexp {
                    prefixexp {
                      exp {
                        binary {
                          leftexp {
                          }
                          binop {
                            or: 2
                          }
                          rightexp {
                            true: 2
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            forcyclename {
                              name {
                                name: ""
                                num: 0
                              }
                              startexp {
                                true: 0
                              }
                              stopexp {
                              }
                              doblock {
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      condition {
                        binary {
                          leftexp {
                            ellipsis: ""
                          }
                          binop {
                            exp: 2
                          }
                          rightexp {
                            prefixexp {
                              exp {
                                binary {
                                  leftexp {
                                  }
                                  binop {
                                    or: 2
                                  }
                                  rightexp {
                                    tableconstructor {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                          }
                          stat {
                            call {
                            }
                          }
                        }
                      }
                      condition {
                        binary {
                          leftexp {
                            ellipsis: ""
                          }
                          binop {
                            exp: 2
                          }
                          rightexp {
                            prefixexp {
                              exp {
                                binary {
                                  leftexp {
                                  }
                                  binop {
                                    or: 2
                                  }
                                  rightexp {
                                    tableconstructor {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              condition {
                binary {
                  leftexp {
                    ellipsis: ""
                  }
                  binop {
                    exp: 2
                  }
                  rightexp {
                    prefixexp {
                      exp {
                        binary {
                          leftexp {
                          }
                          binop {
                            or: 2
                          }
                          rightexp {
                            tableconstructor {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        binary {
          leftexp {
          }
          binop {
            exp: 2
          }
          rightexp {
            prefixexp {
              exp {
                binary {
                  leftexp {
                  }
                  binop {
                    or: 2
                  }
                  rightexp {
                    tableconstructor {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        prefixexp {
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
      explist {
        explast {
          prefixexp {
            var {
              name {
                name: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                num: 0
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    explist {
    }
    semicolon: true
  }
}
