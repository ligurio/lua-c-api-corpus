chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                  stat {
                    list {
                      varlist {
                        var {
                        }
                        vars {
                        }
                        vars {
                          indexexpr {
                            prefixexp {
                              exp {
                              }
                            }
                            exp {
                            }
                          }
                        }
                      }
                      explist {
                        expressions {
                          unary {
                            unop {
                            }
                            exp {
                              function {
                                body {
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                }
                                args {
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          binary {
                            leftexp {
                              ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                            }
                            binop {
                              greater: 3080192
                            }
                            rightexp {
                              true: 8224
                            }
                          }
                        }
                        expressions {
                          str: "asin"
                        }
                        expressions {
                          tableconstructor {
                            fieldlist {
                              firstField {
                              }
                            }
                          }
                        }
                        expressions {
                        }
                        expressions {
                          binary {
                            leftexp {
                            }
                            binop {
                            }
                            rightexp {
                              function {
                                body {
                                  parlist {
                                    namelist {
                                      namelist {
                                        firstname {
                                          name: ""
                                          num: 0
                                        }
                                      }
                                      ellipsis: "\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266\266"
                                    }
                                  }
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          binary {
                            leftexp {
                              prefixexp {
                                exp {
                                  prefixexp {
                                    exp {
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                            }
                            rightexp {
                              nil: 0
                            }
                          }
                        }
                        expressions {
                          tableconstructor {
                          }
                        }
                        expressions {
                          str: "debug.traceback"
                        }
                        explast {
                          prefixexp {
                            var {
                              name {
                                name: ""
                                num: 8192
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    list {
                      varlist {
                        var {
                          indexname {
                            prefixexp {
                              var {
                                indexexpr {
                                  prefixexp {
                                    exp {
                                      true: 141
                                    }
                                  }
                                  exp {
                                  }
                                }
                              }
                            }
                            Name: ""
                          }
                        }
                        vars {
                        }
                      }
                      explist {
                        expressions {
                          number: 6.63123684676648e-316
                        }
                        expressions {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                }
                                args {
                                  str: "\'"
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                }
                                binop {
                                  greaterEqual: 23808
                                }
                                rightexp {
                                }
                              }
                            }
                            binop {
                              notEqual: 1818848768
                            }
                            rightexp {
                              str: "\'<mathn<7<pack<7<\'<      }\n                          binop {\n                          }\n           9"
                            }
                          }
                        }
                        expressions {
                          unary {
                            unop {
                            }
                            exp {
                              nil: 4
                            }
                          }
                        }
                        expressions {
                          tableconstructor {
                          }
                        }
                        expressions {
                        }
                        expressions {
                        }
                        expressions {
                        }
                        expressions {
                          tableconstructor {
                          }
                        }
                        expressions {
                          str: "debug.traceback"
                        }
                        explast {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                }
                                args {
                                  str: ""
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                  }
                  stat {
                    forcyclename {
                      name {
                        name: "-"
                        num: 0
                      }
                      startexp {
                      }
                      stopexp {
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                  laststat {
                  }
                }
              }
              condition {
                ellipsis: "\362"
              }
            }
          }
        }
      }
      condition {
        nil: 0
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                  indexname {
                    prefixexp {
                      var {
                        indexexpr {
                          prefixexp {
                            exp {
                              true: 141
                            }
                          }
                          exp {
                          }
                        }
                      }
                    }
                    Name: ""
                  }
                }
                vars {
                }
              }
              explist {
                expressions {
                  number: 6.63123684676648e-316
                }
                expressions {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                          str: "\'"
                        }
                      }
                    }
                  }
                }
                expressions {
                  binary {
                    leftexp {
                      ellipsis: ""
                    }
                    binop {
                      greater: 3080192
                    }
                    rightexp {
                      true: 8224
                    }
                  }
                }
                expressions {
                  unary {
                    unop {
                    }
                    exp {
                      nil: 4
                    }
                  }
                }
                expressions {
                  tableconstructor {
                  }
                }
                expressions {
                }
                expressions {
                }
                expressions {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                            }
                            binop {
                              greaterEqual: 23808
                            }
                            rightexp {
                            }
                          }
                        }
                        binop {
                          notEqual: 1818848768
                        }
                        rightexp {
                          str: "\'<mathn<7<pack<7<\'<      }\n                          binop {\n                          }\n           9"
                        }
                      }
                    }
                    binop {
                    }
                    rightexp {
                      str: "\'<mathn<7<pack<7<\'<      }\n                          binop {\n                          }\n           9"
                    }
                  }
                }
                expressions {
                  tableconstructor {
                  }
                }
                expressions {
                  str: "debug.traceback"
                }
                explast {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                          str: ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                  }
                  binop {
                    greaterEqual: 23808
                  }
                  rightexp {
                  }
                }
              }
              binop {
                add: 141
              }
              rightexp {
                str: "\'<mathn<7<pack<7<\'<      }\n                          binop {\n                          }\n           9"
              }
            }
          }
          binop {
          }
          rightexp {
            str: "\'<mathn<7<pack<7<\'<      }\n                          binop {\n                          }\n           9"
          }
        }
      }
    }
  }
}
