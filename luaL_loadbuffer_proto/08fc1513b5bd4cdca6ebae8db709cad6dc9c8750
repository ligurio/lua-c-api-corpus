chunk {
  stat {
    list {
      varlist {
        var {
          indexexpr {
            prefixexp {
              functioncall {
                prefArgs {
                  prefixexp {
                  }
                  args {
                  }
                }
              }
            }
            exp {
              function {
                body {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
        vars {
          indexexpr {
            prefixexp {
              functioncall {
                prefArgs {
                  prefixexp {
                  }
                  args {
                  }
                }
              }
            }
            exp {
            }
          }
        }
        vars {
        }
        vars {
          name {
            name: ""
            num: 0
          }
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: "\202"
          }
        }
      }
      explist {
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        expressions {
          prefixexp {
            functioncall {
            }
          }
        }
        expressions {
          nil: 128
        }
        expressions {
          true: 0
        }
        explast {
          true: 0
        }
      }
    }
  }
  laststat {
    explist {
      explist {
        expressions {
        }
        expressions {
          nil: 0
        }
        explast {
          binary {
            leftexp {
              prefixexp {
                exp {
                  binary {
                    leftexp {
                    }
                    binop {
                      or: 2113600
                    }
                    rightexp {
                      unary {
                        unop {
                        }
                        exp {
                          binary {
                            leftexp {
                            }
                            binop {
                              and: 0
                            }
                            rightexp {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            binop {
            }
            rightexp {
            }
          }
        }
      }
    }
    semicolon: false
  }
}
