chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 2
      }
      startexp {
      }
      stopexp {
      }
      stepexp {
        number: -0
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  expressions {
                  }
                  expressions {
                    ellipsis: ""
                  }
                  expressions {
                    ellipsis: "\201"
                  }
                  expressions {
                    ellipsis: ""
                  }
                  expressions {
                    ellipsis: ""
                  }
                  expressions {
                    ellipsis: ""
                  }
                  explast {
                  }
                }
              }
            }
            stat {
              list {
                varlist {
                  var {
                    indexname {
                      prefixexp {
                        var {
                          indexname {
                            prefixexp {
                            }
                            Name: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
                          }
                        }
                      }
                      Name: ""
                    }
                  }
                }
                explist {
                  expressions {
                    ellipsis: ""
                  }
                  expressions {
                    binary {
                      leftexp {
                      }
                      binop {
                      }
                      rightexp {
                      }
                    }
                  }
                  expressions {
                    ellipsis: ""
                  }
                  expressions {
                    ellipsis: ""
                  }
                  expressions {
                    ellipsis: "io"
                  }
                  expressions {
                    ellipsis: "math\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320\320.acos"
                  }
                  expressions {
                    ellipsis: ""
                  }
                  explast {
                  }
                }
              }
            }
            stat {
              func {
                name {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                body {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              call {
                namedArgs {
                  prefixexp {
                    functioncall {
                    }
                  }
                  name {
                    name: ""
                    num: 0
                  }
                  args {
                  }
                }
              }
              semicolon: true
            }
            stat {
              list {
                varlist {
                  var {
                    name {
                      name: ""
                      num: 0
                    }
                  }
                }
                explist {
                  expressions {
                  }
                  expressions {
                    ellipsis: ""
                  }
                  expressions {
                    ellipsis: ""
                  }
                  expressions {
                    ellipsis: ""
                  }
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
