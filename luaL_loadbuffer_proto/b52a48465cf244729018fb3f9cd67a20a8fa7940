chunk {
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "load"
              num: 5
            }
          }
        }
        args {
          explist {
            explist {
              explast {
                function {
                  body {
                    block {
                      chunk {
                        stat {
                          forcyclename {
                            name {
                              name: ""
                              num: 0
                            }
                            startexp {
                              str: ")\\000\\000\\000"
                            }
                            stopexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                      mod: 4
                                    }
                                    rightexp {
                                    }
                                  }
                                }
                                binop {
                                  concat: 36
                                }
                                rightexp {
                                }
                              }
                            }
                            stepexp {
                              binary {
                                leftexp {
                                }
                                binop {
                                  mod: 4
                                }
                                rightexp {
                                }
                              }
                            }
                            doblock {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                        laststat {
                          semicolon: true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        parlist {
          namelist {
            namelist {
              firstname {
                name: "require"
                num: 0
              }
              names {
                name: ""
                num: 0
              }
            }
          }
        }
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  expressions {
                  }
                  expressions {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                            str: "\'"
                          }
                        }
                      }
                    }
                  }
                  expressions {
                    number: 0
                  }
                  expressions {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          exprassign {
                            key {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                  }
                                }
                              }
                            }
                            value {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  expressions {
                    tableconstructor {
                    }
                  }
                  expressions {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          expression {
                            prefixexp {
                              var {
                                indexexpr {
                                  prefixexp {
                                  }
                                  exp {
                                    str: "string.dump"
                                  }
                                }
                              }
                            }
                          }
                        }
                        fields {
                          field {
                            expression {
                              str: "io.output"
                            }
                          }
                          sep {
                          }
                        }
                        lastSep {
                        }
                      }
                    }
                  }
                  expressions {
                  }
                  expressions {
                    str: "tpio.output"
                  }
                  expressions {
                    tableconstructor {
                    }
                  }
                  explast {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                            str: "\'"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
          exp {
            nil: 4194304
          }
        }
        name {
          name: ""
          num: 0
        }
        args {
          explist {
            explist {
              expressions {
                tableconstructor {
                  fieldlist {
                    firstField {
                      exprassign {
                        key {
                          nil: 252
                        }
                        value {
                        }
                      }
                    }
                    fields {
                      field {
                      }
                      sep {
                        semicolon: 8224
                      }
                    }
                  }
                }
              }
              explast {
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
          indexexpr {
            prefixexp {
            }
            exp {
              str: "\375\377\377\377"
            }
          }
        }
      }
      explist {
        explast {
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
                functioncall {
                  prefArgs {
                    prefixexp {
                      var {
                        name {
                          name: "load"
                          num: 5
                        }
                      }
                    }
                    args {
                      explist {
                        explist {
                          explast {
                            function {
                              body {
                                block {
                                  chunk {
                                    stat {
                                      func {
                                        name {
                                          firstname {
                                            name: "type"
                                            num: 0
                                          }
                                          names {
                                            name: "load"
                                            num: 5
                                          }
                                        }
                                        body {
                                          block {
                                            chunk {
                                              stat {
                                              }
                                              stat {
                                                localfunc {
                                                  name {
                                                    name: ""
                                                    num: 0
                                                  }
                                                  funcbody {
                                                    parlist {
                                                      namelist {
                                                        namelist {
                                                          firstname {
                                                            name: "require"
                                                            num: 0
                                                          }
                                                          names {
                                                            name: ""
                                                            num: 946238581
                                                          }
                                                        }
                                                      }
                                                    }
                                                    block {
                                                      chunk {
                                                        stat {
                                                          localfunc {
                                                            name {
                                                              name: ""
                                                              num: 0
                                                            }
                                                            funcbody {
                                                              block {
                                                                chunk {
                                                                  laststat {
                                                                    semicolon: true
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                semicolon: true
                                              }
                                              stat {
                                                localfunc {
                                                  name {
                                                    name: ""
                                                    num: 2105344
                                                  }
                                                  funcbody {
                                                    block {
                                                      chunk {
                                                        laststat {
                                                          semicolon: true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    stat {
                                      semicolon: true
                                    }
                                    stat {
                                      list {
                                        varlist {
                                          var {
                                          }
                                        }
                                        explist {
                                          expressions {
                                          }
                                          expressions {
                                            prefixexp {
                                              functioncall {
                                                prefArgs {
                                                  prefixexp {
                                                  }
                                                  args {
                                                    str: "\'"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          expressions {
                                            number: 0
                                          }
                                          expressions {
                                            tableconstructor {
                                              fieldlist {
                                                firstField {
                                                  exprassign {
                                                    key {
                                                      tableconstructor {
                                                        fieldlist {
                                                          firstField {
                                                          }
                                                        }
                                                      }
                                                    }
                                                    value {
                                                      tableconstructor {
                                                        fieldlist {
                                                          firstField {
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          expressions {
                                            tableconstructor {
                                            }
                                          }
                                          expressions {
                                            tableconstructor {
                                              fieldlist {
                                                firstField {
                                                  expression {
                                                    prefixexp {
                                                      var {
                                                        indexexpr {
                                                          prefixexp {
                                                          }
                                                          exp {
                                                            str: "string.dump"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                fields {
                                                  field {
                                                    expression {
                                                      str: "io.output"
                                                    }
                                                  }
                                                  sep {
                                                  }
                                                }
                                                lastSep {
                                                }
                                              }
                                            }
                                          }
                                          expressions {
                                          }
                                          expressions {
                                            str: "tpio.output"
                                          }
                                          expressions {
                                            tableconstructor {
                                            }
                                          }
                                          explast {
                                            prefixexp {
                                              functioncall {
                                                prefArgs {
                                                  prefixexp {
                                                  }
                                                  args {
                                                    str: "\'"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    stat {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              args {
                tableconstructor {
                  fieldlist {
                    firstField {
                    }
                  }
                }
              }
            }
          }
        }
        args {
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
    call {
    }
  }
}
