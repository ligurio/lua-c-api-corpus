chunk {
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        exprassign {
                          key {
                          }
                          value {
                          }
                        }
                      }
                      fields {
                        field {
                          expression {
                            nil: 2
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          expression {
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          expression {
                            number: nan
                          }
                        }
                        sep {
                          semicolon: 2
                        }
                      }
                      fields {
                        field {
                          expression {
                            prefixexp {
                              exp {
                              }
                            }
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          expression {
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          expression {
                            function {
                              body {
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                        }
                        sep {
                          semicolon: 2560
                        }
                      }
                      fields {
                        field {
                        }
                        sep {
                          semicolon: 0
                        }
                      }
                      fields {
                        field {
                          expression {
                            number: nan
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          expression {
                            number: nan
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          expression {
                            true: 2
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              str: ")"
                            }
                            value {
                            }
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          expression {
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
                value {
                }
              }
            }
            fields {
              field {
                expression {
                  unary {
                    unop {
                    }
                    exp {
                    }
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                namedassign {
                  name {
                    name: ""
                    num: 0
                  }
                  value {
                    true: 0
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
              }
              sep {
                semicolon: 17410
              }
            }
            fields {
              field {
                expression {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          var {
                            name {
                              name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377chunk {\n  stat {\n    repeatcycle {\n      block {\n        chunk {\n        }\n      }\n      condition {\n        prefixexp {\n        }\n      }\n    }\n    semicolon: true\n  }\n  stat {\n    list {\n      varlist {\n        var {\n        }\n      }\n      explist {\n        explast {\n        }\n      }\n    }\n    semicolon: true\n  }\n  stat {\n    repeatcycle {\n      block {\n        chunk {\n          stat {\n            repeatcycle {\n              block {\n                chunk {\n                }\n              }\n              condition {\n              }\n            }\n            semicolon: false\n          }\n          stat {\n            repeatcycle {\n              block {\n                chunk {\n                }\n              }\n              condition {\n                prefixexp {\n                }\n              }\n            }\n            semicolon: false\n          }\n          stat {\n            repeatcycle {\n              block {\n                chunk {\n                }\n              }\n              condition {\n                false: 9728\n              }\n            }\n            semicolon: true\n          }\n          stat {\n            repeatcycle {\n              block {\n                chunk {\n                }\n              }\n              condition {\n                function {\n                  body {\n                    block {\n                      chunk {\n                        stat {\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n          laststat {\n            break: 1162627398\n            semicolon: false\n          }\n        }\n      }\n      condition {\n        prefixexp {\n        }\n      }\n    }\n    semicolon: true\n  }\n  stat {\n    repeatcycle {\n      block {\n        chunk {\n          stat {\n            semicolon: true\n          }\n          stat {\n            repeatcycle {\n              block {\n                chunk {\n                }\n              }\n              condition {\n                true: 256\n              }\n            }\n            semicolon: false\n          }\n          stat {\n            repeatcycle {\n              block {\n                chunk {\n                }\n              }\n              condition {\n                prefixexp {\n                }\n              }\n            }\n            semicolon: true\n          }\n          stat {\n            repeatcycle {\n              block {\n                chunk {\n                }\377\377\377\377\377\377\377\377\377\377\n              }\n              condition {\n                prefixexp {\n                }\n              }\n            }\n          }\n        }\n      }\n      condition {\n      }\n    }\n    semicolon: false\n  }\n  stat {\n    repeatcycle {\n      block {\n        chunk {\n          stat {\n            localnames {\n              namelist {\n                firstname {\n                  name: \"\"\n                  num: 0\n                }\n              }\n            }\n            semicolon: false\n          }\n          stat {\n            repeatcycle {\n              block {\n                chunk {\n                }\n              }\n              condition {\n                prefixexp {\n                }\n              }\n            }\n            semicolon: false\n          }\n          stat {\n            whilecycle {\n              condition {\n              }\n              doblock {\n                block {\n                  chunk {\n                    stat {\n                      list {\n                        varlist {\n                          var {\n                            indexname {\n                              prefixexp {\n                                functioncall {\n                                  prefArgs {\n                                    prefixexp {\n                                      var {\n                                        name {\n                                          namen                                          num: 0\n                                        }\n                                      }\n                                    }\n                                    args {\n                                    }\n                                  }\n                                }\n                              }\n                              Name: \"\"\n                            }\n                          }\n                        }\n                        explist {\n                          explast {\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            semicolon: true\n          }\n          stat {\n            repeatcycle {\n              block {\n                chunk {\n                  stat {\n                    repeatcycle {\n                      block {\n                        chunk {\n                        }\n                      }\n                      condition {\n                        prefixexp {\n                        }\n                      }\n                    }\n                    semicolon: false\n                  }\n                  stat {\n                    repeatcycle {\n                      block {\n                        chunk {\n                        }\n                      }\n                      condition {\n                        prefixexp {\n                        }\n                      }\n                    }\n                    semicolon: false\n                  }\n                  stat {\n                    repeatcycle {\n                      block {\n                        chunk {\n                        }\n                      }\n                      condition {\n                        prefixexp {\n                        }\n                      }\n                    }\n                    semicolon: true\n                  }\n                  stat {\n                    repeatcycle {\n                      block {\n                        chunk {\n                        }\nload                  }\n                      condition {\n                        function {\n                          body {\n                            block {\n                              chunk {\n                                stat {\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                  laststat {\n                    explist {\n                      explist {\n                        expressions {\n                        }\n                        explast {\n                        }\n                      }\n                    }\n                    semicolon: false\n                  }\n                }\n              }\n              condition {\n                \377\377\377\377\377\377\377\377prefixexp {\n                }\n              }\n            }\n            semicolon: true\n          }\n        }\n      }\n      condition {\n      }\377\n    }\377\377\n  \377\377\377\377}\n}\n"
                              num: 0
                            }
                          }
                        }
                        args {
                        }
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                }
              }
              sep {
              }
            }
            fields {
              field {
              }
              sep {
                comma: 2
              }
            }
            fields {
              field {
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  number: nan
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  number: nan
                }
              }
              sep {
              }
            }
            fields {
              field {
                namedassign {
                  name {
                    name: ")"
                    num: 0
                  }
                  value {
                    binary {
                      leftexp {
                        number: 6.42285339593621e-322
                      }
                      binop {
                      }
                      rightexp {
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
              }
              sep {
                semicolon: 2560
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                        lastSep {
                          semicolon: 0
                        }
                      }
                    }
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  number: nan
                }
              }
              sep {
              }
            }
            fields {
              field {
                expression {
                  unary {
                    unop {
                    }
                    exp {
                    }
                  }
                }
              }
              sep {
                semicolon: 0
              }
            }
            fields {
              field {
                expression {
                  number: nan
                }
              }
              sep {
              }
            }
            lastSep {
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
}
