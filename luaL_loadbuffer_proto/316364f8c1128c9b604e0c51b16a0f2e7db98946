chunk {
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
            unary {
              unop {
                negate: 102
              }
              exp {
                str: "\'<<66<p*u&pep*u&pe\'<"
              }
            }
          }
          binop {
            exp: 1279
          }
          rightexp {
          }
        }
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            unary {
              unop {
                negate: 102
              }
              exp {
                str: "\'<<66<p*u&pep*u&pe\'<"
              }
            }
          }
          binop {
            exp: 1279
          }
          rightexp {
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              ifstat {
                condition {
                  binary {
                    leftexp {
                      unary {
                        unop {
                          negate: 102
                        }
                        exp {
                          str: "\'<<66<p*u&pep*u&pe\'<"
                        }
                      }
                    }
                    binop {
                      exp: 1279
                    }
                    rightexp {
                    }
                  }
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                  binary {
                    leftexp {
                      unary {
                        unop {
                          not: 8192
                        }
                        exp {
                          str: "\'<<66<p*u&pep*u&pe\'<"
                        }
                      }
                    }
                    binop {
                      exp: 1279
                    }
                    rightexp {
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: true
            }
            laststat {
              break: 2048
            }
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    break: 2048
  }
}
