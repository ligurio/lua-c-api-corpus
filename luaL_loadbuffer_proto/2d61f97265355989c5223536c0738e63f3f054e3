chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            stat {
              func {
                name {
                  firstname {
                    name: ""
                    num: 0
                  }
                  lastname {
                    name: "x`call"
                    num: 3607101440
                  }
                }
                body {
                  block {
                    chunk {
                      laststat {
                        semicolon: false
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              localfunc {
                name {
                  name: ""
                  num: 0
                }
                funcbody {
                  block {
                    chunk {
                      stat {
                        ifstat {
                          condition {
                            str: "}\000\'//string.upnkca\' \000\'/\'   pni  pnil"
                          }
                          first {
                            chunk {
                              stat {
                                semicolon: true
                              }
                            }
                          }
                          last {
                            chunk {
                              laststat {
                                semicolon: true
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                    var {
                      name {
                        name: "load"
                        num: 3621191680
                      }
                    }
                  }
                  args {
                    explist {
                      explist {
                        explast {
                          prefixexp {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              call {
                prefArgs {
                  prefixexp {
                    var {
                      name {
                        name: "xpcall"
                        num: 0
                      }
                    }
                  }
                  args {
                    explist {
                      explist {
                        expressions {
                          prefixexp {
                            var {
                            }
                          }
                        }
                        expressions {
                          prefixexp {
                            var {
                              name {
                                name: "collectgarbage"
                                num: 4128768
                              }
                            }
                          }
                        }
                        explast {
                          tableconstructor {
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "load"
              num: 3607101440
            }
          }
        }
        args {
          explist {
            explist {
              explast {
                prefixexp {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
                var {
                  name {
                    name: "xpcall"
                    num: 0
                  }
                }
              }
              args {
                str: "\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344\344"
              }
            }
          }
        }
        name {
          name: ""
          num: 0
        }
        args {
        }
      }
    }
    semicolon: true
  }
}
