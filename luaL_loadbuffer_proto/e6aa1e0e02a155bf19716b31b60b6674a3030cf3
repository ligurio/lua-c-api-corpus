chunk {
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  explast {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                          }
                          binop {
                            concat: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                                prefixexp {
                                }
                              }
                              binop {
                                div: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                  }
                                  binop {
                                  }
                                  rightexp {
                                    number: -4.9591064453125e-05
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      binop {
                        div: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                number: -4.9591064453125e-05
                              }
                              binop {
                                div: 0
                              }
                              rightexp {
                              }
                            }
                          }
                          binop {
                            div: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    number: 9.0836664961139866e+223
                                  }
                                  binop {
                                    div: 0
                                  }
                                  rightexp {
                                    binary {
                                      leftexp {
                                        prefixexp {
                                        }
                                      }
                                      binop {
                                        div: 0
                                      }
                                      rightexp {
                                        prefixexp {
                                          var {
                                            indexexpr {
                                              prefixexp {
                                              }
                                              exp {
                                                nil: 0
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              binop {
                                div: 0
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
}
