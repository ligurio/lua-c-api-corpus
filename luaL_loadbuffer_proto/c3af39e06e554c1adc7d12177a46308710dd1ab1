chunk {
  stat {
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 4
      }
      startexp {
        number: 44.5
      }
      stopexp {
      }
      stepexp {
        number: -0
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                  vars {
                  }
                }
                explist {
                  expressions {
                    binary {
                      leftexp {
                      }
                      binop {
                        lessEqual: 4294966998
                      }
                      rightexp {
                      }
                    }
                  }
                  expressions {
                    number: -3.2066693760143564e-289
                  }
                  expressions {
                    number: 1.999995231628418
                  }
                  expressions {
                    number: 44.00318574846824
                  }
                  expressions {
                    number: 44.5
                  }
                  expressions {
                    false: 32
                  }
                  expressions {
                    prefixexp {
                      functioncall {
                      }
                    }
                  }
                  expressions {
                    number: 34
                  }
                  expressions {
                    number: 4.0000037103891364
                  }
                  expressions {
                    number: 4
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                    prefixexp {
                      functioncall {
                      }
                    }
                  }
                  explast {
                    str: ""
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
