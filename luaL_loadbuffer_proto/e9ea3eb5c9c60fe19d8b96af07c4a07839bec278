chunk {
  stat {
    whilecycle {
      condition {
        prefixexp {
          exp {
            binary {
              leftexp {
              }
              binop {
                concat: 0
              }
              rightexp {
                unary {
                  unop {
                    length: 4
                  }
                  exp {
                    tableconstructor {
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          binary {
                            leftexp {
                              prefixexp {
                                exp {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                        exp {
                                          binary {
                                            leftexp {
                                            }
                                            binop {
                                              concat: 0
                                            }
                                            rightexp {
                                              unary {
                                                unop {
                                                  length: 4
                                                }
                                                exp {
                                                  tableconstructor {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                      concat: 0
                                    }
                                    rightexp {
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                              greater: 0
                            }
                            rightexp {
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
            }
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  prefixexp {
                    exp {
                      binary {
                        leftexp {
                        }
                        binop {
                          concat: 0
                        }
                        rightexp {
                          unary {
                            unop {
                              negate: 0
                            }
                            exp {
                              tableconstructor {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        whilecycle {
                          condition {
                            nil: 2097152
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  call {
                                  }
                                  semicolon: true
                                }
                                stat {
                                  repeatcycle {
                                    block {
                                      chunk {
                                        laststat {
                                          break: 0
                                        }
                                      }
                                    }
                                    condition {
                                    }
                                  }
                                }
                                laststat {
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        whilecycle {
                          condition {
                            false: 4
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                      stat {
                        whilecycle {
                          condition {
                            tableconstructor {
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  explast {
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        semicolon: false
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
              whilecycle {
                condition {
                  nil: 2097152
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        call {
                        }
                        semicolon: true
                      }
                      stat {
                        repeatcycle {
                          block {
                            chunk {
                              laststat {
                                break: 0
                              }
                            }
                          }
                          condition {
                          }
                        }
                      }
                      laststat {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
