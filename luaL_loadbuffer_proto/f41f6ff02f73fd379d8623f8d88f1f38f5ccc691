chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
      condition {
        binary {
          leftexp {
          }
          binop {
            concat: 0
          }
          rightexp {
            binary {
              leftexp {
                prefixexp {
                  exp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                number: -48.00000000000005
                              }
                              binop {
                                concat: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    number: 1.0728402099575969e+253
                                  }
                                  binop {
                                    mod: 16
                                  }
                                  rightexp {
                                    number: -48.00000000000005
                                  }
                                }
                              }
                            }
                          }
                          binop {
                            exp: 0
                          }
                          rightexp {
                            number: -48.00000000000005
                          }
                        }
                      }
                      binop {
                      }
                      rightexp {
                        number: 0
                      }
                    }
                  }
                }
              }
              binop {
                exp: 0
              }
              rightexp {
                number: -48.00000000000005
              }
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
        }
      }
    }
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
        unary {
          unop {
            length: 16
          }
          exp {
          }
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              explist {
                explist {
                  expressions {
                    tableconstructor {
                    }
                  }
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
                binary {
                  leftexp {
                  }
                  binop {
                  }
                  rightexp {
                    number: 1.8215751726363603e-306
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        str: "\305\305\305\305\305\305\305\305\305\305\305"
      }
    }
  }
}
