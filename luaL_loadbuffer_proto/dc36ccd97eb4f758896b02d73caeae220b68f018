chunk {
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
          stat {
            whilecycle {
              condition {
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            block {
              block {
                chunk {
                  stat {
                    call {
                      prefArgs {
                        prefixexp {
                          var {
                            name {
                              name: "load"
                              num: 0
                            }
                          }
                        }
                        args {
                          explist {
                            explist {
                              explast {
                                function {
                                  body {
                                    block {
                                      chunk {
                                        laststat {
                                          explist {
                                            explist {
                                              expressions {
                                                binary {
                                                  leftexp {
                                                    number: -236.66017172695229
                                                  }
                                                  binop {
                                                    mod: 4
                                                  }
                                                  rightexp {
                                                    str: "\'|8<\'<8"
                                                  }
                                                }
                                              }
                                              explast {
                                              }
                                            }
                                          }
                                          semicolon: false
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                }
              }
            }
          }
        }
      }
      condition {
        ellipsis: ""
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                  var {
                    name {
                      name: "load"
                      num: 0
                    }
                  }
                }
                args {
                  str: "xCcmathio.type\\fffffffff333c333c3333332"
                }
              }
            }
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                  var {
                    name {
                      name: "load"
                      num: 7561472
                    }
                  }
                }
                args {
                  str: "xCcmathio.type\\fffffffff333c333c3333332"
                }
              }
            }
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 4294967295
              }
              startexp {
              }
              stopexp {
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          laststat {
            explist {
            }
          }
        }
      }
      condition {
        nil: 66
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                  var {
                    name {
                      name: "load"
                      num: 0
                    }
                  }
                }
                args {
                  str: "xCcmathio.type\\fffffffff333c333c3333332"
                }
              }
            }
          }
          stat {
            block {
              block {
                chunk {
                  stat {
                    call {
                      prefArgs {
                        prefixexp {
                          var {
                            name {
                              name: "load"
                              num: 0
                            }
                          }
                        }
                        args {
                          explist {
                            explist {
                              explast {
                                function {
                                  body {
                                    block {
                                      chunk {
                                        laststat {
                                          explist {
                                            explist {
                                              expressions {
                                                binary {
                                                  leftexp {
                                                    number: -236.66017172695229
                                                  }
                                                  binop {
                                                    mod: 4
                                                  }
                                                  rightexp {
                                                    str: "\'|8<\'<8"
                                                  }
                                                }
                                              }
                                              explast {
                                              }
                                            }
                                          }
                                          semicolon: false
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                }
              }
            }
          }
        }
      }
      condition {
        unary {
          unop {
            not: 66
          }
          exp {
            true: 0
          }
        }
      }
    }
  }
}
