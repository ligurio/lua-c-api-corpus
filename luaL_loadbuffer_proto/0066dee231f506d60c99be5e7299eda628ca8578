chunk {
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          exp {
            tableconstructor {
              fieldlist {
                firstField {
                  namedassign {
                    name {
                      name: ""
                      num: 0
                    }
                    value {
                      prefixexp {
                        var {
                          indexname {
                            prefixexp {
                              functioncall {
                              }
                            }
                            Name: ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        args {
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
      explist {
        expressions {
          binary {
            leftexp {
            }
            binop {
            }
            rightexp {
              str: "io.type"
            }
          }
        }
        explast {
        }
      }
    }
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                    semicolon: true
                  }
                  stat {
                    localnames {
                      namelist {
                        firstname {
                          name: ""
                          num: 0
                        }
                      }
                      explist {
                        expressions {
                          binary {
                            leftexp {
                            }
                            binop {
                            }
                            rightexp {
                              str: "io.type"
                            }
                          }
                        }
                        explast {
                        }
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                    localnames {
                      namelist {
                        firstname {
                          name: ""
                          num: 0
                        }
                      }
                      explist {
                        expressions {
                          binary {
                            leftexp {
                            }
                            binop {
                            }
                            rightexp {
                              str: "io.type"
                            }
                          }
                        }
                        explast {
                        }
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                }
              }
            }
          }
        }
        expressions {
          function {
            body {
              block {
                chunk {
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                      }
                    }
                  }
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  laststat {
    break: 0
  }
}
