chunk {
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                explast {
                  binary {
                    leftexp {
                      nil: 0
                    }
                    binop {
                      and: 0
                    }
                    rightexp {
                    }
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 0
              }
              startexp {
              }
              stopexp {
              }
              stepexp {
                number: -0
              }
              doblock {
                block {
                  chunk {
                    stat {
                      list {
                        varlist {
                          var {
                          }
                        }
                        explist {
                          explast {
                            binary {
                              leftexp {
                                nil: 0
                              }
                              binop {
                                lessEqual: 16384
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                      }
                      semicolon: true
                    }
                    stat {
                    }
                    stat {
                    }
                    laststat {
                    }
                  }
                }
              }
            }
          }
          stat {
          }
          laststat {
          }
        }
      }
      condition {
        ellipsis: ""
      }
    }
  }
}
