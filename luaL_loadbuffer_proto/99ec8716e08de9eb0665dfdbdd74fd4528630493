chunk {
  stat {
    whilecycle {
      condition {
        false: 0
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 25185
                  }
                  names {
                    name: "\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027"
                    num: 0
                  }
                }
                expressions {
                  explast {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                            var {
                              name {
                                name: "ipairs"
                                num: 0
                              }
                            }
                          }
                          args {
                            explist {
                              explist {
                                explast {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        exprassign {
                                          key {
                                            nil: 135
                                          }
                                          value {
                                          }
                                        }
                                      }
                                      lastSep {
                                        semicolon: 0
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      laststat {
                        explist {
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
          stat {
            whilecycle {
              condition {
              }
              doblock {
                block {
                  chunk {
                    stat {
                      forcyclelist {
                        names {
                          firstname {
                            name: ""
                            num: 25185
                          }
                          names {
                            name: "\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027"
                            num: 0
                          }
                        }
                        expressions {
                          explast {
                            prefixexp {
                              functioncall {
                                prefArgs {
                                  prefixexp {
                                    var {
                                      name {
                                        name: "ipairs"
                                        num: 0
                                      }
                                    }
                                  }
                                  args {
                                    explist {
                                      explist {
                                        explast {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                                exprassign {
                                                  key {
                                                    nil: 135
                                                  }
                                                  value {
                                                  }
                                                }
                                              }
                                              lastSep {
                                                semicolon: 0
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        doblock {
                          block {
                            chunk {
                              laststat {
                                explist {
                                }
                                semicolon: true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 25185
                  }
                  names {
                    name: "\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027\027"
                    num: 0
                  }
                }
                expressions {
                  explast {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                            var {
                              name {
                                name: "ipairs"
                                num: 0
                              }
                            }
                          }
                          args {
                            explist {
                              explist {
                                explast {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        exprassign {
                                          key {
                                            nil: 135
                                          }
                                          value {
                                          }
                                        }
                                      }
                                      lastSep {
                                        semicolon: 0
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      laststat {
                        break: 0
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
