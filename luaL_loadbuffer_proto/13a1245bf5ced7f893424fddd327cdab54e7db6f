chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
          binary {
            leftexp {
              str: "\000\'>string.format\'\000\000&&\'>\'\000\000&\'>\'"
            }
            binop {
              concat: 0
            }
            rightexp {
              str: "\000\'>string.format\'\000\000&&\'>\'\000\000&\'>\'"
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        str: "\000\'>string.format\'\000\000&&\'>\'\000\000&\'>\'"
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: false
  }
  stat {
  }
  stat {
  }
  stat {
  }
}
