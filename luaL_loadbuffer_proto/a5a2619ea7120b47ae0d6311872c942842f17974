chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      stepexp {
        binary {
          leftexp {
            tableconstructor {
              fieldlist {
                firstField {
                  exprassign {
                    key {
                      tableconstructor {
                        fieldlist {
                          firstField {
                            expression {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                    expression {
                                      tableconstructor {
                                        fieldlist {
                                          firstField {
                                            expression {
                                              prefixexp {
                                                exp {
                                                  false: 0
                                                }
                                              }
                                            }
                                          }
                                          fields {
                                            field {
                                            }
                                            sep {
                                              semicolon: 0
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  lastSep {
                                    semicolon: 0
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    value {
                    }
                  }
                }
              }
            }
          }
          binop {
            lessEqual: 4096
          }
          rightexp {
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  str: ""
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        whilecycle {
                          condition {
                            str: "\\00\\000\\\"\\\\000\\\\00\\\"\\\\000\\\\077"
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  whilecycle {
                                    condition {
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                          stat {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            laststat {
              explist {
                explist {
                  expressions {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          exprassign {
                            key {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                      explist {
                                        explist {
                                          expressions {
                                            number: 0
                                          }
                                          explast {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            value {
                            }
                          }
                        }
                      }
                    }
                  }
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  laststat {
    break: 2
    semicolon: true
  }
}
