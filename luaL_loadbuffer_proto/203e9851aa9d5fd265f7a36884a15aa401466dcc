chunk {
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          nil: 0
        }
        expressions {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                }
                args {
                  str: "\'"
                }
              }
            }
          }
        }
        expressions {
          str: "debug.getmetatable"
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
                exprassign {
                  key {
                    binary {
                      leftexp {
                      }
                      binop {
                      }
                      rightexp {
                        str: "string.upper"
                      }
                    }
                  }
                  value {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          namedassign {
                            name {
                              name: ""
                              num: 0
                            }
                            value {
                              tableconstructor {
                              }
                            }
                          }
                        }
                        fields {
                          field {
                            exprassign {
                              key {
                              }
                              value {
                                str: "debug.getmetatable"
                              }
                            }
                          }
                          sep {
                            semicolon: 0
                          }
                        }
                        lastSep {
                          semicolon: 0
                        }
                      }
                    }
                  }
                }
              }
              fields {
                field {
                }
                sep {
                  comma: 668160
                }
              }
            }
          }
        }
        expressions {
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
                exprassign {
                  key {
                    binary {
                      leftexp {
                      }
                      binop {
                      }
                      rightexp {
                        str: "string.upper"
                      }
                    }
                  }
                  value {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                        fields {
                          field {
                            exprassign {
                              key {
                              }
                              value {
                                str: "debug.getmetatable"
                              }
                            }
                          }
                          sep {
                            semicolon: 0
                          }
                        }
                        lastSep {
                          semicolon: 0
                        }
                      }
                    }
                  }
                }
              }
              fields {
                field {
                }
                sep {
                  comma: 668160
                }
              }
            }
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
        }
        explast {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                }
                args {
                  str: "\'"
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
}
