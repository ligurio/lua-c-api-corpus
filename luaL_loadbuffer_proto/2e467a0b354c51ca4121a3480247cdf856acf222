chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            number: -11.5
          }
          binop {
            concat: 24576
          }
          rightexp {
            str: "bbbbbbbb"
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  binary {
                    leftexp {
                      unary {
                        unop {
                          negate: 24576
                        }
                        exp {
                          prefixexp {
                            exp {
                              binary {
                                leftexp {
                                  number: -8.3711609936427134e+298
                                }
                                binop {
                                  or: 24576
                                }
                                rightexp {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    binop {
                      concat: 0
                    }
                    rightexp {
                      number: nan
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        repeatcycle {
                          block {
                            chunk {
                            }
                          }
                          condition {
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
}
