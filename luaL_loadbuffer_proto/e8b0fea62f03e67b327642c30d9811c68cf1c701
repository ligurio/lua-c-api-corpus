chunk {
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                }
                value {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          var {
                            name {
                              name: "xpcall"
                              num: 0
                            }
                          }
                        }
                        args {
                          explist {
                            explist {
                              expressions {
                                prefixexp {
                                  var {
                                    name {
                                      name: "collectgarbage"
                                      num: 0
                                    }
                                  }
                                }
                              }
                              expressions {
                                prefixexp {
                                  var {
                                    name {
                                      name: "collectgarbage"
                                      num: 0
                                    }
                                  }
                                }
                              }
                              explast {
                                true: 5
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    prefixexp {
                      exp {
                      }
                    }
                  }
                  value {
                    function {
                      body {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                        }
                        binop {
                          add: 0
                        }
                        rightexp {
                          str: "\'<<66<66*\'<"
                        }
                      }
                    }
                    binop {
                      div: 8
                    }
                    rightexp {
                      str: "\'<<66*\'<"
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: 0
      }
      stopexp {
      }
      stepexp {
        number: 1.03757106195038e-309
      }
      doblock {
        block {
          chunk {
            stat {
              localfunc {
                name {
                  name: ""
                  num: 0
                }
                funcbody {
                  block {
                    chunk {
                      laststat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
