chunk {
  stat {
    list {
      varlist {
        var {
          indexname {
            prefixexp {
            }
            Name: ""
          }
        }
        vars {
          indexexpr {
            prefixexp {
              exp {
              }
            }
            exp {
              binary {
                leftexp {
                  prefixexp {
                    exp {
                      binary {
                        leftexp {
                          number: 0
                        }
                        binop {
                          sub: 161
                        }
                        rightexp {
                          binary {
                            leftexp {
                              number: 358.08969533209165
                            }
                            binop {
                              exp: 0
                            }
                            rightexp {
                              number: 118.78498777467757
                            }
                          }
                        }
                      }
                    }
                  }
                }
                binop {
                  greaterEqual: 161
                }
                rightexp {
                  false: 538968064
                }
              }
            }
          }
        }
        vars {
          indexexpr {
            prefixexp {
              exp {
                ellipsis: "("
              }
            }
            exp {
            }
          }
        }
        vars {
          indexexpr {
            prefixexp {
              exp {
              }
            }
            exp {
            }
          }
        }
      }
      explist {
        expressions {
          nil: 0
        }
        expressions {
          unary {
            unop {
            }
            exp {
              binary {
                leftexp {
                  prefixexp {
                    exp {
                      nil: 41
                    }
                  }
                }
                binop {
                  div: 4
                }
                rightexp {
                  function {
                    body {
                      block {
                        chunk {
                          laststat {
                            break: 0
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          unary {
            unop {
            }
            exp {
              binary {
                leftexp {
                  false: 3276801
                }
                binop {
                }
                rightexp {
                  binary {
                    leftexp {
                      false: 538968064
                    }
                    binop {
                      or: 3276801
                    }
                    rightexp {
                      false: 3276801
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          prefixexp {
            exp {
              unary {
                unop {
                }
                exp {
                  binary {
                    leftexp {
                      prefixexp {
                        exp {
                          nil: 41
                        }
                      }
                    }
                    binop {
                      div: 4
                    }
                    rightexp {
                      prefixexp {
                        exp {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        explast {
          binary {
            leftexp {
            }
            binop {
              add: 0
            }
            rightexp {
            }
          }
        }
      }
    }
  }
}
