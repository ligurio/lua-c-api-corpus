chunk {
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
          }
          binop {
          }
          rightexp {
            binary {
              leftexp {
              }
              binop {
                concat: 127
              }
              rightexp {
                binary {
                  leftexp {
                  }
                  binop {
                    less: 0
                  }
                  rightexp {
                    binary {
                      leftexp {
                      }
                      binop {
                        less: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                          }
                          binop {
                            less: 0
                          }
                          rightexp {
                            binary {
                              leftexp {
                              }
                              binop {
                                mod: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                        mult: 0
                                      }
                                      rightexp {
                                        function {
                                          body {
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                    less: 0
                                  }
                                  rightexp {
                                    binary {
                                      leftexp {
                                        binary {
                                          leftexp {
                                            tableconstructor {
                                            }
                                          }
                                          binop {
                                            concat: 6094848
                                          }
                                          rightexp {
                                            binary {
                                              leftexp {
                                              }
                                              binop {
                                                concat: 6094848
                                              }
                                              rightexp {
                                              }
                                            }
                                          }
                                        }
                                      }
                                      binop {
                                        lessEqual: 6
                                      }
                                      rightexp {
                                        true: 2097152
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
