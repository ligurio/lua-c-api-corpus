chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ")"
          num: 512
        }
        names {
          name: ","
          num: 1
        }
        names {
          name: ""
          num: 42752
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\n"
          num: 0
        }
        names {
          name: ","
          num: 262144
        }
        names {
          name: ""
          num: 150994944
        }
        names {
          name: "\000\000\000\000"
          num: 524288
        }
        names {
          name: ""
          num: 251
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 2304
        }
        names {
          name: ""
          num: 39
        }
        names {
          name: ","
          num: 262144
        }
        names {
          name: ","
          num: 262144
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
      explist {
        expressions {
          binary {
            leftexp {
            }
            binop {
            }
            rightexp {
            }
          }
        }
        explast {
          number: 1
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: "\000\000\000\000"
          num: 0
        }
        names {
          name: "asin"
          num: 25345
        }
        names {
          name: ","
          num: 0
        }
        names {
          name: ","
          num: 1
        }
        names {
          name: ""
          num: 42752
        }
        names {
          name: ""
          num: 524288
        }
        names {
          name: "\n"
          num: 4194304000
        }
        names {
          name: ""
          num: 2097153
        }
        names {
          name: "stderr"
          num: 2298478592
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 512
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ","
          num: 42752
        }
        names {
          name: ","
          num: 262144
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\n"
          num: 0
        }
        names {
          name: ","
          num: 1
        }
        names {
          name: ""
          num: 42752
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555\n"
          num: 0
        }
        names {
          name: ","
          num: 262144
        }
        names {
          name: ""
          num: 150994944
        }
        names {
          name: "\000\000\000\000"
          num: 0
        }
        names {
          name: ""
          num: 12779521
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ","
          num: 262144
        }
        names {
          name: ","
          num: 262144
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
    }
  }
  stat {
    block {
      block {
        chunk {
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\n"
          num: 0
        }
        names {
          name: ","
          num: 1
        }
        names {
          name: ""
          num: 42752
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555\n"
          num: 0
        }
        names {
          name: ""
          num: 262144
        }
        names {
          name: ""
          num: 150994944
        }
        names {
          name: "\000\000\000\000"
          num: 0
        }
        names {
          name: ""
          num: 12779521
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\033\000\000\000\000\000\000\000"
          num: 1
        }
        names {
          name: ","
          num: 262144
        }
        names {
          name: ","
          num: 262144
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\n\000"
          num: 0
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ","
          num: 4
        }
        names {
          name: "\n"
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 42752
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\n222222222222222222222222222222222222222222222222"
          num: 0
        }
        names {
          name: ""
          num: 32
        }
        names {
          name: "\000\000\000\000"
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: "}}}}}}}z}}}}}}}}"
          num: 1
        }
        names {
          name: ""
          num: 654311425
        }
        names {
          name: "#"
          num: 42752
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\'"
          num: 0
        }
        names {
          name: "debug.getho.ok"
          num: 0
        }
        names {
          name: ""
          num: 1024
        }
        names {
          name: "\000o"
          num: 0
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 150994944
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 150994944
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
              semicolon: true
            }
            stat {
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
            stat {
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
            stat {
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      block {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                          }
                        }
                        condition {
                        }
                      }
                    }
                    stat {
                      repeatcycle {
                        block {
                          chunk {
                          }
                        }
                        condition {
                        }
                      }
                    }
                  }
                }
                condition {
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  number: 4.94065645841247e-324
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  nil: 0
                }
              }
            }
            stat {
              call {
                namedArgs {
                  prefixexp {
                  }
                  name {
                    name: ""
                    num: 0
                  }
                  args {
                  }
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      whilecycle {
                        condition {
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                repeatcycle {
                                  block {
                                    chunk {
                                      stat {
                                        forcyclelist {
                                          names {
                                            firstname {
                                              name: ""
                                              num: 0
                                            }
                                            names {
                                              name: "\377"
                                              num: 0
                                            }
                                          }
                                          expressions {
                                            explast {
                                            }
                                          }
                                          doblock {
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  condition {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      semicolon: true
                    }
                  }
                }
                condition {
                }
              }
            }
          }
        }
      }
    }
  }
}
