chunk {
  stat {
    func {
      name {
        firstname {
          name: "tonumber"
          num: 2048
        }
      }
      body {
        parlist {
          namelist {
            namelist {
              firstname {
                name: ""
                num: 0
              }
            }
          }
        }
        block {
          chunk {
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                expressions {
                  explast {
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              list {
                varlist {
                  var {
                    name {
                      name: ""
                      num: 4278190080
                    }
                  }
                  vars {
                  }
                }
                explist {
                  expressions {
                    number: 6.63123684676648e-316
                  }
                  expressions {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                            str: "\'"
                          }
                        }
                      }
                    }
                  }
                  expressions {
                    binary {
                      leftexp {
                        ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                      }
                      binop {
                        greater: 3080192
                      }
                      rightexp {
                        true: 8224
                      }
                    }
                  }
                  expressions {
                    unary {
                      unop {
                      }
                      exp {
                        nil: 4
                      }
                    }
                  }
                  expressions {
                    tableconstructor {
                    }
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                    binary {
                      leftexp {
                      }
                      binop {
                      }
                      rightexp {
                        nil: 0
                      }
                    }
                  }
                  expressions {
                    tableconstructor {
                    }
                  }
                  expressions {
                    str: "debug.traceback"
                  }
                  explast {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                            str: "\'"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              exprassign {
                key {
                  binary {
                    leftexp {
                      true: 4
                    }
                    binop {
                      div: 0
                    }
                    rightexp {
                      tableconstructor {
                      }
                    }
                  }
                }
                value {
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
          true: 0
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  laststat {
    break: 4294967289
    semicolon: true
  }
}
