chunk {
  stat {
    func {
      name {
        firstname {
          name: "ppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp\236ppp"
          num: 0
        }
        lastname {
          name: "pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
          num: 0
        }
      }
      body {
        parlist {
          ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377tmpname"
        }
        block {
          chunk {
            laststat {
              break: 5
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
          num: 6513008
        }
        names {
          name: "counterwrite_8"
          num: 0
        }
      }
      explist {
        expressions {
          function {
            body {
              block {
                chunk {
                  laststat {
                    break: 0
                  }
                }
              }
            }
          }
        }
        explast {
          number: -709.375
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
          indexexpr {
            prefixexp {
              var {
                indexname {
                  prefixexp {
                  }
                  Name: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                }
              }
            }
            exp {
            }
          }
        }
      }
      explist {
        explast {
          ellipsis: "-"
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
          num: 6513008
        }
        names {
          name: "counter_8"
          num: 0
        }
      }
      explist {
        expressions {
          function {
            body {
              block {
                chunk {
                }
              }
            }
          }
        }
        explast {
          number: -709.375
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 12288
        }
        names {
          name: "not "
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              break: 0
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
    ifstat {
      condition {
        ellipsis: "ckunterwrite_8"
      }
      first {
        chunk {
          stat {
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                }
              }
              clauses {
                condition {
                  false: 4143906816
                }
                block {
                  chunk {
                  }
                }
              }
              last {
                chunk {
                  laststat {
                    semicolon: true
                  }
                }
              }
            }
          }
        }
      }
      last {
        chunk {
          stat {
            func {
              name {
                firstname {
                  name: ""
                  num: 0
                }
                lastname {
                  name: ""
                  num: 32
                }
              }
              body {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
      condition {
        nil: 65536
      }
    }
  }
  stat {
    list {
      varlist {
        var {
          indexexpr {
            prefixexp {
              exp {
                prefixexp {
                  var {
                    name {
                      name: "select"
                      num: 0
                    }
                  }
                }
              }
            }
            exp {
              binary {
                leftexp {
                  binary {
                    leftexp {
                      unary {
                        unop {
                          length: 0
                        }
                        exp {
                          str: "__________"
                        }
                      }
                    }
                    binop {
                      less: 524288
                    }
                    rightexp {
                      prefixexp {
                      }
                    }
                  }
                }
                binop {
                  mod: 0
                }
                rightexp {
                  str: "\'<66.>633332<\'<8"
                }
              }
            }
          }
        }
        vars {
        }
      }
      explist {
        explast {
          binary {
            leftexp {
            }
            binop {
              mult: 25348
            }
            rightexp {
              str: "\'<66.>633332<\'<8"
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        str
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            semicolon: true
          }
        }
      }
      condition {
        prefixexp {
          var {
            indexname {
              prefixexp {
              }
              Name: ""
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                  }
                  stat {
                    list {
                      varlist {
                        var {
                        }
                        vars {
                        }
                      }
                      explist {
                        explast {
                          ellipsis: ":"
                        }
                      }
                    }
                  }
                  stat {
                    list {
                      varlist {
                        var {
                          indexexpr {
                            prefixexp {
                            }
                            exp {
                              nil: 0
                            }
                          }
                        }
                        vars {
                          indexexpr {
                            prefixexp {
                            }
                            exp {
                              prefixexp {
                                var {
                                  name {
                                    name: "load"
                                    num: 0
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      explist {
                        expressions {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                  var {
                                    name {
                                      name: "load"
                                      num: 537198848
                                    }
                                  }
                                }
                                args {
                                  explist {
                                    explist {
                                      expressions {
                                        prefixexp {
                                          var {
                                            name {
                                              name: "type"
                                              num: 1310720
                                            }
                                          }
                                        }
                                      }
                                      explast {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                }
                                args {
                                }
                              }
                            }
                          }
                        }
                        explast {
                        }
                      }
                    }
                  }
                }
              }
              condition {
                nil: 2
              }
            }
          }
        }
      }
      clauses {
        condition {
        }
        block {
          chunk {
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 12288
        }
        names {
          name: "not "
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            laststat {
              break: 0
            }
          }
        }
      }
    }
  }
  laststat {
    semicolon: true
  }
}
