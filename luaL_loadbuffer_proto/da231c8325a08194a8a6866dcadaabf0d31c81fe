chunk {
  stat {
    localfunc {
      name {
        name: "."
        num: 4
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: "."
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: "\323"
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
          stat {
            semicolon: true
          }
          stat {
            whilecycle {
              condition {
              }
              doblock {
                block {
                  chunk {
                    stat {
                      whilecycle {
                        condition {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                expression {
                                }
                              }
                              fields {
                                field {
                                  expression {
                                    prefixexp {
                                    }
                                  }
                                }
                                sep {
                                }
                              }
                              fields {
                                field {
                                  expression {
                                    binary {
                                      leftexp {
                                        prefixexp {
                                          exp {
                                            binary {
                                              leftexp {
                                                binary {
                                                  leftexp {
                                                    number: 5.01875835570705e-317
                                                  }
                                                  binop {
                                                    concat: 822083584
                                                  }
                                                  rightexp {
                                                    binary {
                                                      leftexp {
                                                        number: -48.00000000000005
                                                      }
                                                      binop {
                                                        exp: 0
                                                      }
                                                      rightexp {
                                                        number: -48.00000000000005
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              binop {
                                                notEqual: 822083584
                                              }
                                              rightexp {
                                                number: 0
                                              }
                                            }
                                          }
                                        }
                                      }
                                      binop {
                                      }
                                      rightexp {
                                        number: 0
                                      }
                                    }
                                  }
                                }
                                sep {
                                }
                              }
                            }
                          }
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                repeatcycle {
                                  block {
                                    chunk {
                                      stat {
                                        semicolon: true
                                      }
                                    }
                                  }
                                  condition {
                                  }
                                }
                              }
                              stat {
                                semicolon: true
                              }
                              stat {
                                semicolon: true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        nil: 12544
      }
    }
  }
  stat {
  }
  laststat {
    semicolon: true
  }
}
