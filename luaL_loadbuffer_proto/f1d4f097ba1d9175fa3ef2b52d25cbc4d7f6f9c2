chunk {
  stat {
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
              }
              fields {
                field {
                }
                sep {
                  comma: 4194304
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    whilecycle {
      condition {
        ellipsis: "Ychunk {\n  stat {\n    repeatcycle {\n      block {\n        chunk {\n        }\n      }\n      condition {\n        prefixexp {\n        }\n      }\n    }\n  }\n  stat {\n    repeatcycle {\n      block {\n        chunk {\n        }\n      }\n      condition {\n        prefixexp {\n        }\n      }\n    }\n  }\n  stat {\n    repeatcycle {\n      block {\n        chunk {\n        }\n      }\n      condition {\n        nil: 4\n      }\n    }\n  }\n}\n"
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  ellipsis: "Y"
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        localfunc {
                          name {
                            name: "\000\000"
                            num: 0
                          }
                          funcbody {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                      stat {
                        call {
                          prefArgs {
                            prefixexp {
                            }
                            args {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                  }
                                  fields {
                                    field {
                                    }
                                    sep {
                                      comma: 0
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      laststat {
                        break: 5
                      }
                    }
                  }
                }
              }
              semicolon: false
            }
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 2105376
                }
                startexp {
                  binary {
                    leftexp {
                      number: -21.152345664828317
                    }
                    binop {
                      mod: 0
                    }
                    rightexp {
                      number: -11.576171875
                    }
                  }
                }
                stopexp {
                  number: 0
                }
                stepexp {
                  binary {
                    leftexp {
                      number: -21.152345664828317
                    }
                    binop {
                      mod: 0
                    }
                    rightexp {
                      number: -11.576171875
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 2105376
                          }
                          startexp {
                            binary {
                              leftexp {
                                number: -21.152345664828317
                              }
                              binop {
                                mod: 0
                              }
                              rightexp {
                                prefixexp {
                                  functioncall {
                                    namedArgs {
                                      prefixexp {
                                      }
                                      name {
                                        name: "print"
                                        num: 0
                                      }
                                      args {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          stopexp {
                            number: 0
                          }
                          stepexp {
                            binary {
                              leftexp {
                                number: -21.152345664828317
                              }
                              binop {
                                mod: 0
                              }
                              rightexp {
                                number: -11.576171875
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  repeatcycle {
                                    block {
                                      chunk {
                                        stat {
                                          semicolon: true
                                        }
                                      }
                                    }
                                    condition {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        semicolon: false
                      }
                    }
                  }
                }
              }
            }
            laststat {
              break: 5
            }
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 4
      }
    }
  }
  stat {
  }
}
