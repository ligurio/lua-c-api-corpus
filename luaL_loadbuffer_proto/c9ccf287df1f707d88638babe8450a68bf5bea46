chunk {
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
                functioncall {
                  prefArgs {
                    prefixexp {
                    }
                    args {
                    }
                  }
                }
              }
              args {
                explist {
                  explist {
                    expressions {
                      str: "step"
                    }
                    expressions {
                      unary {
                        unop {
                          negate: 0
                        }
                        exp {
                          binary {
                            leftexp {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                      var {
                                        indexexpr {
                                          prefixexp {
                                          }
                                          exp {
                                          }
                                        }
                                      }
                                    }
                                    args {
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                              notEqual: 0
                            }
                            rightexp {
                              nil: 38
                            }
                          }
                        }
                      }
                    }
                    explast {
                      number: 0
                    }
                  }
                }
              }
            }
          }
        }
        args {
          explist {
            explist {
              expressions {
                str: "step"
              }
              expressions {
                unary {
                  unop {
                    negate: 0
                  }
                  exp {
                    binary {
                      leftexp {
                        prefixexp {
                          exp {
                            binary {
                              leftexp {
                                number: 1.6869608407943928e+69
                              }
                              binop {
                                or: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                        binary {
                                          leftexp {
                                            binary {
                                              leftexp {
                                                binary {
                                                  leftexp {
                                                    binary {
                                                      leftexp {
                                                        binary {
                                                          leftexp {
                                                            binary {
                                                              leftexp {
                                                                binary {
                                                                  leftexp {
                                                                    binary {
                                                                      leftexp {
                                                                        binary {
                                                                          leftexp {
                                                                          }
                                                                          binop {
                                                                          }
                                                                          rightexp {
                                                                            binary {
                                                                              leftexp {
                                                                              }
                                                                              binop {
                                                                              }
                                                                              rightexp {
                                                                                str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                      binop {
                                                                        div: 0
                                                                      }
                                                                      rightexp {
                                                                        str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                                      }
                                                                    }
                                                                  }
                                                                  binop {
                                                                    div: 0
                                                                  }
                                                                  rightexp {
                                                                    binary {
                                                                      leftexp {
                                                                        binary {
                                                                          leftexp {
                                                                          }
                                                                          binop {
                                                                          }
                                                                          rightexp {
                                                                            str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                                          }
                                                                        }
                                                                      }
                                                                      binop {
                                                                        div: 0
                                                                      }
                                                                      rightexp {
                                                                        str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              binop {
                                                                mult: 16385
                                                              }
                                                              rightexp {
                                                                binary {
                                                                  leftexp {
                                                                    str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                                  }
                                                                  binop {
                                                                  }
                                                                  rightexp {
                                                                    str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          binop {
                                                          }
                                                          rightexp {
                                                            str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                          }
                                                        }
                                                      }
                                                      binop {
                                                        div: 0
                                                      }
                                                      rightexp {
                                                        str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                      }
                                                    }
                                                  }
                                                  binop {
                                                    notEqual: 3080192
                                                  }
                                                  rightexp {
                                                    binary {
                                                      leftexp {
                                                        binary {
                                                          leftexp {
                                                            str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                          }
                                                          binop {
                                                          }
                                                          rightexp {
                                                            str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                          }
                                                        }
                                                      }
                                                      binop {
                                                        div: 0
                                                      }
                                                      rightexp {
                                                        str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              binop {
                                                mult: 16385
                                              }
                                              rightexp {
                                                str: "\'-8<table.pack\'\'/8<\'<8<8"
                                              }
                                            }
                                          }
                                          binop {
                                            add: 0
                                          }
                                          rightexp {
                                            str: "\'-8<table.pack\'\'/8<\'<8<8"
                                          }
                                        }
                                      }
                                      binop {
                                        mult: 16385
                                      }
                                      rightexp {
                                        str: "\'-8<table.pack\'\'/8<\'<8<8"
                                      }
                                    }
                                  }
                                  binop {
                                  }
                                  rightexp {
                                    str: "\'-8<table.pack\'\'/8<\'<8<8"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      binop {
                        notEqual: 0
                      }
                      rightexp {
                        nil: 38
                      }
                    }
                  }
                }
              }
              explast {
                ellipsis: "\'~~9~9~\'9~"
              }
            }
          }
        }
      }
    }
  }
  laststat {
    semicolon: false
  }
}
