chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: "atan"
          num: 0
        }
        names {
          name: "7__eq"
          num: 0
        }
        names {
          name: "7__eq"
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\013\000\000\000\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
          num: 0
        }
        names {
          name: "\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265\265"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "7__eq"
          num: 252
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 1
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 10
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            unary {
              unop {
              }
              exp {
                prefixexp {
                }
              }
            }
          }
          binop {
            notEqual: 0
          }
          rightexp {
            binary {
              leftexp {
                str: "7__eq"
              }
              binop {
                concat: 0
              }
              rightexp {
                binary {
                  leftexp {
                    str: "7__eq"
                  }
                  binop {
                    concat: 0
                  }
                  rightexp {
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
}
