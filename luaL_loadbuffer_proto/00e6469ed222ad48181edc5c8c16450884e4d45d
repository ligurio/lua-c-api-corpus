chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: ""
          num: 0
        }
      }
      expressions {
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<<not 7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        explast {
          str: "\'<mathn<7<<7<\'<9"
        }
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 0
                  }
                  names {
                    name: ""
                    num: 0
                  }
                }
                expressions {
                  expressions {
                    tableconstructor {
                    }
                  }
                  expressions {
                    str: "\'<mathn<7<<7<\'<9"
                  }
                  expressions {
                    str: "\'<mathn<7<<7<\'<9"
                  }
                  explast {
                    str: "\'<mathn<7<<7<\'<9"
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclelist {
                          names {
                            firstname {
                              name: ""
                              num: 0
                            }
                            names {
                              name: ""
                              num: 0
                            }
                          }
                          expressions {
                            expressions {
                              str: "\'<mathn<7<<7<\'<9"
                            }
                            expressions {
                              str: "\'<mathn<7<<not 7<\'<9"
                            }
                            expressions {
                              str: "\'<mathn<7<<7<\'<9"
                            }
                            expressions {
                              str: "\'<mathn<7<<7<\'<9"
                            }
                            expressions {
                              str: "\'<mathn<7<<7<\'<9"
                            }
                            explast {
                              str: "\'<mathn<7<<7<\'<9"
                            }
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  forcyclelist {
                                    names {
                                      firstname {
                                        name: ""
                                        num: 0
                                      }
                                      names {
                                        name: ""
                                        num: 0
                                      }
                                    }
                                    expressions {
                                      expressions {
                                        tableconstructor {
                                        }
                                      }
                                      expressions {
                                        str: "\'<mathn<7<<7<\'<9"
                                      }
                                      expressions {
                                        str: "\'<mathn<7<<7<\'<9"
                                      }
                                      explast {
                                        str: "\'<mathn<7<<7<\'<9"
                                      }
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                          stat {
                                          }
                                          stat {
                                            list {
                                              varlist {
                                                var {
                                                }
                                                vars {
                                                  name {
                                                    name: "collectgarbage"
                                                    num: 1094647808
                                                  }
                                                }
                                              }
                                              explist {
                                                expressions {
                                                  str: "\'<mathn<7<<7<\'<9"
                                                }
                                                expressions {
                                                  str: "\'<mathn<7<<7<\'<9"
                                                }
                                                expressions {
                                                  str: "\'<athn<mathn<7<<7<\'<9"
                                                }
                                                expressions {
                                                  str: "\'<mathn<7<<7<\'<9"
                                                }
                                                explast {
                                                  str: "\'<mathn<7<<7<\'<9"
                                                }
                                              }
                                            }
                                            semicolon: true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                stat {
                                  list {
                                    varlist {
                                      var {
                                      }
                                    }
                                    explist {
                                      expressions {
                                        str: "\'<mathn<7<<7<\'<9"
                                      }
                                      expressions {
                                        str: "\'<mathn<7<<7<\'<9"
                                      }
                                      expressions {
                                        str: "\'<mathn<7<<7<\'<.8<\\\'<8\"\n          }\n        }\n      }\n      stepexp {\n        binary {\n          leftexp {\n            str: \"\\\'|(.8<\\\'<8\"\n          }\n          binop {\n            mod: 0\n          }\n          rightexp {\n      9"
                                      }
                                      expressions {
                                        str: "\'<mathn<7<<7<\'<9"
                                      }
                                      explast {
                                        str: "\'<mathn<7<<7<\'<9"
                                      }
                                    }
                                  }
                                  semicolon: false
                                }
                                stat {
                                  list {
                                    varlist {
                                      var {
                                      }
                                    }
                                    explist {
                                      expressions {
                                        str: "\'<mathn<7<<7<\'<9"
                                      }
                                      expressions {
                                        str: "\'<mathn<7<<7<\'<9"
                                      }
                                      expressions {
                                        ellipsis: "\227"
                                      }
                                      expressions {
                                        false: 1660944384
                                      }
                                      explast {
                                        str: "\'<mathn<7<<7<\'<9"
                                      }
                                    }
                                  }
                                  semicolon: false
                                }
                                stat {
                                  list {
                                    varlist {
                                      var {
                                      }
                                    }
                                    explist {
                                      expressions {
                                        str: "\'<mathn<7<<7<\'<9"
                                      }
                                      expressions {
                                        str: "\'<mathn<7<<7<\'<9"
                                      }
                                      expressions {
                                        str: "\'<mathn<7<<7<\'<9"
                                      }
                                      expressions {
                                        str: "\'<mathn<7<<7<\'<9"
                                      }
                                      explast {
                                        str: "\'<mathn<7<<7<\'<9"
                                      }
                                    }
                                  }
                                  semicolon: false
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        list {
                          varlist {
                            var {
                            }
                            vars {
                              name {
                                name: "collectgarbage"
                                num: 1094647808
                              }
                            }
                          }
                          explist {
                            expressions {
                              str: "\'<mathn<7<<7<\'<9"
                            }
                            expressions {
                              str: "\'<mathn<7<<7<\'<9"
                            }
                            expressions {
                              str: "\'<athn<mathn<7<<7<\'<9"
                            }
                            expressions {
                              str: "\'<mathn<7<<7<\'<9"
                            }
                            explast {
                              str: "\'<mathn<7<<7<\'<9"
                            }
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  expressions {
                    str: "\'<mathn<7<<7<\'<9"
                  }
                  expressions {
                    str: "\'<mathn<7<<7<\'<9"
                  }
                  expressions {
                    str: "\'<mathn<7<<7<\'<.8<\\\'<8\"\n          }\n        }\n      }\n      stepexp {\n        binary {\n          leftexp {\n            str: \"\\\'|(.8<\\\'<8\"\n          }\n          binop {\n            mod: 0\n          }\n          rightexp {\n      9"
                  }
                  expressions {
                    str: "\'<mathn<7<<7<\'<9"
                  }
                  explast {
                    str: "\'<mathn<7<<7<\'<9"
                  }
                }
              }
              semicolon: false
            }
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  expressions {
                    str: "\'<mathn<7<<7<\'<9"
                  }
                  expressions {
                    str: "\'<mathn<7<<7<\'<9"
                  }
                  expressions {
                    str: "\'<mathn<7<<7<\'<.8<\\\'<8\"\n          }\n        }\n      }\n      stepexp {\n        binary {\n          leftexp {\n            str: \"\\\'|(.8<\\\'<8\"\n          }\n          binop {\n            mod: 0\n          }\n          rightexp {\n      9"
                  }
                  expressions {
                    false: 1660944384
                  }
                  explast {
                    str: "\'<mathn<7<<7<\'<9"
                  }
                }
              }
              semicolon: false
            }
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  expressions {
                    str: "\'<mathn<7<<7<\'<9"
                  }
                  expressions {
                    ellipsis: "\'<mathn<7<<7<\'<9"
                  }
                  expressions {
                    str: "\'<mathn<7<<7<\'<9"
                  }
                  expressions {
                    str: "\'<mathn<7<<7<\'<9"
                  }
                  explast {
                    str: "\'<mathn<7<<7<\'<9"
                  }
                }
              }
              semicolon: false
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          binary {
            leftexp {
            }
            binop {
            }
            rightexp {
            }
          }
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
        }
        explast {
          str: "\'<mathn<7<<7<\'<9"
        }
      }
    }
    semicolon: false
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        explast {
          str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
        }
      }
    }
    semicolon: false
  }
}
