chunk {
  stat {
    list {
      varlist {
        var {
        }
        vars {
        }
      }
      explist {
        expressions {
          binary {
            leftexp {
              true: 0
            }
            binop {
              add: 0
            }
            rightexp {
              prefixexp {
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    list {
                      varlist {
                        var {
                        }
                        vars {
                          indexexpr {
                            prefixexp {
                              exp {
                                tableconstructor {
                                }
                              }
                            }
                            exp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                      }
                                    }
                                    binop {
                                      add: 1024
                                    }
                                    rightexp {
                                      str: "\006\000\000\000\000\000\000\000"
                                    }
                                  }
                                }
                                binop {
                                  sub: 0
                                }
                                rightexp {
                                }
                              }
                            }
                          }
                        }
                      }
                      explist {
                        expressions {
                          binary {
                            leftexp {
                              prefixexp {
                              }
                            }
                            binop {
                              add: 0
                            }
                            rightexp {
                              prefixexp {
                                exp {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                        var {
                                          indexexpr {
                                            prefixexp {
                                              exp {
                                              }
                                            }
                                            exp {
                                              binary {
                                                leftexp {
                                                  binary {
                                                    leftexp {
                                                      prefixexp {
                                                      }
                                                    }
                                                    binop {
                                                      sub: 0
                                                    }
                                                    rightexp {
                                                    }
                                                  }
                                                }
                                                binop {
                                                  sub: 0
                                                }
                                                rightexp {
                                                  function {
                                                    body {
                                                      block {
                                                        chunk {
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                      concat: 7237475
                                    }
                                    rightexp {
                                      prefixexp {
                                        var {
                                          indexexpr {
                                            prefixexp {
                                              exp {
                                                ellipsis: "\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277"
                                              }
                                            }
                                            exp {
                                              binary {
                                                leftexp {
                                                  binary {
                                                    leftexp {
                                                      prefixexp {
                                                      }
                                                    }
                                                    binop {
                                                      add: 0
                                                    }
                                                    rightexp {
                                                      str: "\'-8<table.pack\'\'/8<\'<8<8"
                                                    }
                                                  }
                                                }
                                                binop {
                                                  sub: 0
                                                }
                                                rightexp {
                                                  function {
                                                    body {
                                                      block {
                                                        chunk {
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        explast {
                        }
                      }
                    }
                  }
                }
              }
              condition {
                false: 0
              }
            }
          }
          stat {
            forcyclelist {
              names {
                firstname {
                  name: ""
                  num: 0
                }
              }
              expressions {
                explast {
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      localfunc {
                        name {
                          name: ""
                          num: 1953069157
                        }
                        funcbody {
                          parlist {
                            ellipsis: "\377\377\377\377"
                          }
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        binary {
          leftexp {
            prefixexp {
            }
          }
          binop {
            add: 0
          }
          rightexp {
            prefixexp {
              exp {
                binary {
                  leftexp {
                    prefixexp {
                      var {
                        indexexpr {
                          prefixexp {
                            exp {
                              ellipsis: "\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277\277"
                            }
                          }
                          exp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    prefixexp {
                                    }
                                  }
                                  binop {
                                    add: 0
                                  }
                                  rightexp {
                                    str: "\'-8<table.pack\'\'/8<\'<8<8"
                                  }
                                }
                              }
                              binop {
                                sub: 0
                              }
                              rightexp {
                                prefixexp {
                                  exp {
                                    binary {
                                      leftexp {
                                        prefixexp {
                                        }
                                      }
                                      binop {
                                        mult: 1885434487
                                      }
                                      rightexp {
                                        prefixexp {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  binop {
                    concat: 7237475
                  }
                  rightexp {
                    prefixexp {
                      exp {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
