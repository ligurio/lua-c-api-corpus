chunk {
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 4076863739
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        ellipsis: "\221"
      }
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 4076863488
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 4076863488
        }
        args {
        }
      }
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 4076863488
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: "F"
          num: 0
        }
        lastname {
          name: ""
          num: 4
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: "\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242\242"
          num: 0
        }
        args {
        }
      }
    }
    semicolon: true
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 4076863739
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 4076863739
        }
        args {
        }
      }
    }
  }
  stat {
  }
}
