chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            prefixexp {
              functioncall {
                prefArgs {
                  prefixexp {
                    var {
                      name {
                        name: "next"
                        num: 0
                      }
                    }
                  }
                  args {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          exprassign {
                            key {
                              prefixexp {
                                exp {
                                  ellipsis: "\024\000\000\000\000\000\000\000"
                                }
                              }
                            }
                            value {
                            }
                          }
                        }
                        lastSep {
                          comma: 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          binop {
            concat: 0
          }
          rightexp {
            prefixexp {
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              call {
                prefArgs {
                  prefixexp {
                    var {
                      name {
                        name: "next"
                        num: 0
                      }
                    }
                  }
                  args {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          exprassign {
                            key {
                              prefixexp {
                                exp {
                                  ellipsis: "\024\000\000\000\000\000\000\000"
                                }
                              }
                            }
                            value {
                            }
                          }
                        }
                        lastSep {
                          comma: 0
                        }
                      }
                    }
                  }
                }
              }
            }
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  explast {
                  }
                }
              }
              semicolon: false
            }
            laststat {
            }
          }
        }
      }
    }
  }
}
