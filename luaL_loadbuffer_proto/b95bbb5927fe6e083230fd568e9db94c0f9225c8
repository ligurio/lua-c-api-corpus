chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        ellipsis: "nil"
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          prefixexp {
            var {
              name {
                name: "\345\345\345\345\345\345,\345\345\345\3457\\377\\377\\377\\377.\n \345\345\345\345\345\345\345\345"
                num: 0
              }
            }
          }
        }
        explast {
        }
      }
    }
    semicolon: true
  }
  laststat {
    explist {
      explist {
        expressions {
        }
        expressions {
          binary {
            leftexp {
            }
            binop {
              equal: 64255
            }
            rightexp {
              tableconstructor {
                fieldlist {
                  firstField {
                  }
                  fields {
                    field {
                      expression {
                        unary {
                          unop {
                          }
                          exp {
                            prefixexp {
                              functioncall {
                                prefArgs {
                                  prefixexp {
                                  }
                                  args {
                                    str: ""
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    sep {
                    }
                  }
                }
              }
            }
          }
        }
        explast {
          binary {
            leftexp {
              prefixexp {
                exp {
                  prefixexp {
                  }
                }
              }
            }
            binop {
              mod: 0
            }
            rightexp {
            }
          }
        }
      }
    }
    semicolon: false
  }
}
