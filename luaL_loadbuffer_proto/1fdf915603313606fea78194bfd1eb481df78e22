chunk {
  stat {
    whilecycle {
      condition {
        unary {
          unop {
            negate: 0
          }
          exp {
            unary {
              unop {
                negate: 0
              }
              exp {
                unary {
                  unop {
                    negate: 0
                  }
                  exp {
                    unary {
                      unop {
                        negate: 0
                      }
                      exp {
                        prefixexp {
                          exp {
                            unary {
                              unop {
                                negate: 0
                              }
                              exp {
                                unary {
                                  unop {
                                    negate: 0
                                  }
                                  exp {
                                    unary {
                                      unop {
                                        negate: 0
                                      }
                                      exp {
                                        prefixexp {
                                          exp {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        unary {
          unop {
            negate: 0
          }
          exp {
            unary {
              unop {
                negate: 4
              }
              exp {
                unary {
                  unop {
                    negate: 0
                  }
                  exp {
                    unary {
                      unop {
                        negate: 0
                      }
                      exp {
                        unary {
                          unop {
                            negate: 0
                          }
                          exp {
                            unary {
                              unop {
                                negate: 0
                              }
                              exp {
                                unary {
                                  unop {
                                    negate: 0
                                  }
                                  exp {
                                    unary {
                                      unop {
                                        negate: 0
                                      }
                                      exp {
                                        prefixexp {
                                          exp {
                                            unary {
                                              unop {
                                                negate: 0
                                              }
                                              exp {
                                                unary {
                                                  unop {
                                                    negate: 0
                                                  }
                                                  exp {
                                                    unary {
                                                      unop {
                                                        negate: 0
                                                      }
                                                      exp {
                                                        prefixexp {
                                                          exp {
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              semicolon: false
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        prefixexp {
          functioncall {
            namedArgs {
              prefixexp {
              }
              name {
                name: ""
                num: 0
              }
              args {
                explist {
                  explist {
                    explast {
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
