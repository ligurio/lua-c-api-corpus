chunk {
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "xpcall"
              num: 0
            }
          }
        }
        args {
          explist {
            explist {
              expressions {
                prefixexp {
                  var {
                    name {
                      name: "require"
                      num: 0
                    }
                  }
                }
              }
              expressions {
                prefixexp {
                  var {
                    name {
                      name: "xpcall"
                      num: 538976288
                    }
                  }
                }
              }
              explast {
                str: ";"
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
          laststat {
            break: 538976288
          }
        }
      }
      condition {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
                var {
                  name {
                    name: "xpcall"
                    num: 0
                  }
                }
              }
              args {
                explist {
                  explist {
                    expressions {
                      prefixexp {
                        var {
                          name {
                            name: "require"
                            num: 0
                          }
                        }
                      }
                    }
                    expressions {
                      prefixexp {
                        var {
                          name {
                            name: "load"
                            num: 0
                          }
                        }
                      }
                    }
                    explast {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
