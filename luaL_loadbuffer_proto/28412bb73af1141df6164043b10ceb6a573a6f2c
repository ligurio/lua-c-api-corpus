chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
          }
          binop {
            add: 0
          }
          rightexp {
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              call {
                prefArgs {
                  prefixexp {
                    var {
                      name {
                        name: "next"
                        num: 0
                      }
                    }
                  }
                  args {
                    explist {
                      explist {
                        explast {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                exprassign {
                                  key {
                                  }
                                  value {
                                  }
                                }
                              }
                              fields {
                                field {
                                  expression {
                                    nil: 0
                                  }
                                }
                                sep {
                                }
                              }
                              fields {
                                field {
                                  expression {
                                    nil: 0
                                  }
                                }
                                sep {
                                  semicolon: 1048576
                                }
                              }
                              lastSep {
                                comma: 6488064
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
}
