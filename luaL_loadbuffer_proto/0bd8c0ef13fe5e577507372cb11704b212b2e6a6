chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            semicolon: true
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                  var {
                    name {
                      name: "xpcall"
                      num: 0
                    }
                  }
                }
                args {
                  explist {
                    explist {
                      expressions {
                        prefixexp {
                          var {
                            name {
                              name: "assert"
                              num: 0
                            }
                          }
                        }
                      }
                      expressions {
                        prefixexp {
                          var {
                            name {
                              name: "xpcall"
                              num: 0
                            }
                          }
                        }
                      }
                      expressions {
                        false: 8224
                      }
                      explast {
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
          }
          stat {
          }
          stat {
            call {
            }
            semicolon: false
          }
        }
      }
      condition {
        binary {
          leftexp {
            str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
          }
          binop {
          }
          rightexp {
          }
        }
      }
    }
  }
}
