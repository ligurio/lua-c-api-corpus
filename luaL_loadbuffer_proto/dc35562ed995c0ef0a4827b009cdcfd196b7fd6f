chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
        number: -60
      }
      stepexp {
        false: 0
      }
      doblock {
        block {
          chunk {
            stat {
              block {
                block {
                  chunk {
                    stat {
                      whilecycle {
                        condition {
                          binary {
                            leftexp {
                            }
                            binop {
                              lessEqual: 0
                            }
                            rightexp {
                              prefixexp {
                                exp {
                                  binary {
                                    leftexp {
                                      number: 0
                                    }
                                    binop {
                                      sub: 109
                                    }
                                    rightexp {
                                      str: "\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215\215"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                forcyclename {
                                  name {
                                    name: ""
                                    num: 0
                                  }
                                  startexp {
                                  }
                                  stopexp {
                                    number: -60
                                  }
                                  stepexp {
                                    false: 0
                                  }
                                  doblock {
                                    block {
                                      chunk {
                                        stat {
                                          block {
                                            block {
                                              chunk {
                                                stat {
                                                  whilecycle {
                                                    condition {
                                                      binary {
                                                        leftexp {
                                                        }
                                                        binop {
                                                          lessEqual: 0
                                                        }
                                                        rightexp {
                                                          prefixexp {
                                                            exp {
                                                              binary {
                                                                leftexp {
                                                                  number: 0
                                                                }
                                                                binop {
                                                                  concat: 0
                                                                }
                                                                rightexp {
                                                                  binary {
                                                                    leftexp {
                                                                      prefixexp {
                                                                        exp {
                                                                          binary {
                                                                            leftexp {
                                                                              false: 4
                                                                            }
                                                                            binop {
                                                                              and: 2046823936
                                                                            }
                                                                            rightexp {
                                                                              prefixexp {
                                                                                exp {
                                                                                  binary {
                                                                                    leftexp {
                                                                                      false: 4
                                                                                    }
                                                                                    binop {
                                                                                      and: 0
                                                                                    }
                                                                                    rightexp {
                                                                                      prefixexp {
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                    binop {
                                                                    }
                                                                    rightexp {
                                                                      false: 2046823936
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    doblock {
                                                      block {
                                                        chunk {
                                                          laststat {
                                                            semicolon: true
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                stat {
                                                }
                                                stat {
                                                }
                                                laststat {
                                                  semicolon: true
                                                }
                                              }
                                            }
                                          }
                                        }
                                        stat {
                                          forcyclelist {
                                            names {
                                              firstname {
                                                name: ""
                                                num: 0
                                              }
                                            }
                                            expressions {
                                              expressions {
                                                prefixexp {
                                                  var {
                                                    name {
                                                      name: ""
                                                      num: 1828716544
                                                    }
                                                  }
                                                }
                                              }
                                              explast {
                                              }
                                            }
                                            doblock {
                                              block {
                                                chunk {
                                                }
                                              }
                                            }
                                          }
                                          semicolon: true
                                        }
                                        stat {
                                          call {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    stat {
                    }
                    stat {
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      laststat {
                      }
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                  number: 358.08969533209165
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                            }
                          }
                          explist {
                            explast {
                              ellipsis: "-------------------------------------------------------------------------------------------------"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
