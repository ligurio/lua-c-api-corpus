chunk {
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
            number: 1.69759663277222e-313
          }
          binop {
            lessEqual: 4
          }
          rightexp {
            ellipsis: "\'"
          }
        }
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
          }
          binop {
            sub: 3
          }
          rightexp {
            true: 4
          }
        }
      }
      first {
        chunk {
          stat {
            ifstat {
              condition {
                binary {
                  leftexp {
                    number: 1.69759663277222e-313
                  }
                  binop {
                    lessEqual: 3
                  }
                  rightexp {
                    str: "\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352"
                  }
                }
              }
              first {
                chunk {
                }
              }
              last {
                chunk {
                  stat {
                    ifstat {
                      condition {
                        binary {
                          leftexp {
                            number: 1.69759663277222e-313
                          }
                          binop {
                            lessEqual: 4
                          }
                          rightexp {
                            prefixexp {
                            }
                          }
                        }
                      }
                      first {
                        chunk {
                          stat {
                            ifstat {
                              condition {
                                binary {
                                  leftexp {
                                  }
                                  binop {
                                    sub: 3
                                  }
                                  rightexp {
                                    true: 3
                                  }
                                }
                              }
                              first {
                                chunk {
                                  stat {
                                    ifstat {
                                      condition {
                                        binary {
                                          leftexp {
                                            number: 1.69759663277222e-313
                                          }
                                          binop {
                                            lessEqual: 4
                                          }
                                          rightexp {
                                            prefixexp {
                                            }
                                          }
                                        }
                                      }
                                      first {
                                        chunk {
                                        }
                                      }
                                      last {
                                        chunk {
                                          stat {
                                            ifstat {
                                              condition {
                                                binary {
                                                  leftexp {
                                                    number: 1.69759663277222e-313
                                                  }
                                                  binop {
                                                    lessEqual: 4
                                                  }
                                                  rightexp {
                                                    prefixexp {
                                                    }
                                                  }
                                                }
                                              }
                                              first {
                                                chunk {
                                                  stat {
                                                  }
                                                }
                                              }
                                              last {
                                                chunk {
                                                }
                                              }
                                            }
                                          }
                                          stat {
                                            ifstat {
                                              condition {
                                                tableconstructor {
                                                  fieldlist {
                                                    firstField {
                                                    }
                                                    fields {
                                                      field {
                                                      }
                                                      sep {
                                                        semicolon: 8257536
                                                      }
                                                    }
                                                    fields {
                                                      field {
                                                      }
                                                      sep {
                                                        semicolon: 0
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              first {
                                                chunk {
                                                  laststat {
                                                    break: 989855744
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  stat {
                                    ifstat {
                                      condition {
                                        ellipsis: "\'"
                                      }
                                      first {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      last {
                        chunk {
                          stat {
                            ifstat {
                              condition {
                                binary {
                                  leftexp {
                                    number: 1.69759663277222e-313
                                  }
                                  binop {
                                    lessEqual: 4
                                  }
                                  rightexp {
                                    prefixexp {
                                    }
                                  }
                                }
                              }
                              first {
                                chunk {
                                }
                              }
                              last {
                                chunk {
                                  stat {
                                    ifstat {
                                      condition {
                                        binary {
                                          leftexp {
                                            number: 1.69759663277222e-313
                                          }
                                          binop {
                                            lessEqual: 4
                                          }
                                          rightexp {
                                            prefixexp {
                                            }
                                          }
                                        }
                                      }
                                      first {
                                        chunk {
                                        }
                                      }
                                      last {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                  stat {
                                    ifstat {
                                      condition {
                                        binary {
                                          leftexp {
                                          }
                                          binop {
                                            sub: 3
                                          }
                                          rightexp {
                                            true: 3
                                          }
                                        }
                                      }
                                      first {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                  laststat {
                                    break: 3
                                  }
                                }
                              }
                            }
                          }
                          stat {
                            block {
                              block {
                                chunk {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    ifstat {
                      condition {
                        binary {
                          leftexp {
                            number: 1.69759663277222e-313
                          }
                          binop {
                            lessEqual: 4
                          }
                          rightexp {
                            prefixexp {
                            }
                          }
                        }
                      }
                      first {
                        chunk {
                        }
                      }
                    }
                  }
                  laststat {
                    explist {
                      explist {
                        expressions {
                          ellipsis: "\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352\352"
                        }
                        explast {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
                tableconstructor {
                  fieldlist {
                    firstField {
                    }
                    fields {
                      field {
                      }
                      sep {
                        semicolon: 0
                      }
                    }
                  }
                }
              }
              first {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
}
