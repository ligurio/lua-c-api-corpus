chunk {
  stat {
    semicolon: true
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    whilecycle {
      condition {
        ellipsis: "\377"
      }
      doblock {
        block {
          chunk {
            laststat {
              explist {
                explist {
                  explast {
                    binary {
                      leftexp {
                        function {
                          body {
                            block {
                              chunk {
                                laststat {
                                  break: 0
                                }
                              }
                            }
                          }
                        }
                      }
                      binop {
                      }
                      rightexp {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        parlist {
          ellipsis: "dse"
        }
        block {
          chunk {
            stat {
              semicolon: true
            }
            stat {
              ifstat {
                condition {
                }
                first {
                  chunk {
                  }
                }
              }
            }
            stat {
            }
            stat {
            }
            stat {
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  laststat {
    explist {
      explist {
        expressions {
          binary {
            leftexp {
              function {
                body {
                  parlist {
                    ellipsis: "\377"
                  }
                  block {
                    chunk {
                      stat {
                      }
                      stat {
                      }
                      stat {
                      }
                      stat {
                      }
                      stat {
                      }
                    }
                  }
                }
              }
            }
            binop {
              sub: 4
            }
            rightexp {
              function {
                body {
                  block {
                    chunk {
                      stat {
                        semicolon: true
                      }
                      stat {
                      }
                      stat {
                        localfunc {
                          name {
                            name: ""
                            num: 0
                          }
                          funcbody {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                      stat {
                        semicolon: true
                      }
                      stat {
                      }
                      stat {
                        repeatcycle {
                          block {
                            chunk {
                            }
                          }
                          condition {
                            number: 6.63123684676648e-316
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
        }
        explast {
        }
      }
    }
  }
}
