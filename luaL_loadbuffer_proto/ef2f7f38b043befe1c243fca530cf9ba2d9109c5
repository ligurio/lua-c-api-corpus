chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            laststat {
              explist {
                explist {
                  explast {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                          }
                          args {
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclelist {
                          names {
                            firstname {
                              name: ""
                              num: 0
                            }
                          }
                          expressions {
                            explast {
                              function {
                                body {
                                  block {
                                    chunk {
                                      laststat {
                                        explist {
                                          explist {
                                            expressions {
                                              tableconstructor {
                                              }
                                            }
                                            expressions {
                                              tableconstructor {
                                              }
                                            }
                                            expressions {
                                            }
                                            expressions {
                                              tableconstructor {
                                              }
                                            }
                                            expressions {
                                              tableconstructor {
                                              }
                                            }
                                            expressions {
                                              tableconstructor {
                                              }
                                            }
                                            expressions {
                                              tableconstructor {
                                              }
                                            }
                                            expressions {
                                              tableconstructor {
                                              }
                                            }
                                            expressions {
                                              tableconstructor {
                                              }
                                            }
                                            expressions {
                                            }
                                            expressions {
                                              tableconstructor {
                                              }
                                            }
                                            expressions {
                                              tableconstructor {
                                              }
                                            }
                                            expressions {
                                              tableconstructor {
                                              }
                                            }
                                            expressions {
                                              prefixexp {
                                              }
                                            }
                                            expressions {
                                              tableconstructor {
                                              }
                                            }
                                            expressions {
                                              tableconstructor {
                                              }
                                            }
                                            expressions {
                                              tableconstructor {
                                              }
                                            }
                                            expressions {
                                              false: 536870912
                                            }
                                            expressions {
                                              tableconstructor {
                                              }
                                            }
                                            expressions {
                                              tableconstructor {
                                              }
                                            }
                                            explast {
                                              unary {
                                                unop {
                                                  negate: 0
                                                }
                                                exp {
                                                  unary {
                                                    unop {
                                                    }
                                                    exp {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        semicolon: true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        repeatcycle {
                          block {
                            chunk {
                            }
                          }
                          condition {
                          }
                        }
                      }
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 0
                          }
                          startexp {
                          }
                          stopexp {
                            binary {
                              leftexp {
                              }
                              binop {
                              }
                              rightexp {
                                true: 536870912
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                      stat {
                        whilecycle {
                          condition {
                          }
                          doblock {
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                        semicolon: false
                      }
                      laststat {
                        break: 0
                      }
                    }
                  }
                }
              }
            }
            laststat {
              break: 822083584
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
}
