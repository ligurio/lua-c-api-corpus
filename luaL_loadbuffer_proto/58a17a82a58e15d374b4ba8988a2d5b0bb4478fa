chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
                binary {
                  leftexp {
                    prefixexp {
                      exp {
                        number: -0
                      }
                    }
                  }
                  binop {
                    or: 32
                  }
                  rightexp {
                    prefixexp {
                      exp {
                        number: -0
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      semicolon: true
                    }
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        true: 0
      }
    }
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            prefixexp {
              exp {
                number: -0
              }
            }
          }
          binop {
            or: 32
          }
          rightexp {
            prefixexp {
              exp {
                binary {
                  leftexp {
                    true: 32
                  }
                  binop {
                    or: 32
                  }
                  rightexp {
                    prefixexp {
                      exp {
                        true: 32
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclelist {
                names {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                expressions {
                  explast {
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: false
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 125
        }
      }
      body {
        block {
          chunk {
            stat {
              localnames {
                namelist {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                explist {
                  expressions {
                    function {
                      body {
                        parlist {
                          ellipsis: "fuzz"
                        }
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
