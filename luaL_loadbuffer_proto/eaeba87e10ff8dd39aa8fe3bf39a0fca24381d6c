chunk {
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        prefixexp {
          functioncall {
          }
        }
      }
      stopexp {
        str: ""
      }
      stepexp {
        number: -0
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                    indexname {
                      prefixexp {
                        functioncall {
                          prefArgs {
                            prefixexp {
                            }
                            args {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                  }
                                  fields {
                                    field {
                                      expression {
                                        binary {
                                          leftexp {
                                          }
                                          binop {
                                          }
                                          rightexp {
                                            ellipsis: "\020\020\020\020\020"
                                          }
                                        }
                                      }
                                    }
                                    sep {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      Name: ""
                    }
                  }
                }
                explist {
                  expressions {
                    number: 196608
                  }
                  expressions {
                    number: 2.0001220703125
                  }
                  expressions {
                    number: 0
                  }
                  expressions {
                    number: -2.75
                  }
                  expressions {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                        lastSep {
                          comma: 0
                        }
                      }
                    }
                  }
                  expressions {
                    number: -3.05175781254146e-05
                  }
                  expressions {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                        lastSep {
                          comma: 16776960
                        }
                      }
                    }
                  }
                  expressions {
                    number: -0.011718750000106137
                  }
                  expressions {
                    tableconstructor {
                      fieldlist {
                        firstField {
                          exprassign {
                            key {
                              false: 553648128
                            }
                            value {
                            }
                          }
                        }
                      }
                    }
                  }
                  expressions {
                    number: -2
                  }
                  expressions {
                    number: 8.4999999749707058
                  }
                  expressions {
                    ellipsis: ""
                  }
                  expressions {
                  }
                  expressions {
                  }
                  expressions {
                    binary {
                      leftexp {
                      }
                      binop {
                        equal: 0
                      }
                      rightexp {
                      }
                    }
                  }
                  expressions {
                    number: 4
                  }
                  explast {
                    prefixexp {
                      functioncall {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
