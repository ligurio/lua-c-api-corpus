chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: 2
      }
      stopexp {
        number: 16
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 5
                }
                startexp {
                  function {
                    body {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                stopexp {
                  number: 4.00006103515625
                }
                stepexp {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        call {
                        }
                      }
                      laststat {
                        break: 16777216
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    block {
      block {
        chunk {
          stat {
            forcyclename {
              name {
                name: ""
                num: 0
              }
              startexp {
                number: 2.0000000000000879
              }
              stopexp {
                number: 16
              }
              doblock {
                block {
                  chunk {
                    stat {
                      forcyclename {
                        name {
                          name: ""
                          num: 5
                        }
                        startexp {
                          unary {
                            unop {
                              not: 16777216
                            }
                            exp {
                            }
                          }
                        }
                        stopexp {
                          number: 4
                        }
                        stepexp {
                          number: -0.28124999999999989
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                whilecycle {
                                  condition {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                      }
                                      rightexp {
                                      }
                                    }
                                  }
                                  doblock {
                                    block {
                                      chunk {
                                        stat {
                                          call {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                    }
                                  }
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                  prefArgs {
                                    prefixexp {
                                      functioncall {
                                        prefArgs {
                                          prefixexp {
                                          }
                                          args {
                                            explist {
                                              explist {
                                                expressions {
                                                  tableconstructor {
                                                    fieldlist {
                                                      firstField {
                                                      }
                                                      fields {
                                                        field {
                                                          expression {
                                                            false: 0
                                                          }
                                                        }
                                                        sep {
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                explast {
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    args {
                                    }
                                  }
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                semicolon: false
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                call {
                                }
                                semicolon: true
                              }
                              stat {
                                call {
                                }
                              }
                              stat {
                                ifstat {
                                  condition {
                                  }
                                  first {
                                    chunk {
                                      stat {
                                        repeatcycle {
                                          block {
                                            chunk {
                                              stat {
                                                semicolon: true
                                              }
                                            }
                                          }
                                          condition {
                                          }
                                        }
                                      }
                                      stat {
                                        semicolon: true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            block {
              block {
                chunk {
                  laststat {
                    semicolon: true
                  }
                }
              }
            }
            semicolon: true
          }
          laststat {
            semicolon: true
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    semicolon: true
  }
}
