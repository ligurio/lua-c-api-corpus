chunk {
  stat {
    forcyclename {
      name {
        name: "_ENV"
        num: 0
      }
      startexp {
        number: -236.66017172695229
      }
      stopexp {
        binary {
          leftexp {
            true: 16
          }
          binop {
            greater: 1
          }
          rightexp {
            str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
              forcyclename {
                name {
                  name: "_ENV"
                  num: 0
                }
                startexp {
                  number: -236.66017172695229
                }
                stopexp {
                  binary {
                    leftexp {
                      tableconstructor {
                      }
                    }
                    binop {
                      equal: 16
                    }
                    rightexp {
                      tableconstructor {
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                      }
                      stat {
                        list {
                          varlist {
                            var {
                              indexexpr {
                                prefixexp {
                                }
                                exp {
                                  prefixexp {
                                    functioncall {
                                    }
                                  }
                                }
                              }
                            }
                          }
                          explist {
                            explast {
                            }
                          }
                        }
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
