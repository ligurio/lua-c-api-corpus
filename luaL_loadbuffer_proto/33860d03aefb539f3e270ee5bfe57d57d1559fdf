chunk {
  stat {
  }
  stat {
    whilecycle {
      condition {
        number: 1.3336028865759709e+241
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: "~"
          num: 0
        }
      }
      expressions {
        explast {
          ellipsis: "\211"
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    localfunc {
      name {
        name: "select\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354"
        num: 1869488128
      }
      funcbody {
        parlist {
          namelist {
            namelist {
              firstname {
                name: "select\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354"
                num: 1869488128
              }
            }
          }
        }
        block {
          chunk {
            laststat {
              explist {
                explist {
                  expressions {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                        lastSep {
                          semicolon: 0
                        }
                      }
                    }
                  }
                  explast {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: "select\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354\354"
          num: 1869488128
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: "~"
                  num: 25344
                }
                startexp {
                  unary {
                    unop {
                      not: 16449536
                    }
                    exp {
                      binary {
                        leftexp {
                          nil: 536870912
                        }
                        binop {
                          add: 0
                        }
                        rightexp {
                        }
                      }
                    }
                  }
                }
                stopexp {
                  unary {
                    unop {
                      not: 16449536
                    }
                    exp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                }
                                binop {
                                  mult: 0
                                }
                                rightexp {
                                  number: -2.97414726734226e+284
                                }
                              }
                            }
                            binop {
                              mult: 32768
                            }
                            rightexp {
                              unary {
                                unop {
                                  not: 9
                                }
                                exp {
                                  binary {
                                    leftexp {
                                      binary {
                                        leftexp {
                                          binary {
                                            leftexp {
                                            }
                                            binop {
                                              and: 1869488128
                                            }
                                            rightexp {
                                              number: -2.97414726734226e+284
                                            }
                                          }
                                        }
                                        binop {
                                          mult: 32768
                                        }
                                        rightexp {
                                          unary {
                                            unop {
                                              not: 9
                                            }
                                            exp {
                                              binary {
                                                leftexp {
                                                  binary {
                                                    leftexp {
                                                      binary {
                                                        leftexp {
                                                        }
                                                        binop {
                                                          mult: 0
                                                        }
                                                        rightexp {
                                                        }
                                                      }
                                                    }
                                                    binop {
                                                      lessEqual: 5111808
                                                    }
                                                    rightexp {
                                                      unary {
                                                        unop {
                                                          length: 9
                                                        }
                                                        exp {
                                                          binary {
                                                            leftexp {
                                                              unary {
                                                                unop {
                                                                  length: 9
                                                                }
                                                                exp {
                                                                  binary {
                                                                    leftexp {
                                                                    }
                                                                    binop {
                                                                      mult: 0
                                                                    }
                                                                    rightexp {
                                                                      number: -2.97414726734226e+284
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                            binop {
                                                              add: 4
                                                            }
                                                            rightexp {
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                binop {
                                                  div: 4
                                                }
                                                rightexp {
                                                  number: -4.9591064453125e-05
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                      div: 4
                                    }
                                    rightexp {
                                      number: -4.9591064453125e-05
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        binop {
                          div: 4
                        }
                        rightexp {
                          number: -4.9591064453125e-05
                        }
                      }
                    }
                  }
                }
                stepexp {
                  unary {
                    unop {
                      negate: 0
                    }
                    exp {
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
