chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    prefixexp {
                                      var {
                                      }
                                    }
                                  }
                                  binop {
                                    concat: 16384
                                  }
                                  rightexp {
                                    str: "\'>=strlowereboad\'"
                                  }
                                }
                              }
                              binop {
                                concat: 0
                              }
                              rightexp {
                                tableconstructor {
                                }
                              }
                            }
                          }
                          binop {
                            concat: 0
                          }
                          rightexp {
                            tableconstructor {
                            }
                          }
                        }
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        tableconstructor {
                        }
                      }
                    }
                  }
                  binop {
                    exp: 0
                  }
                  rightexp {
                    tableconstructor {
                    }
                  }
                }
              }
              binop {
                less: 16384
              }
              rightexp {
                str: "\'>=strlowereboad\'"
              }
            }
          }
          binop {
            concat: 0
          }
          rightexp {
          }
        }
      }
      stopexp {
      }
      stepexp {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        true: 4294967288
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        tableconstructor {
                        }
                      }
                    }
                  }
                  binop {
                    concat: 0
                  }
                  rightexp {
                    tableconstructor {
                    }
                  }
                }
              }
              binop {
                concat: 0
              }
              rightexp {
                tableconstructor {
                }
              }
            }
          }
          binop {
            concat: 0
          }
          rightexp {
            tableconstructor {
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      prefixexp {
                                        var {
                                        }
                                      }
                                    }
                                    binop {
                                      concat: 16384
                                    }
                                    rightexp {
                                      str: "\'>=strlowereboad\'"
                                    }
                                  }
                                }
                                binop {
                                  concat: 0
                                }
                                rightexp {
                                }
                              }
                            }
                            binop {
                              less: 16384
                            }
                            rightexp {
                              tableconstructor {
                              }
                            }
                          }
                        }
                        binop {
                          concat: 0
                        }
                        rightexp {
                          str: "\'>=strlowereboad\'"
                        }
                      }
                    }
                    binop {
                      concat: 0
                    }
                    rightexp {
                    }
                  }
                }
                stopexp {
                }
                stepexp {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      binary {
                                        leftexp {
                                          binary {
                                            leftexp {
                                              prefixexp {
                                                var {
                                                }
                                              }
                                            }
                                            binop {
                                              concat: 16384
                                            }
                                            rightexp {
                                              str: "\'>=strlowereboad\'"
                                            }
                                          }
                                        }
                                        binop {
                                          concat: 0
                                        }
                                        rightexp {
                                          tableconstructor {
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                      less: 16384
                                    }
                                    rightexp {
                                      tableconstructor {
                                      }
                                    }
                                  }
                                }
                                binop {
                                  concat: 0
                                }
                                rightexp {
                                  tableconstructor {
                                  }
                                }
                              }
                            }
                            binop {
                              concat: 0
                            }
                            rightexp {
                              tableconstructor {
                              }
                            }
                          }
                        }
                        binop {
                          concat: 0
                        }
                        rightexp {
                          tableconstructor {
                          }
                        }
                      }
                    }
                    binop {
                      concat: 0
                    }
                    rightexp {
                      tableconstructor {
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              localnames {
                namelist {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                explist {
                  explast {
                    ellipsis: "NNNNNNNNNNNNNNNNNNNN"
                  }
                }
              }
              semicolon: false
            }
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  expressions {
                    false: 36
                  }
                  expressions {
                    str: "\000\000\000\000\000\000\000w&\'>\'"
                  }
                  explast {
                    tableconstructor {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
      explist {
        explast {
          ellipsis: "NNNNNNNNNNNNNNNNNNNN"
        }
      }
    }
    semicolon: false
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          false: 36
        }
        expressions {
          str: "\000\000\000\000\000\000\000w&\'>\'"
        }
        explast {
          prefixexp {
            var {
              name {
                name: ""
                num: 1
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
