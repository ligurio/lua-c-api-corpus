chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 7424
        }
        names {
          name: ""
          num: 0
        }
      }
      expressions {
        expressions {
          prefixexp {
            var {
              name {
                name: "pcall"
                num: 0
              }
            }
          }
        }
        expressions {
          binary {
            leftexp {
            }
            binop {
            }
            rightexp {
              prefixexp {
                exp {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                          var {
                            name {
                              name: "xpcall"
                              num: 262144
                            }
                          }
                        }
                        args {
                          explist {
                            explist {
                              expressions {
                                prefixexp {
                                  var {
                                    name {
                                      name: "collectgarbage"
                                      num: 0
                                    }
                                  }
                                }
                              }
                              expressions {
                                function {
                                  body {
                                    parlist {
                                      namelist {
                                        namelist {
                                          firstname {
                                            name: ""
                                            num: 0
                                          }
                                          names {
                                            name: "_ENV"
                                            num: 0
                                          }
                                        }
                                        ellipsis: ""
                                      }
                                    }
                                    block {
                                      chunk {
                                        stat {
                                          call {
                                            prefArgs {
                                              prefixexp {
                                                var {
                                                }
                                              }
                                              args {
                                                explist {
                                                  explist {
                                                    explast {
                                                      binary {
                                                        leftexp {
                                                          binary {
                                                            leftexp {
                                                            }
                                                            binop {
                                                              concat: 0
                                                            }
                                                            rightexp {
                                                              str: "{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{"
                                                            }
                                                          }
                                                        }
                                                        binop {
                                                          concat: 538976288
                                                        }
                                                        rightexp {
                                                          function {
                                                            body {
                                                              block {
                                                                chunk {
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        stat {
                                        }
                                        laststat {
                                          explist {
                                            explist {
                                              expressions {
                                                nil: 0
                                              }
                                              expressions {
                                                nil: 0
                                              }
                                              expressions {
                                                ellipsis: "_ENV"
                                              }
                                              expressions {
                                                unary {
                                                  unop {
                                                  }
                                                  exp {
                                                  }
                                                }
                                              }
                                              expressions {
                                              }
                                              expressions {
                                                nil: 0
                                              }
                                              expressions {
                                              }
                                              expressions {
                                                tableconstructor {
                                                  fieldlist {
                                                    firstField {
                                                    }
                                                    fields {
                                                      field {
                                                        expression {
                                                          binary {
                                                            leftexp {
                                                              str: "\t@\000z\000\000\000\000debug.sethook\000"
                                                            }
                                                            binop {
                                                              greaterEqual: 25344
                                                            }
                                                            rightexp {
                                                              binary {
                                                                leftexp {
                                                                  binary {
                                                                    leftexp {
                                                                    }
                                                                    binop {
                                                                      div: 0
                                                                    }
                                                                    rightexp {
                                                                      str: "\'<coroutane.yiel>>\'<coroutane.yiel>>>>>>>>>>>>>>>>>>>>d"
                                                                    }
                                                                  }
                                                                }
                                                                binop {
                                                                  div: 0
                                                                }
                                                                rightexp {
                                                                  number: 0
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      sep {
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              expressions {
                                              }
                                              expressions {
                                                nil: 0
                                              }
                                              explast {
                                                str: "\'&~33333.333333+\'"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              explast {
                                tableconstructor {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        explast {
          prefixexp {
            var {
              name {
                name: "rawlen"
                num: 0
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
            }
          }
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
      explist {
        explast {
          false: 65536
        }
      }
    }
  }
}
