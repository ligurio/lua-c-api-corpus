chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                  name {
                    name: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                    num: 0
                  }
                }
                vars {
                }
              }
              explist {
                expressions {
                  function {
                    body {
                      block {
                        chunk {
                          laststat {
                            explist {
                              explist {
                                expressions {
                                  function {
                                    body {
                                      block {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                }
                                expressions {
                                  function {
                                    body {
                                      block {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                }
                                expressions {
                                  str: "\000\000\000\000\000\000\000\000\000\000\000\000"
                                }
                                expressions {
                                }
                                expressions {
                                  unary {
                                    unop {
                                    }
                                    exp {
                                    }
                                  }
                                }
                                expressions {
                                  number: 5.37798613262239e-310
                                }
                                expressions {
                                  true: 0
                                }
                                explast {
                                  function {
                                    body {
                                      parlist {
                                      }
                                      block {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                expressions {
                  true: 4
                }
                expressions {
                  nil: 8
                }
                expressions {
                  prefixexp {
                    exp {
                      ellipsis: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                    }
                  }
                }
                expressions {
                }
                expressions {
                  binary {
                    leftexp {
                      str: "string.pack"
                    }
                    binop {
                      exp: 0
                    }
                    rightexp {
                      number: 4.7282819493278029e-308
                    }
                  }
                }
                expressions {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                        }
                        binop {
                          concat: 262144
                        }
                        rightexp {
                          unary {
                            unop {
                            }
                            exp {
                            }
                          }
                        }
                      }
                    }
                    binop {
                      concat: 0
                    }
                    rightexp {
                    }
                  }
                }
                expressions {
                  tableconstructor {
                    fieldlist {
                      firstField {
                      }
                      lastSep {
                        comma: 0
                      }
                    }
                  }
                }
                expressions {
                  tableconstructor {
                    fieldlist {
                      firstField {
                      }
                      lastSep {
                        comma: 0
                      }
                    }
                  }
                }
                explast {
                  function {
                    body {
                      parlist {
                      }
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 0
              }
              startexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                ellipsis: "tpio.output"
                              }
                              binop {
                                concat: 0
                              }
                              rightexp {
                                tableconstructor {
                                  fieldlist {
                                    firstField {
                                      expression {
                                        prefixexp {
                                          exp {
                                            number: 1.73833895195875e-310
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          binop {
                            exp: 0
                          }
                          rightexp {
                            tableconstructor {
                            }
                          }
                        }
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        number: 5.37798613262239e-310
                      }
                    }
                  }
                  binop {
                    concat: 0
                  }
                  rightexp {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                            functioncall {
                            }
                          }
                          args {
                          }
                        }
                      }
                    }
                  }
                }
              }
              stopexp {
              }
              stepexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                prefixexp {
                                  var {
                                    name {
                                      name: "load"
                                      num: 0
                                    }
                                  }
                                }
                              }
                              binop {
                                concat: 0
                              }
                              rightexp {
                                str: "\'>=strlowereboad\'"
                              }
                            }
                          }
                          binop {
                            concat: 0
                          }
                          rightexp {
                            tableconstructor {
                            }
                          }
                        }
                      }
                      binop {
                        concat: 0
                      }
                      rightexp {
                        tableconstructor {
                        }
                      }
                    }
                  }
                  binop {
                    concat: 0
                  }
                  rightexp {
                    tableconstructor {
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          laststat {
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
  }
}
