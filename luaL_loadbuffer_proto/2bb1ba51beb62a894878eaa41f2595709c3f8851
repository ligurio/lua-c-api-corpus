chunk {
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "rawlen"
              num: 36
            }
          }
        }
        args {
          tableconstructor {
            fieldlist {
              firstField {
                exprassign {
                  key {
                    number: 3
                  }
                  value {
                  }
                }
              }
              fields {
                field {
                  expression {
                    prefixexp {
                    }
                  }
                }
                sep {
                }
              }
              fields {
                field {
                  expression {
                    number: 2
                  }
                }
                sep {
                  semicolon: 0
                }
              }
              fields {
                field {
                  expression {
                    prefixexp {
                    }
                  }
                }
                sep {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
          stat {
            call {
              prefArgs {
                prefixexp {
                  var {
                    name {
                      name: "xpcall"
                      num: 0
                    }
                  }
                }
                args {
                  explist {
                    explist {
                      expressions {
                        prefixexp {
                          var {
                            name {
                              name: "collectgarbage"
                              num: 8
                            }
                          }
                        }
                      }
                      expressions {
                        function {
                          body {
                            parlist {
                              ellipsis: "-"
                            }
                            block {
                              chunk {
                                stat {
                                  whilecycle {
                                    condition {
                                    }
                                    doblock {
                                      block {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                }
                                stat {
                                  localnames {
                                    namelist {
                                      firstname {
                                        name: ""
                                        num: 0
                                      }
                                    }
                                  }
                                  semicolon: false
                                }
                                stat {
                                  list {
                                    varlist {
                                      var {
                                      }
                                    }
                                    explist {
                                      expressions {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                            }
                                            fields {
                                              field {
                                              }
                                              sep {
                                                comma: 0
                                              }
                                            }
                                          }
                                        }
                                      }
                                      expressions {
                                        prefixexp {
                                          functioncall {
                                            prefArgs {
                                              prefixexp {
                                              }
                                              args {
                                                str: "\'"
                                              }
                                            }
                                          }
                                        }
                                      }
                                      expressions {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                            }
                                          }
                                        }
                                      }
                                      expressions {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                            }
                                            fields {
                                              field {
                                              }
                                              sep {
                                                semicolon: 16777216
                                              }
                                            }
                                          }
                                        }
                                      }
                                      expressions {
                                      }
                                      expressions {
                                        prefixexp {
                                          var {
                                            name {
                                              name: ""
                                              num: 0
                                            }
                                          }
                                        }
                                      }
                                      expressions {
                                      }
                                      expressions {
                                        binary {
                                          leftexp {
                                            nil: 0
                                          }
                                          binop {
                                            mult: 0
                                          }
                                          rightexp {
                                            true: 570425344
                                          }
                                        }
                                      }
                                      expressions {
                                        tableconstructor {
                                        }
                                      }
                                      explast {
                                        prefixexp {
                                          functioncall {
                                            prefArgs {
                                              prefixexp {
                                              }
                                              args {
                                                str: "math.ceil\'"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                stat {
                                  semicolon: true
                                }
                              }
                            }
                          }
                        }
                      }
                      explast {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      clauses {
        condition {
          str: "\\000\\000\\000\\000\\000\\000\\000\\000"
        }
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
        }
      }
    }
  }
}
