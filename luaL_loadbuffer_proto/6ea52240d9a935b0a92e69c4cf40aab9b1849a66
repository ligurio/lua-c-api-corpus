chunk {
  stat {
    forcyclename {
      name {
        name: "\367"
        num: 16
      }
      startexp {
        number: 4.0000000000000142
      }
      stopexp {
        false: 0
      }
      stepexp {
        number: -2
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                  number: -38
                }
                stopexp {
                  unary {
                    unop {
                      length: 0
                    }
                    exp {
                      tableconstructor {
                      }
                    }
                  }
                }
                stepexp {
                  prefixexp {
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                              name {
                                name: "\367"
                                num: 16
                              }
                            }
                          }
                          explist {
                            expressions {
                              true: 16
                            }
                            explast {
                              function {
                                body {
                                  parlist {
                                    ellipsis: "]"
                                  }
                                  block {
                                    chunk {
                                      stat {
                                        semicolon: true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
}
