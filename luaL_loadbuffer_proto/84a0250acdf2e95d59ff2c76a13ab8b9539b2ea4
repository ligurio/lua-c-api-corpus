chunk {
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
          }
          binop {
            or: 0
          }
          rightexp {
            tableconstructor {
              fieldlist {
                firstField {
                }
                fields {
                  field {
                    expression {
                      number: 2.0000007227063179
                    }
                  }
                  sep {
                  }
                }
                fields {
                  field {
                    namedassign {
                      name {
                        name: ""
                        num: 536870912
                      }
                      value {
                      }
                    }
                  }
                  sep {
                  }
                }
                lastSep {
                }
              }
            }
          }
        }
      }
      first {
        chunk {
          stat {
            ifstat {
              condition {
                binary {
                  leftexp {
                  }
                  binop {
                    div: 0
                  }
                  rightexp {
                    nil: 536870912
                  }
                }
              }
              first {
                chunk {
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                  laststat {
                    explist {
                      explist {
                        explast {
                        }
                      }
                    }
                  }
                }
              }
              clauses {
                condition {
                }
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
    semicolon: false
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    block {
      block {
        chunk {
          stat {
            ifstat {
              condition {
                binary {
                  leftexp {
                  }
                  binop {
                    concat: 0
                  }
                  rightexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                          }
                          binop {
                            concat: 4294836224
                          }
                          rightexp {
                            binary {
                              leftexp {
                              }
                              binop {
                                or: 0
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                      }
                      binop {
                        or: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                              }
                              binop {
                                or: 0
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                  }
                                  binop {
                                    or: 0
                                  }
                                  rightexp {
                                  }
                                }
                              }
                            }
                          }
                          binop {
                            less: 536870912
                          }
                          rightexp {
                          }
                        }
                      }
                    }
                  }
                }
              }
              first {
                chunk {
                  stat {
                    ifstat {
                      condition {
                        binary {
                          leftexp {
                          }
                          binop {
                            or: 0
                          }
                          rightexp {
                            nil: 536870912
                          }
                        }
                      }
                      first {
                        chunk {
                        }
                      }
                    }
                  }
                  stat {
                    ifstat {
                      condition {
                      }
                      first {
                        chunk {
                          laststat {
                            explist {
                              explist {
                                explast {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            call {
            }
            semicolon: false
          }
          stat {
            whilecycle {
              condition {
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            block {
              block {
                chunk {
                }
              }
            }
          }
        }
      }
    }
  }
}
