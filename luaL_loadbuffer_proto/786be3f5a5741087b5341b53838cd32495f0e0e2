chunk {
  stat {
  }
  laststat {
    explist {
      explist {
        expressions {
          binary {
            leftexp {
              binary {
                leftexp {
                  str: ""
                }
                binop {
                  less: 4244635648
                }
                rightexp {
                  nil: 754974720
                }
              }
            }
            binop {
              mult: 3120562176
            }
            rightexp {
              unary {
                unop {
                }
                exp {
                  ellipsis: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                }
              }
            }
          }
        }
        expressions {
          binary {
            leftexp {
              ellipsis: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
            }
            binop {
              less: 65526
            }
            rightexp {
              ellipsis: ""
            }
          }
        }
        explast {
          unary {
            unop {
              negate: 0
            }
            exp {
              binary {
                leftexp {
                }
                binop {
                  less: 3120562176
                }
                rightexp {
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
