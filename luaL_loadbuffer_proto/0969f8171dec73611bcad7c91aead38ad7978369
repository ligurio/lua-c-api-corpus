chunk {
  stat {
  }
  stat {
  }
  stat {
    call {
      namedArgs {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
                var {
                  indexname {
                    prefixexp {
                    }
                    Name: "dump"
                  }
                }
              }
              args {
                explist {
                  explist {
                    expressions {
                      function {
                        body {
                          parlist {
                            ellipsis: "\\001\\000\\000\\001"
                          }
                          block {
                            chunk {
                              stat {
                                semicolon: false
                              }
                              stat {
                                forcyclename {
                                  name {
                                    name: ""
                                    num: 1536
                                  }
                                  startexp {
                                  }
                                  stopexp {
                                  }
                                  doblock {
                                    block {
                                      chunk {
                                        laststat {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    explast {
                      nil: 5
                    }
                  }
                }
              }
            }
          }
        }
        name {
          name: ""
          num: 0
        }
        args {
        }
      }
    }
    semicolon: true
  }
}
