chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            block {
              block {
                chunk {
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        unary {
          unop {
          }
          exp {
            ellipsis: "\001\000\000\000\000\000\000\016"
          }
        }
      }
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: ""
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
            unary {
              unop {
                length: 4
              }
              exp {
                tableconstructor {
                  fieldlist {
                    firstField {
                      expression {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                              }
                              binop {
                              }
                              rightexp {
                                number: 116.95316997449845
                              }
                            }
                          }
                          binop {
                          }
                          rightexp {
                          }
                        }
                      }
                    }
                    fields {
                      field {
                        exprassign {
                          key {
                          }
                          value {
                            binary {
                              leftexp {
                                binary {
                                  leftexp {
                                    unary {
                                      unop {
                                        length: 4
                                      }
                                      exp {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                              expression {
                                                binary {
                                                  leftexp {
                                                    number: -416
                                                  }
                                                  binop {
                                                    mod: 65536
                                                  }
                                                  rightexp {
                                                    binary {
                                                      leftexp {
                                                      }
                                                      binop {
                                                        greaterEqual: 57344
                                                      }
                                                      rightexp {
                                                        number: 0
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            fields {
                                              field {
                                                exprassign {
                                                  key {
                                                  }
                                                  value {
                                                    binary {
                                                      leftexp {
                                                        binary {
                                                          leftexp {
                                                          }
                                                          binop {
                                                            concat: 0
                                                          }
                                                          rightexp {
                                                            prefixexp {
                                                              var {
                                                                indexname {
                                                                  prefixexp {
                                                                    var {
                                                                      indexname {
                                                                        prefixexp {
                                                                          functioncall {
                                                                          }
                                                                        }
                                                                        Name: ""
                                                                      }
                                                                    }
                                                                  }
                                                                  Name: ""
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                      binop {
                                                      }
                                                      rightexp {
                                                        binary {
                                                          leftexp {
                                                            number: -416
                                                          }
                                                          binop {
                                                            or: 2
                                                          }
                                                          rightexp {
                                                            number: 116.95316997449845
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              sep {
                                                semicolon: 0
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  binop {
                                    equal: 2
                                  }
                                  rightexp {
                                    str: ""
                                  }
                                }
                              }
                              binop {
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    number: -416
                                  }
                                  binop {
                                    or: 2
                                  }
                                  rightexp {
                                    number: 116.95316997449845
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      sep {
                      }
                    }
                  }
                }
              }
            }
          }
          binop {
            equal: 2
          }
          rightexp {
            str: ""
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
            }
            stat {
              func {
                name {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                body {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        whilecycle {
                          condition {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                }
                                lastSep {
                                  semicolon: 0
                                }
                              }
                            }
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            stat {
            }
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  explast {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                            var {
                            }
                          }
                          args {
                            explist {
                              explist {
                                expressions {
                                  number: 0
                                }
                                explast {
                                  nil: 0
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
}
