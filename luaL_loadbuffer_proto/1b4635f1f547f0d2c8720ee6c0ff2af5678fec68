chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
          tableconstructor {
            fieldlist {
              firstField {
              }
              lastSep {
                semicolon: 67108865
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              call {
                prefArgs {
                  prefixexp {
                    var {
                      name {
                        name: "collectgarbage"
                        num: 0
                      }
                    }
                  }
                  args {
                    explist {
                      explist {
                        expressions {
                          str: "ste\004\004\004\004\004\004\004\004\004\004\004\004\004p"
                        }
                        expressions {
                          unary {
                            unop {
                              negate: 0
                            }
                            exp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      false: 32
                                    }
                                    binop {
                                      mult: 32768
                                    }
                                    rightexp {
                                      number: 420
                                    }
                                  }
                                }
                                binop {
                                  mult: 1801675120
                                }
                                rightexp {
                                  binary {
                                    leftexp {
                                      number: 420
                                    }
                                    binop {
                                      mult: 8
                                    }
                                    rightexp {
                                      unary {
                                        unop {
                                          negate: 0
                                        }
                                        exp {
                                          binary {
                                            leftexp {
                                              binary {
                                                leftexp {
                                                  false: 32
                                                }
                                                binop {
                                                  mult: 32768
                                                }
                                                rightexp {
                                                  ellipsis: "\\000\\000\\000D"
                                                }
                                              }
                                            }
                                            binop {
                                              mult: 1801675244
                                            }
                                            rightexp {
                                              true: 8388608
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        explast {
                          number: 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
