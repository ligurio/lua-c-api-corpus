chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      forcyclename {
                        name {
                          name: "z"
                          num: 0
                        }
                        startexp {
                          number: -6.6888713043469331e-198
                        }
                        stopexp {
                          number: -3.7857669957336791e-270
                        }
                        stepexp {
                          number: -6.6888713043469331e-198
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                semicolon: false
                              }
                            }
                          }
                        }
                      }
                    }
                    stat {
                    }
                  }
                }
                condition {
                  nil: 0
                }
              }
            }
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      list {
                        varlist {
                          var {
                          }
                          vars {
                          }
                          vars {
                          }
                        }
                        explist {
                          expressions {
                            number: -6.6888713043469331e-198
                          }
                          expressions {
                            number: -48
                          }
                          explast {
                          }
                        }
                      }
                    }
                  }
                }
                condition {
                  nil: 0
                }
              }
            }
          }
        }
      }
    }
  }
  laststat {
    explist {
      explist {
        explast {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                }
                args {
                }
              }
            }
          }
        }
      }
    }
  }
}
