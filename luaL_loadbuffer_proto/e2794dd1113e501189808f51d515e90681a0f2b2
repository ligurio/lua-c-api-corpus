chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          binary {
            leftexp {
              binary {
                leftexp {
                  binary {
                    leftexp {
                    }
                    binop {
                      concat: 0
                    }
                    rightexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      binary {
                                        leftexp {
                                          binary {
                                            leftexp {
                                              number: 416
                                            }
                                            binop {
                                              concat: 0
                                            }
                                            rightexp {
                                              number: 416
                                            }
                                          }
                                        }
                                        binop {
                                          concat: 0
                                        }
                                        rightexp {
                                          number: 422.34068813174963
                                        }
                                      }
                                    }
                                    binop {
                                      notEqual: 3801088
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                        }
                                        binop {
                                          concat: 0
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                            }
                                            binop {
                                              concat: 0
                                            }
                                            rightexp {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  concat: 0
                                }
                                rightexp {
                                }
                              }
                            }
                            binop {
                              concat: 0
                            }
                            rightexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      number: 416
                                    }
                                    binop {
                                      concat: 0
                                    }
                                    rightexp {
                                    }
                                  }
                                }
                                binop {
                                  concat: 0
                                }
                                rightexp {
                                  unary {
                                    unop {
                                    }
                                    exp {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        binop {
                          concat: 0
                        }
                        rightexp {
                          binary {
                            leftexp {
                              number: 416.0029296875
                            }
                            binop {
                              concat: 0
                            }
                            rightexp {
                              number: 416.00014972686768
                            }
                          }
                        }
                      }
                    }
                  }
                }
                binop {
                  concat: 0
                }
                rightexp {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              str: "#"
                            }
                            binop {
                              concat: 0
                            }
                            rightexp {
                              number: 416
                            }
                          }
                        }
                        binop {
                          concat: 128
                        }
                        rightexp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                }
                                binop {
                                  concat: 0
                                }
                                rightexp {
                                  number: 2
                                }
                              }
                            }
                            binop {
                              concat: 0
                            }
                            rightexp {
                              binary {
                                leftexp {
                                }
                                binop {
                                  concat: 1
                                }
                                rightexp {
                                  number: 416
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    binop {
                      concat: 0
                    }
                    rightexp {
                    }
                  }
                }
              }
            }
            binop {
              concat: 0
            }
            rightexp {
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
    whilecycle {
      condition {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
  }
  laststat {
    explist {
    }
  }
}
