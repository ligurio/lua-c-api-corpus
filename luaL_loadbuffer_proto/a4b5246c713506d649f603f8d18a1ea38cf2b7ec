chunk {
  stat {
    list {
      varlist {
        var {
          indexexpr {
            prefixexp {
            }
            exp {
            }
          }
        }
        vars {
          indexexpr {
            prefixexp {
            }
            exp {
            }
          }
        }
      }
      explist {
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
                exprassign {
                  key {
                  }
                  value {
                    binary {
                      leftexp {
                      }
                      binop {
                        concat: 11024
                      }
                      rightexp {
                      }
                    }
                  }
                }
              }
              fields {
                field {
                  exprassign {
                    key {
                      prefixexp {
                      }
                    }
                    value {
                      binary {
                        leftexp {
                        }
                        binop {
                        }
                        rightexp {
                        }
                      }
                    }
                  }
                }
                sep {
                }
              }
            }
          }
        }
        expressions {
          str: "\001\000\000\317"
        }
        expressions {
          true: 0
        }
        expressions {
          binary {
            leftexp {
              tableconstructor {
              }
            }
            binop {
            }
            rightexp {
              true: 0
            }
          }
        }
        explast {
          binary {
            leftexp {
              nil: 16
            }
            binop {
            }
            rightexp {
            }
          }
        }
      }
    }
  }
}
