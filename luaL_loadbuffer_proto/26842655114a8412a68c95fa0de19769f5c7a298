chunk {
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          nil: 23304
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          prefixexp {
          }
        }
        expressions {
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          prefixexp {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        expressions {
          tableconstructor {
          }
        }
        explast {
          unary {
            unop {
              negate: 0
            }
            exp {
              unary {
                unop {
                }
                exp {
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        binary {
          leftexp {
          }
          binop {
          }
          rightexp {
          }
        }
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
  }
}
