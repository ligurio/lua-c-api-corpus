chunk {
  stat {
    block {
      block {
        chunk {
        }
      }
    }
    semicolon: false
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: "countfr_+"
                  num: 6513008
                }
                names {
                  name: "counter_8"
                  num: 0
                }
              }
              explist {
                expressions {
                }
                explast {
                  number: -1418.75
                }
              }
            }
          }
          stat {
            func {
              name {
                firstname {
                  name: ""
                  num: 0
                }
              }
              body {
                block {
                  chunk {
                    laststat {
                      explist {
                        explist {
                          expressions {
                            binary {
                              leftexp {
                                false: 1847599136
                              }
                              binop {
                                notEqual: 50
                              }
                              rightexp {
                              }
                            }
                          }
                          explast {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377-"
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    semicolon: true
                  }
                }
              }
              condition {
              }
            }
          }
        }
      }
      condition {
        nil: 1
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: "countfr_+"
                  num: 6513008
                }
                names {
                  name: "counter_8"
                  num: 0
                }
              }
              explist {
                expressions {
                }
                explast {
                  number: -1418.75
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            semicolon: true
                          }
                          stat {
                            list {
                              varlist {
                                var {
                                  indexname {
                                    prefixexp {
                                      var {
                                        indexname {
                                          prefixexp {
                                          }
                                          Name: "\343"
                                        }
                                      }
                                    }
                                    Name: ""
                                  }
                                }
                              }
                              explist {
                                expressions {
                                  function {
                                    body {
                                      parlist {
                                        ellipsis: "?"
                                      }
                                      block {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                }
                                expressions {
                                  prefixexp {
                                    functioncall {
                                      prefArgs {
                                        prefixexp {
                                        }
                                        args {
                                          str: "\'"
                                        }
                                      }
                                    }
                                  }
                                }
                                expressions {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                      }
                                    }
                                  }
                                }
                                expressions {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        exprassign {
                                          key {
                                            tableconstructor {
                                              fieldlist {
                                                firstField {
                                                  expression {
                                                    true: 2
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          value {
                                            ellipsis: "\343"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                expressions {
                                }
                                expressions {
                                  ellipsis: "\343"
                                }
                                expressions {
                                }
                                expressions {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        exprassign {
                                          key {
                                            tableconstructor {
                                              fieldlist {
                                                firstField {
                                                  namedassign {
                                                    name {
                                                      name: ""
                                                      num: 3211264
                                                    }
                                                    value {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          value {
                                            tableconstructor {
                                              fieldlist {
                                                firstField {
                                                  exprassign {
                                                    key {
                                                      tableconstructor {
                                                        fieldlist {
                                                          firstField {
                                                            exprassign {
                                                              key {
                                                                str: "string.reverse"
                                                              }
                                                              value {
                                                                nil: 2
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                    value {
                                                      str: "string.reverse"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                expressions {
                                  tableconstructor {
                                  }
                                }
                                explast {
                                  prefixexp {
                                    functioncall {
                                      prefArgs {
                                        prefixexp {
                                          functioncall {
                                            prefArgs {
                                              prefixexp {
                                              }
                                              args {
                                                str: "math.tointeger"
                                              }
                                            }
                                          }
                                        }
                                        args {
                                          str: "\'"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            semicolon: true
                          }
                          stat {
                          }
                        }
                      }
                      condition {
                        number: 4.94065645841247e-324
                      }
                    }
                  }
                }
              }
              condition {
                unary {
                  unop {
                    not: 16
                  }
                  exp {
                    false: 1847599136
                  }
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 1
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: "counter_+"
                  num: 6513008
                }
                names {
                  name: "counter_8"
                  num: 0
                }
              }
              explist {
                expressions {
                  true: 327680
                }
                explast {
                  number: -709.375
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 5
      }
    }
  }
  stat {
    whilecycle {
      condition {
        false: 4128768
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
  }
  stat {
    localfunc {
      name {
        name: "\310"
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
}
