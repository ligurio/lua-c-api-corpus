chunk {
  stat {
    func {
      name {
        firstname {
          name: "\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253"
          num: 0
        }
        names {
          name: ""
          num: 0
        }
        lastname {
          name: ""
          num: 1702195828
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: "\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253"
          num: 0
        }
      }
      body {
        parlist {
          ellipsis: "rawset"
        }
        block {
          chunk {
            stat {
              func {
                name {
                  firstname {
                    name: ""
                    num: 0
                  }
                  names {
                    name: "\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253"
                    num: 0
                  }
                  lastname {
                    name: "\037\000"
                    num: 0
                  }
                }
                body {
                  parlist {
                    ellipsis: "rawset"
                  }
                  block {
                    chunk {
                      stat {
                        func {
                          name {
                            firstname {
                              name: ""
                              num: 0
                            }
                            names {
                              name: "\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253"
                              num: 0
                            }
                            lastname {
                              name: "\037\000"
                              num: 0
                            }
                          }
                          body {
                            parlist {
                              ellipsis: "rawset"
                            }
                            block {
                              chunk {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: "\037chunk {\n  stat {\n    repeatcycle {\n      block {\n        chunk {\n          stat {\n            repeatcycle {\n              block {\n                chunk {\n                  stat {\n                    forcyclename {\n                      name {\n                        name: \"\\\'-6>6&table.pack8\"\n                        num: 0\n                      }\n                      startexp {\n                      }\n                      stopexp {\n                      }\n                      doblock {\n                        block {\n                          chunk {\n                          }\n                        }\n                      }\n                    }\n                  }\n                  laststat {\n                    semicolon: true\n                  }\n                }\n              }\n              condition {\n                binary {\n                  leftexp {\n                    binary {\n                      leftexp {\n                        number: -424\n                      }\n                      binop {\n                        mult: 9520\n                      }\n                      rightexp {\n                        binary {\n                          leftexp {\n                            number: -1418.75\n                          }\n                          binop {\n                            mult: 0\n                          }\n                          rightexp {\n                            unary {\n                              unop {\n                                negate: 2304\n                              }\n                              exp {\n                                binary {\n                                  leftexp {\n                                    number: -1418.75\n                                  }\n                                  binop {\n                                    mult: 48\n                                  }\n                                  rightexp {\n                                    binary {\n                                      leftexp {\n                                        binary {\n                                          leftexp {\n                                            number: -424\n                                          }\n                                          binop {\n                                            mult: 0\n                                          }\n                                          rightexp {\n                                            binary {\n                                              leftexp {\n                                                number: -1418.75\n                                              }\n                                              binop {\n                                                mult: 0\n                                              }\n                                              rightexp {\n                                                binary {\n                                                  leftexp {\n                                                    function {\n                                                      body {\n                                                        block {\n                                                          chunk {\n                                                            stat {\n                                                              whilecycle {\n                                                                condition {\n                                                                }\n                                                                doblock {\n                                                                  block {\n                                                                    chunk {\n                                                                    }\n                                                                  }\n                                                                }\n                                                              }\n                                                            }\n                                                          }\n                                                        }\n                                                      }\n                                                    }\n                                                  }\n                                                  binop {\n                                                    mult: 0\n                                                  }\n                                                  rightexp {\n                                                    unary {\n                                                      unop {\n                                                        not: 21\n                                                      }\n                                                      exp {\n                                                        binary {\n                                                          leftexp {\n                                                          }\n                                                          binop {\n                                                            mult: 48\n                                                          }\n                                                          rightexp {\n                                                            binary {\n                                                              leftexp {\n                                                                binary {\n                                                                  leftexp {\n                                                                    tableconstructor {\n                                                                      fieldlist {\n                                                                        firstField {\n                                                                          expression {\n                                                                            nil: 32\n                                                                          }\n                                                                        }\n                                                                        fields {\n                                                                          field {\n                                                                          }\n                                                                          sep {\n                                                                            semicolon: 0\n                                                                          }\n                                                                        }\n                                                                        fields {\n                                                                          field {\n                                                                          }\n                      #                                                    sep {\n                                                                            comma: 8192\n                                                                          }\n                                                                        }\n                                                                      }\n                                                                    }\n                                                                  }\n                                                                  binop {\n                                                                    div: 21\n                                                                  }\n                                                                  rightexp {\n                                                                    str: \"\\\'&~33~33333333.+\\\'\"\n                                                                  }\n                                                                }\n                                                              }\n                                                              binop {\n                                                                mod: 64256\n                                                              }\n                                                              rightexp {\n                                                                binary {\n                                                                  leftexp {\n                                                                    function {\n                                                                      body {\n                                                                        block {\n                                                                          chunk {\n                                                                          }\n                                                                        }\n                                                                      }\n                                                                    }\n                                                                  }\n                                                                  binop {\n                                                                    mult: 0\n                                                                  }\n                                                                  rightexp {\n                                                                    unary {\n                                                                      unop {\n                                                                        negate: 2304\n                                                                      }\n                                                                      exp {\n                                                                      }\n                                                                    }\n                                                                  }\n                                                                }\n                                                              }\n                                                            }\n                                                          }\n                                                        }\n                                                      }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                      binop {\n                                        lessEqual: 0\n                                      }\n                                      rightexp {\n                                        true: 255\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                  binop {\n                    lessEqual: 1744830464\n                  }\n                  rightexp {\n                    str: \"\\\'-6>6&33332<\\\'<8<8\"\n                  }\n                }\n              }\n            }\n            semicolon: true\n          }\n          stat {\n            repeatcycle {\n              block {\n                chunk {\n                  laststat {\n                    semicolon: true\n                  }\n                }\n              }\n              condition {\n                binary {\n                  leftexp {\n                    binary {\n                      leftexp {\n                        binary {\n                          leftexp {\n                            function {\n                              body {\n                                block {\n                                  chunk {\n                                    stat {\n                                      semicolon: true\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                          binop {\n                            div: 21\n                          }\n                          rightexp {\n                            str: \"\\\'&~333.+\\\'\"\n                          }\n                        }\n                      }\n                      binop {\n                        mod: 64256\n                      }\n                      rightexp {\n                        binary {\n                          leftexp {\n                            prefixexp {\n                              exp {\n                                tableconstructor {\n                                  fieldlist {\n                                    firstField {\n                                    }\n                                    lastSep {\n                                      semicolon: 68\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                          binop {\n                            mult: 0\n                          }\n                          rightexp {\n                            unary {\n                              unop {\n                                negate: 2304\n                              }\n                              exp {\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                  binop {\n                    div: 6\n                  }\n                  rightexp {\n                    str: \"\\\'-6>6&33332<\\\'<8<8\"\n                  }\n                }\n              }\n            }\n            semicolon: true\n          }\n          stat {\n            semicolon: true\n          }\n        }\n      }\n      condition {\n        binary {\n          leftexp {\n            binary {\n              leftexp {\n                number: -424\n              }\n              binop {\n                mult: 9520\n              }\n              rightexp {\n                binary {\n                  leftexp {\n                    number: -1418.75\n                  }\n                  binop {\n                    mult: 0\n                  }\n                  rightexp {\n                    unary {\n                      unop {\n                        negate: 2304\n                      }\n                      exp {\n                        binary {\n                          leftexp {\n                            number: -1418.75\n                          }\n                          binop {\n                            mult: 48\n                          }\n                          rightexp {\n                            binary {\n                              leftexp {\n                                binary {\n                                  leftexp {\n                                    number: -424\n                                  }\n                                  binop {\n                                    mult: 0\n                                  }\n                                  rightexp {\n                                    binary {\n                                      leftexp {\n                                        number: -1418.75\n                                      }\n                                      binop {\n                                        mult: 0\n                                      }\n                                      rightexp {\n                                        binary {\n                                          leftexp {\n                                            function {\n             "
          num: 0
        }
        names {
          name: "\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253\253"
          num: 0
        }
        lastname {
          name: "\037\000"
          num: 0
        }
      }
      body {
        parlist {
          ellipsis: "rawset"
        }
        block {
          chunk {
            stat {
              func {
                name {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                body {
                  parlist {
                    ellipsis: "__su"
                  }
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
}
