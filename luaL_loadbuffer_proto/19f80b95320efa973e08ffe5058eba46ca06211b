chunk {
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: "jlogjjjjjjjjjlD5jjj"
          num: 0
        }
        names {
          name: ""
          num: 738197504
        }
        names {
          name: ""
          num: 0
        }
        names {
          name: "jlogjjjjjjjjchunk {\n  stat {\n    whilecycle {\n      condition {\n        tableconstructor {\n          fieldlist {\n            firstField {\n            }\n            fields {\n              field {\n                exprassign {\n                  key {\n                    false: 0\n                  }\n                  value {\n                    number: -415.5\n                  }\n                }\n              }\n              sep {\n              }\n            }\n            fields {\n              field {\n                exprassign {\n                  key {\n                  }\n                  value {\n                    ellipsis: \"\"\n                  }\n                }\n              }\n              sep {\n              }\n            }\n          }\n        }\n      }\njjDjj      djjoblock {\n        block {\n          chunk {\n          }\n        }\n      }\n    }\n  }\n}\n"
          num: 14155776
        }
        names {
          name: "jlogjjjjjjjjjjjjjjj"
          num: 8
        }
        names {
          name: ";"
          num: 0
        }
        names {
          name: ""
          num: 117440512
        }
        names {
          name: "jlogjjjjjjjjjjj!jj"
          num: 14155776
        }
        names {
          name: ";"
          num: 738197504
        }
      }
      explist {
        explast {
          prefixexp {
            exp {
              binary {
                leftexp {
                  number: -8.3711609936427134e+298
                }
                binop {
                  concat: 0
                }
                rightexp {
                  unary {
                    unop {
                      negate: 0
                    }
                    exp {
                      prefixexp {
                        exp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  number: -8.3711609936427134e+298
                                }
                                binop {
                                  concat: 4
                                }
                                rightexp {
                                  unary {
                                    unop {
                                      negate: 1
                                    }
                                    exp {
                                      prefixexp {
                                        exp {
                                          binary {
                                            leftexp {
                                              number: -8.3711609936427134e+298
                                            }
                                            binop {
                                              concat: 0
                                            }
                                            rightexp {
                                              binary {
                                                leftexp {
                                                  number: 2.06689453125
                                                }
                                                binop {
                                                  exp: 1048580
                                                }
                                                rightexp {
                                                  number: -1.683088580318447e+212
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                            }
                            rightexp {
                              unary {
                                unop {
                                  negate: 0
                                }
                                exp {
                                  prefixexp {
                                    exp {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
    semicolon: true
  }
}
