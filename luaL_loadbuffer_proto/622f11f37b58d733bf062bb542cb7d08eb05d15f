chunk {
  stat {
    block {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
                str: "\344\376\377\377"
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            forcyclename {
              name {
                name: ""
                num: 0
              }
              startexp {
              }
              stopexp {
                prefixexp {
                  functioncall {
                  }
                }
              }
              stepexp {
              }
              doblock {
                block {
                  chunk {
                    stat {
                      forcyclename {
                        name {
                          name: ""
                          num: 0
                        }
                        startexp {
                        }
                        stopexp {
                          false: 1
                        }
                        stepexp {
                          prefixexp {
                            var {
                              indexexpr {
                                prefixexp {
                                }
                                exp {
                                  nil: 1073741825
                                }
                              }
                            }
                          }
                        }
                        doblock {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                    stat {
                      forcyclename {
                        name {
                          name: ""
                          num: 0
                        }
                        startexp {
                        }
                        stopexp {
                          prefixexp {
                            functioncall {
                            }
                          }
                        }
                        stepexp {
                          ellipsis: "\344\376\377\377"
                        }
                        doblock {
                          block {
                            chunk {
                              stat {
                                list {
                                  varlist {
                                    var {
                                    }
                                  }
                                  explist {
                                    explast {
                                      number: -0
                                    }
                                  }
                                }
                              }
                              stat {
                                repeatcycle {
                                  block {
                                    chunk {
                                      stat {
                                        forcyclename {
                                          name {
                                            name: "\344\376\377\377"
                                            num: 0
                                          }
                                          startexp {
                                          }
                                          stopexp {
                                            false: 1
                                          }
                                          stepexp {
                                            prefixexp {
                                            }
                                          }
                                          doblock {
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                      }
                                      stat {
                                        forcyclename {
                                          name {
                                            name: ""
                                            num: 0
                                          }
                                          startexp {
                                          }
                                          stopexp {
                                            prefixexp {
                                              functioncall {
                                              }
                                            }
                                          }
                                          stepexp {
                                            ellipsis: "\344\376\377\377"
                                          }
                                          doblock {
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  condition {
                                    nil: 1
                                  }
                                }
                              }
                              stat {
                                repeatcycle {
                                  block {
                                    chunk {
                                      stat {
                                        forcyclename {
                                          name {
                                            name: ""
                                            num: 0
                                          }
                                          startexp {
                                          }
                                          stopexp {
                                            prefixexp {
                                              functioncall {
                                              }
                                            }
                                          }
                                          stepexp {
                                            prefixexp {
                                            }
                                          }
                                          doblock {
                                            block {
                                              chunk {
                                                stat {
                                                  repeatcycle {
                                                    block {
                                                      chunk {
                                                      }
                                                    }
                                                    condition {
                                                      str: "\344\376\377\377"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      stat {
                                        forcyclename {
                                          name {
                                            name: ""
                                            num: 0
                                          }
                                          startexp {
                                          }
                                          stopexp {
                                            prefixexp {
                                              functioncall {
                                              }
                                            }
                                          }
                                          stepexp {
                                            prefixexp {
                                            }
                                          }
                                          doblock {
                                            block {
                                              chunk {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  condition {
                                    nil: 1
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 0
              }
              startexp {
              }
              stopexp {
                prefixexp {
                  functioncall {
                  }
                }
              }
              stepexp {
                prefixexp {
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        nil: 1
      }
    }
  }
}
