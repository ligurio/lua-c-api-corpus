chunk {
  stat {
    whilecycle {
      condition {
        nil: 0
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        nil: 0
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        nil: 0
      }
      doblock {
        block {
          chunk {
            laststat {
              break: 0
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        nil: 2
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        nil: 2
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        nil: 0
      }
      doblock {
        block {
          chunk {
            stat {
              whilecycle {
                condition {
                  ellipsis: "\232"
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            laststat {
              break: 0
            }
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        nil: 0
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        nil: 0
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: "\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272\272"
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
}
