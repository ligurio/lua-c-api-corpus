chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: "@"
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            laststat {
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 16
      }
      startexp {
        number: 17
      }
      stopexp {
        number: -0.00572145524247647
      }
      stepexp {
        number: -2.250116355688097
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 7
                }
                startexp {
                  binary {
                    leftexp {
                    }
                    binop {
                    }
                    rightexp {
                      prefixexp {
                      }
                    }
                  }
                }
                stopexp {
                  binary {
                    leftexp {
                    }
                    binop {
                    }
                    rightexp {
                      ellipsis: "\000\000\000"
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                  number: -9.49804687488366
                }
                stopexp {
                  nil: 7
                }
                doblock {
                  block {
                    chunk {
                      stat {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
