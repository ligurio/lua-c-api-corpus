chunk {
  laststat {
    explist {
      explist {
        expressions {
        }
        expressions {
          binary {
            leftexp {
              binary {
                leftexp {
                  binary {
                    leftexp {
                    }
                    binop {
                      notEqual: 0
                    }
                    rightexp {
                    }
                  }
                }
                binop {
                  notEqual: 0
                }
                rightexp {
                }
              }
            }
            binop {
              notEqual: 0
            }
            rightexp {
              binary {
                leftexp {
                }
                binop {
                  notEqual: 0
                }
                rightexp {
                }
              }
            }
          }
        }
        expressions {
          binary {
            leftexp {
            }
            binop {
              notEqual: 0
            }
            rightexp {
            }
          }
        }
        expressions {
          binary {
            leftexp {
              binary {
                leftexp {
                }
                binop {
                  notEqual: 0
                }
                rightexp {
                }
              }
            }
            binop {
              notEqual: 93
            }
            rightexp {
            }
          }
        }
        expressions {
          binary {
            leftexp {
              binary {
                leftexp {
                }
                binop {
                  notEqual: 0
                }
                rightexp {
                }
              }
            }
            binop {
              notEqual: 0
            }
            rightexp {
            }
          }
        }
        explast {
          binary {
            leftexp {
              binary {
                leftexp {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                        }
                        binop {
                          notEqual: 0
                        }
                        rightexp {
                        }
                      }
                    }
                    binop {
                      notEqual: 0
                    }
                    rightexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                            }
                            binop {
                              notEqual: 0
                            }
                            rightexp {
                            }
                          }
                        }
                        binop {
                          notEqual: 93
                        }
                        rightexp {
                        }
                      }
                    }
                  }
                }
                binop {
                  notEqual: 93
                }
                rightexp {
                  binary {
                    leftexp {
                      binary {
                        leftexp {
                        }
                        binop {
                          notEqual: 0
                        }
                        rightexp {
                        }
                      }
                    }
                    binop {
                      notEqual: 0
                    }
                    rightexp {
                    }
                  }
                }
              }
            }
            binop {
              notEqual: 0
            }
            rightexp {
              binary {
                leftexp {
                }
                binop {
                  notEqual: 0
                }
                rightexp {
                }
              }
            }
          }
        }
      }
    }
  }
}
