chunk {
  stat {
  }
  stat {
    whilecycle {
      condition {
        tableconstructor {
          fieldlist {
            firstField {
              expression {
              }
            }
            fields {
              field {
              }
              sep {
              }
            }
            fields {
              field {
                exprassign {
                  key {
                    binary {
                      leftexp {
                        prefixexp {
                          exp {
                            binary {
                              leftexp {
                                unary {
                                  unop {
                                    length: 0
                                  }
                                  exp {
                                  }
                                }
                              }
                              binop {
                                concat: 0
                              }
                              rightexp {
                                str: "0.3E2"
                              }
                            }
                          }
                        }
                      }
                      binop {
                        sub: 2
                      }
                      rightexp {
                        number: 33.125421240243647
                      }
                    }
                  }
                  value {
                  }
                }
              }
              sep {
              }
            }
            fields {
              field {
              }
              sep {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                  }
                }
                condition {
                  nil: 1702129512
                }
              }
            }
          }
        }
      }
    }
  }
}
