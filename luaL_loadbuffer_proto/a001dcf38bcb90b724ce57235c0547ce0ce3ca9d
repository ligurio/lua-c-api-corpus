chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: "."
        num: 0
      }
      funcbody {
        parlist {
          ellipsis: "os.difftime"
        }
        block {
          chunk {
            stat {
              repeatcycle {
                block {
                  chunk {
                    stat {
                      whilecycle {
                        condition {
                          tableconstructor {
                            fieldlist {
                              firstField {
                                exprassign {
                                  key {
                                    tableconstructor {
                                      fieldlist {
                                        firstField {
                                          exprassign {
                                            key {
                                            }
                                            value {
                                              str: "."
                                            }
                                          }
                                        }
                                        fields {
                                          field {
                                            exprassign {
                                              key {
                                                prefixexp {
                                                }
                                              }
                                              value {
                                                ellipsis: "debug.getuservalue"
                                              }
                                            }
                                          }
                                          sep {
                                          }
                                        }
                                      }
                                    }
                                  }
                                  value {
                                  }
                                }
                              }
                              fields {
                                field {
                                  exprassign {
                                    key {
                                    }
                                    value {
                                    }
                                  }
                                }
                                sep {
                                }
                              }
                              fields {
                                field {
                                  exprassign {
                                    key {
                                    }
                                    value {
                                      ellipsis: "debug.getuservalue"
                                    }
                                  }
                                }
                                sep {
                                  comma: 268435456
                                }
                              }
                              fields {
                                field {
                                  expression {
                                    prefixexp {
                                      exp {
                                        prefixexp {
                                        }
                                      }
                                    }
                                  }
                                }
                                sep {
                                  semicolon: 268435456
                                }
                              }
                            }
                          }
                        }
                        doblock {
                          block {
                            chunk {
                            }
                          }
                        }
                      }
                    }
                  }
                }
                condition {
                  ellipsis: ""
                }
              }
              semicolon: true
            }
            stat {
              whilecycle {
                condition {
                  tableconstructor {
                    fieldlist {
                      firstField {
                        expression {
                          number: 0
                        }
                      }
                      fields {
                        field {
                          expression {
                            tableconstructor {
                              fieldlist {
                                firstField {
                                }
                              }
                            }
                          }
                        }
                        sep {
                        }
                      }
                      fields {
                        field {
                          exprassign {
                            key {
                              number: 0
                            }
                            value {
                              ellipsis: "debug.getuservalue"
                            }
                          }
                        }
                        sep {
                          comma: 268435456
                        }
                      }
                      fields {
                        field {
                          expression {
                            false: 2293760
                          }
                        }
                        sep {
                        }
                      }
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            whilecycle {
              condition {
                tableconstructor {
                  fieldlist {
                    firstField {
                      expression {
                        true: 0
                      }
                    }
                    fields {
                      field {
                        namedassign {
                          name {
                            name: ""
                            num: 0
                          }
                          value {
                          }
                        }
                      }
                      sep {
                      }
                    }
                    fields {
                      field {
                        expression {
                          prefixexp {
                            exp {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      sep {
                        comma: 11206656
                      }
                    }
                  }
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        ellipsis: ""
      }
    }
  }
  stat {
    semicolon: true
  }
}
