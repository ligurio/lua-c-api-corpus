chunk {
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        function {
          body {
            block {
              chunk {
                stat {
                  forcyclename {
                    name {
                      name: ""
                      num: 0
                    }
                    startexp {
                      true: 131072
                    }
                    stopexp {
                    }
                    stepexp {
                      binary {
                        leftexp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  number: 3.1315130625140207e-294
                                }
                                binop {
                                  exp: 0
                                }
                                rightexp {
                                  str: "\'-66,6633332<\'<8<8"
                                }
                              }
                            }
                            binop {
                              mult: 7424
                            }
                            rightexp {
                              str: "\'-66&633332<\'<8<8"
                            }
                          }
                        }
                        binop {
                          mult: 0
                        }
                        rightexp {
                          str: "\'-66,6639023<\'<8<8"
                        }
                      }
                    }
                    doblock {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                  semicolon: true
                }
                laststat {
                  break: 0
                  semicolon: true
                }
              }
            }
          }
        }
      }
      stopexp {
      }
      stepexp {
        binary {
          leftexp {
            binary {
              leftexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        number: 3.1315130625140207e-294
                      }
                      binop {
                        exp: 0
                      }
                      rightexp {
                        str: "\'-66,6633332<\'<8<8"
                      }
                    }
                  }
                  binop {
                    mult: 7424
                  }
                  rightexp {
                    str: "\'-66&633332<\'<8<8"
                  }
                }
              }
              binop {
                mult: 0
              }
              rightexp {
                str: "\'-66,6639<0\'23<8<8"
              }
            }
          }
          binop {
            div: 7424
          }
          rightexp {
            unary {
              unop {
              }
              exp {
                number: 0
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
          stat {
            semicolon: false
          }
        }
      }
    }
  }
}
