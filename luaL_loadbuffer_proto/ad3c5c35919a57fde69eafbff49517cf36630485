chunk {
  stat {
    list {
      varlist {
        var {
          indexname {
            prefixexp {
            }
            Name: ""
          }
        }
      }
      explist {
        explast {
          binary {
            leftexp {
              false: 0
            }
            binop {
              notEqual: 59
            }
            rightexp {
              binary {
                leftexp {
                }
                binop {
                  or: 0
                }
                rightexp {
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    block {
      block {
        chunk {
          stat {
            forcyclelist {
              names {
                firstname {
                  name: ""
                  num: 0
                }
              }
              expressions {
                explast {
                }
              }
              doblock {
                block {
                  chunk {
                    laststat {
                      semicolon: true
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
      explist {
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
              }
              fields {
                field {
                  expression {
                    nil: 0
                  }
                }
                sep {
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
          name {
            name: ""
            num: 0
          }
        }
      }
      explist {
        explast {
          binary {
            leftexp {
              false: 0
            }
            binop {
              notEqual: 59
            }
            rightexp {
              binary {
                leftexp {
                }
                binop {
                  or: 0
                }
                rightexp {
                  ellipsis: "getu"
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
