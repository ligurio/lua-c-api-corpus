chunk {
  stat {
    list {
      varlist {
        var {
          indexname {
            prefixexp {
            }
            Name: ""
          }
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: ""
          }
        }
      }
      explist {
        expressions {
          str: "string.lower"
        }
        expressions {
          ellipsis: "_ENV"
        }
        expressions {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                }
                args {
                  str: "\'"
                }
              }
            }
          }
        }
        expressions {
          binary {
            leftexp {
              str: "string.lower"
            }
            binop {
              sub: 2054845798
            }
            rightexp {
            }
          }
        }
        expressions {
          number: 0
        }
        expressions {
          binary {
            leftexp {
              str: "string.lower"
            }
            binop {
              sub: 2054845798
            }
            rightexp {
            }
          }
        }
        expressions {
          number: 0
        }
        expressions {
        }
        expressions {
        }
        expressions {
          str: "string.lower"
        }
        expressions {
        }
        explast {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                }
                args {
                  str: "\'"
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      stepexp {
        prefixexp {
          exp {
            number: 0
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  laststat {
    break: 256
  }
}
