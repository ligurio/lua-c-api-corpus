chunk {
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            semicolon: false
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 63744
              }
              startexp {
                str: "table.unpack"
              }
              stopexp {
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            semicolon: true
          }
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                expressions {
                  prefixexp {
                    functioncall {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                          str: "\'"
                        }
                      }
                    }
                  }
                }
                expressions {
                  number: 6.3797317671116406e-304
                }
                expressions {
                }
                expressions {
                  str: "table.unpack"
                }
                expressions {
                  str: "table.unpack"
                }
                expressions {
                  ellipsis: "\'"
                }
                expressions {
                  str: "string.byte"
                }
                expressions {
                  number: 1.6776568031537443e+243
                }
                expressions {
                  str: "table.unpack"
                }
                explast {
                  str: "\'"
                }
              }
            }
            semicolon: true
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    list {
                      varlist {
                        var {
                        }
                      }
                      explist {
                        expressions {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                }
                                args {
                                  str: "\'"
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          number: 6.3797317671116406e-304
                        }
                        expressions {
                        }
                        expressions {
                          str: "table.unpack"
                        }
                        expressions {
                          str: "table.unpack"
                        }
                        expressions {
                          true: 0
                        }
                        expressions {
                          str: "string.byte"
                        }
                        expressions {
                          number: 1.6776568031537443e+243
                        }
                        expressions {
                          str: "table.unpack"
                        }
                        explast {
                          str: "\'"
                        }
                      }
                    }
                    semicolon: false
                  }
                  stat {
                    forcyclename {
                      name {
                        name: ""
                        num: 0
                      }
                      startexp {
                        str: "table.unpack"
                      }
                      stopexp {
                      }
                      stepexp {
                        false: 0
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  stat {
                    semicolon: true
                  }
                  stat {
                    list {
                      varlist {
                        var {
                        }
                      }
                      explist {
                        expressions {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                }
                                args {
                                  str: "\'"
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          number: 6.3797317671116406e-304
                        }
                        expressions {
                        }
                        expressions {
                          str: "table.unpack"
                        }
                        expressions {
                        }
                        expressions {
                          true: 0
                        }
                        expressions {
                          str: "string.byte"
                        }
                        expressions {
                          number: 1.6776568031537443e+243
                        }
                        expressions {
                          str: "table.unpack"
                        }
                        explast {
                          str: "\'"
                        }
                      }
                    }
                    semicolon: true
                  }
                  stat {
                    block {
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                  laststat {
                    semicolon: true
                  }
                }
              }
              condition {
                nil: 0
              }
            }
          }
          laststat {
            explist {
            }
            semicolon: true
          }
        }
      }
      condition {
        nil: 0
      }
    }
  }
}
