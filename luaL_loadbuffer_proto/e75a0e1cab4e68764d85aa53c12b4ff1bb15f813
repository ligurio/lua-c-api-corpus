chunk {
  stat {
  }
  stat {
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: ""
          num: 0
        }
      }
      explist {
        expressions {
          nil: 0
        }
        explast {
        }
      }
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    forcyclename {
      name {
        name: "Int32"
        num: 0
      }
      startexp {
      }
      stopexp {
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
      }
      stopexp {
        ellipsis: "\355"
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            stat {
              call {
                prefArgs {
                  prefixexp {
                    var {
                      name {
                        name: ""
                        num: 0
                      }
                    }
                  }
                  args {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            stat {
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            stat {
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
  }
  stat {
  }
}
