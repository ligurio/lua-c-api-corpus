chunk {
  stat {
    list {
      varlist {
        var {
          indexexpr {
            prefixexp {
              exp {
                str: "\345\345\345\345\345\345,\345\345\345\3457\\377\\338\\377\\377.\n \345\345\345\345\345\345\345\345"
              }
            }
            exp {
            }
          }
        }
      }
      explist {
        expressions {
          unary {
            unop {
            }
            exp {
              tableconstructor {
                fieldlist {
                  firstField {
                  }
                }
              }
            }
          }
        }
        expressions {
          unary {
            unop {
            }
            exp {
              tableconstructor {
                fieldlist {
                  firstField {
                  }
                  lastSep {
                    comma: 8192
                  }
                }
              }
            }
          }
        }
        explast {
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
          indexexpr {
            prefixexp {
            }
            exp {
              tableconstructor {
                fieldlist {
                  firstField {
                  }
                }
              }
            }
          }
        }
      }
      explist {
        expressions {
        }
        expressions {
          unary {
            unop {
            }
            exp {
              tableconstructor {
                fieldlist {
                  firstField {
                  }
                }
              }
            }
          }
        }
        expressions {
          str: "s"
        }
        explast {
          unary {
            unop {
              length: 8192
            }
            exp {
              tableconstructor {
                fieldlist {
                  firstField {
                  }
                  fields {
                    field {
                    }
                    sep {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
