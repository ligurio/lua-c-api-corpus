chunk {
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        parlist {
          ellipsis: "```````````````````"
        }
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                }
                explist {
                  expressions {
                    function {
                      body {
                        parlist {
                          ellipsis: "tonumber"
                        }
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  expressions {
                    str: "\'<mathn<7<<7<\'<9"
                  }
                  expressions {
                    str: "\'<mathn<7<pack<7<\'<9"
                  }
                  expressions {
                    str: "\'<mathn<7<<7<\'<9"
                  }
                  expressions {
                    str: "\'<mathn<7<pack<7<\'<9"
                  }
                  explast {
                    str: "\'<mathn<7<pack<7<\'<9"
                  }
                }
              }
            }
            stat {
              whilecycle {
                condition {
                  binary {
                    leftexp {
                      number: 2
                    }
                    binop {
                    }
                    rightexp {
                      number: 2
                    }
                  }
                }
                doblock {
                  block {
                    chunk {
                    }
                  }
                }
              }
            }
            stat {
            }
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
        }
        args {
          explist {
          }
        }
      }
    }
  }
}
