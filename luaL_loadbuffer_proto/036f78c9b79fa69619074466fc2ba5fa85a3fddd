chunk {
  stat {
    whilecycle {
      condition {
        str: "counter_8"
      }
      doblock {
        block {
          chunk {
            stat {
              localnames {
                namelist {
                  firstname {
                    name: "_\022\000____\376________\376_"
                    num: 0
                  }
                  names {
                    name: "counr_8"
                    num: 0
                  }
                }
              }
            }
            stat {
              localfunc {
                name {
                  name: ""
                  num: 0
                }
                funcbody {
                  block {
                    chunk {
                    }
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 0
        }
        names {
          name: "\020"
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
        }
        vars {
        }
      }
      explist {
        expressions {
          number: -35651608.12500108
        }
        expressions {
          number: -35651608.12500108
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          number: -35651608.12500108
        }
        explast {
          str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
        }
      }
    }
  }
  stat {
    block {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
                vars {
                }
              }
              explist {
                explast {
                  binary {
                    leftexp {
                    }
                    binop {
                      mod: 1667719007
                    }
                    rightexp {
                      binary {
                        leftexp {
                        }
                        binop {
                          mod: 1667719007
                        }
                        rightexp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  prefixexp {
                                    var {
                                    }
                                  }
                                }
                                binop {
                                  mult: 606085120
                                }
                                rightexp {
                                  function {
                                    body {
                                      block {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                              mult: 0
                            }
                            rightexp {
                              prefixexp {
                                var {
                                  indexexpr {
                                    prefixexp {
                                    }
                                    exp {
                                      true: 0
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                }
                vars {
                }
              }
              explist {
                explast {
                  binary {
                    leftexp {
                    }
                    binop {
                      mod: 1667719007
                    }
                    rightexp {
                      binary {
                        leftexp {
                        }
                        binop {
                        }
                        rightexp {
                          binary {
                            leftexp {
                              binary {
                                leftexp {
                                  binary {
                                    leftexp {
                                      binary {
                                        leftexp {
                                        }
                                        binop {
                                          mult: 946238581
                                        }
                                        rightexp {
                                          function {
                                            body {
                                              block {
                                                chunk {
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    binop {
                                      mult: 0
                                    }
                                    rightexp {
                                      unary {
                                        unop {
                                          length: 0
                                        }
                                        exp {
                                          str: "__________\376_"
                                        }
                                      }
                                    }
                                  }
                                }
                                binop {
                                  mult: 946238581
                                }
                                rightexp {
                                  function {
                                    body {
                                      block {
                                        chunk {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                              mult: 0
                            }
                            rightexp {
                              unary {
                                unop {
                                  length: 0
                                }
                                exp {
                                  str: "__________\376_"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: false
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            semicolon: false
          }
          laststat {
            semicolon: true
          }
        }
      }
      condition {
        prefixexp {
          functioncall {
            prefArgs {
              prefixexp {
                exp {
                  ellipsis: "("
                }
              }
              args {
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            semicolon: true
          }
          stat {
            localnames {
              namelist {
                firstname {
                  name: "_\022\000____\376________\376_"
                  num: 0
                }
                names {
                  name: "counter_8"
                  num: 0
                }
              }
              explist {
                expressions {
                }
                explast {
                  number: -35651608.12500108
                }
              }
            }
            semicolon: true
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    list {
                      varlist {
                        var {
                        }
                      }
                      explist {
                        expressions {
                          ellipsis: ""
                        }
                        expressions {
                          false: 8192
                        }
                        expressions {
                          str: ""
                        }
                        expressions {
                          prefixexp {
                          }
                        }
                        explast {
                          str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
                        }
                      }
                    }
                  }
                  stat {
                    semicolon: true
                  }
                  stat {
                  }
                  stat {
                    block {
                      block {
                        chunk {
                          stat {
                            whilecycle {
                              condition {
                                binary {
                                  leftexp {
                                  }
                                  binop {
                                    sub: 537526272
                                  }
                                  rightexp {
                                    prefixexp {
                                      functioncall {
                                        prefArgs {
                                          prefixexp {
                                            var {
                                              name {
                                                name: "load"
                                                num: 30
                                              }
                                            }
                                          }
                                          args {
                                            str: "/"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              doblock {
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                            semicolon: false
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                  laststat {
                    semicolon: true
                  }
                }
              }
              condition {
                unary {
                  unop {
                  }
                  exp {
                    str: "require\204"
                  }
                }
              }
            }
            semicolon: true
          }
        }
      }
      condition {
        str: "\000\'>io.open\'\000\000&&\'>\'\000\000&\'>\'"
      }
    }
  }
  stat {
    ifstat {
      condition {
        unary {
          unop {
          }
          exp {
            number: -35651608.12500108
          }
        }
      }
      first {
        chunk {
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
          num: 0
        }
      }
      body {
        block {
          chunk {
            laststat {
              semicolon: true
            }
          }
        }
      }
    }
  }
  stat {
  }
  stat {
  }
  stat {
    func {
      name {
        firstname {
          name: "\001\001"
          num: 8192
        }
        names {
          name: ""
          num: 0
        }
        lastname {
          name: "require"
          num: 0
        }
      }
      body {
        block {
          chunk {
            stat {
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    semicolon: false
  }
  stat {
    semicolon: false
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
  }
  laststat {
  }
}
