chunk {
  stat {
    forcyclelist {
      names {
        firstname {
          name: "\021"
          num: 127
        }
        names {
          name: "collectgarbage"
          num: 101
        }
        names {
          name: ""
          num: 127
        }
      }
      expressions {
        expressions {
          prefixexp {
            var {
              name {
                name: "pcall"
                num: 127
              }
            }
          }
        }
        explast {
          function {
            body {
              parlist {
                ellipsis: "2"
              }
              block {
                chunk {
                  stat {
                    list {
                      varlist {
                        var {
                          indexname {
                            prefixexp {
                            }
                            Name: ""
                          }
                        }
                        vars {
                        }
                      }
                      explist {
                        expressions {
                          ellipsis: "\'"
                        }
                        expressions {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                }
                                args {
                                  str: "\'"
                                }
                              }
                            }
                          }
                        }
                        expressions {
                          binary {
                            leftexp {
                              ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                            }
                            binop {
                              greater: 3080192
                            }
                            rightexp {
                              true: 8224
                            }
                          }
                        }
                        expressions {
                        }
                        expressions {
                          tableconstructor {
                            fieldlist {
                              firstField {
                              }
                            }
                          }
                        }
                        expressions {
                          str: "table.concat"
                        }
                        expressions {
                        }
                        expressions {
                          tableconstructor {
                          }
                        }
                        expressions {
                          str: "debug.traceback"
                        }
                        explast {
                          prefixexp {
                            functioncall {
                              prefArgs {
                                prefixexp {
                                }
                                args {
                                  str: "\'"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    forcyclelist {
                      names {
                        firstname {
                          name: "\021"
                          num: 127
                        }
                        names {
                          name: "collectgarbage"
                          num: 101
                        }
                        names {
                          name: ""
                          num: 127
                        }
                      }
                      expressions {
                        expressions {
                          prefixexp {
                            var {
                              name {
                                name: "pcall"
                                num: 127
                              }
                            }
                          }
                        }
                        explast {
                          function {
                            body {
                              parlist {
                                ellipsis: "2"
                              }
                              block {
                                chunk {
                                  stat {
                                    list {
                                      varlist {
                                        var {
                                          indexname {
                                            prefixexp {
                                            }
                                            Name: ""
                                          }
                                        }
                                        vars {
                                        }
                                      }
                                      explist {
                                        expressions {
                                          ellipsis: "\'"
                                        }
                                        expressions {
                                          prefixexp {
                                            functioncall {
                                              prefArgs {
                                                prefixexp {
                                                }
                                                args {
                                                  str: "\'"
                                                }
                                              }
                                            }
                                          }
                                        }
                                        expressions {
                                          binary {
                                            leftexp {
                                              ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                            }
                                            binop {
                                              greater: 3080192
                                            }
                                            rightexp {
                                              true: 8224
                                            }
                                          }
                                        }
                                        expressions {
                                        }
                                        expressions {
                                          tableconstructor {
                                            fieldlist {
                                              firstField {
                                              }
                                            }
                                          }
                                        }
                                        expressions {
                                          str: "table.concat"
                                        }
                                        expressions {
                                        }
                                        expressions {
                                          tableconstructor {
                                          }
                                        }
                                        expressions {
                                          str: "debug.traceback"
                                        }
                                        explast {
                                          prefixexp {
                                            functioncall {
                                              prefArgs {
                                                prefixexp {
                                                }
                                                args {
                                                  str: "\'"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  stat {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      doblock {
                        block {
                          chunk {
                            stat {
                              list {
                                varlist {
                                  var {
                                  }
                                  vars {
                                    indexexpr {
                                      prefixexp {
                                      }
                                      exp {
                                        nil: 1073741824
                                      }
                                    }
                                  }
                                }
                                explist {
                                  expressions {
                                    tableconstructor {
                                      fieldlist {
                                        firstField {
                                        }
                                      }
                                    }
                                  }
                                  explast {
                                  }
                                }
                              }
                            }
                            stat {
                              func {
                                name {
                                  firstname {
                                    name: "tonumber"
                                    num: 0
                                  }
                                }
                                body {
                                  parlist {
                                    ellipsis: "2"
                                  }
                                  block {
                                    chunk {
                                      stat {
                                        list {
                                          varlist {
                                            var {
                                              indexname {
                                                prefixexp {
                                                }
                                                Name: ""
                                              }
                                            }
                                            vars {
                                            }
                                          }
                                          explist {
                                            expressions {
                                              ellipsis: "\'"
                                            }
                                            expressions {
                                              prefixexp {
                                                functioncall {
                                                  prefArgs {
                                                    prefixexp {
                                                    }
                                                    args {
                                                      str: "\000\000\000\000\000\000\000\000\'"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            expressions {
                                              binary {
                                                leftexp {
                                                  ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                                }
                                                binop {
                                                  greater: 3080192
                                                }
                                                rightexp {
                                                  true: 8224
                                                }
                                              }
                                            }
                                            expressions {
                                            }
                                            expressions {
                                              tableconstructor {
                                                fieldlist {
                                                  firstField {
                                                  }
                                                  fields {
                                                    field {
                                                    }
                                                    sep {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            expressions {
                                            }
                                            expressions {
                                              false: 0
                                            }
                                            expressions {
                                              tableconstructor {
                                              }
                                            }
                                            expressions {
                                              str: "debug.traceback"
                                            }
                                            explast {
                                              prefixexp {
                                                functioncall {
                                                  prefArgs {
                                                    prefixexp {
                                                    }
                                                    args {
                                                      str: "\'"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            laststat {
                              explist {
                                explist {
                                  explast {
                                  }
                                }
                              }
                              semicolon: true
                            }
                          }
                        }
                      }
                    }
                    semicolon: true
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              list {
                varlist {
                  var {
                  }
                  vars {
                    indexexpr {
                      prefixexp {
                      }
                      exp {
                        nil: 1073741824
                      }
                    }
                  }
                }
                explist {
                  expressions {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                      }
                    }
                  }
                  explast {
                  }
                }
              }
            }
            stat {
              func {
                name {
                  firstname {
                    name: "tonumber"
                    num: 0
                  }
                }
                body {
                  parlist {
                    ellipsis: "2"
                  }
                  block {
                    chunk {
                      stat {
                        list {
                          varlist {
                            var {
                              indexname {
                                prefixexp {
                                }
                                Name: ""
                              }
                            }
                            vars {
                            }
                          }
                          explist {
                            expressions {
                              ellipsis: "\'"
                            }
                            expressions {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                      str: "\'"
                                    }
                                  }
                                }
                              }
                            }
                            expressions {
                              binary {
                                leftexp {
                                  ellipsis: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
                                }
                                binop {
                                  greater: 3080192
                                }
                                rightexp {
                                  true: 8224
                                }
                              }
                            }
                            expressions {
                            }
                            expressions {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                  }
                                  fields {
                                    field {
                                    }
                                    sep {
                                    }
                                  }
                                }
                              }
                            }
                            expressions {
                            }
                            expressions {
                            }
                            expressions {
                              tableconstructor {
                              }
                            }
                            expressions {
                              str: "debug.traceback"
                            }
                            explast {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                      str: "\'"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            laststat {
              explist {
                explist {
                  explast {
                  }
                }
              }
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  laststat {
    explist {
      explist {
        explast {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                }
                args {
                  str: "\'"
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
}
