chunk {
  stat {
    block {
      block {
        chunk {
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  laststat {
                    explist {
                      explist {
                        expressions {
                          nil: 603979776
                        }
                        explast {
                        }
                      }
                    }
                  }
                }
              }
              condition {
                prefixexp {
                  var {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        nil: 5
      }
    }
  }
  stat {
    list {
      varlist {
        var {
          indexname {
            prefixexp {
              var {
                indexname {
                  prefixexp {
                    functioncall {
                      namedArgs {
                        prefixexp {
                        }
                        name {
                          name: "\\037\\000\\000\\000"
                          num: 0
                        }
                        args {
                        }
                      }
                    }
                  }
                  Name: ""
                }
              }
            }
            Name: "__bxor"
          }
        }
      }
      explist {
        explast {
          ellipsis: "-"
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                }
              }
              condition {
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        parlist {
          ellipsis: "\\377\\377\\377\\011"
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            localnames {
              namelist {
                firstname {
                  name: "counter_+"
                  num: 6513008
                }
                names {
                  name: "counter_8"
                  num: 0
                }
                names {
                  name: ""
                  num: 0
                }
              }
              explist {
                expressions {
                }
                explast {
                  number: -709.375
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          laststat {
                            semicolon: true
                          }
                        }
                      }
                      condition {
                        prefixexp {
                          var {
                            indexexpr {
                              prefixexp {
                                exp {
                                  tableconstructor {
                                    fieldlist {
                                      firstField {
                                        expression {
                                          binary {
                                            leftexp {
                                              prefixexp {
                                                exp {
                                                  tableconstructor {
                                                    fieldlist {
                                                      firstField {
                                                      }
                                                      lastSep {
                                                        semicolon: 536870912
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            binop {
                                              equal: 29551
                                            }
                                            rightexp {
                                              tableconstructor {
                                                fieldlist {
                                                  firstField {
                                                    exprassign {
                                                      key {
                                                        tableconstructor {
                                                        }
                                                      }
                                                      value {
                                                      }
                                                    }
                                                  }
                                                  lastSep {
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                      fields {
                                        field {
                                        }
                                        sep {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              exp {
                                number: -709.375
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              condition {
                prefixexp {
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  laststat {
                    semicolon: true
                  }
                }
              }
              condition {
                nil: 1
              }
            }
            semicolon: true
          }
          laststat {
            break: 2048
            semicolon: false
          }
        }
      }
      condition {
        number: -709.375
      }
    }
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
      condition {
        nil: 1
      }
    }
  }
  stat {
  }
  stat {
    localfunc {
      name {
        name: ""
        num: 0
      }
      funcbody {
        block {
          chunk {
            stat {
              call {
                prefArgs {
                  prefixexp {
                  }
                  args {
                    str: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 5
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          ellipsis: "-"
        }
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
    block {
      block {
        chunk {
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                explast {
                  ellipsis: "gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg"
                }
              }
            }
          }
        }
      }
    }
  }
}
