chunk {
  stat {
    block {
      block {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          var {
            name {
              name: "xpcall"
              num: 262144
            }
          }
        }
        args {
          explist {
            explist {
              expressions {
                prefixexp {
                  var {
                    name {
                      name: "collectgarbage"
                      num: 0
                    }
                  }
                }
              }
              expressions {
                function {
                  body {
                    parlist {
                      namelist {
                        namelist {
                          firstname {
                            name: "collectgarbage"
                            num: 0
                          }
                          names {
                            name: "coll1ctgarbage"
                            num: 0
                          }
                          names {
                            name: "_ENV"
                            num: 4143972352
                          }
                          names {
                            name: "_ENV"
                            num: 0
                          }
                          names {
                            name: ""
                            num: 8
                          }
                        }
                        ellipsis: ""
                      }
                    }
                    block {
                      chunk {
                        stat {
                          localfunc {
                            name {
                              name: "\377\377"
                              num: 0
                            }
                            funcbody {
                              block {
                                chunk {
                                  stat {
                                  }
                                  stat {
                                  }
                                  laststat {
                                    break: 0
                                  }
                                }
                              }
                            }
                          }
                        }
                        stat {
                        }
                        laststat {
                          explist {
                            explist {
                              expressions {
                                binary {
                                  leftexp {
                                    binary {
                                      leftexp {
                                      }
                                      binop {
                                        and: 0
                                      }
                                      rightexp {
                                        str: "\'<debug.traceback\'<9"
                                      }
                                    }
                                  }
                                  binop {
                                    add: 2105376
                                  }
                                  rightexp {
                                    str: "\'<<8<\'<9"
                                  }
                                }
                              }
                              explast {
                                str: "\'<<8<\'<9"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              explast {
                tableconstructor {
                }
              }
            }
          }
        }
      }
    }
  }
  laststat {
    semicolon: true
  }
}
