chunk {
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
          }
          binop {
            or: 0
          }
          rightexp {
          }
        }
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
          binary {
            leftexp {
            }
            binop {
              and: 0
            }
            rightexp {
            }
          }
        }
        block {
          chunk {
          }
        }
      }
      clauses {
        condition {
          binary {
            leftexp {
            }
            binop {
              or: 0
            }
            rightexp {
            }
          }
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
          }
          binop {
            or: 0
          }
          rightexp {
          }
        }
      }
      first {
        chunk {
        }
      }
      clauses {
        condition {
          binary {
            leftexp {
            }
            binop {
              and: 16777217
            }
            rightexp {
            }
          }
        }
        block {
          chunk {
            stat {
              semicolon: true
            }
          }
        }
      }
      clauses {
        condition {
          binary {
            leftexp {
            }
            binop {
              and: 0
            }
            rightexp {
            }
          }
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    ifstat {
      condition {
        binary {
          leftexp {
          }
          binop {
            or: 0
          }
          rightexp {
          }
        }
      }
      first {
        chunk {
          stat {
            ifstat {
              condition {
                binary {
                  leftexp {
                  }
                  binop {
                    or: 0
                  }
                  rightexp {
                  }
                }
              }
              first {
                chunk {
                  laststat {
                    explist {
                      explist {
                        expressions {
                          prefixexp {
                            exp {
                              str: "TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT"
                            }
                          }
                        }
                        explast {
                        }
                      }
                    }
                  }
                }
              }
              clauses {
                condition {
                  binary {
                    leftexp {
                    }
                    binop {
                      and: 0
                    }
                    rightexp {
                    }
                  }
                }
                block {
                  chunk {
                    stat {
                      semicolon: true
                    }
                  }
                }
              }
              clauses {
                condition {
                  binary {
                    leftexp {
                    }
                    binop {
                      or: 0
                    }
                    rightexp {
                    }
                  }
                }
                block {
                  chunk {
                  }
                }
              }
              clauses {
                condition {
                }
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
                binary {
                  leftexp {
                  }
                  binop {
                    or: 0
                  }
                  rightexp {
                  }
                }
              }
              first {
                chunk {
                }
              }
              clauses {
                condition {
                  binary {
                    leftexp {
                    }
                    binop {
                      and: 0
                    }
                    rightexp {
                    }
                  }
                }
                block {
                  chunk {
                  }
                }
              }
              clauses {
                condition {
                  binary {
                    leftexp {
                    }
                    binop {
                      or: 0
                    }
                    rightexp {
                    }
                  }
                }
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            ifstat {
              condition {
                binary {
                  leftexp {
                  }
                  binop {
                    or: 0
                  }
                  rightexp {
                  }
                }
              }
              first {
                chunk {
                }
              }
              clauses {
                condition {
                  binary {
                    leftexp {
                    }
                    binop {
                      or: 0
                    }
                    rightexp {
                    }
                  }
                }
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      clauses {
        condition {
          binary {
            leftexp {
            }
            binop {
              or: 0
            }
            rightexp {
            }
          }
        }
        block {
          chunk {
          }
        }
      }
    }
  }
}
