chunk {
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
          stat {
            localfunc {
              name {
                name: ""
                num: 0
              }
              funcbody {
                block {
                  chunk {
                    laststat {
                      break: 0
                    }
                  }
                }
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  prefixexp {
                    var {
                      name {
                        name: "loadfile"
                        num: 0
                      }
                    }
                  }
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                explast {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                expressions {
                }
                expressions {
                  str: "\'<mathn<7<<7<\'<9"
                }
                expressions {
                  true: 7274496
                }
                expressions {
                  str: "\'<mathn<7<<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                explast {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<<7<\'<9"
                }
                expressions {
                  unary {
                    unop {
                      negate: 45
                    }
                    exp {
                    }
                  }
                }
                expressions {
                  str: "\'<mathn<7<<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                explast {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
              }
            }
          }
          stat {
            list {
              varlist {
                var {
                }
              }
              explist {
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  prefixexp {
                    var {
                      name {
                        name: "loadfile"
                        num: 0
                      }
                    }
                  }
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                expressions {
                  str: "\'<mathn<7<pack<7<\'<9"
                }
                explast {
                }
              }
            }
          }
          laststat {
            explist {
              explist {
                expressions {
                  nil: 1684957542
                }
                explast {
                  ellipsis: "%\000\000\000\000\000\000\000"
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          binary {
            leftexp {
            }
            binop {
            }
            rightexp {
            }
          }
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          true: 7274496
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        explast {
          str: "\'<mathn<7<pack<7<\'<9"
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
        }
        expressions {
          str: "\'<m                    }\n                                          }\n                                          sep {\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                  doblock {\n                                    block {\n                                      chunk {\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                    laststat {\n                      break: 2304\n                    }\n                  }\n                }\n                condition {\n                  binary {\n                    leftexp {\n                      unary {\n                        unop {\n                          negate: 1543766016\n                        }\n                        exp {\n                          binary {\n                            leftexp {\n                              str: \"\\\'<8<<\\\'<9\"\n                            }\n                            binop {\n                              mult: 1024\n                            }\n                            rightexp {\n                              binary {\n                                leftexp {\n                                  binary {\n                                    leftexp {\n                                      number: 2.1350539716408872e+161\n                                    }\n                                    binop {\n                                      mult: 32768\n                                    }\n                                    rightexp {\n                                      binary {\n                                        leftexp {\n                                          unary {\n                                            unop {\n                                              negate: 1543766016\n                                            }\n                                            exp {\n                        athn<7<<7<\'<9"
        }
        expressions {
          str: "\'"
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        explast {
          str: "\'<mathn<7<pack<7<\'<9"
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
          indexexpr {
            prefixexp {
            }
            exp {
              prefixexp {
                exp {
                  str: "\006"
                }
              }
            }
          }
        }
      }
      explist {
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          prefixexp {
            var {
              name {
                name: "loadfile"
                num: 0
              }
            }
          }
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        expressions {
          str: "\'<mathn<7<pack<7<\'<9"
        }
        explast {
          str: "\'<mathn<7<pack<7<\'<9"
        }
      }
    }
  }
  laststat {
    explist {
      explist {
        expressions {
          nil: 0
        }
        explast {
          ellipsis: "%\220\000\000\000\000\000\000\000"
        }
      }
    }
  }
}
