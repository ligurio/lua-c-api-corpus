chunk {
  stat {
    call {
    }
  }
  stat {
    forcyclename {
      name {
        name: ""
        num: 0
      }
      startexp {
        number: -0
      }
      stopexp {
        number: 0
      }
      stepexp {
        tableconstructor {
          fieldlist {
            firstField {
              namedassign {
                name {
                  name: ""
                  num: 0
                }
                value {
                  ellipsis: "\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343"
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              forcyclename {
                name {
                  name: ""
                  num: 0
                }
                startexp {
                }
                stopexp {
                }
                stepexp {
                  prefixexp {
                  }
                }
                doblock {
                  block {
                    chunk {
                      stat {
                        forcyclename {
                          name {
                            name: ""
                            num: 7
                          }
                          startexp {
                          }
                          stopexp {
                          }
                          stepexp {
                            number: -0
                          }
                          doblock {
                            block {
                              chunk {
                                stat {
                                  list {
                                    varlist {
                                      var {
                                      }
                                      vars {
                                      }
                                    }
                                    explist {
                                      expressions {
                                        str: ","
                                      }
                                      expressions {
                                        tableconstructor {
                                        }
                                      }
                                      expressions {
                                        tableconstructor {
                                        }
                                      }
                                      expressions {
                                        tableconstructor {
                                        }
                                      }
                                      expressions {
                                        tableconstructor {
                                        }
                                      }
                                      expressions {
                                        tableconstructor {
                                        }
                                      }
                                      expressions {
                                        tableconstructor {
                                        }
                                      }
                                      expressions {
                                        tableconstructor {
                                        }
                                      }
                                      expressions {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                            }
                                          }
                                        }
                                      }
                                      expressions {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                            }
                                          }
                                        }
                                      }
                                      expressions {
                                      }
                                      expressions {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                            }
                                            lastSep {
                                              comma: 0
                                            }
                                          }
                                        }
                                      }
                                      expressions {
                                        tableconstructor {
                                        }
                                      }
                                      expressions {
                                        tableconstructor {
                                        }
                                      }
                                      expressions {
                                        tableconstructor {
                                          fieldlist {
                                            firstField {
                                            }
                                          }
                                        }
                                      }
                                      explast {
                                        prefixexp {
                                          functioncall {
                                            prefArgs {
                                              prefixexp {
                                              }
                                              args {
                                                tableconstructor {
                                                  fieldlist {
                                                    firstField {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  semicolon: false
                                }
                              }
                            }
                          }
                        }
                      }
                      stat {
                        list {
                          varlist {
                            var {
                            }
                          }
                          explist {
                            expressions {
                              str: ","
                            }
                            expressions {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                    namedassign {
                                      name {
                                        name: ""
                                        num: 0
                                      }
                                      value {
                                        ellipsis: "\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343\343"
                                      }
                                    }
                                  }
                                  fields {
                                    field {
                                      expression {
                                        str: "%"
                                      }
                                    }
                                    sep {
                                    }
                                  }
                                }
                              }
                            }
                            expressions {
                              tableconstructor {
                              }
                            }
                            expressions {
                              tableconstructor {
                              }
                            }
                            expressions {
                              tableconstructor {
                              }
                            }
                            expressions {
                              function {
                                body {
                                  parlist {
                                    namelist {
                                      namelist {
                                        firstname {
                                          name: ""
                                          num: 8
                                        }
                                      }
                                    }
                                  }
                                  block {
                                    chunk {
                                    }
                                  }
                                }
                              }
                            }
                            expressions {
                              tableconstructor {
                              }
                            }
                            expressions {
                              tableconstructor {
                              }
                            }
                            expressions {
                              tableconstructor {
                              }
                            }
                            expressions {
                              true: 25344
                            }
                            expressions {
                            }
                            expressions {
                              prefixexp {
                              }
                            }
                            expressions {
                              tableconstructor {
                                fieldlist {
                                  firstField {
                                  }
                                }
                              }
                            }
                            expressions {
                              number: 0
                            }
                            expressions {
                              tableconstructor {
                              }
                            }
                            explast {
                              prefixexp {
                                functioncall {
                                  prefArgs {
                                    prefixexp {
                                    }
                                    args {
                                      explist {
                                        explist {
                                          explast {
                                            str: "\r\000\000\000\000\000\000\000"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
