chunk {
  stat {
    whilecycle {
      condition {
        binary {
          leftexp {
          }
          binop {
          }
          rightexp {
            binary {
              leftexp {
                nil: 2
              }
              binop {
              }
              rightexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        true: 1
                      }
                      binop {
                        less: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                          }
                          binop {
                            less: 0
                          }
                          rightexp {
                            str: "LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL"
                          }
                        }
                      }
                    }
                  }
                  binop {
                    less: 0
                  }
                  rightexp {
                    binary {
                      leftexp {
                        false: 2048
                      }
                      binop {
                        greater: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                              }
                              binop {
                              }
                              rightexp {
                              }
                            }
                          }
                          binop {
                            exp: 5
                          }
                          rightexp {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        expressions {
          nil: 6399
        }
        expressions {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                }
                args {
                  str: "\'"
                }
              }
            }
          }
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
                exprassign {
                  key {
                    str: "io.type"
                  }
                  value {
                    str: "os.execute"
                  }
                }
              }
            }
          }
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
                exprassign {
                  key {
                    str: "io.type"
                  }
                  value {
                    tableconstructor {
                      fieldlist {
                        firstField {
                        }
                        fields {
                          field {
                            exprassign {
                              key {
                                str: "io.type"
                              }
                              value {
                                str: "os.execute"
                              }
                            }
                          }
                          sep {
                            comma: 4294967293
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        expressions {
          tableconstructor {
            fieldlist {
              firstField {
              }
              fields {
                field {
                  exprassign {
                    key {
                      str: "io.type"
                    }
                    value {
                      str: "os.execute"
                    }
                  }
                }
                sep {
                }
              }
            }
          }
        }
        expressions {
        }
        expressions {
        }
        expressions {
        }
        explast {
          prefixexp {
            functioncall {
              prefArgs {
                prefixexp {
                }
                args {
                  str: "\'"
                }
              }
            }
          }
        }
      }
    }
    semicolon: false
  }
}
