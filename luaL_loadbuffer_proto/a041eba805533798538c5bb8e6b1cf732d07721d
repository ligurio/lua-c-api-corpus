chunk {
  stat {
    list {
      varlist {
        var {
          name {
            name: "tonumber"
            num: 0
          }
        }
        vars {
          indexexpr {
            prefixexp {
              exp {
                tableconstructor {
                }
              }
            }
            exp {
            }
          }
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: ""
          }
        }
      }
      explist {
        expressions {
          prefixexp {
            var {
              name {
                name: "load"
                num: 0
              }
            }
          }
        }
        explast {
          binary {
            leftexp {
              function {
                body {
                  parlist {
                  }
                  block {
                    chunk {
                      laststat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
            binop {
              mult: 0
            }
            rightexp {
            }
          }
        }
      }
    }
  }
  stat {
    list {
      varlist {
        var {
          name {
            name: "tonumber"
            num: 0
          }
        }
        vars {
          indexexpr {
            prefixexp {
              exp {
                tableconstructor {
                }
              }
            }
            exp {
            }
          }
        }
        vars {
          indexname {
            prefixexp {
            }
            Name: ""
          }
        }
      }
      explist {
        expressions {
          prefixexp {
            var {
              name {
                name: "load"
                num: 0
              }
            }
          }
        }
        explast {
          binary {
            leftexp {
              function {
                body {
                  parlist {
                  }
                  block {
                    chunk {
                      laststat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
            }
            binop {
              mult: 0
            }
            rightexp {
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            forcyclename {
              name {
                name: "s"
                num: 0
              }
              startexp {
                function {
                  body {
                    block {
                      chunk {
                      }
                    }
                  }
                }
              }
              stopexp {
                str: "\377\377\377\377\377\377\377\377"
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
        }
      }
      condition {
        binary {
          leftexp {
            binary {
              leftexp {
                number: -424
              }
              binop {
                mult: 9520
              }
              rightexp {
                binary {
                  leftexp {
                    binary {
                      leftexp {
                        number: 2.1350539716408872e+161
                      }
                      binop {
                        notEqual: 0
                      }
                      rightexp {
                        binary {
                          leftexp {
                            unary {
                              unop {
                                negate: 1543766016
                              }
                              exp {
                                prefixexp {
                                  functioncall {
                                    prefArgs {
                                      prefixexp {
                                        var {
                                          name {
                                            name: "load"
                                            num: 16776448
                                          }
                                        }
                                      }
                                      args {
                                        explist {
                                          explist {
                                            explast {
                                              prefixexp {
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          binop {
                            exp: 16776448
                          }
                          rightexp {
                            binary {
                              leftexp {
                                ellipsis: ""
                              }
                              binop {
                              }
                              rightexp {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  binop {
                    less: 7602176
                  }
                  rightexp {
                    prefixexp {
                      functioncall {
                        prefArgs {
                          prefixexp {
                            var {
                              name {
                                name: "load"
                                num: 16776448
                              }
                            }
                          }
                          args {
                            explist {
                              explist {
                                explast {
                                  prefixexp {
                                    functioncall {
                                      namedArgs {
                                        prefixexp {
                                        }
                                        name {
                                          name: "\000\000\000\000\000"
                                          num: 0
                                        }
                                        args {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          binop {
          }
          rightexp {
            str: "\'-6>6&33332<\'<8<8"
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          exp {
            unary {
              unop {
              }
              exp {
                tableconstructor {
                  fieldlist {
                    firstField {
                    }
                    fields {
                      field {
                        expression {
                          str: "\006"
                        }
                      }
                      sep {
                      }
                    }
                  }
                }
              }
            }
          }
        }
        args {
        }
      }
    }
    semicolon: true
  }
  laststat {
    break: 0
  }
}
