chunk {
  stat {
    block {
      block {
        chunk {
        }
      }
    }
  }
  stat {
    whilecycle {
      condition {
        unary {
          unop {
            negate: 0
          }
          exp {
            unary {
              unop {
                length: 0
              }
              exp {
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
          }
        }
      }
    }
    semicolon: false
  }
  laststat {
    explist {
      explist {
        expressions {
          binary {
            leftexp {
              unary {
                unop {
                  negate: 0
                }
                exp {
                  unary {
                    unop {
                      length: 0
                    }
                    exp {
                    }
                  }
                }
              }
            }
            binop {
              and: 0
            }
            rightexp {
              number: 1.333603830506971e+241
            }
          }
        }
        explast {
          number: -1.0565890622713305e+270
        }
      }
    }
    semicolon: false
  }
}
