chunk {
  stat {
    whilecycle {
      condition {
        unary {
          unop {
            length: 0
          }
          exp {
            unary {
              unop {
                length: 9
              }
              exp {
                binary {
                  leftexp {
                    number: -424
                  }
                  binop {
                    mult: 0
                  }
                  rightexp {
                    binary {
                      leftexp {
                        binary {
                          leftexp {
                            binary {
                              leftexp {
                                str: "\'<6662363332<<\'8"
                              }
                              binop {
                                div: 128
                              }
                              rightexp {
                                str: "package.cpath"
                              }
                            }
                          }
                          binop {
                            div: 3472883712
                          }
                          rightexp {
                            number: -4.9591064453125e-05
                          }
                        }
                      }
                      binop {
                        mult: 8388608
                      }
                      rightexp {
                        tableconstructor {
                          fieldlist {
                            firstField {
                              expression {
                                prefixexp {
                                  functioncall {
                                    prefArgs {
                                      prefixexp {
                                        var {
                                          name {
                                            name: "load"
                                            num: 0
                                          }
                                        }
                                      }
                                      args {
                                        str: "end"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      doblock {
        block {
          chunk {
            stat {
              func {
                name {
                  firstname {
                    name: ""
                    num: 0
                  }
                }
                body {
                  parlist {
                    namelist {
                      namelist {
                        firstname {
                          name: ""
                          num: 0
                        }
                      }
                      ellipsis: "\001\000"
                    }
                  }
                  block {
                    chunk {
                      stat {
                        semicolon: true
                      }
                    }
                  }
                }
              }
              semicolon: true
            }
            laststat {
              explist {
              }
            }
          }
        }
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        parlist {
          ellipsis: "\377\377\377\377\377\377\377"
        }
        block {
          chunk {
            stat {
              semicolon: true
            }
          }
        }
      }
    }
    semicolon: true
  }
  laststat {
  }
}
