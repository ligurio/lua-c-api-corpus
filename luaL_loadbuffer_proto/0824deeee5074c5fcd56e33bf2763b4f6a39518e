chunk {
  stat {
    func {
      name {
        firstname {
          name: "ppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp\236ppp"
          num: 0
        }
        lastname {
          name: "pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
          num: 0
        }
      }
      body {
        parlist {
          ellipsis: "tmpname"
        }
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 5
      }
    }
  }
  stat {
    list {
      varlist {
        var {
        }
      }
      explist {
        explast {
          ellipsis: "-"
        }
      }
    }
  }
  stat {
    localnames {
      namelist {
        firstname {
          name: "counter_+"
          num: 6513008
        }
        names {
          name: "counter_8"
          num: 0
        }
      }
      explist {
        expressions {
        }
        explast {
          number: -709.375
        }
      }
    }
  }
  stat {
    localfunc {
      name {
        name: "ppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp\236ppp"
        num: 0
      }
      funcbody {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
        }
      }
      condition {
        nil: 5
      }
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 0
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
      condition {
        nil: 65536
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
          }
        }
      }
      condition {
        nil: 65536
      }
    }
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    semicolon: true
  }
  stat {
    repeatcycle {
      block {
        chunk {
          laststat {
            break: 5
            semicolon: true
          }
        }
      }
      condition {
        nil: 5
      }
    }
    semicolon: true
  }
  stat {
  }
  stat {
  }
  stat {
  }
  stat {
    ifstat {
      condition {
      }
      first {
        chunk {
          stat {
          }
        }
      }
      last {
        chunk {
          laststat {
            semicolon: true
          }
        }
      }
    }
  }
  stat {
    forcyclelist {
      names {
        firstname {
          name: ""
          num: 538968064
        }
        names {
          name: ""
          num: 0
        }
      }
      expressions {
        explast {
        }
      }
      doblock {
        block {
          chunk {
            stat {
              call {
                prefArgs {
                  prefixexp {
                    var {
                      name {
                        name: "load"
                        num: 1310720
                      }
                    }
                  }
                  args {
                    explist {
                      explist {
                        expressions {
                          number: 4.4850508342831473e-308
                        }
                        explast {
                          ellipsis: "pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  laststat {
  }
}
