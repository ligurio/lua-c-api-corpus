chunk {
  stat {
    call {
    }
  }
  stat {
    func {
      name {
        firstname {
          name: ""
          num: 8192
        }
      }
      body {
        block {
          chunk {
          }
        }
      }
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
    }
    semicolon: false
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
          stat {
            forcyclelist {
              names {
                firstname {
                  name: ""
                  num: 0
                }
              }
              expressions {
                explast {
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
            semicolon: false
          }
          stat {
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    block {
                      block {
                        chunk {
                          laststat {
                            semicolon: true
                          }
                        }
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    whilecycle {
                      condition {
                      }
                      doblock {
                        block {
                          chunk {
                            stat {
                              semicolon: true
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    call {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                        }
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: false
                  }
                  stat {
                    call {
                      namedArgs {
                        prefixexp {
                        }
                        name {
                          name: "rrrrrrrrrrr"
                          num: 805306368
                        }
                        args {
                          explist {
                            explist {
                              explast {
                                str: "="
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                  }
                }
              }
              condition {
                ellipsis: "\233\233\233\233"
              }
            }
            semicolon: true
          }
          stat {
            semicolon: true
          }
          stat {
            semicolon: false
          }
          stat {
            semicolon: false
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 6
              }
              startexp {
                prefixexp {
                }
              }
              stopexp {
              }
              stepexp {
                number: 0
              }
              doblock {
                block {
                  chunk {
                    laststat {
                    }
                  }
                }
              }
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                  functioncall {
                    prefArgs {
                      prefixexp {
                      }
                      args {
                        tableconstructor {
                          fieldlist {
                            firstField {
                            }
                            fields {
                              field {
                                expression {
                                  str: "#"
                                }
                              }
                              sep {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                args {
                }
              }
            }
          }
          stat {
            call {
            }
            semicolon: false
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                }
                args {
                  explist {
                    explist {
                      explast {
                        str: "="
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: false
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            call {
                            }
                          }
                          stat {
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            forcyclelist {
                              names {
                                firstname {
                                  name: ""
                                  num: 0
                                }
                              }
                              expressions {
                                explast {
                                }
                              }
                              doblock {
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                          stat {
                          }
                          stat {
                          }
                          stat {
                          }
                          stat {
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                              prefArgs {
                                prefixexp {
                                }
                                args {
                                  str: "n\000\000\000"
                                }
                              }
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            func {
                              name {
                                firstname {
                                  name: ""
                                  num: 0
                                }
                                names {
                                  name: ""
                                  num: 0
                                }
                              }
                              body {
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            ifstat {
                              condition {
                              }
                              first {
                                chunk {
                                }
                              }
                              clauses {
                                condition {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                    }
                                    rightexp {
                                    }
                                  }
                                }
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                          stat {
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                          }
                          stat {
                            call {
                              prefArgs {
                                prefixexp {
                                  functioncall {
                                    namedArgs {
                                      prefixexp {
                                        exp {
                                          nil: 2105344
                                        }
                                      }
                                      name {
                                        name: ""
                                        num: 0
                                      }
                                      args {
                                      }
                                    }
                                  }
                                }
                                args {
                                }
                              }
                            }
                            semicolon: false
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                          }
                          stat {
                          }
                        }
                      }
                      condition {
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                  }
                }
              }
              condition {
                function {
                  body {
                    block {
                      chunk {
                        stat {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            block {
              block {
                chunk {
                }
              }
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            semicolon: false
          }
          stat {
            call {
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                  stat {
                                    semicolon: true
                                  }
                                  stat {
                                    semicolon: true
                                  }
                                  stat {
                                    semicolon: true
                                  }
                                }
                              }
                              condition {
                                str: "package"
                              }
                            }
                            semicolon: true
                          }
                          stat {
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                            semicolon: true
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                          }
                          stat {
                            call {
                            }
                            semicolon: true
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                          }
                          stat {
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                          }
                          stat {
                          }
                        }
                      }
                      condition {
                      }
                    }
                    semicolon: true
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                      namedArgs {
                        prefixexp {
                        }
                        name {
                          name: ""
                          num: 131072
                        }
                        args {
                        }
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                  }
                }
              }
              condition {
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            list {
              varlist {
                var {
                }
                vars {
                  name {
                    name: ""
                    num: 27136
                  }
                }
              }
              explist {
                explast {
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
              namedArgs {
                prefixexp {
                  exp {
                    prefixexp {
                      exp {
                        binary {
                          leftexp {
                            ellipsis: "f______"
                          }
                          binop {
                            or: 32
                          }
                          rightexp {
                            binary {
                              leftexp {
                                number: 416.00000000000364
                              }
                              binop {
                                mult: 807411744
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    number: 416.00000000000364
                                  }
                                  binop {
                                    or: 4
                                  }
                                  rightexp {
                                    str: ""
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                name {
                  name: ""
                  num: 11264
                }
                args {
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    semicolon: true
  }
  stat {
    semicolon: false
  }
  stat {
    semicolon: false
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
  }
  stat {
    semicolon: true
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            semicolon: true
                          }
                          stat {
                            semicolon: false
                          }
                          stat {
                            semicolon: true
                          }
                        }
                      }
                      condition {
                        str: "package"
                      }
                    }
                    semicolon: true
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                  }
                }
              }
              condition {
              }
            }
            semicolon: true
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
            call {
              namedArgs {
                prefixexp {
                }
                name {
                  name: ""
                  num: 131072
                }
                args {
                }
              }
            }
          }
          stat {
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    call {
      prefArgs {
        prefixexp {
          functioncall {
            namedArgs {
              prefixexp {
                exp {
                  nil: 2105344
                }
              }
              name {
                name: ""
                num: 0
              }
              args {
              }
            }
          }
        }
        args {
        }
      }
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
        }
        name {
          name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
      namedArgs {
        prefixexp {
          exp {
            prefixexp {
              functioncall {
                namedArgs {
                  prefixexp {
                    exp {
                      true: 29541
                    }
                  }
                  name {
                    name: ""
                    num: 805306368
                  }
                  args {
                  }
                }
              }
            }
          }
        }
        name {
          name: ""
          num: 0
        }
        args {
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
          stat {
            semicolon: false
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            localnames {
              namelist {
                firstname {
                  name: "^"
                  num: 0
                }
              }
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    forcyclelist {
                      names {
                        firstname {
                          name: ""
                          num: 0
                        }
                      }
                      expressions {
                        explast {
                        }
                      }
                      doblock {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                        }
                      }
                      condition {
                        tableconstructor {
                          fieldlist {
                            firstField {
                              exprassign {
                                key {
                                }
                                value {
                                  function {
                                    body {
                                      block {
                                        chunk {
                                          stat {
                                            semicolon: true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    func {
                      name {
                        firstname {
                          name: ""
                          num: 0
                        }
                        names {
                          name: ""
                          num: 0
                        }
                      }
                      body {
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    ifstat {
                      condition {
                      }
                      first {
                        chunk {
                        }
                      }
                      clauses {
                        condition {
                          binary {
                            leftexp {
                            }
                            binop {
                            }
                            rightexp {
                            }
                          }
                        }
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                      prefArgs {
                        prefixexp {
                          functioncall {
                            namedArgs {
                              prefixexp {
                                exp {
                                  nil: 2105344
                                }
                              }
                              name {
                                name: ""
                                num: 0
                              }
                              args {
                              }
                            }
                          }
                        }
                        args {
                        }
                      }
                    }
                    semicolon: false
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                  }
                }
              }
              condition {
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            whilecycle {
              condition {
              }
              doblock {
                block {
                  chunk {
                    stat {
                      semicolon: true
                    }
                  }
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
              namedArgs {
                prefixexp {
                  exp {
                    function {
                      body {
                        parlist {
                          ellipsis: "=\""
                        }
                        block {
                          chunk {
                          }
                        }
                      }
                    }
                  }
                }
                name {
                  name: ""
                  num: 0
                }
                args {
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
              namedArgs {
                prefixexp {
                }
                name {
                  name: ""
                  num: 805306368
                }
                args {
                }
              }
            }
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                  exp {
                    true: 29541
                  }
                }
                args {
                }
              }
            }
          }
          stat {
          }
          stat {
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
    semicolon: true
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    call {
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
          stat {
            forcyclelist {
              names {
                firstname {
                  name: ""
                  num: 0
                }
              }
              expressions {
                explast {
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
            semicolon: false
          }
          stat {
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    block {
                      block {
                        chunk {
                          laststat {
                            semicolon: true
                          }
                        }
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    whilecycle {
                      condition {
                      }
                      doblock {
                        block {
                          chunk {
                            stat {
                              semicolon: true
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                    call {
                      prefArgs {
                        prefixexp {
                        }
                        args {
                        }
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: false
                  }
                  stat {
                    call {
                      namedArgs {
                        prefixexp {
                        }
                        name {
                          name: "rrrrrrrrrrr"
                          num: 805306368
                        }
                        args {
                          explist {
                            explist {
                              explast {
                                str: "="
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                  }
                }
              }
              condition {
                ellipsis: "\233\233\233\233"
              }
            }
            semicolon: true
          }
          stat {
            semicolon: true
          }
          stat {
            semicolon: false
          }
          stat {
            semicolon: false
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            forcyclename {
              name {
                name: ""
                num: 6
              }
              startexp {
                prefixexp {
                }
              }
              stopexp {
              }
              stepexp {
                number: 0
              }
              doblock {
                block {
                  chunk {
                    laststat {
                    }
                  }
                }
              }
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                  functioncall {
                    prefArgs {
                      prefixexp {
                      }
                      args {
                        tableconstructor {
                          fieldlist {
                            firstField {
                            }
                            fields {
                              field {
                                expression {
                                  str: "#"
                                }
                              }
                              sep {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                args {
                }
              }
            }
          }
          stat {
            forcyclelist {
              names {
                firstname {
                  name: ""
                  num: 0
                }
              }
              expressions {
                explast {
                }
              }
              doblock {
                block {
                  chunk {
                    stat {
                      localnames {
                        namelist {
                          firstname {
                            name: ""
                            num: 0
                          }
                          names {
                            name: ""
                            num: 33
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            semicolon: false
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
              prefArgs {
                prefixexp {
                }
                args {
                  explist {
                    explist {
                      explast {
                        str: "="
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
            semicolon: false
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            call {
                            }
                          }
                          stat {
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            forcyclelist {
                              names {
                                firstname {
                                  name: ""
                                  num: 0
                                }
                              }
                              expressions {
                                explast {
                                }
                              }
                              doblock {
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                          stat {
                          }
                          stat {
                          }
                          stat {
                          }
                          stat {
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                              prefArgs {
                                prefixexp {
                                }
                                args {
                                  str: "n\000\000\000"
                                }
                              }
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            func {
                              name {
                                firstname {
                                  name: ""
                                  num: 0
                                }
                                names {
                                  name: ""
                                  num: 0
                                }
                              }
                              body {
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            ifstat {
                              condition {
                              }
                              first {
                                chunk {
                                }
                              }
                              clauses {
                                condition {
                                  binary {
                                    leftexp {
                                    }
                                    binop {
                                    }
                                    rightexp {
                                    }
                                  }
                                }
                                block {
                                  chunk {
                                  }
                                }
                              }
                            }
                          }
                          stat {
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                          }
                          stat {
                            call {
                              prefArgs {
                                prefixexp {
                                  functioncall {
                                    namedArgs {
                                      prefixexp {
                                        exp {
                                          nil: 2105344
                                        }
                                      }
                                      name {
                                        name: ""
                                        num: 0
                                      }
                                      args {
                                      }
                                    }
                                  }
                                }
                                args {
                                }
                              }
                            }
                            semicolon: false
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                          }
                          stat {
                          }
                        }
                      }
                      condition {
                      }
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    semicolon: true
                  }
                  stat {
                  }
                }
              }
              condition {
                function {
                  body {
                    block {
                      chunk {
                        stat {
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          stat {
            block {
              block {
                chunk {
                }
              }
            }
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            forcyclelist {
              names {
                firstname {
                  name: ""
                  num: 0
                }
              }
              expressions {
                expressions {
                  function {
                    body {
                      parlist {
                        namelist {
                          namelist {
                            firstname {
                              name: ""
                              num: 0
                            }
                          }
                          ellipsis: "\346"
                        }
                      }
                      block {
                        chunk {
                        }
                      }
                    }
                  }
                }
                explast {
                }
              }
              doblock {
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
          }
          stat {
            call {
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            repeatcycle {
              block {
                chunk {
                  stat {
                    repeatcycle {
                      block {
                        chunk {
                          stat {
                            repeatcycle {
                              block {
                                chunk {
                                  stat {
                                    semicolon: true
                                  }
                                  stat {
                                    semicolon: true
                                  }
                                  stat {
                                    semicolon: true
                                  }
                                }
                              }
                              condition {
                                str: "package"
                              }
                            }
                            semicolon: true
                          }
                          stat {
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                            semicolon: true
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                          }
                          stat {
                            call {
                            }
                            semicolon: true
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                          }
                          stat {
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                            call {
                            }
                          }
                          stat {
                          }
                          stat {
                          }
                        }
                      }
                      condition {
                      }
                    }
                    semicolon: true
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                    semicolon: true
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                      namedArgs {
                        prefixexp {
                        }
                        name {
                          name: ""
                          num: 131072
                        }
                        args {
                        }
                      }
                    }
                  }
                  stat {
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                    call {
                    }
                  }
                  stat {
                  }
                  stat {
                  }
                }
              }
              condition {
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            list {
              varlist {
                var {
                }
                vars {
                  name {
                    name: ""
                    num: 27136
                  }
                }
              }
              explist {
                explast {
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
              namedArgs {
                prefixexp {
                  exp {
                    prefixexp {
                      exp {
                        binary {
                          leftexp {
                            ellipsis: "f______"
                          }
                          binop {
                            or: 32
                          }
                          rightexp {
                            binary {
                              leftexp {
                                number: 416.00000000000364
                              }
                              binop {
                                mult: 807411744
                              }
                              rightexp {
                                binary {
                                  leftexp {
                                    number: 416.00000000000364
                                  }
                                  binop {
                                    or: 4
                                  }
                                  rightexp {
                                    function {
                                      body {
                                        parlist {
                                          ellipsis: ")"
                                        }
                                        block {
                                          chunk {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                name {
                  name: ""
                  num: 11264
                }
                args {
                }
              }
            }
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
  }
  stat {
    list {
      varlist {
        var {
          indexname {
            prefixexp {
            }
            Name: "0"
          }
        }
      }
      explist {
        explast {
          binary {
            leftexp {
              prefixexp {
                exp {
                  binary {
                    leftexp {
                      ellipsis: "f______"
                    }
                    binop {
                      or: 32
                    }
                    rightexp {
                      binary {
                        leftexp {
                          number: 416.00000000000364
                        }
                        binop {
                        }
                        rightexp {
                          binary {
                            leftexp {
                              prefixexp {
                                exp {
                                  binary {
                                    leftexp {
                                      ellipsis: "f______"
                                    }
                                    binop {
                                      or: 32
                                    }
                                    rightexp {
                                      binary {
                                        leftexp {
                                          number: 416.00000000000364
                                        }
                                        binop {
                                          mult: 807411744
                                        }
                                        rightexp {
                                          binary {
                                            leftexp {
                                              number: 416.00000000000364
                                            }
                                            binop {
                                              or: 4
                                            }
                                            rightexp {
                                              function {
                                                body {
                                                  parlist {
                                                    ellipsis: ")"
                                                  }
                                                  block {
                                                    chunk {
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            binop {
                            }
                            rightexp {
                              nil: 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            binop {
            }
            rightexp {
              nil: 0
            }
          }
        }
      }
    }
  }
  stat {
    repeatcycle {
      block {
        chunk {
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            func {
              name {
                firstname {
                  name: ""
                  num: 0
                }
                names {
                  name: ""
                  num: 0
                }
              }
              body {
                parlist {
                  ellipsis: "=\""
                }
                block {
                  chunk {
                  }
                }
              }
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            semicolon: false
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            call {
            }
          }
          stat {
            ifstat {
              condition {
              }
              first {
                chunk {
                  laststat {
                    semicolon: true
                  }
                }
              }
            }
            semicolon: true
          }
          stat {
            call {
            }
          }
          stat {
          }
          stat {
          }
        }
      }
      condition {
      }
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
  stat {
    call {
    }
  }
}
